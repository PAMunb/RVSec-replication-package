/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 20 11:21:44 GMT 2022
 */

package org.apache.activemq.artemis.utils.uri;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Map;
import org.apache.activemq.artemis.api.core.SimpleString;
import org.apache.activemq.artemis.utils.uri.URISupport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class URISupport_ESTest extends URISupport_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      URI uRI0 = MockURI.URI(")!~uqH?HI2l", "//", "io.netty.buffer.PooledUnsafeDirectByteBuf");
      try { 
        URISupport.parseComposite(uRI0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Not a matching number of '(' and ')' parenthesis: )!~uqH?HI2l://#io.netty.buffer.PooledUnsafeDirectByteBuf
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URI uRI0 = MockURI.URI("$9,,hS/#J!=3@I0e");
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      assertNull(uRISupport_CompositeData0.getHost());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.indexOfParenthesisMatch("f5$.S_NC", 3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // character at indicated position is not a parenthesis
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URI uRI0 = MockURI.URI("?u33G@");
      Map<String, String> map0 = URISupport.parseQuery("U{J)I$O-;%g*~*D*");
      URI uRI1 = URISupport.applyParameters(uRI0, map0);
      assertEquals("?u33G@?u33G@&U%7BJ)I$O-=null&%25g*~*D*=null", uRI1.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URI uRI0 = MockURI.URI("//(,nvXq)", "//(,nvXq)", "//(,nvXq)", "//(,nvXq)", "//(,nvXq)");
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      // Undeclared exception!
      try { 
        uRISupport_CompositeData0.toURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URI uRI0 = MockURI.URI("//sunos", "//sunos", "///");
      URI uRI1 = URISupport.stripScheme(uRI0);
      assertTrue(uRI1.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URI uRI1 = URISupport.stripScheme(uRI0);
      assertEquals("foo.bar", uRI1.getRawPath());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      URI uRI1 = uRISupport_CompositeData0.toURI();
      URI uRI2 = URISupport.removeQuery(uRI1);
      assertEquals("ftp:(foo.bar)", uRI2.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URI uRI0 = MockURI.URI("/");
      URI uRI1 = URISupport.removeQuery(uRI0);
      assertNull(uRI1.getRawQuery());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URI uRI0 = MockURI.URI("r", "r", "r", 3522, (String) null, "org.apache.activemq.artemis.utils.uri.URISupport", "pIWc]#`Q1}gXo");
      URI uRI1 = URISupport.removeQuery(uRI0);
      assertEquals("r://r@r:3522#pIWc]%23%60Q1%7DgXo", uRI1.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URI uRI0 = MockURI.URI((String) null, "sparc_64", "~GA2/+Owda azc9gc_{", "", "org.apache.activemq.artemis.utils.uri.URISupport");
      Map<String, String> map0 = URISupport.parseParameters(uRI0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      URI uRI1 = uRISupport_CompositeData0.toURI();
      URI uRI2 = URISupport.createURIWithQuery(uRI1, "//RDV-");
      assertEquals("ftp:(foo.bar)?//RDV-", uRI2.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URI uRI0 = MockURI.URI("org.apache.activemq.artemis.utils.uri.URISupport", (String) null, "h.UA6wW", 1551, (String) null, (String) null, (String) null);
      URI uRI1 = URISupport.createURIWithQuery(uRI0, (String) null);
      assertEquals(1551, uRI1.getPort());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      URI uRI1 = uRISupport_CompositeData0.toURI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      URI uRI2 = URISupport.createRemainingURI(uRI1, hashMap0);
      assertEquals("http:(foo.bar)", uRI2.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URI uRI0 = MockURI.URI("/");
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      Map<String, String> map0 = uRISupport_CompositeData0.getParameters();
      URI uRI1 = URISupport.createRemainingURI(uRI0, map0);
      assertTrue(uRI1.equals((Object)uRI0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      URI uRI0 = MockURI.URI("available", "available", "available", 24, (String) null, (String) null, "available");
      URI uRI1 = URISupport.createRemainingURI(uRI0, hashMap0);
      assertEquals("available", uRI1.getRawFragment());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString("73s?1<");
      boolean boolean0 = URISupport.containsQuery(simpleString0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = URISupport.containsQuery("D?|__1ar)K&=n");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = URISupport.containsQuery("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      URI uRI0 = MockURI.URI("available", "available", "available", 24, (String) null, (String) null, "available");
      URI uRI1 = URISupport.changeScheme(uRI0, "available");
      assertFalse(uRI1.isOpaque());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      URI uRI1 = uRISupport_CompositeData0.toURI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      URI uRI2 = URISupport.applyParameters(uRI1, (Map<String, String>) hashMap0, (String) null);
      assertEquals("http:(foo.bar)", uRI2.toString());
      assertSame(uRI2, uRI1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      URI uRI0 = URISupport.applyParameters((URI) null, (Map<String, String>) null);
      assertNull(uRI0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      URI uRI0 = MockURI.URI("?");
      URI uRI1 = URISupport.changeScheme(uRI0, "T");
      URI uRI2 = URISupport.applyParameters(uRI1, (Map<String, String>) hashMap0);
      assertSame(uRI2, uRI1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      URI uRI0 = MockURI.URI("$9,,hS/#J!=3@I0e");
      Map<String, String> map0 = URISupport.parseParameters(uRI0);
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = URISupport.appendParameters(stringBuilder0, map0);
      assertEquals("", stringBuilder1.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      URI uRI0 = MockURI.URI("////foo4.bar?%3E");
      try { 
        URISupport.stripScheme(uRI0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in query at index 11: //foo4.bar?>
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.stripPrefix((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.parseQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.parseQuery("cIndex: %d, numComponents: %d (expecte: cndex > 0 && cIndex + numComponents <= totalNumComponents(%d))");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URLDecoder: Illegal hex characters in escape (%) pattern - For input string: \"d)\"
         //
         verifyException("java.net.URLDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.parseParameters((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URI uRI1 = URISupport.createURIWithQuery(uRI0, "%'I.oZB=7[Q(");
      // Undeclared exception!
      try { 
        URISupport.parseParameters(uRI1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URLDecoder: Illegal hex characters in escape (%) pattern - For input string: \"'I\"
         //
         verifyException("java.net.URLDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.parseComposite((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.isCompositeURI((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.indexOfParenthesisMatch("//5", 3);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.indexOfParenthesisMatch((String) null, 23);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      URI uRI0 = MockURI.create("//?&%5E+I:%5C");
      try { 
        URISupport.createURIWithQuery(uRI0, "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected authority at index 2: //
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.createURIWithQuery((URI) null, "/////foo.bar?F%20=%25p)l0w;bYkD://foo.bar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      URI uRI0 = MockURI.create("//?");
      try { 
        URISupport.createRemainingURI(uRI0, hashMap0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected authority at index 2: //
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      // Undeclared exception!
      try { 
        URISupport.createRemainingURI(uRI0, (Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.createQueryString((Map<String, ?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HashMap<String, URISyntaxException> hashMap0 = new HashMap<String, URISyntaxException>();
      URISyntaxException uRISyntaxException0 = new URISyntaxException("H[Fz.w\"Xl|8$", "H[Fz.w\"Xl|8$");
      hashMap0.put("H[Fz.w\"Xl|8$", uRISyntaxException0);
      // Undeclared exception!
      try { 
        URISupport.createQueryString(hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.net.URISyntaxException cannot be cast to java.lang.String
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.containsQuery((SimpleString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[6] = (byte)63;
      SimpleString simpleString0 = new SimpleString(byteArray0);
      // Undeclared exception!
      try { 
        URISupport.containsQuery(simpleString0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      try { 
        URISupport.changeScheme(uRI0, ",*~E@XvTn");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0: ,*~E@XvTn://foo.bar
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Map<String, String> map0 = URISupport.parseQuery("=");
      // Undeclared exception!
      try { 
        URISupport.applyParameters((URI) null, map0, "=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      boolean boolean0 = URISupport.checkParenthesis("//(foo.bar)");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean boolean0 = URISupport.checkParenthesis("(f");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = URISupport.stripPrefix("Y@5*Nq&eh0[J#ci", "73s?1<");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = URISupport.stripPrefix("P9", "P9");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = URISupport.indexOfParenthesisMatch("&//(,v)", 3);
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      URI uRI0 = MockURI.URI((String) null, "sparc_64", "~GA2/+Owda azc9gc_{", "", "org.apache.activemq.artemis.utils.uri.URISupport");
      boolean boolean0 = URISupport.isCompositeURI(uRI0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      URI uRI1 = uRISupport_CompositeData0.toURI();
      boolean boolean0 = URISupport.isCompositeURI(uRI1);
      assertTrue(boolean0);
      assertEquals("http:(foo.bar)", uRI1.toString());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      URI uRI0 = MockURI.URI("//", "//", "//", "//", "//");
      URI uRI1 = URISupport.createURIWithQuery(uRI0, "//");
      assertEquals("//://%252F%252F//?//#//", uRI1.toString());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      URI uRI0 = MockURI.URI((String) null, "fo", (String) null);
      Map<String, String> map0 = URISupport.parseQuery("/////tmp/foo.bar");
      URI uRI1 = URISupport.applyParameters(uRI0, map0);
      URI uRI2 = URISupport.applyParameters(uRI1, map0, "/////tmp/foo.bar");
      assertEquals("fo?/////tmp/foo.bar=null&=null", uRI2.toString());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      URI uRI0 = MockURI.URI((String) null, (String) null, (String) null);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("character at indicated position is not a parenthesis", "character at indicated position is not a parenthesis");
      URI uRI1 = URISupport.applyParameters(uRI0, (Map<String, String>) hashMap0, "");
      assertEquals("?character%20at%20indicated%20position%20is%20not%20a%20parenthesis=character%20at%20indicated%20position%20is%20not%20a%20parenthesis", uRI1.toString());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      URI uRI0 = URISupport.applyParameters((URI) null, (Map<String, String>) null, "");
      assertNull(uRI0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StringBuilder stringBuilder0 = URISupport.appendParameters((StringBuilder) null, hashMap0);
      assertNull(stringBuilder0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      boolean boolean0 = URISupport.checkParenthesis((String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      Map<String, String> map0 = URISupport.parseQuery("/MhVw|=0zq");
      URI uRI1 = URISupport.createRemainingURI(uRI0, map0);
      assertEquals("ftp://foo.bar?%252FMhVw%257C=0zq", uRI1.toString());
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("Invalid position for first parenthesis: ", "Invalid position for first parenthesis: ");
      hashMap0.put("_hm@Ll~n[p", "_hm@Ll~n[p");
      String string0 = URISupport.createQueryString(hashMap0);
      assertEquals("Invalid+position+for+first+parenthesis%3A+=Invalid+position+for+first+parenthesis%3A+&_hm%40L%7Fl%7En%5Bp=_hm%40L%7Fl%7En%5Bp", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HashMap<String, URISyntaxException> hashMap0 = new HashMap<String, URISyntaxException>();
      String string0 = URISupport.createQueryString(hashMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      URI uRI0 = MockURI.URI((String) null, (String) null, (String) null);
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      assertNull(uRISupport_CompositeData0.getPath());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      URI uRI0 = MockURI.URI("////foo.bar?'%7C%7F~*dlM9CX+MR");
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      assertNull(uRISupport_CompositeData0.getFragment());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      URI uRI0 = MockURI.URI("/(,v)", "/(,v)", "/(,v)", "/(,v)", "/(,v)");
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      assertNull(uRISupport_CompositeData0.getHost());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      URI uRI0 = MockURI.URI((String) null, (String) null, "//(,v)", "//(,v)", (String) null);
      Map<String, String> map0 = URISupport.parseParameters(uRI0);
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      try { 
        URISupport.indexOfParenthesisMatch("?>:///7?[eY%3CWUA-)(0sCsyx/7%3F%5BeY%3CWUA-)(0sCsyx?org.apache.activemq.artemis.utils.uri.URISupport//(,v)", 44);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // URI did not contain a matching parenthesis.: ?>:///7?[eY%3CWUA-)(0sCsyx/7%3F%5BeY%3CWUA-)(0sCsyx?org.apache.activemq.artemis.utils.uri.URISupport//(,v)
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.indexOfParenthesisMatch("F =%ap)l0w;bYkD", 3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // character at indicated position is not a parenthesis
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.indexOfParenthesisMatch("U{J)I$O-;%g*~*D*", 65);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid position for first parenthesis: 65
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.indexOfParenthesisMatch("4]zs<d(MD]*>", (-1065));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid position for first parenthesis: -1065
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Map<String, String> map0 = URISupport.parseQuery("////UblzV?UblzV://UblzV%3FUblzV");
      URI uRI0 = MockURI.URI("////UblzV?UblzV://UblzV%3FUblzV", "////UblzV?UblzV://UblzV%3FUblzV", "////UblzV?UblzV://UblzV%3FUblzV", "////UblzV?UblzV://UblzV%3FUblzV");
      URI uRI1 = URISupport.applyParameters(uRI0, map0, "////UblzV?UblzV://UblzV%3FUblzV");
      assertEquals(1, map0.size());
      assertEquals("////UblzV?UblzV://UblzV%253FUblzV://[////UblzV?UblzV://UblzV%253FUblzV://[////UblzV?UblzV://UblzV%253FUblzV]////UblzV%253FUblzV://UblzV%25253FUblzV#////UblzV?UblzV://UblzV%253FUblzV", uRI1.toString());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      URI uRI0 = MockURI.URI("//(foo.bar)");
      Map<String, String> map0 = URISupport.parseParameters(uRI0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      Map<String, String> map0 = URISupport.parseParameters(uRI0);
      URI uRI1 = URISupport.changeScheme(uRI0, "(/");
      URI uRI2 = URISupport.applyParameters(uRI1, map0, "(/");
      boolean boolean0 = URISupport.isCompositeURI(uRI2);
      assertFalse(boolean0);
      assertSame(uRI2, uRI1);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Map<String, String> map0 = URISupport.parseQuery("");
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Map<String, String> map0 = URISupport.parseQuery("<g");
      // Undeclared exception!
      try { 
        URISupport.appendParameters((StringBuilder) null, map0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      URI uRI0 = MockURI.URI("//(,nvXq)", "//(,nvXq)", "//(,nvXq)");
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      URI uRI1 = uRISupport_CompositeData0.toURI();
      assertEquals("(,nvXq)/://(,nvXq)#//(,nvXq)", uRI1.toString());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      URISupport.CompositeData uRISupport_CompositeData0 = new URISupport.CompositeData();
      // Undeclared exception!
      try { 
        uRISupport_CompositeData0.toURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport$CompositeData", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      URISupport uRISupport0 = new URISupport();
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.changeScheme((URI) null, "io.netty.util.internal.PlatformDependent$2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.removeQuery((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Map<String, String> map0 = URISupport.parseQuery("9S$XFHz<8KEti");
      // Undeclared exception!
      try { 
        URISupport.applyParameters((URI) null, map0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.stripScheme((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("^t4");
      boolean boolean0 = URISupport.containsQuery(simpleString0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      // Undeclared exception!
      try { 
        URISupport.containsQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.uri.URISupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      String string0 = uRISupport_CompositeData0.getPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      URI uRI0 = MockURI.URI("//(foo.bar&)", "//(foo.bar&)", "//(foo.bar&)", "//(foo.bar&)", "//(foo.bar&)");
      Map<String, String> map0 = URISupport.parseParameters(uRI0);
      assertEquals(2, map0.size());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      URI[] uRIArray0 = uRISupport_CompositeData0.getComponents();
      assertEquals(1, uRIArray0.length);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      String string0 = uRISupport_CompositeData0.getScheme();
      assertEquals("http", string0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      String string0 = uRISupport_CompositeData0.getHost();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      URISupport.CompositeData uRISupport_CompositeData0 = URISupport.parseComposite(uRI0);
      String string0 = uRISupport_CompositeData0.getFragment();
      assertNull(string0);
  }
}
