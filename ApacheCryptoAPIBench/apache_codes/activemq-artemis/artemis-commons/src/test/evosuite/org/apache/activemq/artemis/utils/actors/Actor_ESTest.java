/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:25:21 GMT 2022
 */

package org.apache.activemq.artemis.utils.actors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.Callable;
import java.util.concurrent.Delayed;
import java.util.concurrent.Executor;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.RejectedExecutionException;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import org.apache.activemq.artemis.utils.actors.Actor;
import org.apache.activemq.artemis.utils.actors.ActorListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Actor_ESTest extends Actor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ForkJoinPool.ForkJoinWorkerThreadFactory forkJoinPool_ForkJoinWorkerThreadFactory0 = ForkJoinPool.defaultForkJoinWorkerThreadFactory;
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(2, forkJoinPool_ForkJoinWorkerThreadFactory0, (Thread.UncaughtExceptionHandler) null, true);
      ActorListener<Callable<String>> actorListener0 = (ActorListener<Callable<String>>) mock(ActorListener.class, new ViolatedAssumptionAnswer());
      Actor<Callable<String>> actor0 = new Actor<Callable<String>>(forkJoinPool0, actorListener0);
      Callable<String> callable0 = (Callable<String>) mock(Callable.class, new ViolatedAssumptionAnswer());
      actor0.act(callable0);
      assertFalse(actor0.isFlushed());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1, threadPoolExecutor_CallerRunsPolicy0);
      Actor<String> actor0 = new Actor<String>(scheduledThreadPoolExecutor0, (ActorListener<String>) null);
      // Undeclared exception!
      try { 
        actor0.doTask("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.actors.Actor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(2838);
      forkJoinPool0.shutdown();
      ActorListener<Runnable> actorListener0 = (ActorListener<Runnable>) mock(ActorListener.class, new ViolatedAssumptionAnswer());
      Actor<Runnable> actor0 = new Actor<Runnable>(forkJoinPool0, actorListener0);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "");
      // Undeclared exception!
      try { 
        actor0.act(mockThread0);
        fail("Expecting exception: RejectedExecutionException");
      
      } catch(RejectedExecutionException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ForkJoinPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ActorListener<Callable<Delayed>> actorListener0 = (ActorListener<Callable<Delayed>>) mock(ActorListener.class, new ViolatedAssumptionAnswer());
      Actor<Callable<Delayed>> actor0 = new Actor<Callable<Delayed>>((Executor) null, actorListener0);
      Callable<Delayed> callable0 = (Callable<Delayed>) mock(Callable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        actor0.act(callable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.actors.ProcessorBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ActorListener<Object> actorListener0 = (ActorListener<Object>) mock(ActorListener.class, new ViolatedAssumptionAnswer());
      Actor<Object> actor0 = new Actor<Object>((Executor) null, actorListener0);
      actor0.doTask((Object) null);
      assertEquals(0, actor0.status());
  }
}
