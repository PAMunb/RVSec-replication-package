/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:22:23 GMT 2022
 */

package org.apache.activemq.artemis.utils.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.buffer.ByteBuf;
import io.netty.buffer.ByteBufAllocator;
import io.netty.buffer.CompositeByteBuf;
import io.netty.buffer.EmptyByteBuf;
import io.netty.buffer.PooledByteBufAllocator;
import io.netty.buffer.UnpooledByteBufAllocator;
import io.netty.buffer.UnpooledDirectByteBuf;
import io.netty.buffer.UnpooledHeapByteBuf;
import io.netty.buffer.UnpooledUnsafeDirectByteBuf;
import java.net.StandardProtocolFamily;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.TreeSet;
import org.apache.activemq.artemis.api.core.SimpleString;
import org.apache.activemq.artemis.utils.collections.TypedProperties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TypedProperties_ESTest extends TypedProperties_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)31;
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)124;
      byteArray0[5] = (byte) (-51);
      SimpleString simpleString0 = new SimpleString(byteArray0);
      typedProperties0.clear();
      typedProperties0.putBooleanProperty(simpleString0, false);
      typedProperties0.putCharProperty(simpleString0, '/');
      typedProperties0.isEmpty();
      SimpleString simpleString1 = typedProperties0.getSimpleStringProperty(simpleString0);
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools();
      typedProperties_TypedPropertiesDecoderPools0.getPropertyValuesPool();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true);
      unpooledByteBufAllocator0.compositeHeapBuffer((int) '/');
      // Undeclared exception!
      try { 
        typedProperties0.getIntProperty(simpleString1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(16384, 16384);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("4$~|7mH?-1B=6aHd>");
      typedProperties0.putByteProperty(simpleString0, (byte)4);
      typedProperties0.putIntProperty(simpleString0, (-1261));
      simpleString_StringSimpleStringPool0.getOrCreate("4$~|7mH?-1B=6aHd>");
      char[] charArray0 = new char[19];
      charArray0[4] = 'D';
      typedProperties0.putBooleanProperty(simpleString0, false);
      typedProperties0.getMap();
      typedProperties0.putNullValue(simpleString0);
      typedProperties0.isEmpty();
      typedProperties0.containsProperty(simpleString0);
      PooledByteBufAllocator pooledByteBufAllocator0 = (PooledByteBufAllocator)ByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(pooledByteBufAllocator0, 1771, 1845);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.touch();
      typedProperties0.encode(byteBuf0);
      // Undeclared exception!
      try { 
        typedProperties0.getDoubleProperty(simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.util.internal.logging.Slf4JLoggerFactory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.toString();
      boolean boolean0 = typedProperties0.hasInternalProperties();
      assertEquals(213, typedProperties0.getMemoryOffset());
      assertFalse(boolean0);
      
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(pooledByteBufAllocator0, 11, 43);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.writeInt(43);
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools();
      typedProperties1.decode(byteBuf0, typedProperties_TypedPropertiesDecoderPools0);
      typedProperties0.putBooleanProperty(simpleString0, true);
      // Undeclared exception!
      try { 
        typedProperties1.getProperty(simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(16384, 16384);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("4$~|7mH?-1B=6aHd>");
      typedProperties1.putByteProperty(simpleString0, (byte)4);
      typedProperties0.putIntProperty(simpleString0, (-1261));
      typedProperties0.putLongProperty(simpleString0, 0L);
      simpleString_StringSimpleStringPool0.getOrCreate("4$~|7mH?-1B=6aHd>");
      typedProperties1.getSimpleStringProperty(simpleString0);
      char[] charArray0 = new char[10];
      charArray0[5] = 'D';
      typedProperties1.putBooleanProperty(simpleString0, false);
      typedProperties0.getMap();
      typedProperties1.putNullValue(simpleString0);
      typedProperties1.isEmpty();
      typedProperties1.containsProperty(simpleString0);
      PooledByteBufAllocator pooledByteBufAllocator0 = (PooledByteBufAllocator)ByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(pooledByteBufAllocator0, 1771, 1845);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.touch();
      typedProperties0.encode(byteBuf0);
      try { 
        typedProperties0.getDoubleProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: 4$~|7mH?-1B=6aHd>
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, false);
      ByteBuf[] byteBufArray0 = new ByteBuf[8];
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 0);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(244);
      compositeByteBuf0.readUnsignedMediumLE();
      compositeByteBuf1.setBoolean(0, false);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeChar(0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(8388608, 8388608);
      TypedProperties.StringValue typedProperties_StringValue0 = TypedProperties.StringValue.readStringValue(compositeByteBuf2, typedProperties_StringValue_ByteBufStringValuePool0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      SimpleString simpleString0 = typedProperties_StringValue0.val;
      typedProperties_StringValue_ByteBufStringValuePool0.isEqual(typedProperties_StringValue0, compositeByteBuf0, 8416832, 8388608);
      Short short0 = new Short((short)10);
      TypedProperties.setObjectProperty(simpleString0, (Object) null, typedProperties0);
      TypedProperties.setObjectProperty(simpleString0, short0, typedProperties0);
      typedProperties0.decode((ByteBuf) compositeByteBuf2);
      // Undeclared exception!
      try { 
        typedProperties0.getSimpleStringProperty(simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("_AMQ_ROUTE_TO\u00E8");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.putLongProperty(simpleString0, 8L);
      typedProperties1.putLongProperty(simpleString0, 8L);
      typedProperties1.toString();
      typedProperties0.hasInternalProperties();
      typedProperties1.toString();
      typedProperties0.getBooleanProperty(simpleString0);
      SimpleString simpleString1 = typedProperties0.getSimpleStringProperty(simpleString0);
      simpleString0.chars();
      simpleString1.compareTo(simpleString0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte) (-95);
      byteArray0[6] = (byte)8;
      byteArray0[7] = (byte) (-65);
      byteArray0[8] = (byte)24;
      SimpleString simpleString2 = new SimpleString(byteArray0);
      typedProperties1.getSimpleStringProperty(simpleString2);
      typedProperties1.containsProperty(simpleString0);
      try { 
        typedProperties1.getIntProperty(simpleString1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: _AMQ_ROUTE_TO\u00E8
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString("PY`");
      simpleString0.split('J');
      Character character0 = new Character('Z');
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      TypedProperties.setObjectProperty(simpleString0, character0, typedProperties1);
      int int0 = 2208;
      PooledByteBufAllocator pooledByteBufAllocator0 = null;
      try {
        pooledByteBufAllocator0 = new PooledByteBufAllocator(false, 2208, 2208, 2208, 35, 2208, 2208, (-1591), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxOrder: 35 (expected: 0-14)
         //
         verifyException("io.netty.buffer.PooledByteBufAllocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(16384, 16384);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("4$~|7mH?-1B=6aHd>", simpleString_StringSimpleStringPool0);
      typedProperties1.putByteProperty(simpleString0, (byte)4);
      typedProperties0.putIntProperty(simpleString0, (-1261));
      simpleString_StringSimpleStringPool0.getOrCreate("4$~|7mH?-1B=6aHd>");
      typedProperties1.getSimpleStringProperty(simpleString0);
      char[] charArray0 = new char[19];
      charArray0[4] = 'D';
      typedProperties1.putBooleanProperty(simpleString0, false);
      typedProperties0.getMap();
      typedProperties1.putNullValue(simpleString0);
      typedProperties1.isEmpty();
      typedProperties1.containsProperty(simpleString0);
      PooledByteBufAllocator pooledByteBufAllocator0 = (PooledByteBufAllocator)ByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(pooledByteBufAllocator0, 1771, 1845);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.touch();
      typedProperties0.encode(byteBuf0);
      try { 
        typedProperties0.getDoubleProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: 4$~|7mH?-1B=6aHd>
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$LongValue", simpleString_StringSimpleStringPool0);
      typedProperties1.putByteProperty(simpleString0, (byte) (-51));
      typedProperties1.getShortProperty(simpleString0);
      assertEquals(153, typedProperties1.getEncodeSize());
      
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      typedProperties1.getByteProperty(simpleString0);
      typedProperties1.getPropertyNames();
      CompositeByteBuf compositeByteBuf0 = pooledByteBufAllocator0.compositeBuffer();
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.discardSomeReadBytes();
      // Undeclared exception!
      compositeByteBuf1.writeDouble((-2088.11250502696));
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(16384, 16384);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("4$~|7mH?-1B=6aHd>", simpleString_StringSimpleStringPool0);
      typedProperties1.putByteProperty(simpleString0, (byte)4);
      typedProperties0.putIntProperty(simpleString0, (-1261));
      typedProperties1.putDoubleProperty(simpleString0, 0.0);
      typedProperties1.getSimpleStringProperty(simpleString0);
      char[] charArray0 = new char[19];
      charArray0[4] = 'D';
      typedProperties1.putBooleanProperty(simpleString0, false);
      typedProperties0.getMap();
      typedProperties1.putNullValue(simpleString0);
      typedProperties1.isEmpty();
      try { 
        typedProperties0.getDoubleProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: 4$~|7mH?-1B=6aHd>
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString('P');
      byte[] byteArray0 = new byte[0];
      typedProperties1.putBytesProperty(simpleString0, byteArray0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true, false);
      CompositeByteBuf compositeByteBuf0 = unpooledByteBufAllocator0.compositeDirectBuffer(1947);
      simpleString0.equals((ByteBuf) compositeByteBuf0, 1947, 128);
      typedProperties0.putTypedProperties(typedProperties1);
      typedProperties1.removeProperty(simpleString0);
      typedProperties0.getBytesProperty(simpleString0);
      SimpleString simpleString1 = new SimpleString('S');
      SimpleString simpleString2 = new SimpleString('P');
      typedProperties0.containsProperty(simpleString2);
      typedProperties0.getPropertyNames();
      typedProperties0.getEncodeSize();
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      typedProperties0.getEncodeSize();
      typedProperties0.encode(compositeByteBuf0);
      assertEquals(19, typedProperties0.getMemoryOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(0, 16711680);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools(2, 2, (-1143));
      typedProperties_TypedPropertiesDecoderPools0.getPropertyKeysPool();
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$StringValue");
      typedProperties0.putByteProperty(simpleString0, (byte)16);
      typedProperties0.size();
      typedProperties0.getByteProperty(simpleString0);
      assertEquals(160, typedProperties0.getMemoryOffset());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, true);
      ByteBuf[] byteBufArray0 = new ByteBuf[8];
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 0);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(244);
      compositeByteBuf0.readUnsignedMediumLE();
      compositeByteBuf1.setBoolean(0, false);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeChar(0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(8388608, 8388608);
      TypedProperties.StringValue typedProperties_StringValue0 = TypedProperties.StringValue.readStringValue(compositeByteBuf2, typedProperties_StringValue_ByteBufStringValuePool0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      SimpleString simpleString0 = typedProperties_StringValue0.val;
      typedProperties_StringValue_ByteBufStringValuePool0.isEqual(typedProperties_StringValue0, compositeByteBuf0, 8416832, 8388608);
      compositeByteBuf0.isWritable((int) (short)10);
      Short short0 = new Short((short)10);
      TypedProperties.setObjectProperty(simpleString0, (Object) null, typedProperties0);
      TypedProperties.setObjectProperty(simpleString0, short0, typedProperties0);
      typedProperties0.decode((ByteBuf) compositeByteBuf2);
      // Undeclared exception!
      try { 
        typedProperties0.getCharProperty(simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.util.internal.logging.Slf4JLoggerFactory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.putLongProperty(simpleString0, 0L);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      typedProperties1.toString();
      typedProperties0.hasInternalProperties();
      typedProperties0.putBooleanProperty(simpleString0, true);
      typedProperties1.toString();
      typedProperties0.getBooleanProperty(simpleString0);
      SimpleString simpleString1 = typedProperties0.getSimpleStringProperty(simpleString0);
      typedProperties1.getLongProperty(simpleString0);
      simpleString1.codePoints();
      typedProperties1.containsProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties1.getIntProperty(simpleString1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyValuesPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools", simpleString_StringSimpleStringPool0);
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString1 = simpleString_StringSimpleStringPool0.getOrCreate("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      simpleString0.concat("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      SimpleString simpleString2 = simpleString_StringSimpleStringPool0.getOrCreate("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      TypedProperties.setObjectProperty(simpleString0, simpleString0, typedProperties0);
      Integer integer0 = new Integer(32);
      typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      typedProperties0.putFloatProperty(simpleString0, 1.0F);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool();
      typedProperties0.getSimpleStringProperty(simpleString2);
      simpleString1.chars();
      typedProperties0.getPropertyNames();
      TreeSet<SimpleString> treeSet0 = new TreeSet<SimpleString>();
      simpleString1.concat("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      Float float0 = new Float((-631.507973));
      TypedProperties.setObjectProperty(simpleString2, float0, typedProperties0);
      typedProperties0.getFloatProperty(simpleString1);
      typedProperties0.putTypedProperties(typedProperties0);
      try { 
        typedProperties0.getShortProperty(simpleString1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      byte[] byteArray0 = new byte[2];
      typedProperties0.getPropertyNames();
      byte byte0 = (byte)1;
      byteArray0[0] = (byte)1;
      byte byte1 = (byte) (-123);
      SimpleString simpleString0 = new SimpleString(byteArray0);
      simpleString0.chars();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      typedProperties0.putLongProperty(simpleString0, 0L);
      typedProperties0.putBytesProperty(simpleString0, byteArray0);
      typedProperties0.getBytesProperty(simpleString0);
      typedProperties0.toString();
      try { 
        typedProperties0.getCharProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: \u0001
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyValuesPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools", simpleString_StringSimpleStringPool0);
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString1 = simpleString_StringSimpleStringPool0.getOrCreate("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      simpleString0.concat("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      SimpleString simpleString2 = simpleString_StringSimpleStringPool0.getOrCreate("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      TypedProperties.setObjectProperty(simpleString0, simpleString0, typedProperties0);
      Integer integer0 = new Integer(32);
      typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      typedProperties0.putFloatProperty(simpleString0, 32);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool();
      simpleString1.chars();
      typedProperties0.getPropertyNames();
      TreeSet<SimpleString> treeSet0 = new TreeSet<SimpleString>();
      typedProperties0.clear();
      simpleString1.concat("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      Float float0 = new Float((double) 32);
      TypedProperties.setObjectProperty(simpleString2, float0, typedProperties0);
      typedProperties0.getFloatProperty(simpleString1);
      typedProperties0.putTypedProperties(typedProperties0);
      try { 
        typedProperties0.getShortProperty(simpleString1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$LongValue", simpleString_StringSimpleStringPool0);
      typedProperties1.putByteProperty(simpleString0, (byte) (-51));
      typedProperties1.getShortProperty(simpleString0);
      typedProperties1.getLongProperty(simpleString0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool((-2381), 103);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      int int0 = 31;
      PriorityQueue<ByteBuf> priorityQueue0 = new PriorityQueue<ByteBuf>();
      PriorityQueue<ByteBuf> priorityQueue1 = new PriorityQueue<ByteBuf>(priorityQueue0);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 31, priorityQueue1);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      // Undeclared exception!
      try { 
        compositeByteBuf0.writeBytes((ByteBuf) emptyByteBuf0, (-1243));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // minWritableBytes: -1243 (expected: >= 0)
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$LongValue", simpleString_StringSimpleStringPool0);
      typedProperties1.putByteProperty(simpleString0, (byte)0);
      typedProperties1.getShortProperty(simpleString0);
      assertEquals(153, typedProperties1.getEncodeSize());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.noResourceLeakDetection");
      typedProperties0.putCharProperty(simpleString0, ']');
      int int0 = 0;
      typedProperties0.putIntProperty(simpleString0, 0);
      typedProperties0.getEncodeSize();
      typedProperties0.getIntProperty(simpleString0);
      PooledByteBufAllocator pooledByteBufAllocator0 = null;
      try {
        pooledByteBufAllocator0 = new PooledByteBufAllocator(374, 374, 0, 78);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxOrder: 78 (expected: 0-14)
         //
         verifyException("io.netty.buffer.PooledByteBufAllocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyValuesPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("", simpleString_StringSimpleStringPool0);
      TypedProperties typedProperties0 = new TypedProperties();
      ByteBuf byteBuf0 = null;
      simpleString_StringSimpleStringPool0.getOrCreate("");
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.getPropertyNames();
      TypedProperties.setObjectProperty(simpleString0, simpleString0, typedProperties1);
      typedProperties0.getEncodeSize();
      typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      typedProperties0.putCharProperty(simpleString0, 'K');
      typedProperties1.putFloatProperty(simpleString0, 1.0F);
      try { 
        typedProperties0.getBytesProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: 
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString simpleString0 = new SimpleString("~q4y");
      // Undeclared exception!
      try { 
        TypedProperties.setObjectProperty(simpleString0, typedProperties0, typedProperties0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // class org.apache.activemq.artemis.utils.collections.TypedProperties is not a valid property type
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("Y}S!#4k-i");
      typedProperties0.getSimpleStringProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties0.putByteProperty((SimpleString) null, (byte)84);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString.toSimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$BooleanValue");
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      emptyByteBuf0.slice();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools(10, 0, 10);
      typedProperties_TypedPropertiesDecoderPools0.getPropertyKeysPool();
      // Undeclared exception!
      try { 
        TypedProperties.StringValue.readStringValue(emptyByteBuf0, (TypedProperties.StringValue.ByteBufStringValuePool) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.netty.buffer.EmptyByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("io.netty.buffer.PoolChunkList");
      PooledByteBufAllocator pooledByteBufAllocator0 = (PooledByteBufAllocator)ByteBufAllocator.DEFAULT;
      UnpooledUnsafeDirectByteBuf unpooledUnsafeDirectByteBuf0 = new UnpooledUnsafeDirectByteBuf(pooledByteBufAllocator0, 9, 43);
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      // Undeclared exception!
      try { 
        TypedProperties.setObjectProperty(simpleString0, unpooledUnsafeDirectByteBuf0, typedProperties1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // class io.netty.buffer.UnpooledUnsafeDirectByteBuf is not a valid property type
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString simpleString0 = new SimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$LongValue");
      typedProperties0.getBooleanProperty(simpleString0);
      String string0 = "io.netty.allocator.maxOrder";
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools();
      typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      SimpleString simpleString1 = new SimpleString(" PNuKetWT,V");
      // Undeclared exception!
      try { 
        typedProperties0.getCharProperty(simpleString1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Invalid conversion:  PNuKetWT,V
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      typedProperties0.toString();
      TypedProperties typedProperties1 = null;
      try {
        typedProperties1 = new TypedProperties((TypedProperties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      // Undeclared exception!
      try { 
        typedProperties1.getMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties();
      String string0 = "&g1#Q}O7@7vrf&0";
      SimpleString simpleString0 = SimpleString.toSimpleString("&g1#Q}O7@7vrf&0", (SimpleString.StringSimpleStringPool) null);
      typedProperties0.getSimpleStringProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties0.putFloatProperty((SimpleString) null, 2825.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      char char0 = 'W';
      SimpleString simpleString0 = new SimpleString('X');
      TypedProperties typedProperties2 = new TypedProperties();
      // Undeclared exception!
      try { 
        typedProperties2.getDoubleProperty(simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString simpleString0 = null;
      // Undeclared exception!
      try { 
        typedProperties1.putCharProperty((SimpleString) null, 'N');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SimpleString simpleString0 = null;
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString1 = new SimpleString('-');
      typedProperties0.removeProperty((SimpleString) null);
      TypedProperties typedProperties1 = new TypedProperties();
      typedProperties0.putTypedProperties(typedProperties1);
      // Undeclared exception!
      try { 
        typedProperties0.getDoubleProperty((SimpleString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      ByteBuf byteBuf0 = pooledByteBufAllocator0.heapBuffer();
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool();
      typedProperties_StringValue_ByteBufStringValuePool0.canPool(byteBuf0, (-1018));
      // Undeclared exception!
      try { 
        TypedProperties.StringValue.readStringValue(byteBuf0, typedProperties_StringValue_ByteBufStringValuePool0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // readerIndex(0) + length(4) exceeds writerIndex(0): UnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 256)
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      typedProperties0.toString();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      // Undeclared exception!
      try { 
        typedProperties1.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      short short0 = (short)0;
      // Undeclared exception!
      try { 
        typedProperties0.putShortProperty((SimpleString) null, (short)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool((-5014));
      SimpleString simpleString0 = SimpleString.toSimpleString("Invalid conversion: ", simpleString_StringSimpleStringPool0);
      typedProperties0.hasInternalProperties();
      SimpleString.toSimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$LongValue");
      FileSystemHandling.shouldAllThrowIOExceptions();
      typedProperties0.getBooleanProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties0.getLongProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools();
      typedProperties_TypedPropertiesDecoderPools0.getPropertyKeysPool();
      TypedProperties typedProperties0 = new TypedProperties();
      typedProperties0.clear();
      typedProperties0.getMemoryOffset();
      // Undeclared exception!
      try { 
        typedProperties0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools();
      typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = SimpleString.toSimpleString("io.netty.buffer.AdvancedLeakAwareCompositeByteBuf");
      typedProperties0.putCharProperty(simpleString0, 'T');
      typedProperties0.clear();
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools();
      typedProperties_TypedPropertiesDecoderPools0.getPropertyKeysPool();
      typedProperties0.getMemoryOffset();
      typedProperties0.getSimpleStringProperty(simpleString0);
      int int0 = 7;
      PooledByteBufAllocator pooledByteBufAllocator0 = null;
      try {
        pooledByteBufAllocator0 = new PooledByteBufAllocator(7, (-611), 7, 105);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxOrder: 105 (expected: 0-14)
         //
         verifyException("io.netty.buffer.PooledByteBufAllocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString simpleString0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        typedProperties1.putBooleanProperty((SimpleString) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      ByteBuf byteBuf0 = null;
      // Undeclared exception!
      try { 
        typedProperties1.encode((ByteBuf) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      int int0 = 4454;
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(4454, 63);
      TypedProperties typedProperties0 = new TypedProperties();
      ByteBuf byteBuf0 = null;
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools(4454, 4454, 0);
      // Undeclared exception!
      try { 
        typedProperties0.decode((ByteBuf) null, typedProperties_TypedPropertiesDecoderPools0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.noResourceLeakDetection");
      typedProperties0.putCharProperty(simpleString0, ']');
      int int0 = 0;
      typedProperties0.putIntProperty(simpleString0, 0);
      typedProperties0.getEncodeSize();
      PooledByteBufAllocator pooledByteBufAllocator0 = null;
      try {
        pooledByteBufAllocator0 = new PooledByteBufAllocator(374, 374, 0, 78);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxOrder: 78 (expected: 0-14)
         //
         verifyException("io.netty.buffer.PooledByteBufAllocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools(1, 1, 127);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = typedProperties_TypedPropertiesDecoderPools0.getPropertyValuesPool();
      ByteBuf byteBuf0 = null;
      // Undeclared exception!
      try { 
        typedProperties_StringValue_ByteBufStringValuePool0.canPool((ByteBuf) null, (-1905));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // length must be a multiple of 2
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        typedProperties1.putIntProperty((SimpleString) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      // Undeclared exception!
      try { 
        typedProperties0.putNullValue((SimpleString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      ByteBuf byteBuf0 = null;
      // Undeclared exception!
      try { 
        typedProperties0.decode((ByteBuf) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = 36;
      int int1 = 2334;
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(36, 2334);
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      int int2 = 576;
      char[] charArray0 = new char[3];
      char char0 = 'A';
      SimpleString.toSimpleString("touch");
      // Undeclared exception!
      try { 
        typedProperties0.putDoubleProperty(simpleString0, 576);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      int int0 = typedProperties0.getEncodeSize();
      assertEquals(1, int0);
      
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(unpooledByteBufAllocator0, 122, 122);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.clear();
      typedProperties0.encode(byteBuf0);
      assertEquals(1, typedProperties0.getEncodeSize());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = SimpleString.toSimpleString("LTuLY");
      boolean boolean0 = true;
      typedProperties0.putBooleanProperty(simpleString0, true);
      int int0 = 0;
      int int1 = 1704;
      int int2 = 3475;
      boolean boolean1 = false;
      try { 
        typedProperties0.getBytesProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: LTuLY
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 0);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(244);
      compositeByteBuf1.setBoolean(0, true);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeChar(244);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(8388608, 8388608);
      compositeByteBuf2.writeShort(107);
      // Undeclared exception!
      try { 
        TypedProperties.StringValue.readStringValue(compositeByteBuf2, typedProperties_StringValue_ByteBufStringValuePool0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // readerIndex(4) + length(24018944) exceeds writerIndex(12): CompositeByteBuf(ridx: 4, widx: 12, cap: 64, components=1)
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(0, 1374);
      typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyValuesPool();
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = SimpleString.toSimpleString(";\\/Cjw`cP>G@");
      typedProperties0.putShortProperty(simpleString0, (short) (-2409));
      typedProperties0.getMap();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)75;
      SimpleString simpleString1 = new SimpleString(byteArray0);
      simpleString1.split('+');
      simpleString1.toString();
      SimpleString simpleString2 = new SimpleString('+');
      SimpleString.toSimpleString("");
      typedProperties0.putNullValue(simpleString1);
      SimpleString simpleString3 = new SimpleString("j/ykM|(c[|Z");
      typedProperties0.getBytesProperty(simpleString3);
      // Undeclared exception!
      try { 
        typedProperties0.getFloatProperty(simpleString2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = null;
      typedProperties0.removeProperty((SimpleString) null);
      typedProperties0.toString();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      // Undeclared exception!
      try { 
        typedProperties1.putLongProperty((SimpleString) null, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(0, 1374);
      typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = SimpleString.toSimpleString(";\\/Cjw`cP>G@");
      typedProperties0.putShortProperty(simpleString0, (short) (-2409));
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)1;
      byteArray0[1] = (byte)75;
      SimpleString simpleString1 = new SimpleString(byteArray0);
      simpleString1.split('+');
      simpleString1.toString();
      SimpleString simpleString2 = new SimpleString('+');
      typedProperties0.getSimpleStringProperty(simpleString0);
      typedProperties0.putNullValue(simpleString1);
      // Undeclared exception!
      try { 
        typedProperties0.getFloatProperty(simpleString2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool(9);
      SimpleString simpleString0 = SimpleString.toSimpleString("", simpleString_StringSimpleStringPool0);
      typedProperties0.putDoubleProperty(simpleString0, 0.0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      // Undeclared exception!
      try { 
        typedProperties0.encode(emptyByteBuf0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.netty.buffer.EmptyByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      ByteBuf byteBuf0 = emptyByteBuf0.retainedSlice();
      // Undeclared exception!
      try { 
        typedProperties0.encode(byteBuf0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.netty.buffer.EmptyByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, true);
      ByteBuf[] byteBufArray0 = new ByteBuf[8];
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 0);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(244);
      compositeByteBuf0.readUnsignedMediumLE();
      compositeByteBuf1.setBoolean(0, false);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeChar(0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(8388608, 8388608);
      TypedProperties.StringValue typedProperties_StringValue0 = TypedProperties.StringValue.readStringValue(compositeByteBuf2, typedProperties_StringValue_ByteBufStringValuePool0);
      SimpleString simpleString0 = typedProperties_StringValue0.val;
      typedProperties_StringValue0.write(compositeByteBuf0);
      SimpleString simpleString1 = new SimpleString("");
      simpleString0.concat(simpleString1);
      typedProperties_StringValue_ByteBufStringValuePool0.isEqual(typedProperties_StringValue0, compositeByteBuf0, 8416832, 8388608);
      // Undeclared exception!
      try { 
        typedProperties0.getIntProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      byte[] byteArray0 = null;
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      String string0 = "io.netty.customResourceLeakDetector";
      // Undeclared exception!
      try { 
        TypedProperties.setObjectProperty(simpleString0, "io.netty.customResourceLeakDetector", typedProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      byte[] byteArray0 = new byte[0];
      SimpleString simpleString0 = new SimpleString(byteArray0);
      typedProperties0.putByteProperty(simpleString0, (byte)5);
      int int0 = (-517);
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools((byte)5, (-517), 16777215);
      typedProperties_TypedPropertiesDecoderPools0.getPropertyKeysPool();
      typedProperties0.isEmpty();
      typedProperties0.getPropertyNames();
      typedProperties0.getIntProperty(simpleString0);
      typedProperties0.getProperty(simpleString0);
      typedProperties0.getIntProperty(simpleString0);
      PooledByteBufAllocator pooledByteBufAllocator0 = null;
      try {
        pooledByteBufAllocator0 = new PooledByteBufAllocator(false, (byte)5, (-517), 16777215, (-1679), (-3601), (-517), 0, true, 16777215);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // nDirectArea: -517 (expected: >= 0)
         //
         verifyException("io.netty.buffer.PooledByteBufAllocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, true);
      int int0 = 244;
      ByteBuf[] byteBufArray0 = new ByteBuf[8];
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 0);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(244);
      compositeByteBuf0.readUnsignedMediumLE();
      compositeByteBuf1.setBoolean(0, false);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeChar(0);
      int int1 = 8388608;
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(8388608, 8388608);
      TypedProperties.StringValue typedProperties_StringValue0 = TypedProperties.StringValue.readStringValue(compositeByteBuf2, typedProperties_StringValue_ByteBufStringValuePool0);
      SimpleString simpleString0 = typedProperties_StringValue0.val;
      simpleString0.concat('');
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools();
      typedProperties0.decode((ByteBuf) compositeByteBuf2, typedProperties_TypedPropertiesDecoderPools0);
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = null;
      try {
        unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(unpooledByteBufAllocator0, (-2799), 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialCapacity: -2799
         //
         verifyException("io.netty.buffer.UnpooledDirectByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString simpleString0 = new SimpleString('K');
      SimpleString.toSimpleString("W");
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      ByteBuf byteBuf0 = emptyByteBuf0.asReadOnly();
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools(247, 247, 247);
      // Undeclared exception!
      try { 
        typedProperties0.decode(byteBuf0, typedProperties_TypedPropertiesDecoderPools0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // readerIndex(0) + length(1) exceeds writerIndex(0): ReadOnlyByteBuf(ridx: 0, widx: 0, cap: 0/0, unwrapped: EmptyByteBufBE)
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("=");
      typedProperties0.putFloatProperty(simpleString0, 1.0F);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)36;
      try { 
        typedProperties0.getLongProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: =
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(2279, 12);
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools(2279, 2279, 2279);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = typedProperties_TypedPropertiesDecoderPools0.getPropertyValuesPool();
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = SimpleString.toSimpleString(":]<j9_:9rS");
      Boolean boolean0 = typedProperties0.getBooleanProperty(simpleString0);
      typedProperties0.removeProperty(simpleString0);
      TypedProperties.setObjectProperty(simpleString0, boolean0, typedProperties0);
      // Undeclared exception!
      try { 
        typedProperties_StringValue_ByteBufStringValuePool0.canPool((ByteBuf) null, 2279);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // length must be a multiple of 2
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      Object object0 = typedProperties1.removeProperty((SimpleString) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("=");
      typedProperties0.putFloatProperty(simpleString0, 1.0F);
      try { 
        typedProperties0.getLongProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: =
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleString simpleString0 = new SimpleString("=");
      typedProperties0.putFloatProperty(simpleString0, 1.0F);
      typedProperties0.putShortProperty(simpleString0, (short)16384);
      typedProperties0.getMemoryOffset();
      typedProperties0.getShortProperty(simpleString0);
      typedProperties0.toString();
      assertEquals(14, typedProperties0.getEncodeSize());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      // Undeclared exception!
      try { 
        typedProperties1.putBytesProperty((SimpleString) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(16384, 16384);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyValuesPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("4$~|7mH?-1B=6aHd>", simpleString_StringSimpleStringPool0);
      typedProperties1.putByteProperty(simpleString0, (byte)4);
      typedProperties0.putIntProperty(simpleString0, (-1261));
      char[] charArray0 = new char[1];
      charArray0[0] = '?';
      SimpleString simpleString1 = SimpleString.toSimpleString("4$~|7mH?-1B=6aHd>");
      typedProperties1.putBooleanProperty(simpleString1, false);
      typedProperties0.getMap();
      typedProperties1.putNullValue(simpleString1);
      typedProperties0.hasInternalProperties();
      typedProperties0.getSimpleStringProperty(simpleString0);
      assertEquals(48, typedProperties0.getEncodeSize());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools();
      typedProperties_TypedPropertiesDecoderPools0.getPropertyValuesPool();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-95);
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte) (-122);
      byteArray0[4] = (byte)34;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("index: ");
      typedProperties0.putFloatProperty(simpleString0, 32);
      typedProperties0.getDoubleProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties0.putSimpleStringProperty((SimpleString) null, (SimpleString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      int int0 = typedProperties0.getEncodeSize();
      assertEquals(1, int0);
      
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools();
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = typedProperties_TypedPropertiesDecoderPools0.getPropertyValuesPool();
      boolean boolean0 = typedProperties_StringValue_ByteBufStringValuePool0.canPool((ByteBuf) null, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.util.internal.logging.Slf4JLoggerFactory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool((-5461));
      SimpleString simpleString1 = SimpleString.toSimpleString("$Qz", simpleString_StringSimpleStringPool0);
      typedProperties0.putShortProperty(simpleString1, (short)1067);
      typedProperties0.getMap();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.putLongProperty(simpleString0, 0L);
      typedProperties1.toString();
      typedProperties0.getIntProperty(simpleString1);
      typedProperties0.hasInternalProperties();
      typedProperties1.toString();
      typedProperties1.putTypedProperties(typedProperties0);
      typedProperties0.getBooleanProperty(simpleString0);
      SimpleString simpleString2 = typedProperties0.getSimpleStringProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties1.getIntProperty(simpleString2);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"io.netty.util.internal.logging.Slf4JLoggerFactory\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, true);
      ByteBuf[] byteBufArray0 = new ByteBuf[8];
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 0);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(244);
      compositeByteBuf0.readUnsignedMediumLE();
      compositeByteBuf1.setBoolean(0, false);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeChar(0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(0, 0);
      compositeByteBuf1.asReadOnly();
      TypedProperties.StringValue typedProperties_StringValue0 = TypedProperties.StringValue.readStringValue(compositeByteBuf2, typedProperties_StringValue_ByteBufStringValuePool0);
      SimpleString simpleString0 = typedProperties_StringValue0.val;
      // Undeclared exception!
      try { 
        typedProperties_StringValue_ByteBufStringValuePool0.isEqual(typedProperties_StringValue0, compositeByteBuf0, 8416832, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleString simpleString0 = new SimpleString("available");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)70;
      simpleString0.concat("available");
      byteArray0[1] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      typedProperties1.putDoubleProperty(simpleString0, 274.3243085279195);
      try { 
        typedProperties1.getByteProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: available
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("=");
      typedProperties0.putFloatProperty(simpleString0, 1.0F);
      typedProperties0.putLongProperty(simpleString0, 2836L);
      typedProperties0.getLongProperty(simpleString0);
      try { 
        typedProperties0.getShortProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: =
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int int0 = 1374;
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(0, 1374);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool(1374);
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = SimpleString.toSimpleString(";\\/Cjw`cP>G@");
      typedProperties0.putShortProperty(simpleString0, (short) (-2409));
      byte[] byteArray0 = new byte[2];
      try { 
        typedProperties0.getByteProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: ;\\/Cjw`cP>G@
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("ioneqty.util.internal.loggig.Slf4FLoggeractory");
      simpleString0.split('1');
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.toString();
      typedProperties0.hasInternalProperties();
      // Undeclared exception!
      try { 
        typedProperties1.getByteProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"ioneqty.util.internal.loggig.Slf4FLoggeractory\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      ByteBuf byteBuf0 = null;
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("io.netty.buffer.UnsafeDirectSwappedByteBuf", simpleString_StringSimpleStringPool0);
      // Undeclared exception!
      try { 
        typedProperties0.getByteProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = SimpleString.toSimpleString("org.jboss.logging.locale");
      simpleString0.codePoints();
      typedProperties0.putDoubleProperty(simpleString0, 0.0);
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyValuesPool();
      SimpleString simpleString1 = SimpleString.toSimpleString("org.jboss.logging.locale", simpleString_StringSimpleStringPool0);
      try { 
        typedProperties0.getIntProperty(simpleString1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: org.jboss.logging.locale
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("=");
      typedProperties0.putFloatProperty(simpleString0, 1.0F);
      typedProperties0.putShortProperty(simpleString0, (short) (-1567));
      typedProperties0.getMemoryOffset();
      typedProperties0.getShortProperty(simpleString0);
      typedProperties0.getIntProperty(simpleString0);
      typedProperties0.toString();
      assertEquals(14, typedProperties0.getEncodeSize());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("=");
      typedProperties0.putFloatProperty(simpleString0, 1.0F);
      ByteBufAllocator byteBufAllocator0 = null;
      SimpleString simpleString1 = typedProperties0.getSimpleStringProperty(simpleString0);
      typedProperties0.getBooleanProperty(simpleString1);
      boolean boolean0 = false;
      int int0 = 8;
      ByteBuf[] byteBufArray0 = new ByteBuf[1];
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      int int1 = (-713);
      int int2 = 0;
      UnpooledUnsafeDirectByteBuf unpooledUnsafeDirectByteBuf0 = null;
      try {
        unpooledUnsafeDirectByteBuf0 = new UnpooledUnsafeDirectByteBuf(pooledByteBufAllocator0, (-713), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialCapacity: -713
         //
         verifyException("io.netty.buffer.UnpooledUnsafeDirectByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = SimpleString.toSimpleString("io.netty.util.internal.logging.Slf4JLoggerFactory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.toString();
      typedProperties1.hasInternalProperties();
      typedProperties0.containsProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties0.getLongProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"io.netty.util.internal.logging.Slf4JLoggerFactory\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyValuesPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools", simpleString_StringSimpleStringPool0);
      SimpleString simpleString1 = new SimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      simpleString0.compareTo(simpleString1);
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString2 = simpleString_StringSimpleStringPool0.getOrCreate("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      TypedProperties.setObjectProperty(simpleString0, simpleString0, typedProperties0);
      typedProperties0.getEncodeSize();
      typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      typedProperties0.putFloatProperty(simpleString0, 1.0F);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool();
      simpleString2.chars();
      typedProperties0.getPropertyNames();
      TreeSet<SimpleString> treeSet0 = new TreeSet<SimpleString>();
      typedProperties0.clear();
      typedProperties0.getMap();
      typedProperties0.isEmpty();
      typedProperties0.getBooleanProperty(simpleString0);
      typedProperties0.putTypedProperties(typedProperties0);
      // Undeclared exception!
      try { 
        typedProperties0.getShortProperty(simpleString2);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)68;
      byteArray0[3] = (byte)85;
      byteArray0[4] = (byte)33;
      SimpleString simpleString0 = new SimpleString(byteArray0);
      typedProperties0.getSimpleStringProperty(simpleString0);
      SimpleString.toSimpleString("length must be a multiple of 2");
      Double double0 = new Double((-1532.212));
      // Undeclared exception!
      try { 
        TypedProperties.setObjectProperty((SimpleString) null, double0, typedProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StandardProtocolFamily standardProtocolFamily0 = StandardProtocolFamily.INET6;
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("");
      typedProperties0.putDoubleProperty(simpleString0, 0.0);
      SimpleString simpleString1 = new SimpleString("GX0MmGc.<1");
      typedProperties0.getSimpleStringProperty(simpleString1);
      typedProperties0.getSimpleStringProperty(simpleString1);
      boolean boolean0 = typedProperties0.containsProperty((SimpleString) null);
      assertEquals(18, typedProperties0.getEncodeSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = SimpleString.toSimpleString("", (SimpleString.StringSimpleStringPool) null);
      typedProperties0.putNullValue(simpleString0);
      typedProperties0.getMemoryOffset();
      typedProperties0.toString();
      assertEquals(10, typedProperties0.getEncodeSize());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(16384, 16384);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyValuesPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("4$~|7mH?-1B=6aHd>", simpleString_StringSimpleStringPool0);
      typedProperties1.putByteProperty(simpleString0, (byte)4);
      typedProperties0.putIntProperty(simpleString0, (-1261));
      try { 
        typedProperties0.getFloatProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: 4$~|7mH?-1B=6aHd>
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.toString();
      typedProperties0.hasInternalProperties();
      typedProperties1.toString();
      SimpleString simpleString1 = typedProperties0.getSimpleStringProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties1.getIntProperty(simpleString1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.util.internal.logging.Slf4JLoggerFactory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.toString();
      typedProperties0.hasInternalProperties();
      // Undeclared exception!
      try { 
        typedProperties1.getDoubleProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString simpleString0 = new SimpleString('E');
      typedProperties1.putByteProperty(simpleString0, (byte)0);
      typedProperties1.getMap();
      try { 
        typedProperties1.getFloatProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: E
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      byte[] byteArray0 = new byte[2];
      typedProperties0.getPropertyNames();
      byte byte0 = (byte)1;
      byteArray0[0] = (byte)1;
      byte byte1 = (byte) (-123);
      SimpleString simpleString0 = new SimpleString(byteArray0);
      simpleString0.chars();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      typedProperties0.putLongProperty(simpleString0, 0L);
      typedProperties0.putBytesProperty(simpleString0, byteArray0);
      typedProperties0.toString();
      try { 
        typedProperties0.getCharProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: \u0001
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyValuesPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools", simpleString_StringSimpleStringPool0);
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString1 = simpleString_StringSimpleStringPool0.getOrCreate("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      simpleString0.concat("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      SimpleString simpleString2 = simpleString_StringSimpleStringPool0.getOrCreate("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      TypedProperties.setObjectProperty(simpleString0, simpleString0, typedProperties0);
      int int0 = new Integer(32);
      typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      typedProperties0.putFloatProperty(simpleString0, 1.0F);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool();
      simpleString1.chars();
      typedProperties0.getPropertyNames();
      TreeSet<SimpleString> treeSet0 = new TreeSet<SimpleString>();
      typedProperties0.clear();
      simpleString1.concat("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      Float float0 = new Float(1021.2333277);
      TypedProperties.setObjectProperty(simpleString2, float0, typedProperties0);
      typedProperties0.getFloatProperty(simpleString1);
      typedProperties0.putTypedProperties(typedProperties0);
      try { 
        typedProperties0.getShortProperty(simpleString1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.util.internal.logging.Slf4JLoggerFactory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.putLongProperty(simpleString0, 0L);
      typedProperties1.toString();
      typedProperties0.hasInternalProperties();
      typedProperties1.toString();
      typedProperties0.getBooleanProperty(simpleString0);
      SimpleString simpleString1 = typedProperties1.getSimpleStringProperty(simpleString0);
      simpleString0.chars();
      typedProperties1.containsProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties1.getIntProperty(simpleString1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.util.internal.logging.Slf4JLoggerFactory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.putLongProperty(simpleString0, 0L);
      typedProperties1.toString();
      typedProperties0.hasInternalProperties();
      typedProperties1.toString();
      typedProperties0.getBooleanProperty(simpleString0);
      SimpleString simpleString1 = typedProperties0.getSimpleStringProperty(simpleString0);
      try { 
        typedProperties1.getIntProperty(simpleString1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: io.netty.util.internal.logging.Slf4JLoggerFactory
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool((-5025));
      simpleString_StringSimpleStringPool0.getOrCreate((String) null);
      simpleString_StringSimpleStringPool0.getOrCreate((String) null);
      SimpleString simpleString0 = SimpleString.toSimpleString("Invalid conversion: ", simpleString_StringSimpleStringPool0);
      typedProperties0.containsProperty(simpleString0);
      typedProperties0.hasInternalProperties();
      typedProperties0.getMemoryOffset();
      Integer integer0 = new Integer(577);
      TypedProperties.setObjectProperty(simpleString0, integer0, typedProperties0);
      typedProperties0.size();
      assertEquals(54, typedProperties0.getEncodeSize());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString simpleString0 = new SimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$CharValue");
      boolean boolean0 = typedProperties1.containsProperty(simpleString0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte) (-14);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)122;
      byteArray0[5] = (byte)26;
      byteArray0[6] = (byte)62;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString('P');
      byte[] byteArray1 = new byte[0];
      typedProperties1.putBytesProperty(simpleString0, byteArray1);
      typedProperties0.putTypedProperties(typedProperties1);
      SimpleString simpleString1 = new SimpleString('P');
      Long long0 = new Long(482L);
      TypedProperties typedProperties2 = new TypedProperties(typedProperties1);
      TypedProperties.setObjectProperty(simpleString0, long0, typedProperties2);
      typedProperties0.containsProperty(simpleString1);
      typedProperties0.getPropertyNames();
      typedProperties0.getEncodeSize();
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      // Undeclared exception!
      try { 
        emptyByteBuf0.writeFloat(2314.1F);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.netty.buffer.EmptyByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      byte[] byteArray0 = new byte[2];
      HashSet<SimpleString> hashSet0 = new HashSet<SimpleString>();
      SimpleString simpleString0 = new SimpleString(byteArray0);
      simpleString0.chars();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      typedProperties0.putLongProperty(simpleString0, 0L);
      typedProperties0.putBytesProperty(simpleString0, byteArray0);
      typedProperties0.toString();
      try { 
        typedProperties0.getCharProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: \u0000
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("ioneqty.util.internal.loggig.Slf4FLoggeractory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString simpleString1 = SimpleString.toSimpleString(";:Oir=)a>/|.l1r", (SimpleString.StringSimpleStringPool) null);
      typedProperties1.putByteProperty(simpleString1, (byte)76);
      typedProperties1.toString();
      typedProperties0.hasInternalProperties();
      try { 
        typedProperties0.getCharProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: ioneqty.util.internal.loggig.Slf4FLoggeractory
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = SimpleString.toSimpleString("io.netty.util.concurrent.FastThreadLocal");
      // Undeclared exception!
      try { 
        typedProperties0.getCharProperty(simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Invalid conversion: io.netty.util.concurrent.FastThreadLocal
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString(' ');
      typedProperties0.getBytesProperty(simpleString0);
      Float float0 = new Float(0.0);
      TypedProperties.setObjectProperty(simpleString0, float0, typedProperties0);
      typedProperties0.getFloatProperty(simpleString0);
      int int0 = typedProperties0.getEncodeSize();
      assertEquals(19, typedProperties0.getMemoryOffset());
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.util.internal.logging.Slf4JLoggerFactory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.toString();
      typedProperties0.hasInternalProperties();
      // Undeclared exception!
      try { 
        typedProperties0.getFloatProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, true);
      ByteBuf[] byteBufArray0 = new ByteBuf[8];
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 0);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(244);
      compositeByteBuf0.readUnsignedMediumLE();
      compositeByteBuf1.setBoolean(0, false);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeChar(0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(8388608, 8388608);
      TypedProperties.StringValue typedProperties_StringValue0 = TypedProperties.StringValue.readStringValue(compositeByteBuf2, typedProperties_StringValue_ByteBufStringValuePool0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      SimpleString simpleString0 = typedProperties_StringValue0.val;
      typedProperties_StringValue_ByteBufStringValuePool0.isEqual(typedProperties_StringValue0, compositeByteBuf0, 8416832, 8388608);
      Short short0 = new Short((short)10);
      TypedProperties.setObjectProperty(simpleString0, (Object) null, typedProperties0);
      TypedProperties.setObjectProperty(simpleString0, short0, typedProperties0);
      typedProperties0.decode((ByteBuf) compositeByteBuf2);
      // Undeclared exception!
      try { 
        typedProperties0.getIntProperty(simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("T3+'B& #Or^2D*83N/a");
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties.setObjectProperty(simpleString0, simpleString0, typedProperties0);
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(pooledByteBufAllocator0, 1164, 1164);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)87;
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)122;
      byteArray0[5] = (byte)40;
      byteArray0[6] = (byte) (-67);
      byteArray0[7] = (byte) (-3);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.writeBytes(byteArray0);
      // Undeclared exception!
      try { 
        typedProperties0.decode(byteBuf0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // readerIndex(5) + length(4) exceeds writerIndex(8): UnpooledDirectByteBuf(ridx: 5, widx: 8, cap: 1164/1164)
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      typedProperties0.getMemoryOffset();
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(false);
      CompositeByteBuf compositeByteBuf0 = pooledByteBufAllocator0.compositeDirectBuffer();
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.discardSomeReadBytes();
      // Undeclared exception!
      try { 
        typedProperties0.decode((ByteBuf) compositeByteBuf1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // readerIndex(0) + length(1) exceeds writerIndex(0): CompositeByteBuf(ridx: 0, widx: 0, cap: 0, components=0)
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, true);
      ByteBuf[] byteBufArray0 = new ByteBuf[8];
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 0);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(244);
      compositeByteBuf0.readUnsignedMediumLE();
      compositeByteBuf1.setBoolean(0, false);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeChar(0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(8388608, 8388608);
      TypedProperties.StringValue typedProperties_StringValue0 = TypedProperties.StringValue.readStringValue(compositeByteBuf2, typedProperties_StringValue_ByteBufStringValuePool0);
      SimpleString simpleString0 = typedProperties_StringValue0.val;
      typedProperties_StringValue_ByteBufStringValuePool0.isEqual(typedProperties_StringValue0, compositeByteBuf0, 8416832, 8388608);
      // Undeclared exception!
      try { 
        typedProperties0.getIntProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, true);
      ByteBuf[] byteBufArray0 = new ByteBuf[8];
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 0);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(244);
      compositeByteBuf0.readUnsignedMediumLE();
      compositeByteBuf1.setBoolean(0, false);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeChar(0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(8388608, 8388608);
      TypedProperties.StringValue typedProperties_StringValue0 = TypedProperties.StringValue.readStringValue(compositeByteBuf2, typedProperties_StringValue_ByteBufStringValuePool0);
      SimpleString simpleString0 = typedProperties_StringValue0.val;
      // Undeclared exception!
      try { 
        typedProperties0.getIntProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties();
      char char0 = 'P';
      SimpleString simpleString0 = new SimpleString('P');
      byte[] byteArray0 = new byte[0];
      typedProperties1.putBytesProperty(simpleString0, byteArray0);
      typedProperties0.putTypedProperties(typedProperties1);
      typedProperties0.getBytesProperty(simpleString0);
      try { 
        typedProperties1.getSimpleStringProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: P
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      typedProperties0.getEncodeSize();
      SimpleString simpleString0 = SimpleString.toSimpleString("NULL-value");
      typedProperties0.putByteProperty(simpleString0, (byte) (-84));
      StandardProtocolFamily standardProtocolFamily0 = StandardProtocolFamily.INET;
      simpleString0.equals((Object) standardProtocolFamily0);
      try { 
        typedProperties0.getBytesProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: NULL-value
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString(' ');
      typedProperties0.getBytesProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties0.getFloatProperty(simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString('Z');
      SimpleString simpleString1 = new SimpleString("");
      simpleString0.compareTo(simpleString1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      typedProperties0.putShortProperty(simpleString0, (short) (-2011));
      typedProperties0.isEmpty();
      typedProperties0.getPropertyNames();
      typedProperties0.getLongProperty(simpleString0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool();
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(false);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      // Undeclared exception!
      try { 
        emptyByteBuf0.setLong(1, 1951L);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.netty.buffer.EmptyByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      byte[] byteArray0 = new byte[0];
      SimpleString simpleString0 = new SimpleString(byteArray0);
      byte byte0 = (byte)5;
      typedProperties0.putByteProperty(simpleString0, (byte)5);
      typedProperties0.getShortProperty(simpleString0);
      typedProperties0.clear();
      int int0 = (-517);
      int int1 = 16777215;
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools((byte)5, (-517), 16777215);
      typedProperties_TypedPropertiesDecoderPools0.getPropertyKeysPool();
      typedProperties0.isEmpty();
      SimpleString simpleString1 = new SimpleString("[]");
      simpleString0.concat(simpleString1);
      typedProperties0.size();
      typedProperties0.getPropertyNames();
      typedProperties0.getProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties0.getIntProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("_AMQ_ROUTE_TO\u0001", simpleString_StringSimpleStringPool0);
      typedProperties1.putByteProperty(simpleString0, (byte) (-1));
      typedProperties1.removeProperty(simpleString0);
      SimpleString simpleString1 = new SimpleString('k');
      // Undeclared exception!
      try { 
        typedProperties1.getShortProperty(simpleString1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      typedProperties0.toString();
      SimpleString simpleString0 = SimpleString.toSimpleString("[;4");
      typedProperties0.getProperty(simpleString0);
      simpleString0.codePoints();
      // Undeclared exception!
      try { 
        typedProperties0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties();
      char char0 = 'P';
      SimpleString simpleString0 = new SimpleString('P');
      typedProperties1.putSimpleStringProperty(simpleString0, simpleString0);
      byte[] byteArray0 = new byte[0];
      typedProperties1.putBytesProperty(simpleString0, byteArray0);
      typedProperties1.putSimpleStringProperty(simpleString0, simpleString0);
      typedProperties0.putTypedProperties(typedProperties1);
      typedProperties1.putBooleanProperty(simpleString0, true);
      typedProperties1.getSimpleStringProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties0.getShortProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"P\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("=");
      typedProperties0.putFloatProperty(simpleString0, 1.0F);
      typedProperties0.getMemoryOffset();
      try { 
        typedProperties0.getShortProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: =
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties();
      char char0 = 'P';
      SimpleString simpleString0 = new SimpleString('P');
      byte[] byteArray0 = new byte[0];
      typedProperties1.putBytesProperty(simpleString0, byteArray0);
      typedProperties0.putTypedProperties(typedProperties1);
      try { 
        typedProperties1.getSimpleStringProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: P
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyValuesPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("", simpleString_StringSimpleStringPool0);
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString1 = simpleString_StringSimpleStringPool0.getOrCreate("");
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      TypedProperties.setObjectProperty(simpleString0, simpleString0, typedProperties1);
      typedProperties0.getEncodeSize();
      typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool();
      typedProperties0.getPropertyNames();
      typedProperties1.clear();
      typedProperties0.putTypedProperties(typedProperties1);
      typedProperties0.size();
      // Undeclared exception!
      try { 
        typedProperties0.getFloatProperty(simpleString1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      typedProperties0.putTypedProperties((TypedProperties) null);
      assertEquals(1, typedProperties0.getEncodeSize());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("");
      typedProperties0.putBytesProperty(simpleString0, (byte[]) null);
      // Undeclared exception!
      try { 
        typedProperties0.getShortProperty((SimpleString) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.util.internal.logging.Slf4JLoggerFactory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.putLongProperty(simpleString0, 0L);
      typedProperties1.toString();
      typedProperties0.hasInternalProperties();
      typedProperties0.putBooleanProperty(simpleString0, true);
      typedProperties1.toString();
      typedProperties0.getBooleanProperty(simpleString0);
      SimpleString simpleString1 = typedProperties0.getSimpleStringProperty(simpleString0);
      simpleString1.codePoints();
      typedProperties1.containsProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties1.getIntProperty(simpleString1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("qv$`[FMLj4H_bP+KC");
      typedProperties0.putBooleanProperty(simpleString0, true);
      assertEquals(50, typedProperties0.getMemoryOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString('Z');
      SimpleString simpleString1 = new SimpleString("");
      simpleString0.compareTo(simpleString1);
      typedProperties0.putShortProperty(simpleString0, (short)2526);
      typedProperties0.isEmpty();
      typedProperties0.getPropertyNames();
      typedProperties0.getLongProperty(simpleString0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool();
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(false);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      // Undeclared exception!
      try { 
        emptyByteBuf0.setLong(1, 1951L);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.netty.buffer.EmptyByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      byte[] byteArray0 = new byte[0];
      SimpleString simpleString0 = new SimpleString(byteArray0);
      byte byte0 = (byte)5;
      typedProperties0.putByteProperty(simpleString0, (byte)5);
      typedProperties0.clear();
      int int0 = (-517);
      int int1 = 16777215;
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools((byte)5, (-517), 16777215);
      typedProperties_TypedPropertiesDecoderPools0.getPropertyKeysPool();
      typedProperties0.isEmpty();
      typedProperties0.size();
      typedProperties0.getPropertyNames();
      typedProperties0.removeProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties0.getIntProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.getEncodeSize();
      // Undeclared exception!
      try { 
        typedProperties1.getMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, false);
      CompositeByteBuf compositeByteBuf0 = null;
      try {
        compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, (-3331));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -3331
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool((-5014));
      SimpleString simpleString0 = SimpleString.toSimpleString("^", simpleString_StringSimpleStringPool0);
      simpleString_StringSimpleStringPool0.getOrCreate("^");
      typedProperties0.hasInternalProperties();
      SimpleString.toSimpleString("^");
      FileSystemHandling.shouldAllThrowIOExceptions();
      typedProperties0.putIntProperty(simpleString0, 11);
      typedProperties0.getBooleanProperty((SimpleString) null);
      typedProperties0.getLongProperty(simpleString0);
      assertEquals(16, typedProperties0.getEncodeSize());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(0, 1374);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool(1374);
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = SimpleString.toSimpleString(";\\/Cjw`cP>G@");
      typedProperties0.putShortProperty(simpleString0, (short) (-2409));
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)6;
      try { 
        typedProperties0.getBooleanProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: ;\\/Cjw`cP>G@
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("_AMQ_ROUTE_TO\u001F", simpleString_StringSimpleStringPool0);
      simpleString_StringSimpleStringPool0.getOrCreate("Invalid conversion: ");
      typedProperties0.getSimpleStringProperty(simpleString0);
      typedProperties1.removeProperty((SimpleString) null);
      typedProperties1.getPropertyNames();
      // Undeclared exception!
      try { 
        typedProperties0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.util.internal.logging.Slf4JLoggerFactory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool((-5461));
      SimpleString simpleString1 = SimpleString.toSimpleString("$Qz", simpleString_StringSimpleStringPool0);
      typedProperties0.putShortProperty(simpleString1, (short)1067);
      typedProperties0.getMap();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.putLongProperty(simpleString0, 0L);
      typedProperties1.toString();
      typedProperties0.getIntProperty(simpleString1);
      typedProperties0.hasInternalProperties();
      typedProperties1.toString();
      typedProperties1.putTypedProperties(typedProperties0);
      SimpleString simpleString2 = typedProperties0.getSimpleStringProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties1.getIntProperty(simpleString2);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"io.netty.util.internal.logging.Slf4JLoggerFactory\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TypedProperties typedProperties0 = new TypedProperties();
      char char0 = 'P';
      SimpleString simpleString0 = new SimpleString('P');
      byte[] byteArray0 = new byte[0];
      typedProperties0.putBytesProperty(simpleString0, byteArray0);
      try { 
        typedProperties0.getSimpleStringProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: P
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      String string0 = "dx`[yj)a04i";
      SimpleString simpleString0 = SimpleString.toSimpleString("dx`[yj)a04i");
      String string1 = "_AMQ_ROUTE_TO\u001F";
      SimpleString simpleString1 = new SimpleString("_AMQ_ROUTE_TO\u001F");
      simpleString0.compareTo(simpleString1);
      typedProperties0.putByteProperty(simpleString0, (byte)86);
      typedProperties0.isEmpty();
      try { 
        typedProperties0.getFloatProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: dx`[yj)a04i
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools((-326), (-326));
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      simpleString_StringSimpleStringPool0.getOrCreate("Sab7|bX");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-67);
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-103);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleString simpleString0 = SimpleString.toSimpleString("-D{}: {}", simpleString_StringSimpleStringPool0);
      typedProperties0.getSimpleStringProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int int0 = (-1147);
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools((-862048943), 9, (-1147));
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = typedProperties_TypedPropertiesDecoderPools0.getPropertyValuesPool();
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      ByteBuf byteBuf0 = emptyByteBuf0.copy();
      // Undeclared exception!
      try { 
        typedProperties_StringValue_ByteBufStringValuePool0.canPool(byteBuf0, (-1147));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // length must be a multiple of 2
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-27);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte) (-2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      SimpleString simpleString0 = new SimpleString('I');
      typedProperties1.getBooleanProperty(simpleString0);
      typedProperties0.getPropertyNames();
      // Undeclared exception!
      try { 
        typedProperties1.getByteProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleString simpleString0 = SimpleString.toSimpleString("|z62~:DUE");
      typedProperties0.putBytesProperty(simpleString0, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleString0.concat("d):~P");
      typedProperties0.toString();
      // Undeclared exception!
      try { 
        typedProperties0.getDoubleProperty(simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)45;
      byteArray0[2] = (byte)19;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TypedProperties typedProperties0 = new TypedProperties();
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      UnpooledUnsafeDirectByteBuf unpooledUnsafeDirectByteBuf0 = new UnpooledUnsafeDirectByteBuf(pooledByteBufAllocator0, 77, 2871);
      SimpleString simpleString0 = SimpleString.readSimpleString((ByteBuf) unpooledUnsafeDirectByteBuf0, 0);
      typedProperties0.putShortProperty(simpleString0, (short)963);
      ByteBuf byteBuf0 = unpooledUnsafeDirectByteBuf0.setMedium((byte)45, (byte)45);
      typedProperties0.encode(byteBuf0);
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      typedProperties_TypedPropertiesDecoderPools0.getPropertyKeysPool();
      typedProperties0.getMemoryOffset();
      typedProperties0.getEncodeSize();
      // Undeclared exception!
      try { 
        typedProperties0.getShortProperty((SimpleString) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties();
      typedProperties0.putTypedProperties(typedProperties1);
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools(104, 17, 17);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = typedProperties_TypedPropertiesDecoderPools0.getPropertyValuesPool();
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(pooledByteBufAllocator0, 17, 32);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.markWriterIndex();
      typedProperties_StringValue_ByteBufStringValuePool0.canPool(byteBuf0, 104);
      typedProperties1.getSimpleStringProperty((SimpleString) null);
      // Undeclared exception!
      try { 
        TypedProperties.setObjectProperty((SimpleString) null, typedProperties0, typedProperties0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // class org.apache.activemq.artemis.utils.collections.TypedProperties is not a valid property type
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte)0;
      byteArray0[5] = (byte) (-51);
      SimpleString simpleString0 = new SimpleString(byteArray0);
      SimpleString simpleString1 = SimpleString.toSimpleString("\u00E8");
      typedProperties0.clear();
      typedProperties0.putBooleanProperty(simpleString1, false);
      typedProperties0.putCharProperty(simpleString0, '/');
      typedProperties0.isEmpty();
      TypedProperties.setObjectProperty(simpleString0, "\u00E8", typedProperties0);
      SimpleString simpleString2 = typedProperties0.getSimpleStringProperty(simpleString1);
      TypedProperties.TypedPropertiesDecoderPools typedProperties_TypedPropertiesDecoderPools0 = new TypedProperties.TypedPropertiesDecoderPools();
      typedProperties_TypedPropertiesDecoderPools0.getPropertyValuesPool();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false);
      unpooledByteBufAllocator0.compositeHeapBuffer((int) '/');
      // Undeclared exception!
      try { 
        typedProperties0.getIntProperty(simpleString2);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, false);
      ByteBuf[] byteBufArray0 = new ByteBuf[8];
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 0);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(244);
      compositeByteBuf0.readUnsignedMediumLE();
      compositeByteBuf1.setBoolean(0, false);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeChar(0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(8388608, 8388608);
      TypedProperties.StringValue typedProperties_StringValue0 = TypedProperties.StringValue.readStringValue(compositeByteBuf2, typedProperties_StringValue_ByteBufStringValuePool0);
      SimpleString simpleString0 = typedProperties_StringValue0.val;
      typedProperties_StringValue0.write(compositeByteBuf0);
      SimpleString simpleString1 = new SimpleString("");
      simpleString0.concat(simpleString1);
      typedProperties_StringValue_ByteBufStringValuePool0.isEqual(typedProperties_StringValue0, compositeByteBuf0, 8416832, 8388608);
      SimpleString simpleString2 = typedProperties_StringValue0.val;
      // Undeclared exception!
      try { 
        compositeByteBuf2.addComponent((ByteBuf) compositeByteBuf0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // refCnt: 0
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString('Z');
      SimpleString simpleString1 = new SimpleString("");
      simpleString0.compareTo(simpleString1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      typedProperties0.putShortProperty(simpleString0, (short) (-2011));
      typedProperties0.isEmpty();
      typedProperties0.getPropertyNames();
      typedProperties0.getLongProperty(simpleString0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool();
      ByteBuf[] byteBufArray0 = new ByteBuf[7];
      UnpooledHeapByteBuf unpooledHeapByteBuf0 = null;
      try {
        unpooledHeapByteBuf0 = new UnpooledHeapByteBuf((ByteBufAllocator) null, 1, 32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // alloc
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString('}');
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      TypedProperties.setObjectProperty(simpleString0, simpleString0, typedProperties1);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool();
      typedProperties0.toString();
      // Undeclared exception!
      try { 
        typedProperties1.getLongProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"}\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("_AMQ_ROUTE_TO\u0000");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.putLongProperty(simpleString0, 0L);
      typedProperties0.toString();
      typedProperties0.hasInternalProperties();
      typedProperties1.toString();
      SimpleString simpleString1 = typedProperties0.getSimpleStringProperty(simpleString0);
      simpleString1.codePoints();
      typedProperties1.containsProperty(simpleString0);
      try { 
        typedProperties1.getIntProperty(simpleString1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: _AMQ_ROUTE_TO\u0000
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleString simpleString0 = new SimpleString("available");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)70;
      simpleString0.concat("available");
      byteArray0[1] = (byte)11;
      typedProperties1.putDoubleProperty(simpleString0, 274.3243085279195);
      try { 
        typedProperties1.getByteProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: available
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleString simpleString0 = new SimpleString("aSalKable");
      simpleString0.concat("aSalKable");
      typedProperties0.putDoubleProperty(simpleString0, 274.324);
      try { 
        typedProperties0.getByteProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: aSalKable
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.util.internal.logging.Slf4JLoggerFactory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.putLongProperty(simpleString0, 0L);
      typedProperties1.toString();
      typedProperties0.hasInternalProperties();
      typedProperties1.toString();
      typedProperties1.clear();
      Boolean boolean0 = typedProperties0.getBooleanProperty(simpleString0);
      TypedProperties.setObjectProperty(simpleString0, boolean0, typedProperties1);
      SimpleString simpleString1 = typedProperties0.getSimpleStringProperty(simpleString0);
      int int0 = 1325;
      char[] charArray0 = null;
      int int1 = 1451;
      try { 
        typedProperties1.getLongProperty(simpleString1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: io.netty.util.internal.logging.Slf4JLoggerFactory
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString("io.netty.util.internal.logging.Slf4JLoggerFactory");
      typedProperties0.putSimpleStringProperty(simpleString0, simpleString0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      typedProperties1.toString();
      typedProperties0.hasInternalProperties();
      typedProperties0.putBooleanProperty(simpleString0, true);
      simpleString0.codePoints();
      typedProperties1.getProperty(simpleString0);
      typedProperties1.toString();
      typedProperties0.getBooleanProperty(simpleString0);
      simpleString0.codePoints();
      typedProperties1.containsProperty(simpleString0);
      // Undeclared exception!
      try { 
        typedProperties1.getIntProperty(simpleString0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"io.netty.util.internal.logging.Slf4JLoggerFactory\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      simpleString_StringSimpleStringPool0.getOrCreate((String) null);
      simpleString_StringSimpleStringPool0.getOrCreate((String) null);
      SimpleString simpleString0 = SimpleString.toSimpleString("K\u0005v|;HFo&dv\"=", simpleString_StringSimpleStringPool0);
      typedProperties0.containsProperty(simpleString0);
      typedProperties0.hasInternalProperties();
      typedProperties0.getMemoryOffset();
      Integer integer0 = new Integer(577);
      TypedProperties.setObjectProperty(simpleString0, integer0, typedProperties0);
      typedProperties0.size();
      // Undeclared exception!
      try { 
        typedProperties0.getCharProperty((SimpleString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Invalid conversion: null
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-24);
      byteArray0[4] = (byte)122;
      byteArray0[5] = (byte)26;
      byteArray0[6] = (byte)62;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TypedProperties typedProperties0 = new TypedProperties();
      typedProperties0.clear();
      TypedProperties typedProperties1 = new TypedProperties();
      SimpleString simpleString0 = new SimpleString('P');
      byte[] byteArray1 = new byte[0];
      typedProperties1.putBytesProperty(simpleString0, byteArray1);
      typedProperties0.putTypedProperties(typedProperties1);
      SimpleString simpleString1 = new SimpleString('P');
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Long long0 = new Long(482L);
      TypedProperties typedProperties2 = new TypedProperties(typedProperties1);
      TypedProperties.setObjectProperty(simpleString0, long0, typedProperties2);
      typedProperties0.getPropertyNames();
      typedProperties0.getEncodeSize();
      assertEquals(16, typedProperties0.getEncodeSize());
      
      typedProperties2.removeProperty(simpleString0);
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      typedProperties2.putCharProperty(simpleString0, 'S');
      Character character0 = typedProperties2.getCharProperty(simpleString0);
      assertEquals('S', (char)character0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      byte[] byteArray0 = new byte[2];
      typedProperties0.getPropertyNames();
      byte byte0 = (byte)1;
      byteArray0[0] = (byte)1;
      byte byte1 = (byte) (-123);
      SimpleString simpleString0 = new SimpleString(byteArray0);
      simpleString0.chars();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      typedProperties0.toString();
      typedProperties0.putBytesProperty(simpleString0, byteArray0);
      typedProperties0.toString();
      try { 
        typedProperties0.getCharProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: \u0001
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(16384, 16384);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("4$~|7mH?-1B=6aHd>");
      typedProperties0.putIntProperty(simpleString0, (-1261));
      simpleString_StringSimpleStringPool0.getOrCreate("4$~|7mH?-1B=6aHd>");
      typedProperties1.getSimpleStringProperty(simpleString0);
      char[] charArray0 = new char[19];
      charArray0[4] = 'D';
      typedProperties1.putBooleanProperty(simpleString0, false);
      typedProperties0.getMap();
      typedProperties1.putNullValue(simpleString0);
      typedProperties1.isEmpty();
      typedProperties1.containsProperty(simpleString0);
      PooledByteBufAllocator pooledByteBufAllocator0 = (PooledByteBufAllocator)ByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(pooledByteBufAllocator0, 24, 1845);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.touch();
      typedProperties0.encode(byteBuf0);
      try { 
        typedProperties0.getDoubleProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: 4$~|7mH?-1B=6aHd>
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      TypedProperties typedProperties1 = new TypedProperties(typedProperties0);
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools(16384, 16384);
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("4$~|7mH?-1B=6aHd>", simpleString_StringSimpleStringPool0);
      typedProperties1.putByteProperty(simpleString0, (byte)4);
      typedProperties0.putIntProperty(simpleString0, (-1261));
      typedProperties1.getSimpleStringProperty(simpleString0);
      char[] charArray0 = new char[19];
      charArray0[4] = 'D';
      typedProperties1.putBooleanProperty(simpleString0, false);
      typedProperties0.getMap();
      typedProperties1.putNullValue(simpleString0);
      typedProperties1.isEmpty();
      try { 
        typedProperties0.getDoubleProperty(simpleString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: 4$~|7mH?-1B=6aHd>
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyValuesPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("org.apache.activemq.artemis.,tils.collections.TypedProperties$TypedPropertiesDecyderPools", simpleString_StringSimpleStringPool0);
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString1 = simpleString_StringSimpleStringPool0.getOrCreate("org.apache.activemq.artemis.,tils.collections.TypedProperties$TypedPropertiesDecyderPools");
      SimpleString simpleString2 = new SimpleString("org.apache.activemq.artemis.,tils.collections.TypedProperties$TypedPropertiesDecyderPools");
      SimpleString simpleString3 = simpleString_StringSimpleStringPool0.getOrCreate("org.apache.activemq.artemis.,tils.collections.TypedProperties$TypedPropertiesDecyderPools");
      TypedProperties.setObjectProperty(simpleString0, simpleString0, typedProperties0);
      Integer integer0 = new Integer(32);
      typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      typedProperties0.putFloatProperty(simpleString0, 1.0F);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool();
      simpleString1.chars();
      typedProperties0.getPropertyNames();
      TreeSet<SimpleString> treeSet0 = new TreeSet<SimpleString>();
      typedProperties0.getSimpleStringProperty(simpleString3);
      Float float0 = new Float((float) 32);
      TypedProperties.setObjectProperty(simpleString3, float0, typedProperties0);
      typedProperties0.getFloatProperty(simpleString1);
      try { 
        typedProperties0.getShortProperty(simpleString1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: org.apache.activemq.artemis.,tils.collections.TypedProperties$TypedPropertiesDecyderPools
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      TypedProperties.TypedPropertiesStringSimpleStringPools typedProperties_TypedPropertiesStringSimpleStringPools0 = new TypedProperties.TypedPropertiesStringSimpleStringPools();
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyValuesPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools", simpleString_StringSimpleStringPool0);
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString1 = simpleString_StringSimpleStringPool0.getOrCreate("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      simpleString0.concat("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      SimpleString simpleString2 = simpleString_StringSimpleStringPool0.getOrCreate("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      TypedProperties.setObjectProperty(simpleString0, simpleString0, typedProperties0);
      Integer integer0 = new Integer(32);
      typedProperties_TypedPropertiesStringSimpleStringPools0.getPropertyKeysPool();
      typedProperties0.putFloatProperty(simpleString0, 1.0F);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(32, 32);
      typedProperties0.getSimpleStringProperty(simpleString2);
      simpleString1.chars();
      typedProperties0.getPropertyNames();
      TreeSet<SimpleString> treeSet0 = new TreeSet<SimpleString>();
      simpleString1.concat("org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools");
      Float float0 = new Float((-631.507973));
      TypedProperties.setObjectProperty(simpleString2, float0, typedProperties0);
      typedProperties0.getFloatProperty(simpleString1);
      typedProperties0.putTypedProperties(typedProperties0);
      try { 
        typedProperties0.getShortProperty(simpleString1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid conversion: org.apache.activemq.artemis.utils.collections.TypedProperties$TypedPropertiesDecoderPools
         //
         verifyException("org.apache.activemq.artemis.utils.collections.TypedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      TypedProperties typedProperties0 = new TypedProperties();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, false);
      ByteBuf[] byteBufArray0 = new ByteBuf[8];
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 0);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(244);
      compositeByteBuf0.readUnsignedMediumLE();
      compositeByteBuf1.setBoolean(0, false);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeChar(0);
      TypedProperties.StringValue.ByteBufStringValuePool typedProperties_StringValue_ByteBufStringValuePool0 = new TypedProperties.StringValue.ByteBufStringValuePool(8388608, 8388608);
      TypedProperties.StringValue typedProperties_StringValue0 = TypedProperties.StringValue.readStringValue(compositeByteBuf2, typedProperties_StringValue_ByteBufStringValuePool0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      SimpleString simpleString0 = typedProperties_StringValue0.val;
      typedProperties_StringValue_ByteBufStringValuePool0.isEqual(typedProperties_StringValue0, compositeByteBuf0, 8416832, 8388608);
      Short short0 = new Short((short)10);
      TypedProperties.setObjectProperty(simpleString0, (Object) null, typedProperties0);
      TypedProperties.setObjectProperty(simpleString0, short0, typedProperties0);
      typedProperties0.decode((ByteBuf) compositeByteBuf2);
      // Undeclared exception!
      try { 
        typedProperties0.getIntProperty(simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TypedProperties typedProperties0 = new TypedProperties();
      SimpleString simpleString0 = SimpleString.toSimpleString("_0KZ)MC:E");
      typedProperties0.getBytesProperty(simpleString0);
      TypedProperties typedProperties1 = new TypedProperties();
      SimpleString simpleString1 = new SimpleString('P');
      byte[] byteArray0 = new byte[0];
      typedProperties1.putBytesProperty(simpleString1, byteArray0);
      typedProperties0.putTypedProperties(typedProperties1);
      typedProperties1.removeProperty(simpleString1);
      typedProperties1.putDoubleProperty(simpleString1, 1947);
      typedProperties0.getBytesProperty(simpleString1);
      SimpleString simpleString2 = typedProperties1.getSimpleStringProperty(simpleString1);
      simpleString2.concat(simpleString1);
      typedProperties0.containsProperty(simpleString2);
      typedProperties0.getPropertyNames();
      typedProperties0.getEncodeSize();
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      pooledByteBufAllocator0.compositeDirectBuffer();
      typedProperties1.getMemoryOffset();
      // Undeclared exception!
      try { 
        emptyByteBuf0.writeFloat(16);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.netty.buffer.EmptyByteBuf", e);
      }
  }
}
