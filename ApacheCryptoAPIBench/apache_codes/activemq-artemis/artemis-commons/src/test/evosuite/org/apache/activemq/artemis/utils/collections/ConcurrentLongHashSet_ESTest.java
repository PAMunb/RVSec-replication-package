/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 20 11:25:10 GMT 2022
 */

package org.apache.activemq.artemis.utils.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConcurrentLongHashSet_ESTest extends ConcurrentLongHashSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConcurrentLongHashSet.alignToPowerOfTwo((-2500));
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(1444, 3031);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.add(1537L);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.add(3031);
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(2556, 2556);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.size();
      ConcurrentLongHashSet.alignToPowerOfTwo(2556);
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.remove(4096);
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.items();
      // Undeclared exception!
      concurrentLongHashSet0.items();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(0);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.remove(0);
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.add(0);
      concurrentLongHashSet0.add(0L);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(0);
      concurrentLongHashSet0.add(0);
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.forEach((ConcurrentLongHashSet.ConsumerLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet$Section", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(0);
      concurrentLongHashSet0.remove(0);
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.add(0L);
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.forEach((ConcurrentLongHashSet.ConsumerLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet$Section", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.contains(0L);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.add(1);
      concurrentLongHashSet0.remove(1);
      concurrentLongHashSet0.remove(0L);
      concurrentLongHashSet0.clear();
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.add((-844L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.contains(0L);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(0);
      concurrentLongHashSet0.add(0);
      concurrentLongHashSet0.add(0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.contains(1155);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.capacity();
      concurrentLongHashSet0.remove(512L);
      ConcurrentLongHashSet.signSafeMod(512L, 1155);
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      concurrentLongHashSet0.add(0);
      ConcurrentLongHashSet concurrentLongHashSet1 = new ConcurrentLongHashSet(0);
      concurrentLongHashSet1.capacity();
      ConcurrentLongHashSet.alignToPowerOfTwo(1155);
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet1.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet1.isEmpty();
      concurrentLongHashSet1.isEmpty();
      ConcurrentLongHashSet.hash(512L);
      concurrentLongHashSet1.isEmpty();
      concurrentLongHashSet0.size();
      concurrentLongHashSet1.getUsedBucketCount();
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      ConcurrentLongHashSet.signSafeMod((-1L), (-954));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(16);
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.remove(0L);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.contains(0L);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.add(0);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.capacity();
      concurrentLongHashSet0.remove(0);
      ConcurrentLongHashSet.signSafeMod(2522L, 0);
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      concurrentLongHashSet0.add(1L);
      concurrentLongHashSet0.capacity();
      ConcurrentLongHashSet.alignToPowerOfTwo(0);
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.isEmpty();
      ConcurrentLongHashSet.hash(1190L);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.getUsedBucketCount();
      // Undeclared exception!
      try { 
        ConcurrentLongHashSet.checkBiggerEqualZero((-856L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(68, 68);
      concurrentLongHashSet0.add(68);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = (-1108);
      ConcurrentLongHashSet concurrentLongHashSet0 = null;
      try {
        concurrentLongHashSet0 = new ConcurrentLongHashSet((-1108), (-1108));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.contains((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(10);
      concurrentLongHashSet0.add(10);
      concurrentLongHashSet0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(0);
      concurrentLongHashSet0.add(0);
      concurrentLongHashSet0.items();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.capacity();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConcurrentLongHashSet.alignToPowerOfTwo((-453));
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-349));
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.capacity();
      concurrentLongHashSet0.remove(0);
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.contains(Integer.MAX_VALUE);
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.isEmpty();
      ConcurrentLongHashSet.hash((-349));
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.add((-349));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-356));
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.remove((-356));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ConcurrentLongHashSet.hash(1377L);
      int int0 = (-1);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-1));
      concurrentLongHashSet0.isEmpty();
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.remove((-4132994306676758123L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.getUsedBucketCount();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ConcurrentLongHashSet.hash(0L);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.clear();
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      concurrentLongHashSet0.getUsedBucketCount();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.size();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(3788);
      concurrentLongHashSet0.contains(3788);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.add(5637L);
      concurrentLongHashSet0.isEmpty();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet0.clear();
      ConcurrentLongHashSet.signSafeMod(2767L, 0);
      ConcurrentLongHashSet.alignToPowerOfTwo((-1));
      concurrentLongHashSet0.size();
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.add((-2L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.items();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.add(2105L);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 0;
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(0);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.remove(0);
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.add((-221L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      // Undeclared exception!
      try { 
        ConcurrentLongHashSet.checkBiggerEqualZero((-2528L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 2699;
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(2699);
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.forEach((ConcurrentLongHashSet.ConsumerLong) null);
      ConcurrentLongHashSet.signSafeMod(0, 0);
      concurrentLongHashSet0.contains(0);
      concurrentLongHashSet0.items();
      ConcurrentLongHashSet.signSafeMod((-190L), 0);
      concurrentLongHashSet0.remove(0L);
      concurrentLongHashSet0.remove(1155L);
      // Undeclared exception!
      try { 
        ConcurrentLongHashSet.checkBiggerEqualZero((-190L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-622));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.add((-448L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = (-1);
      int int1 = 560;
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-1), 560);
      // Undeclared exception!
      try { 
        ConcurrentLongHashSet.checkBiggerEqualZero((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = null;
      try {
        concurrentLongHashSet0 = new ConcurrentLongHashSet(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = 0;
      ConcurrentLongHashSet concurrentLongHashSet0 = null;
      try {
        concurrentLongHashSet0 = new ConcurrentLongHashSet(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
