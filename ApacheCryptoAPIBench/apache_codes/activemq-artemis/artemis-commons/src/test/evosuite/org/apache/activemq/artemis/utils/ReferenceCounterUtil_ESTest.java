/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:23:37 GMT 2022
 */

package org.apache.activemq.artemis.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.util.concurrent.DefaultThreadFactory;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.Executor;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.apache.activemq.artemis.utils.ReferenceCounterUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReferenceCounterUtil_ESTest extends ReferenceCounterUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil();
      int int0 = referenceCounterUtil0.decrement();
      assertEquals((-1), int0);
      
      referenceCounterUtil0.increment();
      referenceCounterUtil0.increment();
      referenceCounterUtil0.getTask();
      referenceCounterUtil0.getTask();
      int int1 = referenceCounterUtil0.getCount();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ForkJoinPool.ForkJoinWorkerThreadFactory forkJoinPool_ForkJoinWorkerThreadFactory0 = ForkJoinPool.defaultForkJoinWorkerThreadFactory;
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(32767, forkJoinPool_ForkJoinWorkerThreadFactory0, thread_UncaughtExceptionHandler0, false);
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(forkJoinPool0);
      // Undeclared exception!
      try { 
        referenceCounterUtil0.check();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ForkJoinPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil();
      referenceCounterUtil0.increment();
      referenceCounterUtil0.increment();
      referenceCounterUtil0.decrement();
      // Undeclared exception!
      try { 
        referenceCounterUtil0.decrement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ReferenceCounterUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Thread thread0 = MockThread.currentThread();
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(thread0);
      referenceCounterUtil0.getTask();
      assertEquals(0, referenceCounterUtil0.getCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil();
      assertEquals(0, referenceCounterUtil0.getCount());
      
      int int0 = referenceCounterUtil0.decrement();
      referenceCounterUtil0.increment();
      referenceCounterUtil0.increment();
      referenceCounterUtil0.increment();
      referenceCounterUtil0.check();
      referenceCounterUtil0.decrement();
      referenceCounterUtil0.check();
      MockThread mockThread0 = new MockThread((ThreadGroup) null, (Runnable) null, "9kTr//", (-1582L));
      referenceCounterUtil0.setTask(mockThread0);
      referenceCounterUtil0.decrement();
      referenceCounterUtil0.getTask();
      int int1 = referenceCounterUtil0.getCount();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread("UHQ2+2?IdLa");
      MockThread mockThread1 = new MockThread(threadGroup0, mockThread0, "N|xsW2RB%,2/#PVm", 1308L);
      ForkJoinPool forkJoinPool0 = new ForkJoinPool();
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(mockThread1, forkJoinPool0);
      assertEquals(0, referenceCounterUtil0.getCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "");
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = mockThread0.getUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      referenceCounterUtil0.setTask(mockThread0);
      int int0 = referenceCounterUtil0.getCount();
      assertEquals(0, int0);
      
      referenceCounterUtil0.check();
      referenceCounterUtil0.getTask();
      referenceCounterUtil0.setTask(mockThread0);
      referenceCounterUtil0.check();
      assertEquals(0, referenceCounterUtil0.getCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "R7riEQu%_cX{VpeVKi");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setDefaultAssertionStatus(false);
      mockThread0.setContextClassLoader(classLoader0);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(10);
      scheduledThreadPoolExecutor0.setRemoveOnCancelPolicy(false);
      DefaultThreadFactory defaultThreadFactory0 = new DefaultThreadFactory("", false, 10);
      scheduledThreadPoolExecutor0.setThreadFactory(defaultThreadFactory0);
      MockThread.interrupted();
      MockThread.getAllStackTraces();
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(mockThread0, scheduledThreadPoolExecutor0);
      referenceCounterUtil0.check();
      Thread[] threadArray0 = new Thread[7];
      mockThread0.getContextClassLoader();
      threadArray0[0] = (Thread) mockThread0;
      threadArray0[1] = (Thread) mockThread0;
      threadArray0[2] = (Thread) mockThread0;
      threadArray0[3] = (Thread) mockThread0;
      threadArray0[4] = (Thread) mockThread0;
      threadArray0[5] = (Thread) mockThread0;
      MockThread mockThread1 = new MockThread(mockThread0, "R7riEQu%_cX{VpeVKi");
      threadArray0[6] = (Thread) mockThread1;
      MockThread.enumerate(threadArray0);
      mockThread0.getContextClassLoader();
      referenceCounterUtil0.decrement();
      referenceCounterUtil0.check();
      referenceCounterUtil0.decrement();
      referenceCounterUtil0.check();
      referenceCounterUtil0.getCount();
      referenceCounterUtil0.setTask(threadArray0[5]);
      referenceCounterUtil0.getTask();
      int int0 = referenceCounterUtil0.increment();
      assertEquals((-1), referenceCounterUtil0.getCount());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForkJoinPool forkJoinPool0 = new ForkJoinPool();
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(forkJoinPool0);
      referenceCounterUtil0.increment();
      // Undeclared exception!
      try { 
        referenceCounterUtil0.decrement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ForkJoinPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 1;
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      BlockingQueue<Runnable> blockingQueue0 = null;
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      DefaultThreadFactory defaultThreadFactory0 = null;
      try {
        defaultThreadFactory0 = new DefaultThreadFactory((String) null, true, 1, threadGroup0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // poolName
         //
         verifyException("io.netty.util.concurrent.DefaultThreadFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil((Executor) null);
      referenceCounterUtil0.increment();
      referenceCounterUtil0.increment();
      referenceCounterUtil0.increment();
      MockThread mockThread0 = new MockThread(", deadline: ");
      referenceCounterUtil0.setTask(mockThread0);
      referenceCounterUtil0.setTask(mockThread0);
      referenceCounterUtil0.decrement();
      referenceCounterUtil0.setTask(mockThread0);
      referenceCounterUtil0.setTask(mockThread0);
      assertEquals(2, referenceCounterUtil0.getCount());
  }
}
