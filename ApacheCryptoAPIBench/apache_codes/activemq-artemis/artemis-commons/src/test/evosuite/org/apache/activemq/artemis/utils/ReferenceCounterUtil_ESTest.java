/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:06:15 GMT 2022
 */

package org.apache.activemq.artemis.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.Executor;
import org.apache.activemq.artemis.utils.ReferenceCounterUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReferenceCounterUtil_ESTest extends ReferenceCounterUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      Executor executor0 = mock(Executor.class, new ViolatedAssumptionAnswer());
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(runnable0, executor0);
      referenceCounterUtil0.decrement();
      referenceCounterUtil0.check();
      assertEquals((-1), referenceCounterUtil0.getCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      Executor executor0 = mock(Executor.class, new ViolatedAssumptionAnswer());
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(runnable0, executor0);
      referenceCounterUtil0.decrement();
      referenceCounterUtil0.decrement();
      int int0 = referenceCounterUtil0.increment();
      assertEquals((-1), referenceCounterUtil0.getCount());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Executor executor0 = mock(Executor.class, new ViolatedAssumptionAnswer());
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil((Runnable) null, executor0);
      referenceCounterUtil0.getTask();
      assertEquals(0, referenceCounterUtil0.getCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(runnable0);
      referenceCounterUtil0.increment();
      int int0 = referenceCounterUtil0.getCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      Executor executor0 = mock(Executor.class, new ViolatedAssumptionAnswer());
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(runnable0, executor0);
      referenceCounterUtil0.decrement();
      int int0 = referenceCounterUtil0.getCount();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil((Executor) null);
      referenceCounterUtil0.increment();
      // Undeclared exception!
      try { 
        referenceCounterUtil0.decrement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ReferenceCounterUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(runnable0);
      Runnable runnable1 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      referenceCounterUtil0.setTask(runnable1);
      assertEquals(0, referenceCounterUtil0.getCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(runnable0);
      int int0 = referenceCounterUtil0.getCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(runnable0);
      referenceCounterUtil0.increment();
      referenceCounterUtil0.check();
      assertEquals(1, referenceCounterUtil0.getCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      Executor executor0 = mock(Executor.class, new ViolatedAssumptionAnswer());
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(runnable0, executor0);
      referenceCounterUtil0.check();
      assertEquals(0, referenceCounterUtil0.getCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(runnable0);
      referenceCounterUtil0.increment();
      referenceCounterUtil0.decrement();
      referenceCounterUtil0.decrement();
      int int0 = referenceCounterUtil0.increment();
      assertEquals(0, referenceCounterUtil0.getCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      Executor executor0 = mock(Executor.class, new ViolatedAssumptionAnswer());
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(runnable0, executor0);
      referenceCounterUtil0.increment();
      referenceCounterUtil0.increment();
      int int0 = referenceCounterUtil0.decrement();
      assertEquals(1, referenceCounterUtil0.getCount());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(runnable0).toString();
      Executor executor0 = mock(Executor.class, new ViolatedAssumptionAnswer());
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil(runnable0, executor0);
      referenceCounterUtil0.getTask();
      assertEquals(0, referenceCounterUtil0.getCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ReferenceCounterUtil referenceCounterUtil0 = new ReferenceCounterUtil();
      // Undeclared exception!
      try { 
        referenceCounterUtil0.check();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ReferenceCounterUtil", e);
      }
  }
}
