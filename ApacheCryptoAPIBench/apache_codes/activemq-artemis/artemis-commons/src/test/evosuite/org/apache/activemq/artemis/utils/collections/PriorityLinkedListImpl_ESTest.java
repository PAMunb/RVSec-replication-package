/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:20:12 GMT 2022
 */

package org.apache.activemq.artemis.utils.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.activemq.artemis.utils.collections.LinkedListImpl;
import org.apache.activemq.artemis.utils.collections.PriorityLinkedListImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PriorityLinkedListImpl_ESTest extends PriorityLinkedListImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(1428);
      priorityLinkedListImpl0.addHead(priorityLinkedListImpl0, 0);
      Object object0 = new Object();
      priorityLinkedListImpl0.addHead(object0, 0);
      PriorityLinkedListImpl<Object> priorityLinkedListImpl1 = (PriorityLinkedListImpl<Object>)priorityLinkedListImpl0.poll();
      // Undeclared exception!
      try { 
        priorityLinkedListImpl1.iterator();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(1428);
      int int0 = 0;
      priorityLinkedListImpl0.addHead(priorityLinkedListImpl0, 0);
      Object object0 = new Object();
      priorityLinkedListImpl0.addHead(object0, 0);
      PriorityLinkedListImpl<Object> priorityLinkedListImpl1 = (PriorityLinkedListImpl<Object>)priorityLinkedListImpl0.poll();
      // Undeclared exception!
      try { 
        priorityLinkedListImpl1.poll();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(1428);
      int int0 = 0;
      priorityLinkedListImpl0.addHead(priorityLinkedListImpl0, 0);
      Object object0 = new Object();
      priorityLinkedListImpl0.addHead(object0, 0);
      PriorityLinkedListImpl<Object> priorityLinkedListImpl1 = (PriorityLinkedListImpl<Object>)priorityLinkedListImpl0.poll();
      // Undeclared exception!
      try { 
        priorityLinkedListImpl1.clear();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(1428);
      int int0 = 0;
      priorityLinkedListImpl0.addHead(priorityLinkedListImpl0, 0);
      Object object0 = new Object();
      priorityLinkedListImpl0.addHead(object0, 0);
      PriorityLinkedListImpl<Object> priorityLinkedListImpl1 = (PriorityLinkedListImpl<Object>)priorityLinkedListImpl0.poll();
      // Undeclared exception!
      try { 
        priorityLinkedListImpl1.addHead(priorityLinkedListImpl0, 649);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(1428);
      int int0 = 0;
      priorityLinkedListImpl0.addHead(priorityLinkedListImpl0, 0);
      Object object0 = new Object();
      priorityLinkedListImpl0.addHead(object0, 0);
      PriorityLinkedListImpl<Object> priorityLinkedListImpl1 = (PriorityLinkedListImpl<Object>)priorityLinkedListImpl0.poll();
      // Undeclared exception!
      try { 
        priorityLinkedListImpl1.addTail(object0, 1428);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(1428);
      int int0 = 0;
      priorityLinkedListImpl0.addHead(priorityLinkedListImpl0, 0);
      Object object0 = priorityLinkedListImpl0.poll();
      priorityLinkedListImpl0.addHead(object0, 0);
      priorityLinkedListImpl0.isEmpty();
      PriorityLinkedListImpl<Integer> priorityLinkedListImpl1 = new PriorityLinkedListImpl<Integer>(0);
      priorityLinkedListImpl1.isEmpty();
      PriorityLinkedListImpl<LinkedListImpl<Object>> priorityLinkedListImpl2 = new PriorityLinkedListImpl<LinkedListImpl<Object>>(4365);
      LinkedListImpl<Object> linkedListImpl0 = null;
      // Undeclared exception!
      try { 
        priorityLinkedListImpl2.addTail((LinkedListImpl<Object>) null, 1385);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Only HEAD nodes are allowed to hold null values
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = (-767);
      PriorityLinkedListImpl<Integer> priorityLinkedListImpl0 = null;
      try {
        priorityLinkedListImpl0 = new PriorityLinkedListImpl<Integer>((-767));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PriorityLinkedListImpl<Integer> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Integer>(4837);
      LinkedListImpl[] linkedListImplArray0 = (LinkedListImpl[]) Array.newInstance(LinkedListImpl.class, 2);
      LinkedListImpl<Integer> linkedListImpl0 = new LinkedListImpl<Integer>();
      linkedListImplArray0[0] = linkedListImpl0;
      LinkedListImpl<Integer> linkedListImpl1 = new LinkedListImpl<Integer>();
      linkedListImplArray0[1] = linkedListImpl1;
      priorityLinkedListImpl0.levels = linkedListImplArray0;
      Integer integer0 = new Integer(4837);
      // Undeclared exception!
      try { 
        priorityLinkedListImpl0.addHead(integer0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.activemq.artemis.utils.collections.PriorityLinkedListImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 1;
      PriorityLinkedListImpl<LinkedListImpl<String>> priorityLinkedListImpl0 = new PriorityLinkedListImpl<LinkedListImpl<String>>(1);
      priorityLinkedListImpl0.iterator();
      priorityLinkedListImpl0.size();
      PriorityLinkedListImpl<Object> priorityLinkedListImpl1 = new PriorityLinkedListImpl<Object>(0);
      priorityLinkedListImpl1.clear();
      // Undeclared exception!
      try { 
        priorityLinkedListImpl0.addHead((LinkedListImpl<String>) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Only HEAD nodes are allowed to hold null values
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 0;
      PriorityLinkedListImpl<String> priorityLinkedListImpl0 = new PriorityLinkedListImpl<String>(0);
      priorityLinkedListImpl0.iterator();
      priorityLinkedListImpl0.levels = null;
      // Undeclared exception!
      try { 
        priorityLinkedListImpl0.iterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.PriorityLinkedListImpl$PriorityLinkedListIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PriorityLinkedListImpl<LinkedListImpl<String>> priorityLinkedListImpl0 = new PriorityLinkedListImpl<LinkedListImpl<String>>(2252);
      priorityLinkedListImpl0.poll();
      priorityLinkedListImpl0.poll();
      priorityLinkedListImpl0.poll();
      PriorityLinkedListImpl<Object> priorityLinkedListImpl1 = new PriorityLinkedListImpl<Object>(2252);
      priorityLinkedListImpl1.size();
      priorityLinkedListImpl1.poll();
      PriorityLinkedListImpl<String> priorityLinkedListImpl2 = new PriorityLinkedListImpl<String>(529);
      priorityLinkedListImpl2.clear();
      priorityLinkedListImpl2.poll();
      priorityLinkedListImpl2.isEmpty();
      PriorityLinkedListImpl<LinkedListImpl<Object>> priorityLinkedListImpl3 = new PriorityLinkedListImpl<LinkedListImpl<Object>>(0);
      LinkedListImpl[] linkedListImplArray0 = (LinkedListImpl[]) Array.newInstance(LinkedListImpl.class, 6);
      LinkedListImpl<LinkedListImpl<Object>> linkedListImpl0 = new LinkedListImpl<LinkedListImpl<Object>>();
      linkedListImplArray0[0] = linkedListImpl0;
      LinkedListImpl<LinkedListImpl<Object>> linkedListImpl1 = new LinkedListImpl<LinkedListImpl<Object>>();
      linkedListImplArray0[1] = linkedListImpl1;
      LinkedListImpl<LinkedListImpl<Object>> linkedListImpl2 = new LinkedListImpl<LinkedListImpl<Object>>();
      linkedListImplArray0[2] = linkedListImpl2;
      LinkedListImpl<LinkedListImpl<Object>> linkedListImpl3 = new LinkedListImpl<LinkedListImpl<Object>>();
      LinkedListImpl<LinkedListImpl<Object>> linkedListImpl4 = new LinkedListImpl<LinkedListImpl<Object>>();
      linkedListImplArray0[4] = linkedListImpl4;
      LinkedListImpl<LinkedListImpl<Object>> linkedListImpl5 = new LinkedListImpl<LinkedListImpl<Object>>();
      linkedListImplArray0[5] = linkedListImpl5;
      priorityLinkedListImpl3.levels = linkedListImplArray0;
      priorityLinkedListImpl3.size();
      // Undeclared exception!
      try { 
        priorityLinkedListImpl3.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.PriorityLinkedListImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 4830;
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(4830);
      Integer integer0 = new Integer(4830);
      priorityLinkedListImpl0.addHead(integer0, 4814);
      priorityLinkedListImpl0.iterator();
      Object object0 = priorityLinkedListImpl0.poll();
      priorityLinkedListImpl0.addHead(object0, 2357);
      priorityLinkedListImpl0.iterator();
      priorityLinkedListImpl0.size();
      PriorityLinkedListImpl<String> priorityLinkedListImpl1 = new PriorityLinkedListImpl<String>(5518);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(1428);
      int int0 = 0;
      priorityLinkedListImpl0.addHead(priorityLinkedListImpl0, 0);
      priorityLinkedListImpl0.addTail("9&{I=+}?0HS3uX<|.", 1130);
      Object object0 = priorityLinkedListImpl0.poll();
      priorityLinkedListImpl0.addHead(object0, 0);
      priorityLinkedListImpl0.isEmpty();
      PriorityLinkedListImpl<Integer> priorityLinkedListImpl1 = new PriorityLinkedListImpl<Integer>(0);
      priorityLinkedListImpl1.isEmpty();
      PriorityLinkedListImpl<LinkedListImpl<Object>> priorityLinkedListImpl2 = new PriorityLinkedListImpl<LinkedListImpl<Object>>(4365);
      LinkedListImpl<Object> linkedListImpl0 = new LinkedListImpl<Object>();
      // Undeclared exception!
      try { 
        priorityLinkedListImpl2.addTail(linkedListImpl0, Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147483647
         //
         verifyException("org.apache.activemq.artemis.utils.collections.PriorityLinkedListImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PriorityLinkedListImpl<LinkedListImpl<String>> priorityLinkedListImpl0 = new PriorityLinkedListImpl<LinkedListImpl<String>>(2);
      LinkedListImpl<String> linkedListImpl0 = new LinkedListImpl<String>();
      int int0 = 0;
      priorityLinkedListImpl0.addTail(linkedListImpl0, 0);
      PriorityLinkedListImpl<Integer> priorityLinkedListImpl1 = new PriorityLinkedListImpl<Integer>(2);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        priorityLinkedListImpl1.addTail(integer0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.activemq.artemis.utils.collections.PriorityLinkedListImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(2522);
      Integer integer0 = new Integer((-749));
      int int0 = 668;
      priorityLinkedListImpl0.addHead(integer0, 668);
      LinkedListImpl[] linkedListImplArray0 = (LinkedListImpl[]) Array.newInstance(LinkedListImpl.class, 9);
      LinkedListImpl<Object> linkedListImpl0 = new LinkedListImpl<Object>();
      linkedListImplArray0[0] = linkedListImpl0;
      LinkedListImpl<Object> linkedListImpl1 = new LinkedListImpl<Object>();
      linkedListImplArray0[1] = linkedListImpl1;
      LinkedListImpl<Object> linkedListImpl2 = new LinkedListImpl<Object>();
      linkedListImplArray0[2] = linkedListImpl2;
      LinkedListImpl<Object> linkedListImpl3 = new LinkedListImpl<Object>();
      linkedListImplArray0[3] = linkedListImpl3;
      LinkedListImpl<Object> linkedListImpl4 = new LinkedListImpl<Object>();
      linkedListImplArray0[4] = linkedListImpl4;
      LinkedListImpl<Object> linkedListImpl5 = new LinkedListImpl<Object>();
      linkedListImplArray0[5] = linkedListImpl5;
      LinkedListImpl<Object> linkedListImpl6 = new LinkedListImpl<Object>();
      linkedListImplArray0[6] = linkedListImpl6;
      LinkedListImpl<Object> linkedListImpl7 = new LinkedListImpl<Object>();
      linkedListImplArray0[7] = linkedListImpl7;
      LinkedListImpl<Object> linkedListImpl8 = new LinkedListImpl<Object>();
      linkedListImplArray0[8] = linkedListImpl8;
      priorityLinkedListImpl0.levels = linkedListImplArray0;
      // Undeclared exception!
      try { 
        priorityLinkedListImpl0.poll();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 668
         //
         verifyException("org.apache.activemq.artemis.utils.collections.PriorityLinkedListImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(1428);
      int int0 = 0;
      priorityLinkedListImpl0.addHead(priorityLinkedListImpl0, 0);
      Object object0 = new Object();
      priorityLinkedListImpl0.addHead(object0, 0);
      Object object1 = priorityLinkedListImpl0.poll();
      priorityLinkedListImpl0.addHead(object1, 0);
      priorityLinkedListImpl0.isEmpty();
      PriorityLinkedListImpl<Integer> priorityLinkedListImpl1 = new PriorityLinkedListImpl<Integer>(0);
      priorityLinkedListImpl1.isEmpty();
      PriorityLinkedListImpl<LinkedListImpl<Object>> priorityLinkedListImpl2 = new PriorityLinkedListImpl<LinkedListImpl<Object>>(4365);
      LinkedListImpl<Object> linkedListImpl0 = null;
      // Undeclared exception!
      try { 
        priorityLinkedListImpl2.addTail((LinkedListImpl<Object>) null, 1385);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Only HEAD nodes are allowed to hold null values
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(2522);
      Integer integer0 = new Integer((-749));
      priorityLinkedListImpl0.addHead(integer0, 668);
      Integer integer1 = new Integer(668);
      priorityLinkedListImpl0.poll();
      PriorityLinkedListImpl<String> priorityLinkedListImpl1 = new PriorityLinkedListImpl<String>(0);
      priorityLinkedListImpl1.iterator();
      priorityLinkedListImpl1.poll();
      priorityLinkedListImpl0.clear();
      priorityLinkedListImpl0.levels = null;
      priorityLinkedListImpl0.size();
      priorityLinkedListImpl1.size();
      // Undeclared exception!
      try { 
        priorityLinkedListImpl0.poll();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.PriorityLinkedListImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(4370);
      LinkedListImpl<String> linkedListImpl0 = new LinkedListImpl<String>();
      // Undeclared exception!
      try { 
        priorityLinkedListImpl0.addTail(linkedListImpl0, 4370);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4370
         //
         verifyException("org.apache.activemq.artemis.utils.collections.PriorityLinkedListImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(0);
      priorityLinkedListImpl0.size();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(1428);
      int int0 = 0;
      priorityLinkedListImpl0.addHead(priorityLinkedListImpl0, 0);
      Object object0 = priorityLinkedListImpl0.poll();
      priorityLinkedListImpl0.addHead(object0, 0);
      priorityLinkedListImpl0.isEmpty();
      PriorityLinkedListImpl<LinkedListImpl<Object>> priorityLinkedListImpl1 = new PriorityLinkedListImpl<LinkedListImpl<Object>>(4365);
      LinkedListImpl<Object> linkedListImpl0 = null;
      // Undeclared exception!
      try { 
        priorityLinkedListImpl1.addTail((LinkedListImpl<Object>) null, 4365);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4365
         //
         verifyException("org.apache.activemq.artemis.utils.collections.PriorityLinkedListImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PriorityLinkedListImpl<LinkedListImpl<String>> priorityLinkedListImpl0 = new PriorityLinkedListImpl<LinkedListImpl<String>>(2);
      LinkedListImpl<String> linkedListImpl0 = new LinkedListImpl<String>();
      priorityLinkedListImpl0.addTail(linkedListImpl0, 0);
      PriorityLinkedListImpl<String> priorityLinkedListImpl1 = new PriorityLinkedListImpl<String>(0);
      priorityLinkedListImpl1.iterator();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(2522);
      Integer integer0 = new Integer((-749));
      priorityLinkedListImpl0.addHead(integer0, 668);
      priorityLinkedListImpl0.addHead(integer0, 97);
      priorityLinkedListImpl0.poll();
      assertEquals(1, priorityLinkedListImpl0.size());
      
      priorityLinkedListImpl0.poll();
      PriorityLinkedListImpl<String> priorityLinkedListImpl1 = new PriorityLinkedListImpl<String>(0);
      priorityLinkedListImpl1.iterator();
      priorityLinkedListImpl0.clear();
      PriorityLinkedListImpl<Integer> priorityLinkedListImpl2 = new PriorityLinkedListImpl<Integer>(2459);
      boolean boolean0 = priorityLinkedListImpl2.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PriorityLinkedListImpl<Object> priorityLinkedListImpl0 = new PriorityLinkedListImpl<Object>(1428);
      priorityLinkedListImpl0.addHead(priorityLinkedListImpl0, 0);
      Object object0 = new Object();
      priorityLinkedListImpl0.addHead(object0, 0);
      Object object1 = priorityLinkedListImpl0.poll();
      priorityLinkedListImpl0.addHead(object1, 0);
      priorityLinkedListImpl0.isEmpty();
      priorityLinkedListImpl0.size();
      PriorityLinkedListImpl<LinkedListImpl<Integer>> priorityLinkedListImpl1 = null;
      try {
        priorityLinkedListImpl1 = new PriorityLinkedListImpl<LinkedListImpl<Integer>>((-1732));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PriorityLinkedListImpl<String> priorityLinkedListImpl0 = new PriorityLinkedListImpl<String>(0);
      priorityLinkedListImpl0.iterator();
      String string0 = priorityLinkedListImpl0.poll();
      assertNull(string0);
  }
}
