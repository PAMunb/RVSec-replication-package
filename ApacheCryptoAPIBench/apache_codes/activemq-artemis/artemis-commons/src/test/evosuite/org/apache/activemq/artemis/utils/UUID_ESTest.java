/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:17:12 GMT 2022
 */

package org.apache.activemq.artemis.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.activemq.artemis.utils.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UUID_ESTest extends UUID_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = UUID.stringToBytes("#SHi'?");
      UUID uUID0 = new UUID(0, byteArray0);
      byte[] byteArray1 = UUID.stringToBytes("#SHi'?");
      UUID uUID1 = new UUID(1513, byteArray1);
      boolean boolean0 = uUID0.equals(uUID1);
      assertEquals(16, byteArray1.length);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = UUID.stringToBytes("6ba7b810-9dad-11d1-80b4-00c04fd430c8");
      UUID uUID0 = new UUID((-1), byteArray0);
      uUID0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = UUID.stringToBytes("#SHi'?");
      UUID uUID0 = new UUID(0, byteArray0);
      uUID0.hashCode();
      uUID0.hashCode();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      UUID uUID0 = new UUID((-1), byteArray0);
      // Undeclared exception!
      try { 
        uUID0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.activemq.artemis.utils.UUID", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        UUID.stringToBytes("}=aWvYN;cA7olJ4|+\"7");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.StringIndexOutOfBoundsException: String index out of range: 19
         //
         verifyException("org.apache.activemq.artemis.utils.UUID", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      UUID uUID0 = new UUID((-2569), byteArray0);
      // Undeclared exception!
      try { 
        uUID0.hashCode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.activemq.artemis.utils.UUID", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      UUID uUID0 = new UUID((-1), byteArray0);
      // Undeclared exception!
      try { 
        uUID0.equals(uUID0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.activemq.artemis.utils.UUID", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      UUID uUID0 = null;
      try {
        uUID0 = new UUID((-2177), byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.activemq.artemis.utils.UUID", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = UUID.stringToBytes("");
      UUID uUID0 = new UUID(2441, byteArray0);
      uUID0.hashCode();
      uUID0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = UUID.stringToBytes("[~fA2&Zl/z");
      UUID uUID0 = new UUID(46, byteArray0);
      byte[] byteArray1 = UUID.stringToBytes("6ba7b814-9dad-11d1-80b4-00c04fd430c8");
      UUID uUID1 = new UUID((byte)1, byteArray1);
      boolean boolean0 = uUID0.equals(uUID1);
      assertFalse(boolean0);
      assertEquals(16, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = UUID.stringToBytes("[~fA2&Zl/z");
      UUID uUID0 = new UUID(46, byteArray0);
      uUID0.equals("effa1fef-ef00-e000-8000-000000000000");
      assertEquals(16, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = UUID.stringToBytes("[~fA2&Zl/z");
      UUID uUID0 = new UUID(46, byteArray0);
      boolean boolean0 = uUID0.equals(uUID0);
      assertTrue(boolean0);
      assertEquals(16, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = UUID.stringToBytes("[~fA2&Zl/z");
      UUID uUID0 = new UUID(46, byteArray0);
      assertEquals(16, byteArray0.length);
      
      uUID0.toString();
      String string0 = uUID0.toString();
      assertNotNull(string0);
      assertEquals("effa1fef-ef00-e000-8000-000000000000", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = UUID.stringToBytes("[~fA2&Zl/z");
      UUID uUID0 = new UUID(46, byteArray0);
      byte[] byteArray1 = uUID0.asBytes();
      assertEquals(16, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UUID uUID0 = null;
      try {
        uUID0 = new UUID(0, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.UUID", e);
      }
  }
}
