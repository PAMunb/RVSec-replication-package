/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 14 13:42:38 GMT 2022
 */

package org.apache.activemq.artemis.api.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.buffer.ByteBuf;
import io.netty.buffer.ByteBufAllocator;
import io.netty.buffer.CompositeByteBuf;
import io.netty.buffer.EmptyByteBuf;
import io.netty.buffer.PooledByteBufAllocator;
import io.netty.buffer.UnpooledByteBufAllocator;
import io.netty.buffer.UnpooledDirectByteBuf;
import org.apache.activemq.artemis.api.core.SimpleString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleString_ESTest extends SimpleString_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, true, 2352);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(2352);
      compositeByteBuf1.readUnsignedShort();
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool();
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-123);
      compositeByteBuf1.setBytes(0, byteArray0);
      // Undeclared exception!
      SimpleString.readNullableSimpleString((ByteBuf) compositeByteBuf0, simpleString_ByteBufSimpleStringPool0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(unpooledByteBufAllocator0, (byte)1, (byte)90);
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool((byte)0, 2849);
      // Undeclared exception!
      try { 
        simpleString_ByteBufSimpleStringPool0.canPool(unpooledDirectByteBuf0, (byte) (-113));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // length must be a multiple of 2
         //
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("");
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        simpleString0.getChars(32, 581, charArray0, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 581
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("");
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        simpleString0.getChars(32, 0, charArray0, 4749);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -32
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString('9');
      char[] charArray0 = new char[1];
      simpleString0.getChars(0, 0, charArray0, (-1621));
      assertEquals(1, simpleString0.length());
      assertEquals(6, simpleString0.sizeof());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      SimpleString simpleString0 = new SimpleString(byteArray0);
      boolean boolean0 = simpleString0.contains('\\');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)40;
      SimpleString simpleString0 = new SimpleString(byteArray0);
      SimpleString[] simpleStringArray0 = simpleString0.split('\"');
      assertEquals(1, simpleStringArray0.length);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      SimpleString simpleString0 = new SimpleString(byteArray0);
      SimpleString[] simpleStringArray0 = simpleString0.split('&');
      assertEquals(1, simpleStringArray0.length);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-121);
      SimpleString simpleString0 = new SimpleString(byteArray0);
      String string0 = simpleString0.toString();
      assertEquals("\u8700\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.getOrCreate("\"^qQ[.pe7W");
      byte[] byteArray0 = new byte[1];
      SimpleString simpleString1 = new SimpleString(byteArray0);
      boolean boolean0 = simpleString0.startsWith(simpleString1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-113);
      SimpleString simpleString0 = new SimpleString(byteArray0);
      char char0 = simpleString0.charAt((byte)1);
      assertEquals('\u8F00', char0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString('');
      // Undeclared exception!
      try { 
        simpleString0.charAt(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool(0, 0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      boolean boolean0 = simpleString_ByteBufSimpleStringPool0.canPool(emptyByteBuf0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool();
      // Undeclared exception!
      try { 
        simpleString_ByteBufSimpleStringPool0.canPool((ByteBuf) null, 71);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // length must be a multiple of 2
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("");
      String string0 = simpleString0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString((String) null, (SimpleString.StringSimpleStringPool) null);
      assertNull(simpleString0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("org.apache.activemq.artemis.api.core.SimpleString");
      SimpleString simpleString1 = (SimpleString)simpleString0.subSequence(2, 2);
      assertTrue(simpleString1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL1Pad", simpleString_StringSimpleStringPool0);
      SimpleString simpleString1 = simpleString0.subSeq(3, 25);
      assertEquals(48, simpleString1.sizeof());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(pooledByteBufAllocator0, 55, 497);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.writeZero(497);
      SimpleString simpleString0 = SimpleString.readSimpleString(byteBuf0, (SimpleString.ByteBufSimpleStringPool) null);
      assertEquals(4, simpleString0.sizeof());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(unpooledByteBufAllocator0, 7622, 7622);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.writerIndex(102);
      SimpleString simpleString0 = SimpleString.readSimpleString(byteBuf0);
      assertEquals(4, simpleString0.sizeof());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      SimpleString simpleString0 = new SimpleString(byteArray0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(unpooledByteBufAllocator0, (byte)1, (byte)90);
      SimpleString.writeSimpleString(unpooledDirectByteBuf0, simpleString0);
      SimpleString simpleString1 = SimpleString.readSimpleString((ByteBuf) unpooledDirectByteBuf0);
      assertEquals(0, unpooledDirectByteBuf0.readableBytes());
      assertTrue(simpleString1.equals((Object)simpleString0));
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool(0);
      SimpleString simpleString0 = SimpleString.toSimpleString("org.apache.activemq.artemis.api.core.SimpleString", simpleString_StringSimpleStringPool0);
      int int0 = simpleString0.length();
      assertEquals(49, int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("", simpleString_StringSimpleStringPool0);
      byte[] byteArray0 = simpleString0.getData();
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("");
      SimpleString simpleString1 = simpleString0.concat(simpleString0);
      assertTrue(simpleString1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("d%:=5F(l pQ");
      SimpleString simpleString1 = simpleString0.concat(simpleString0);
      assertEquals(22, simpleString1.length());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString("");
      SimpleString simpleString1 = simpleString0.concat("");
      assertNotSame(simpleString1, simpleString0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString('9');
      SimpleString simpleString1 = SimpleString.toSimpleString("");
      int int0 = simpleString0.compareTo(simpleString1);
      assertEquals(1, int0);
      assertEquals(6, simpleString0.sizeof());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.getOrCreate("length must be a multiple of 2");
      char char0 = simpleString0.charAt(25);
      assertEquals(' ', char0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("8$:- 36#p_yw");
      char char0 = simpleString0.charAt(0);
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString('S');
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      // Undeclared exception!
      try { 
        SimpleString.writeSimpleString(emptyByteBuf0, simpleString0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.netty.buffer.EmptyByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(pooledByteBufAllocator0, 55, 497);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.writeZero(497);
      SimpleString simpleString0 = SimpleString.readSimpleString(byteBuf0, 55);
      // Undeclared exception!
      try { 
        SimpleString.writeNullableSimpleString(byteBuf0, simpleString0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // writerIndex(497) + minWritableBytes(1) exceeds maxCapacity(497): UnpooledDirectByteBuf(ridx: 55, widx: 497, cap: 497/497)
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      // Undeclared exception!
      try { 
        simpleString0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      // Undeclared exception!
      try { 
        simpleString0.subSeq(47, 47);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      // Undeclared exception!
      try { 
        simpleString0.startsWith(simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      // Undeclared exception!
      try { 
        simpleString0.split('\"');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        SimpleString.sizeofString((SimpleString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      // Undeclared exception!
      try { 
        simpleString0.sizeof();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool(0, 0);
      // Undeclared exception!
      try { 
        SimpleString.readSimpleString((ByteBuf) emptyByteBuf0, simpleString_ByteBufSimpleStringPool0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.netty.buffer.EmptyByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      // Undeclared exception!
      try { 
        SimpleString.readSimpleString((ByteBuf) null, (-1629));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = (PooledByteBufAllocator)ByteBufAllocator.DEFAULT;
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(pooledByteBufAllocator0, false, 32);
      // Undeclared exception!
      try { 
        SimpleString.readSimpleString((ByteBuf) compositeByteBuf0, 32);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // readerIndex(0) + length(32) exceeds writerIndex(0): CompositeByteBuf(ridx: 0, widx: 0, cap: 0, components=0)
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      CompositeByteBuf compositeByteBuf0 = pooledByteBufAllocator0.compositeDirectBuffer();
      // Undeclared exception!
      try { 
        SimpleString.readSimpleString((ByteBuf) compositeByteBuf0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // readerIndex(0) + length(4) exceeds writerIndex(0): CompositeByteBuf(ridx: 0, widx: 0, cap: 0, components=0)
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool(0, (-217));
      // Undeclared exception!
      try { 
        SimpleString.readNullableSimpleString((ByteBuf) null, simpleString_ByteBufSimpleStringPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, false);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool();
      // Undeclared exception!
      try { 
        SimpleString.readNullableSimpleString((ByteBuf) emptyByteBuf0, simpleString_ByteBufSimpleStringPool0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.netty.buffer.EmptyByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      // Undeclared exception!
      try { 
        SimpleString.readNullableSimpleString((ByteBuf) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(pooledByteBufAllocator0, 0, 65280);
      // Undeclared exception!
      try { 
        SimpleString.readNullableSimpleString((ByteBuf) unpooledDirectByteBuf0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // readerIndex(0) + length(1) exceeds writerIndex(0): UnpooledDirectByteBuf(ridx: 0, widx: 0, cap: 0/65280)
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      // Undeclared exception!
      try { 
        simpleString0.length();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      // Undeclared exception!
      try { 
        simpleString0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        simpleString0.getChars(1073741823, 57, charArray0, 1073741823);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      // Undeclared exception!
      try { 
        simpleString0.equals((ByteBuf) null, (-2439), (-2439));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, true, 2352);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(2352);
      compositeByteBuf0.readUnsignedShort();
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool(2352, (-2600));
      SimpleString simpleString0 = SimpleString.readNullableSimpleString((ByteBuf) compositeByteBuf1, simpleString_ByteBufSimpleStringPool0);
      // Undeclared exception!
      try { 
        simpleString0.equals((ByteBuf) compositeByteBuf0, 2352, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString("\u872E\u00D1\uF53A");
      // Undeclared exception!
      try { 
        simpleString0.concat((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      // Undeclared exception!
      try { 
        simpleString0.concat('Q');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      // Undeclared exception!
      try { 
        simpleString0.charAt(34);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SimpleString simpleString0 = null;
      try {
        simpleString0 = new SimpleString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool((-404));
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("?\"9Jgi7{]");
      // Undeclared exception!
      try { 
        simpleString0.subSeq((-404), (-3135));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool((-338));
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("+j=/S!R!p#6");
      // Undeclared exception!
      try { 
        simpleString0.subSeq((-5784), 12);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        SimpleString.readSimpleString((ByteBuf) null, (SimpleString.ByteBufSimpleStringPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString((String) null);
      assertNull(simpleString0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString("");
      int int0 = simpleString0.length();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      // Undeclared exception!
      try { 
        SimpleString.readSimpleString((ByteBuf) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      SimpleString simpleString0 = new SimpleString(byteArray0);
      byte[] byteArray1 = simpleString0.getData();
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString('?');
      int int0 = simpleString0.sizeof();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString((byte[]) null);
      // Undeclared exception!
      try { 
        simpleString0.concat((SimpleString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      SimpleString simpleString0 = new SimpleString(byteArray0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(unpooledByteBufAllocator0, (byte)1, (byte)90);
      SimpleString.writeSimpleString(unpooledDirectByteBuf0, simpleString0);
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool();
      // Undeclared exception!
      try { 
        SimpleString.readSimpleString((ByteBuf) unpooledDirectByteBuf0, simpleString_ByteBufSimpleStringPool0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // length must be a multiple of 2
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("buffers", simpleString_StringSimpleStringPool0);
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool();
      boolean boolean0 = simpleString_ByteBufSimpleStringPool0.isEqual(simpleString0, (ByteBuf) null, 34, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.getOrCreate("length must be a multiple of 2");
      simpleString0.getChars(25, 25, (char[]) null, 1167);
      assertEquals(30, simpleString0.length());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      SimpleString simpleString0 = new SimpleString(byteArray0);
      // Undeclared exception!
      try { 
        simpleString0.getChars((-1082), (byte)90, (char[]) null, 18);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1082
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = SimpleString.sizeofNullableString((SimpleString) null);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("org.apache.activemq.artemis.api.core.SimpleString");
      int int0 = SimpleString.sizeofNullableString(simpleString0);
      assertEquals(103, int0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString('Q');
      boolean boolean0 = simpleString0.contains(':');
      assertFalse(boolean0);
      assertEquals(6, simpleString0.sizeof());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.getOrCreate("length must be a multiple of 2");
      boolean boolean0 = simpleString0.contains('n');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("buffers", simpleString_StringSimpleStringPool0);
      boolean boolean0 = simpleString0.contains('w');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString('Q');
      boolean boolean0 = simpleString0.contains('Q');
      assertTrue(boolean0);
      assertEquals(6, simpleString0.sizeof());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("org.apache.activemq.artemis.api.core.SimpleString");
      SimpleString[] simpleStringArray0 = simpleString0.split('r');
      assertEquals(5, simpleStringArray0.length);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString('Q');
      simpleString0.compareTo(simpleString0);
      SimpleString[] simpleStringArray0 = simpleString0.split('Q');
      assertEquals(2, simpleStringArray0.length);
      assertEquals(6, simpleString0.sizeof());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("org.apache.activemq.artemis.api.core.SimpleString");
      SimpleString[] simpleStringArray0 = simpleString0.split('I');
      assertEquals(1, simpleStringArray0.length);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString('E');
      SimpleString[] simpleStringArray0 = simpleString0.split('E');
      assertEquals(6, simpleString0.sizeof());
      assertEquals(2, simpleStringArray0.length);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("}r]SWB`5rdX[$m2p");
      simpleString0.hashCode();
      simpleString0.hashCode();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("Y%C");
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString1 = SimpleString.toSimpleString("Y%C", simpleString_StringSimpleStringPool0);
      boolean boolean0 = simpleString0.equals((Object) simpleString1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("Y%C");
      boolean boolean0 = simpleString0.equals((Object) simpleString0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("length must be a muctipl< ofF2");
      boolean boolean0 = simpleString0.equals((Object) "length must be a muctipl< ofF2");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = new SimpleString('$');
      boolean boolean0 = simpleString_StringSimpleStringPool0.isEqual(simpleString0, "");
      assertFalse(boolean0);
      assertEquals(6, simpleString0.sizeof());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("length must be a muctipl< ofF2");
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString1 = SimpleString.toSimpleString("1(KG#Mrh]k8,W F", simpleString_StringSimpleStringPool0);
      boolean boolean0 = simpleString0.startsWith(simpleString1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("buffers", simpleString_StringSimpleStringPool0);
      SimpleString simpleString1 = SimpleString.toSimpleString("N[CNxnof7<zGq");
      boolean boolean0 = simpleString0.startsWith(simpleString1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("org.apache.activemq.artemis.api.core.SimpleString");
      boolean boolean0 = simpleString0.startsWith(simpleString0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("");
      // Undeclared exception!
      try { 
        simpleString0.subSeq(1, 3603);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("}r]SWB`5rdX[$m2p");
      // Undeclared exception!
      try { 
        simpleString0.subSequence((-3106), (-3106));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("", simpleString_StringSimpleStringPool0);
      SimpleString simpleString1 = simpleString0.subSeq(0, 0);
      assertTrue(simpleString1.equals((Object)simpleString0));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(pooledByteBufAllocator0, 55, 497);
      SimpleString.writeNullableSimpleString(unpooledDirectByteBuf0, (SimpleString) null);
      assertFalse(unpooledDirectByteBuf0.hasArray());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("N[CNxnof7<zGq", simpleString_StringSimpleStringPool0);
      // Undeclared exception!
      try { 
        SimpleString.writeNullableSimpleString((ByteBuf) null, simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 2352);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(2352);
      // Undeclared exception!
      try { 
        SimpleString.readNullableSimpleString((ByteBuf) compositeByteBuf1, (SimpleString.ByteBufSimpleStringPool) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, true, 2352);
      compositeByteBuf0.writeDouble(2352);
      compositeByteBuf0.readUnsignedShort();
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool();
      SimpleString.readNullableSimpleString((ByteBuf) compositeByteBuf0, simpleString_ByteBufSimpleStringPool0);
      SimpleString.readNullableSimpleString((ByteBuf) compositeByteBuf0, simpleString_ByteBufSimpleStringPool0);
      assertEquals(0, compositeByteBuf0.readableBytes());
      assertFalse(compositeByteBuf0.isReadable());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(pooledByteBufAllocator0, 103, 103);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.writeZero(103);
      SimpleString.readNullableSimpleString(byteBuf0);
      assertEquals(102, byteBuf0.readableBytes());
      assertEquals(102, unpooledDirectByteBuf0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 2352);
      compositeByteBuf0.writeDouble(2352);
      // Undeclared exception!
      try { 
        SimpleString.readNullableSimpleString((ByteBuf) compositeByteBuf0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("", simpleString_StringSimpleStringPool0);
      // Undeclared exception!
      try { 
        simpleString0.charAt(14);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      SimpleString simpleString0 = new SimpleString(byteArray0);
      // Undeclared exception!
      try { 
        simpleString0.charAt((-23));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("");
      boolean boolean0 = simpleString0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      SimpleString simpleString0 = new SimpleString(byteArray0);
      boolean boolean0 = simpleString0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("baO=", (SimpleString.StringSimpleStringPool) null);
      simpleString0.hashCode();
      simpleString0.hashCode();
      assertEquals(4, simpleString0.length());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, true, 2392);
      compositeByteBuf0.writeDouble(2392);
      compositeByteBuf0.readUnsignedShort();
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool(2392, (-2600));
      SimpleString simpleString0 = SimpleString.readNullableSimpleString((ByteBuf) compositeByteBuf0, simpleString_ByteBufSimpleStringPool0);
      assertEquals(1, compositeByteBuf0.readableBytes());
      
      SimpleString simpleString1 = simpleString0.concat('9');
      assertEquals(6, simpleString1.sizeof());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      // Undeclared exception!
      try { 
        SimpleString.readSimpleString((ByteBuf) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = simpleString_StringSimpleStringPool0.create("org.apache.activemq.artemis.api.core.SimpleString");
      int int0 = SimpleString.sizeofString(simpleString0);
      assertEquals(102, int0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString('Q');
      SimpleString simpleString1 = simpleString0.concat("@");
      int int0 = simpleString0.compareTo(simpleString1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("B&+t78fag[=u");
      // Undeclared exception!
      try { 
        simpleString0.compareTo((SimpleString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, true, 2392);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeDouble(2392);
      compositeByteBuf1.readUnsignedShort();
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool(2392, (-2600));
      SimpleString simpleString0 = SimpleString.readNullableSimpleString((ByteBuf) compositeByteBuf0, simpleString_ByteBufSimpleStringPool0);
      // Undeclared exception!
      try { 
        simpleString0.subSequence(32, (-2600));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString('5');
      // Undeclared exception!
      try { 
        SimpleString.writeSimpleString((ByteBuf) null, simpleString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      SimpleString.StringSimpleStringPool simpleString_StringSimpleStringPool0 = new SimpleString.StringSimpleStringPool();
      SimpleString simpleString0 = SimpleString.toSimpleString("buffers", simpleString_StringSimpleStringPool0);
      assertNotNull(simpleString0);
      
      simpleString0.equals((ByteBuf) null, 25, 0);
      assertEquals(18, simpleString0.sizeof());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      SimpleString.ByteBufSimpleStringPool simpleString_ByteBufSimpleStringPool0 = new SimpleString.ByteBufSimpleStringPool();
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      CompositeByteBuf compositeByteBuf0 = pooledByteBufAllocator0.compositeDirectBuffer();
      SimpleString simpleString0 = simpleString_ByteBufSimpleStringPool0.create(compositeByteBuf0, 0);
      assertEquals(4, simpleString0.sizeof());
  }
}
