/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 20 11:27:49 GMT 2022
 */

package org.apache.activemq.artemis.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.util.concurrent.DefaultThreadFactory;
import java.util.concurrent.Future;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.TimeUnit;
import org.apache.activemq.artemis.utils.ActiveMQThreadPoolExecutor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ActiveMQThreadPoolExecutor_ESTest extends ActiveMQThreadPoolExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      ActiveMQThreadPoolExecutor activeMQThreadPoolExecutor0 = null;
      try {
        activeMQThreadPoolExecutor0 = new ActiveMQThreadPoolExecutor(13, 13, 13, timeUnit0, (ThreadFactory) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      ActiveMQThreadPoolExecutor activeMQThreadPoolExecutor0 = null;
      try {
        activeMQThreadPoolExecutor0 = new ActiveMQThreadPoolExecutor((-762), (-762), (-762), timeUnit0, (ThreadFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      Class<Object> class0 = Object.class;
      DefaultThreadFactory defaultThreadFactory0 = new DefaultThreadFactory(class0);
      ActiveMQThreadPoolExecutor activeMQThreadPoolExecutor0 = new ActiveMQThreadPoolExecutor(0, 87, 0L, timeUnit0, defaultThreadFactory0);
      MockThread mockThread0 = new MockThread("");
      Integer integer0 = new Integer(0);
      Future<Integer> future0 = activeMQThreadPoolExecutor0.submit((Runnable) mockThread0, integer0);
      assertNotNull(future0);
  }
}
