/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:20:12 GMT 2022
 */

package org.apache.activemq.artemis.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.activemq.artemis.utils.TimeUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TimeUtils_ESTest extends TimeUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      boolean boolean0 = true;
      long long0 = (-103L);
      TimeUtils.CheckMethod timeUtils_CheckMethod0 = null;
      // Undeclared exception!
      try { 
        TimeUtils.waitOnBoolean(true, (-103L), (TimeUtils.CheckMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.TimeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      long long0 = 568L;
      TimeUtils.CheckMethod timeUtils_CheckMethod0 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod0).check();
      TimeUtils.waitOnBoolean(false, 568L, timeUtils_CheckMethod0);
      TimeUtils.CheckMethod timeUtils_CheckMethod1 = null;
      // Undeclared exception!
      try { 
        TimeUtils.waitOnBoolean(false, 568L, (TimeUtils.CheckMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.TimeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TimeUtils.printDuration(7051.37496045481);
      TimeUtils.printDuration(0.0);
      TimeUtils.printDuration(0.0);
      TimeUtils.printDuration(7051.37496045481);
      TimeUtils.printDuration(1.0);
      TimeUtils.CheckMethod timeUtils_CheckMethod0 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod0).check();
      TimeUtils.waitOnBoolean(false, (-777L), timeUtils_CheckMethod0);
      TimeUtils.CheckMethod timeUtils_CheckMethod1 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false, false).when(timeUtils_CheckMethod1).check();
      TimeUtils.waitOnBoolean(true, 1028L, timeUtils_CheckMethod1);
      TimeUtils.CheckMethod timeUtils_CheckMethod2 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false, false).when(timeUtils_CheckMethod2).check();
      TimeUtils.waitOnBoolean(true, 1028L, timeUtils_CheckMethod2);
      TimeUtils.CheckMethod timeUtils_CheckMethod3 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod3).check();
      TimeUtils.waitOnBoolean(true, (-777L), timeUtils_CheckMethod3);
      TimeUtils.CheckMethod timeUtils_CheckMethod4 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod4).check();
      TimeUtils.waitOnBoolean(false, 2891L, timeUtils_CheckMethod4);
      TimeUtils.CheckMethod timeUtils_CheckMethod5 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod5).check();
      TimeUtils.waitOnBoolean(true, (-777L), timeUtils_CheckMethod5);
      TimeUtils.CheckMethod timeUtils_CheckMethod6 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod6).check();
      TimeUtils.waitOnBoolean(false, 2891L, timeUtils_CheckMethod6);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      double double0 = 0.0;
      TimeUtils.printDuration(0.0);
      TimeUtils.printDuration((-889.2460025));
      TimeUtils.printDuration(0.0);
      boolean boolean0 = false;
      long long0 = (-597L);
      TimeUtils.CheckMethod timeUtils_CheckMethod0 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod0).check();
      TimeUtils.waitOnBoolean(false, (-597L), timeUtils_CheckMethod0);
      TimeUtils.printDuration(0.0);
      TimeUtils.printDuration((-597L));
      TimeUtils.printDuration(1.0);
      TimeUtils.printDuration(0.0);
      TimeUtils.printDuration(0.0);
      TimeUtils.CheckMethod timeUtils_CheckMethod1 = null;
      // Undeclared exception!
      try { 
        TimeUtils.waitOnBoolean(true, (-597L), (TimeUtils.CheckMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.TimeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TimeUtils.printDuration((-2670.9339093097224));
      TimeUtils.CheckMethod timeUtils_CheckMethod0 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false, false).when(timeUtils_CheckMethod0).check();
      TimeUtils.waitOnBoolean(true, 596L, timeUtils_CheckMethod0);
      TimeUtils.printDuration((-2670.9339093097224));
      TimeUtils.printDuration(596L);
      double double0 = 0.0;
      TimeUtils.printDuration(0.0);
      TimeUtils.CheckMethod timeUtils_CheckMethod1 = null;
      // Undeclared exception!
      try { 
        TimeUtils.waitOnBoolean(false, 596L, (TimeUtils.CheckMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.TimeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      long long0 = 10L;
      TimeUtils.CheckMethod timeUtils_CheckMethod0 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod0).check();
      TimeUtils.waitOnBoolean(false, 10L, timeUtils_CheckMethod0);
      TimeUtils.CheckMethod timeUtils_CheckMethod1 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(timeUtils_CheckMethod1).check();
      TimeUtils.waitOnBoolean(true, 10L, timeUtils_CheckMethod1);
      TimeUtils.printDuration(10L);
      TimeUtils.printDuration(10L);
      TimeUtils.printDuration(10L);
      TimeUtils.CheckMethod timeUtils_CheckMethod2 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod2).check();
      TimeUtils.waitOnBoolean(false, 10L, timeUtils_CheckMethod2);
      TimeUtils.printDuration(10L);
      long long1 = 0L;
      TimeUtils.CheckMethod timeUtils_CheckMethod3 = null;
      // Undeclared exception!
      try { 
        TimeUtils.waitOnBoolean(false, 0L, (TimeUtils.CheckMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.TimeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TimeUtils.printDuration((-2902.289413727));
      TimeUtils.printDuration((-2902.289413727));
      TimeUtils.printDuration((-2902.289413727));
      TimeUtils.printDuration((-2902.289413727));
      TimeUtils.CheckMethod timeUtils_CheckMethod0 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod0).check();
      TimeUtils.waitOnBoolean(false, (-1473L), timeUtils_CheckMethod0);
      TimeUtils.printDuration((-1473L));
      TimeUtils.printDuration((-2902.289413727));
      TimeUtils.CheckMethod timeUtils_CheckMethod1 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod1).check();
      TimeUtils.waitOnBoolean(true, (-4076L), timeUtils_CheckMethod1);
      TimeUtils.CheckMethod timeUtils_CheckMethod2 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false, false).when(timeUtils_CheckMethod2).check();
      TimeUtils.waitOnBoolean(true, 686L, timeUtils_CheckMethod2);
      TimeUtils.CheckMethod timeUtils_CheckMethod3 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod3).check();
      TimeUtils.waitOnBoolean(false, 3961L, timeUtils_CheckMethod3);
      TimeUtils.printDuration(2501.3);
      TimeUtils.printDuration(2501.3);
      TimeUtils.printDuration(0.0);
      TimeUtils.CheckMethod timeUtils_CheckMethod4 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(timeUtils_CheckMethod4).check();
      TimeUtils.waitOnBoolean(false, (-1473L), timeUtils_CheckMethod4);
      TimeUtils.printDuration(3961L);
      TimeUtils.CheckMethod timeUtils_CheckMethod5 = mock(TimeUtils.CheckMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(timeUtils_CheckMethod5).check();
      TimeUtils.waitOnBoolean(true, 1L, timeUtils_CheckMethod5);
      TimeUtils.printDuration(686L);
      TimeUtils.printDuration(0.0);
      TimeUtils.printDuration((-2902.289413727));
      String string0 = TimeUtils.printDuration(686L);
      assertEquals("0.686 seconds", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = TimeUtils.printDuration((-476.137413));
      assertEquals("-0.476 seconds", string0);
  }
}
