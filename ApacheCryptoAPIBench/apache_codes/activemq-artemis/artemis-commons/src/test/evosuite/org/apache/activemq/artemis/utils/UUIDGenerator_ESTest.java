/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 20 11:21:12 GMT 2022
 */

package org.apache.activemq.artemis.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.activemq.artemis.utils.UUIDGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UUIDGenerator_ESTest extends UUIDGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UUIDGenerator uUIDGenerator0 = UUIDGenerator.getInstance();
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        uUIDGenerator0.generateTimeBasedUUID(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UUIDGenerator uUIDGenerator0 = UUIDGenerator.getInstance();
      byte[] byteArray0 = uUIDGenerator0.generateDummyAddress();
      assertArrayEquals(new byte[] {(byte)1, (byte)0, (byte)0, (byte)0, (byte)1, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UUIDGenerator uUIDGenerator0 = UUIDGenerator.getInstance();
      byte[] byteArray0 = new byte[9];
      uUIDGenerator0.generateTimeBasedUUID(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UUIDGenerator uUIDGenerator0 = UUIDGenerator.getInstance();
      Random random0 = uUIDGenerator0.getRandomNumberGenerator();
      assertNotNull(random0);
  }
}
