/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:16:34 GMT 2022
 */

package org.apache.activemq.artemis.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.buffer.ByteBuf;
import io.netty.buffer.ByteBufAllocator;
import io.netty.buffer.CompositeByteBuf;
import io.netty.buffer.EmptyByteBuf;
import io.netty.buffer.PooledByteBufAllocator;
import io.netty.buffer.UnpooledByteBufAllocator;
import io.netty.buffer.UnpooledDirectByteBuf;
import io.netty.buffer.UnpooledHeapByteBuf;
import io.netty.buffer.UnpooledUnsafeDirectByteBuf;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.LinkedHashSet;
import org.apache.activemq.artemis.api.core.ActiveMQBuffer;
import org.apache.activemq.artemis.core.buffers.impl.ChannelBufferWrapper;
import org.apache.activemq.artemis.utils.ByteUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jboss.logging.Logger;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ByteUtil_ESTest extends ByteUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteUtil.convertTextBytes("+1");
      byte[] byteArray0 = null;
      ByteUtil.equals((byte[]) null, (byte[]) null, (-1), (-1));
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)101;
      byte byte0 = (byte) (-10);
      byteArray1[1] = (byte) (-10);
      byteArray1[2] = (byte)2;
      byteArray1[3] = (byte)40;
      byteArray1[4] = (byte)8;
      byte byte1 = (byte)1;
      byteArray1[5] = (byte)1;
      ByteUtil.toSimpleString(byteArray1);
      PooledByteBufAllocator pooledByteBufAllocator0 = null;
      try {
        pooledByteBufAllocator0 = new PooledByteBufAllocator(true, 54272, (-431), (byte)40, (byte) (-10), (byte)40, (byte)1, 19, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // nDirectArea: -431 (expected: >= 0)
         //
         verifyException("io.netty.buffer.PooledByteBufAllocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0");
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true, true);
      ByteBuf[] byteBufArray0 = new ByteBuf[0];
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 9980, byteBufArray0);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.consolidate();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(9980);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeBytes(byteBuffer0);
      ChannelBufferWrapper channelBufferWrapper0 = new ChannelBufferWrapper(compositeByteBuf2);
      channelBufferWrapper0.setBytes(9980, byteBuffer0);
      // Undeclared exception!
      ByteUtil.readLine(channelBufferWrapper0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(65280);
      byte[] byteArray0 = ByteUtil.getActiveArray(byteBuffer0);
      ByteUtil.formatGroup("h F:?r", 65280, 65280);
      byte[] byteArray1 = new byte[8];
      byte byte0 = (byte)59;
      byteArray1[0] = (byte)59;
      byte byte1 = (byte)8;
      byteArray1[1] = (byte)8;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray1[2] = (byte)111;
      byteArray1[3] = (byte)30;
      byteArray1[5] = (byte)75;
      byteArray1[6] = (byte)5;
      byteArray1[7] = (byte)40;
      int int0 = (-1);
      ByteUtil.equals(byteArray0, byteArray1, (-1), 307);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      ByteBuf[] byteBufArray0 = new ByteBuf[3];
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, (byte)5);
      compositeByteBuf0.touch();
      // Undeclared exception!
      ByteUtil.bytesToHex(byteArray0, (-1806));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteUtil.equals(byteArray0, byteArray0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(unpooledByteBufAllocator0, 127, 127);
      unpooledDirectByteBuf0.writeDouble((-1.0));
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.setBytes(0, byteArray0);
      ByteUtil.equals(byteArray0, byteBuf0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(65280);
      byte[] byteArray0 = ByteUtil.getActiveArray(byteBuffer0);
      ByteUtil.formatGroup("h F:?r", 65280, 65280);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)59;
      byteArray1[1] = (byte)8;
      byteArray1[2] = (byte)111;
      byteArray1[3] = (byte)30;
      byteArray1[4] = (byte) (-45);
      byteArray1[5] = (byte)75;
      byteArray1[6] = (byte)5;
      byteArray1[7] = (byte)40;
      byteBuffer0.putDouble((-9.64));
      ByteUtil.equals(byteArray0, byteArray1, (-1), 307);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      ByteBuf[] byteBufArray0 = new ByteBuf[3];
      // Undeclared exception!
      ByteUtil.bytesToHex(byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteUtil.toSimpleString(byteArray0);
      ByteUtil.equals(byteArray0, byteArray0, (-863), (-863));
      ByteUtil.equals(byteArray0, byteArray0);
      byte[] byteArray1 = ByteUtil.longToBytes((-863));
      byte[] byteArray2 = new byte[0];
      int int0 = 3;
      ByteUtil.equals(byteArray2, byteArray1, 3, 0);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteUtil.equals(byteArray0, byteArray0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(unpooledByteBufAllocator0, 127, 127);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.setBytes(0, byteArray0);
      ByteUtil.equals(byteArray0, byteBuf0, 0, 0);
      ByteUtil.equals(byteArray0, (byte[]) null, 0, 127);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("0g");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = ByteUtil.hexToBytes("0");
      byte[] byteArray1 = ByteUtil.longToBytes(1294L);
      ByteUtil.bytesToHex(byteArray1, 9988);
      ByteUtil.longToBytes((-369L));
      ByteUtil.equals(byteArray0, (byte[]) null, 420, 420);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)30;
      byteArray0[0] = (byte)30;
      byte byte1 = (byte)32;
      byteArray0[1] = (byte)32;
      ByteUtil.equals(byteArray0, byteArray0, (int) (byte)30, 3804);
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(true);
      ByteBuf byteBuf0 = pooledByteBufAllocator0.ioBuffer();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "b[4%\\G]";
      int int0 = 55296;
      pooledByteBufAllocator0.ioBuffer((int) byteArray0[1], int0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      int int1 = 127;
      ByteUtil.equals(byteArray0, byteBuf0, int1, (int) byte0);
      ByteUtil.equals(byteArray0, byteBuf0, int1, (int) byteArray0[1]);
      ByteUtil.equals(byteArray0, byteArray0, (int) byteArray0[0], (int) byte1);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(byte1);
      byte[] byteArray1 = ByteUtil.getActiveArray(byteBuffer0);
      // Undeclared exception!
      try { 
        ByteUtil.equals(byteArray1, byteBuf0, (int) byte0, (int) byte1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 4;
      ByteUtil.maxString("sun.misc.Unsafe: unavailable (io.netty.noUnsafe)", 4);
      ByteUtil.longToBytes(2147479551L);
      // Undeclared exception!
      try { 
        ByteUtil.readLine((ActiveMQBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-11);
      byteArray0[7] = (byte)0;
      ByteUtil.equals(byteArray0, byteArray0, 255, (-1));
      ByteUtil.equals(byteArray0, byteArray0);
      ByteUtil.toSimpleString(byteArray0);
      ByteUtil.bytesToHex(byteArray0, (-539));
      // Undeclared exception!
      try { 
        ByteUtil.bytesToHex(byteArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)3;
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-127);
      ByteUtil.bytesToHex(byteArray0);
      ByteUtil.bytesToHex(byteArray0);
      ByteUtil.longToBytes((byte) (-127));
      int int0 = 0;
      // Undeclared exception!
      try { 
        ByteUtil.bytesToHex(byteArray0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteUtil byteUtil0 = new ByteUtil();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-27);
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)0;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-27);
      byteArray1[1] = (byte)31;
      ByteUtil.equals(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = (-1050);
      int int1 = 3497;
      ByteUtil.formatGroup("", (-1050), 3497);
      // Undeclared exception!
      try { 
        ByteUtil.equals((byte[]) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long long0 = 0L;
      byte[] byteArray0 = ByteUtil.longToBytes(0L);
      int int0 = 0;
      int int1 = 0;
      ByteUtil.equals(byteArray0, byteArray0, 0, 0);
      ByteBuffer byteBuffer0 = null;
      // Undeclared exception!
      try { 
        ByteUtil.getActiveArray((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)0;
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      CompositeByteBuf compositeByteBuf0 = pooledByteBufAllocator0.compositeDirectBuffer();
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeFloat(354.0F);
      int int0 = 0;
      ByteUtil.equals(byteArray0, (ByteBuf) compositeByteBuf1, (int) byteArray0[1], int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteUtil.maxString("", 0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-71);
      byteArray0[1] = (byte)16;
      ByteUtil.toSimpleString(byteArray0);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes(" ... ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        ByteUtil.maxString((String) null, 57343);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteUtil.formatGroup("p?E8b8@xED11(&-~", 493, 493);
      ByteUtil byteUtil0 = new ByteUtil();
      int int0 = (-466);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-52);
      byteArray0[7] = (byte)0;
      ByteUtil.toSimpleString(byteArray0);
      // Undeclared exception!
      try { 
        ByteUtil.formatGroup("@@@@@", (-466), 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)100;
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      ByteUtil.equals(byteArray0, byteArray0);
      ByteUtil.bytesToHex(byteArray0);
      ByteUtil.formatGroup("002010046404000000", (byte)32, (-2449));
      ByteUtil.maxString("002010046404000000", (byte)0);
      ByteUtil.equals(byteArray0, byteArray0, (int) (byte)4, (int) (byte)0);
      ByteUtil.equals(byteArray0, byteArray0, 3, 15);
      ByteUtil.equals(byteArray0, byteArray0);
      // Undeclared exception!
      try { 
        ByteUtil.formatGroup("/*  1 */ \"002010046404000000\";", 10, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte)7;
      ByteUtil.bytesToHex(byteArray0);
      byte[] byteArray1 = ByteUtil.longToBytes(8L);
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte)7;
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte) (-84);
      byteArray2[4] = (byte)7;
      byteArray2[5] = (byte) (-84);
      ByteUtil.equals(byteArray2, byteArray1);
      // Undeclared exception!
      try { 
        ByteUtil.hexToBytes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)16;
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(unpooledByteBufAllocator0, (byte)16, (byte)16);
      ByteOrder byteOrder0 = unpooledDirectByteBuf0.order();
      ByteBuf byteBuf0 = emptyByteBuf0.order(byteOrder0);
      ByteUtil.equals(byteArray0, byteBuf0, (int) (byte)16, (int) (byte)16);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = ByteUtil.longToBytes(1240L);
      ByteUtil.toSimpleString(byteArray0);
      ByteUtil.equals(byteArray0, byteArray0);
      ByteUtil.maxString("@@@@@", (-1));
      ByteUtil.bytesToHex(byteArray0);
      // Undeclared exception!
      try { 
        ByteUtil.bytesToHex(byteArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)39;
      ByteUtil.toSimpleString(byteArray0);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0k");
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)11;
      byteArray0[0] = (byte)11;
      ByteUtil.bytesToHex(byteArray0);
      byte[] byteArray1 = ByteUtil.longToBytes((byte)11);
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)11;
      ByteUtil.equals(byteArray0, byteArray2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 317;
      ByteUtil.bytesToHex(byteArray1, 317);
      ByteBufAllocator byteBufAllocator0 = null;
      boolean boolean0 = false;
      int int1 = 4;
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("0k");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = (-4401);
      // Undeclared exception!
      ByteUtil.formatGroup("{(O',XiWU78haa`)7", 0, (-4401));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        ByteUtil.formatGroup((String) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)75;
      byteArray0[4] = (byte)65;
      byteArray0[5] = (byte)0;
      ByteUtil.bytesToHex(byteArray0, (int) (byte)65);
      byte[] byteArray1 = ByteUtil.longToBytes(829L);
      ByteUtil.hexToBytes("2C1D004B4100");
      ByteUtil.equals(byteArray1, byteArray0, (int) (byte)29, (int) (byte)65);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("IJ~A?");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteUtil.formatGroup("xLW+>B%m??b^3", 16711680, 16711680);
      ByteUtil.equals((byte[]) null, (byte[]) null, 16711680, 16711680);
      // Undeclared exception!
      try { 
        ByteUtil.bytesToHex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = ByteUtil.longToBytes(1024L);
      ByteUtil.equals(byteArray0, byteArray0, 587, (-2424));
      byte[] byteArray1 = ByteUtil.longToBytes((-872L));
      ByteUtil.equals(byteArray0, byteArray1);
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)17;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte) (-15);
      byteArray2[5] = (byte)104;
      byteArray2[6] = (byte)0;
      byteArray2[7] = (byte) (-71);
      byteArray2[8] = (byte) (-87);
      ByteUtil.equals(byteArray0, byteArray2);
      ByteUtil byteUtil0 = new ByteUtil();
      ByteUtil.longToBytes((byte)0);
      ByteUtil.formatGroup("HFJTq{CwH2qIlC~o", 587, (byte) (-71));
      // Undeclared exception!
      try { 
        ByteUtil.maxString("HFJTq{CwH2qIlC~o", (-1992));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        ByteUtil.maxString("kl@5\"(", (-758));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteUtil.bytesToHex((byte[]) null, (-803));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteUtil.maxString("", 372);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)11;
      ByteUtil.bytesToHex(byteArray0);
      ByteUtil.bytesToHex(byteArray0, (int) (byte)11);
      byte[] byteArray1 = new byte[1];
      ByteUtil.equals(byteArray0, byteArray1);
      ByteBuf[] byteBufArray0 = new ByteBuf[5];
      LinkedHashSet<ByteBuf> linkedHashSet0 = new LinkedHashSet<ByteBuf>(248, 248);
      CompositeByteBuf compositeByteBuf0 = null;
      try {
        compositeByteBuf0 = new CompositeByteBuf((ByteBufAllocator) null, false, (byte)11, linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // alloc
         //
         verifyException("io.netty.buffer.CompositeByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = (PooledByteBufAllocator)ByteBufAllocator.DEFAULT;
      UnpooledUnsafeDirectByteBuf unpooledUnsafeDirectByteBuf0 = new UnpooledUnsafeDirectByteBuf(pooledByteBufAllocator0, 2653, 2754);
      ByteBuffer byteBuffer0 = unpooledUnsafeDirectByteBuf0.nioBuffer(107, 107);
      ByteUtil.getActiveArray(byteBuffer0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = ByteUtil.hexToBytes("");
      ByteUtil.bytesToHex(byteArray0);
      ByteUtil.maxString("0k", 127);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = 2314;
      ByteUtil.equals((byte[]) null, (byte[]) null, 2314, 2314);
      // Undeclared exception!
      try { 
        ByteUtil.toSimpleString((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(433);
      byteBuffer0.putShort((short)4083);
      byte[] byteArray0 = ByteUtil.getActiveArray(byteBuffer0);
      ByteUtil.bytesToHex(byteArray0);
      ByteUtil.formatGroup
      ByteUtil.maxString("ZO", 433);
      ByteUtil.formatGroup("-D{}: {}", 16, 433);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("g#leP!54f[1@@Y5h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = ByteUtil.longToBytes(1024L);
      byte[] byteArray1 = ByteUtil.longToBytes((-872L));
      ByteUtil.equals(byteArray0, byteArray1);
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)17;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte) (-15);
      byteArray2[5] = (byte)104;
      byteArray2[6] = (byte)0;
      byteArray2[7] = (byte) (-71);
      byteArray2[8] = (byte) (-87);
      ByteUtil.equals(byteArray0, byteArray2);
      ByteUtil byteUtil0 = new ByteUtil();
      ByteUtil.bytesToHex(byteArray0);
      ByteUtil.longToBytes((byte)0);
      ByteUtil.maxString("0000000000000400", 342);
      ByteUtil.maxString("HFJTq{CwH2qIlC~o", 127);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, false, false);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      ByteBuf byteBuf0 = emptyByteBuf0.slice();
      // Undeclared exception!
      try { 
        ByteUtil.debugFrame((Logger) null, "0000000000000400", byteBuf0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)14;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteUtil.formatGroup("RHa=*=cN'cY", 104, 1);
      ByteUtil.equals(byteArray0, byteArray0, (-3197), (int) (byte)14);
      ByteUtil.longToBytes(1627L);
      ByteUtil.formatGroup("{#b02", 1, 410);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ByteUtil.formatGroup("%Zi!W`s$W+oq", 2451, 2451);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = ByteUtil.hexToBytes("");
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, false, false);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      ByteBuf byteBuf0 = emptyByteBuf0.readRetainedSlice(0);
      ByteUtil.equals(byteArray0, byteBuf0, 0, 0);
      Logger logger0 = Logger.getLogger("");
      ByteUtil.debugFrame(logger0, "", emptyByteBuf0);
      ByteUtil.bytesToHex(byteArray0, 0);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("[]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte)114;
      byteArray0[2] = (byte)41;
      byteArray0[3] = (byte)39;
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)114;
      byteArray1[1] = (byte) (-87);
      byteArray1[2] = (byte)114;
      byteArray1[3] = (byte) (-101);
      byteArray1[4] = (byte)39;
      byteArray1[5] = (byte) (-101);
      byteArray1[6] = (byte)41;
      byteArray1[7] = (byte) (-101);
      byteArray1[8] = (byte)114;
      ByteUtil.equals(byteArray0, byteArray1, (-1028477387), (int) (byte)114);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("0m");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = ByteUtil.longToBytes(1024L);
      ByteUtil.equals(byteArray0, byteArray0, 587, (-2424));
      byte[] byteArray1 = ByteUtil.longToBytes(587);
      ByteUtil.equals(byteArray0, byteArray1);
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)17;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte) (-15);
      byteArray2[6] = (byte)0;
      byteArray2[8] = (byte) (-87);
      ByteUtil.bytesToHex(byteArray0);
      ByteUtil.longToBytes((byte)0);
      ByteUtil.formatGroup("HFJTq{CwH2qIlC~o", 587, (byte) (-71));
      ByteUtil.maxString("0000000000000400", 342);
      ByteUtil.maxString("HFJTq{CwH2qIlC~o", 127);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true, true);
      UnpooledHeapByteBuf unpooledHeapByteBuf0 = new UnpooledHeapByteBuf(unpooledByteBufAllocator0, (byte)0, (byte)0);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("0000000000000400");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0k");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-8);
      String string0 = ByteUtil.NON_ASCII_STRING;
      ByteUtil.bytesToHex(byteArray0, (int) (byte) (-8));
      byte[] byteArray1 = ByteUtil.longToBytes((byte) (-8));
      byte[] byteArray2 = new byte[1];
      byteArray1[7] = (byte) (-8);
      ByteUtil.equals(byteArray0, byteArray2);
      int int0 = 317;
      ByteUtil.bytesToHex(byteArray1, 317);
      ByteBufAllocator byteBufAllocator0 = null;
      boolean boolean0 = false;
      ByteBuf[] byteBufArray0 = new ByteBuf[5];
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("0k");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("\n");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte) (-23);
      ByteUtil.bytesToHex(byteArray0, 3);
      ByteUtil.bytesToHex(byteArray0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = ByteUtil.longToBytes(1024L);
      byte[] byteArray1 = ByteUtil.longToBytes(1024L);
      ByteUtil.equals(byteArray0, byteArray1);
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)35;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte) (-15);
      byteArray2[5] = (byte)104;
      byteArray2[6] = (byte)0;
      ByteUtil.bytesToHex(byteArray0);
      ByteUtil.longToBytes((byte)0);
      ByteUtil.maxString("0000000000000400", 342);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("0000000000000400");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteUtil.equals(byteArray0, byteArray0, 255, (-486));
      ByteUtil.bytesToHex(byteArray0, (-1280));
      // Undeclared exception!
      try { 
        ByteUtil.hexToBytes("[]");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"[]\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ByteUtil byteUtil0 = new ByteUtil();
      PooledByteBufAllocator pooledByteBufAllocator0 = (PooledByteBufAllocator)ByteBufAllocator.DEFAULT;
      ByteUtil.longToBytes(0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, false);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 608);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeInt((byte)40);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeLong((byte) (-79));
      ChannelBufferWrapper channelBufferWrapper0 = new ChannelBufferWrapper(compositeByteBuf2);
      // Undeclared exception!
      try { 
        ByteUtil.readLine(channelBufferWrapper0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // readerIndex(12) + length(2) exceeds writerIndex(12): CompositeByteBuf(ridx: 12, widx: 12, cap: 64, components=1)
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        ByteUtil.readLine((ActiveMQBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = ByteUtil.longToBytes(1024L);
      ByteUtil.equals((byte[]) null, byteArray0, 587, (-2424));
      byte[] byteArray1 = ByteUtil.longToBytes((-872L));
      ByteUtil.equals(byteArray0, byteArray1);
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)17;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte) (-15);
      byteArray2[5] = (byte)104;
      byteArray2[6] = (byte)0;
      byteArray2[8] = (byte) (-87);
      ByteUtil.bytesToHex(byteArray0);
      ByteUtil.longToBytes((byte)0);
      ByteUtil.formatGroup("HFJTq{CwH2qIlC~o", 587, (byte) (-66));
      ByteUtil.maxString("0000000000000400", 342);
      ByteUtil.maxString("HFJTq{CwH2qIlC~o", 127);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, false, true);
      UnpooledHeapByteBuf unpooledHeapByteBuf0 = new UnpooledHeapByteBuf(unpooledByteBufAllocator0, (byte)0, (byte)0);
      ByteBuffer byteBuffer0 = unpooledHeapByteBuf0.nioBuffer((int) (byte)0, (int) (byte)0);
      ByteUtil.getActiveArray(byteBuffer0);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("0000000000000400");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)75;
      byteArray0[3] = (byte)32;
      byteArray0[4] = (byte)84;
      byteArray0[5] = (byte) (-124);
      byteArray0[6] = (byte) (-52);
      byteArray0[7] = (byte)111;
      ByteUtil.toSimpleString(byteArray0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)100;
      byteArray0[0] = (byte)100;
      byte byte1 = (byte)32;
      byteArray0[1] = (byte)32;
      ByteUtil.equals(byteArray0, byteArray0, (int) (byte)100, 3804);
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(true);
      ByteBuf byteBuf0 = pooledByteBufAllocator0.ioBuffer();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "b[4%\\G]";
      int int0 = 55296;
      pooledByteBufAllocator0.ioBuffer((int) byteArray0[1], int0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      int int1 = 127;
      ByteUtil.equals(byteArray0, byteBuf0, int1, (int) byte0);
      ByteUtil.equals(byteArray0, byteBuf0, int1, (int) byteArray0[1]);
      byte[] byteArray1 = null;
      ByteUtil.equals(byteArray1, byteArray0, (int) byteArray0[0], (int) byte1);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(byte1);
      byte[] byteArray2 = ByteUtil.getActiveArray(byteBuffer0);
      // Undeclared exception!
      try { 
        ByteUtil.equals(byteArray2, byteBuf0, (int) byte0, (int) byte1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte) (-127);
      byteArray0[10] = (byte)0;
      byteArray0[2] = (byte) (-127);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteUtil.toSimpleString(byteArray0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteUtil.toSimpleString(byteArray0);
      ByteBuf[] byteBufArray0 = new ByteBuf[2];
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      int int0 = 4;
      int int1 = 59;
      ByteUtil.formatGroup("system property", 4, 59);
      byte[] byteArray0 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteUtil.bytesToHex((byte[]) null, 59);
      // Undeclared exception!
      try { 
        ByteUtil.bytesToHex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.ByteUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      UnpooledDirectByteBuf unpooledDirectByteBuf0 = new UnpooledDirectByteBuf(unpooledByteBufAllocator0, 127, 127);
      ByteBuf byteBuf0 = unpooledDirectByteBuf0.setBytes(0, byteArray0);
      ByteUtil.equals(byteArray0, byteBuf0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("0m");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(65280);
      byte[] byteArray0 = ByteUtil.getActiveArray(byteBuffer0);
      ByteUtil.formatGroup("h F:?r", 65280, 65280);
      byte[] byteArray1 = new byte[8];
      byteArray1[1] = (byte)8;
      byteArray1[2] = (byte)95;
      byteArray1[3] = (byte)30;
      byteArray1[5] = (byte)75;
      byteArray1[6] = (byte)5;
      byteArray1[7] = (byte)40;
      ByteUtil.equals(byteArray0, byteArray1, (-1), 307);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      ByteBuf[] byteBufArray0 = new ByteBuf[3];
      ByteUtil.equals(byteArray1, byteArray1, (int) (byte)95, (-3898));
      byte[] byteArray2 = ByteUtil.getActiveArray(byteBuffer0);
      // Undeclared exception!
      ByteUtil.bytesToHex(byteArray2, (int) (byte)30);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      String string0 = ByteUtil.NON_ASCII_STRING;
      byte[] byteArray1 = new byte[1];
      ByteUtil.equals(byteArray0, byteArray1);
      ByteBuf[] byteBufArray0 = new ByteBuf[5];
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("0i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0k");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-8);
      String string0 = ByteUtil.NON_ASCII_STRING;
      ByteUtil.bytesToHex(byteArray0, (int) (byte) (-8));
      byte[] byteArray1 = ByteUtil.longToBytes((byte) (-8));
      byte[] byteArray2 = new byte[1];
      byteArray1[7] = (byte) (-8);
      ByteUtil.equals(byteArray0, byteArray2);
      ByteUtil.bytesToHex(byteArray1, 317);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("0k");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = ByteUtil.longToBytes(1024L);
      byte[] byteArray1 = ByteUtil.longToBytes(1024L);
      ByteUtil.equals(byteArray0, byteArray1);
      ByteUtil.longToBytes((byte)0);
      ByteUtil.formatGroup("HFJTq{CwH2qIlC~o", 587, (byte) (-71));
      ByteUtil.maxString("HFJTq{CwH2qIlC~o", 127);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = ByteUtil.hexToBytes("");
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, false, false);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      ByteBuf byteBuf0 = emptyByteBuf0.readRetainedSlice(0);
      byteBuf0.writeBytes(byteArray0);
      ByteUtil.equals(byteArray0, byteBuf0, 0, 0);
      Logger logger0 = Logger.getLogger("");
      ByteUtil.debugFrame(logger0, "", emptyByteBuf0);
      ByteUtil.bytesToHex(byteArray0, 0);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("[]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = ByteUtil.longToBytes(1L);
      ByteUtil.maxString("maxDirectMemory", 15);
      ByteUtil.toSimpleString(byteArray0);
      // Undeclared exception!
      try { 
        ByteUtil.convertTextBytes("@@@@@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-44);
      byteArray0[5] = (byte)0;
      byteArray0[5] = (byte) (-11);
      byteArray0[7] = (byte)0;
      ByteUtil.toSimpleString(byteArray0);
      ByteUtil.bytesToHex(byteArray0, (-539));
      // Undeclared exception!
      try { 
        ByteUtil.bytesToHex(byteArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String string0 = ByteUtil.NON_ASCII_STRING;
      // Undeclared exception!
      try { 
        ByteUtil.hexToBytes("@@@@@");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"@@\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
