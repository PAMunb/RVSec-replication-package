/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:22:28 GMT 2022
 */

package org.apache.activemq.artemis.utils.critical;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.TimeUnit;
import org.apache.activemq.artemis.utils.critical.CriticalAction;
import org.apache.activemq.artemis.utils.critical.CriticalAnalyzer;
import org.apache.activemq.artemis.utils.critical.CriticalAnalyzerImpl;
import org.apache.activemq.artemis.utils.critical.CriticalComponentImpl;
import org.apache.activemq.artemis.utils.critical.EmptyCriticalAnalyzer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CriticalComponentImpl_ESTest extends CriticalComponentImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EmptyCriticalAnalyzer emptyCriticalAnalyzer0 = EmptyCriticalAnalyzer.getInstance();
      long long0 = 0L;
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      CriticalAnalyzer criticalAnalyzer0 = emptyCriticalAnalyzer0.setCheckTime(0L, timeUnit0);
      int int0 = 2970;
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzer0, 2970);
      // Undeclared exception!
      try { 
        criticalComponentImpl0.isExpired(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CriticalAnalyzerImpl criticalAnalyzerImpl0 = new CriticalAnalyzerImpl();
      criticalAnalyzerImpl0.clear();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      CriticalAnalyzer criticalAnalyzer0 = criticalAnalyzerImpl0.setTimeout(829L, timeUnit0);
      int int0 = 1175;
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzer0, 1175);
      criticalAnalyzerImpl0.start();
      // Undeclared exception!
      try { 
        criticalComponentImpl0.leaveCritical((-3820));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3820
         //
         verifyException("org.apache.activemq.artemis.utils.critical.CriticalComponentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CriticalAnalyzerImpl criticalAnalyzerImpl0 = new CriticalAnalyzerImpl();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      CriticalAnalyzer criticalAnalyzer0 = criticalAnalyzerImpl0.setTimeout(0L, timeUnit0);
      int int0 = (-1727);
      criticalAnalyzerImpl0.stop();
      CriticalComponentImpl criticalComponentImpl0 = null;
      try {
        criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzer0, (-1727));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.critical.CriticalComponentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CriticalAnalyzerImpl criticalAnalyzerImpl0 = new CriticalAnalyzerImpl();
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzerImpl0, 0);
      criticalComponentImpl0.isExpired(0);
      criticalComponentImpl0.getCriticalAnalyzer();
      // Undeclared exception!
      try { 
        criticalComponentImpl0.leaveCritical(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.activemq.artemis.utils.critical.CriticalComponentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CriticalAnalyzerImpl criticalAnalyzerImpl0 = new CriticalAnalyzerImpl();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      CriticalAnalyzer criticalAnalyzer0 = criticalAnalyzerImpl0.setCheckTime(1L, timeUnit0);
      criticalAnalyzerImpl0.start();
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzer0, 0);
      criticalComponentImpl0.getCriticalAnalyzer();
      criticalComponentImpl0.isExpired((-1L));
      criticalAnalyzerImpl0.stop();
      criticalComponentImpl0.getCriticalAnalyzer();
      // Undeclared exception!
      try { 
        criticalComponentImpl0.enterCritical(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.activemq.artemis.utils.critical.CriticalComponentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CriticalAnalyzerImpl criticalAnalyzerImpl0 = new CriticalAnalyzerImpl();
      CriticalAction criticalAction0 = mock(CriticalAction.class, new ViolatedAssumptionAnswer());
      CriticalAnalyzer criticalAnalyzer0 = criticalAnalyzerImpl0.addAction(criticalAction0);
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      criticalAnalyzerImpl0.setCheckTime(0L, timeUnit0);
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzer0, 1795);
      criticalComponentImpl0.isExpired(1795);
      criticalComponentImpl0.isExpired(1795);
      criticalComponentImpl0.isExpired((-1L));
      criticalComponentImpl0.getCriticalAnalyzer();
      criticalComponentImpl0.isExpired(2L);
      criticalAnalyzerImpl0.setCheckTime((-1L), timeUnit0);
      criticalComponentImpl0.isExpired(2222L);
      criticalComponentImpl0.getCriticalAnalyzer();
      criticalComponentImpl0.getCriticalAnalyzer();
      criticalComponentImpl0.getCriticalAnalyzer();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      criticalComponentImpl0.isExpired((-966L));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      CriticalAnalyzerImpl criticalAnalyzerImpl0 = new CriticalAnalyzerImpl();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      CriticalAnalyzer criticalAnalyzer0 = criticalAnalyzerImpl0.setTimeout(0L, timeUnit0);
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzer0, 842);
      criticalComponentImpl0.isExpired(0L);
      criticalComponentImpl0.isExpired(842);
      criticalAnalyzerImpl0.check();
      criticalComponentImpl0.isExpired(933L);
      System.setCurrentTimeMillis(842);
      System.setCurrentTimeMillis(933L);
      criticalComponentImpl0.getCriticalAnalyzer();
      criticalComponentImpl0.getCriticalAnalyzer();
      criticalComponentImpl0.getCriticalAnalyzer();
      criticalComponentImpl0.enterCritical(0);
      criticalComponentImpl0.getCriticalAnalyzer();
      criticalComponentImpl0.isExpired((-1482L));
      criticalComponentImpl0.getCriticalAnalyzer();
      criticalComponentImpl0.getCriticalAnalyzer();
      System.setCurrentTimeMillis(0L);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CriticalAnalyzerImpl criticalAnalyzerImpl0 = new CriticalAnalyzerImpl();
      criticalAnalyzerImpl0.getNumberOfComponents();
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzerImpl0, 95);
      boolean boolean0 = criticalComponentImpl0.isExpired(3120L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EmptyCriticalAnalyzer emptyCriticalAnalyzer0 = EmptyCriticalAnalyzer.getInstance();
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(emptyCriticalAnalyzer0, 1);
      // Undeclared exception!
      try { 
        criticalComponentImpl0.isExpired(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl((CriticalAnalyzer) null, (-16));
      criticalComponentImpl0.leaveCritical((-16));
      criticalComponentImpl0.enterCritical((-16));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CriticalAnalyzerImpl criticalAnalyzerImpl0 = new CriticalAnalyzerImpl();
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzerImpl0, 0);
      // Undeclared exception!
      try { 
        criticalComponentImpl0.enterCritical(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.activemq.artemis.utils.critical.CriticalComponentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CriticalAnalyzerImpl criticalAnalyzerImpl0 = new CriticalAnalyzerImpl();
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzerImpl0, 3);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl((CriticalAnalyzer) null, 0);
      CriticalAnalyzer criticalAnalyzer0 = criticalComponentImpl0.getCriticalAnalyzer();
      assertFalse(criticalAnalyzer0.isStarted());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl((CriticalAnalyzer) null, (-16));
      criticalComponentImpl0.enterCritical((-16));
      criticalComponentImpl0.leaveCritical((-16));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      CriticalAnalyzerImpl criticalAnalyzerImpl0 = new CriticalAnalyzerImpl();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      CriticalAnalyzer criticalAnalyzer0 = criticalAnalyzerImpl0.setTimeout(0L, timeUnit0);
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzer0, 842);
      criticalComponentImpl0.isExpired(0L);
      criticalComponentImpl0.isExpired(842);
      criticalAnalyzerImpl0.check();
      System.setCurrentTimeMillis(842);
      criticalComponentImpl0.getCriticalAnalyzer();
      criticalComponentImpl0.getCriticalAnalyzer();
      criticalComponentImpl0.enterCritical(0);
      criticalComponentImpl0.getCriticalAnalyzer();
      criticalComponentImpl0.isExpired((-1482L));
      criticalComponentImpl0.getCriticalAnalyzer();
      System.setCurrentTimeMillis((-1482L));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CriticalAnalyzerImpl criticalAnalyzerImpl0 = new CriticalAnalyzerImpl();
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzerImpl0, 13);
      // Undeclared exception!
      try { 
        criticalComponentImpl0.leaveCritical(13);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.apache.activemq.artemis.utils.critical.CriticalComponentImpl", e);
      }
  }
}
