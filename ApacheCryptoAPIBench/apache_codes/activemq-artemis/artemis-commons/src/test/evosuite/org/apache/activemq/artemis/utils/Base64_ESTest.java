/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:15:51 GMT 2022
 */

package org.apache.activemq.artemis.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.Serializable;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.activemq.artemis.utils.Base64;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64_ESTest extends Base64_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-109);
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte)23;
      Base64.encodeBytes(byteArray0, 3);
      int int0 = (-1);
      Base64.decode(byteArray0, 306, (-1), (int) (byte) (-109));
      Base64.encodeObject((Serializable) (byte) (-41), (int) (byte)12);
      int int1 = 1311;
      Base64.encodeObject((Serializable) "rO0ABXNyAA5qYXZhLmxhbmcuQnl0ZZxOYITuUPUcAgABQgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHDX", 1311);
      Base64.encodeFromFile("X(5%s/[k*Q0");
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, "H4sIAAAAAAAAAOOZfF0cABKwbdkEAAAA");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      Base64.encodeBytes(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Base64.encodeObject((Serializable) "AAAAAA==", 981);
      Base64.decodeToObject("AAAAAA==");
      int int0 = Base64.URL_SAFE;
      Base64.encodeObject((Serializable) 16);
      Base64.encodeBytes(byteArray0, 0, 0, 3849);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAQ";
      Base64.main(stringArray0);
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream("", false);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "system property";
      Base64.decodeFileToFile("s'jam  ", "system property");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(dataInputStream0, (byte) (-1));
      base64_InputStream0.read();
      base64_InputStream0.read();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(pipedOutputStream0, false, "s'jam  ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // s'jam  
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)57;
      byteArray0[2] = (byte)0;
      Base64.encodeBytes(byteArray0);
      // Undeclared exception!
      try { 
        Base64.decode("FsN*;F+bdAo", (int) (byte)6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 127
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte) (-3);
      byteArray0[6] = (byte)83;
      Base64.encodeBytes(byteArray0, (int) (byte)3, (int) (byte)3);
      Base64.encodeFileToFile("VwP9", "");
      Base64.encodeBytes(byteArray0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("VwP9");
      mockPrintStream0.close();
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(mockPrintStream0, 9);
      base64_OutputStream0.flush();
      mockPrintStream0.println("hLlLUPXw6$L5nqEI");
      base64_OutputStream0.write((-94));
      base64_OutputStream0.suspendEncoding();
      base64_OutputStream0.suspendEncoding();
      Base64.decodeToObject("");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.lookupTag(linkedList0, (Collection<String>) null);
      Base64.encodeObject((Serializable) locale0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("(U<9#t.D2nMEcbisqJ");
      mockPrintStream0.close();
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(mockPrintStream0);
      base64_OutputStream0.suspendEncoding();
      byte[] byteArray0 = Base64.decode("Ki");
      Base64.encodeBytes(byteArray0, (-130));
      Base64.encodeObject((Serializable) null);
      Base64.encodeToFile(byteArray0, "H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
      base64_OutputStream0.write(byteArray0, 1004, 1004);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-9);
      byteArray0[4] = (byte) (-124);
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-114);
      int int0 = 17;
      // Undeclared exception!
      try { 
        Base64.encodeBytes(byteArray0, 17, (int) (byte) (-9), (int) (byte) (-114));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.DeflaterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Base64.InputStream base64_InputStream0 = new Base64.InputStream((InputStream) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      // Undeclared exception!
      try { 
        Base64.decode(byteArray0, 562, 1054, (int) (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 562
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte) (-31);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)50;
      // Undeclared exception!
      try { 
        Base64.encodeBytes(byteArray0, 107, 3329);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 107
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "oX=%+A+";
      // Undeclared exception!
      try { 
        Base64.decodeToObject("oX=%+A+");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-77);
      byteArray0[5] = (byte)20;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 127);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(byteArrayInputStream0);
      try { 
        base64_InputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Improperly padded Base64 input.
         //
         verifyException("org.apache.activemq.artemis.utils.Base64$InputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Base64.encodeObject((Serializable) locale0);
      byte[] byteArray0 = Base64.decode("rO0ABXNyABBqYXZhLnV0aWwuTG9jYWxlfvgRYJww+ewDAAZJAAhoYXNoY29kZUwAB2NvdW50cnl0\nABJMamF2YS9sYW5nL1N0cmluZztMAApleHRlbnNpb25zcQB+AAFMAAhsYW5ndWFnZXEAfgABTAAG\nc2NyaXB0cQB+AAFMAAd2YXJpYW50cQB+AAF4cP////90AAJDTnQAAHQAAnpocQB+AARxAH4ABHg=");
      locale0.getScript();
      Base64.encodeBytes(byteArray0, 1);
      Base64.encodeObject((Serializable) "");
      Locale locale1 = new Locale("rO0ABXNyABBqYXZhLnV0aWwuTG9jYWxlfvgRYJww+ewDAAZJAAhoYXNoY29kZUwAB2NvdW50cnl0\nABJMamF2YS9sYW5nL1N0cmluZztMAApleHRlbnNpb25zcQB+AAFMAAhsYW5ndWFnZXEAfgABTAAG\nc2NyaXB0cQB+AAFMAAd2YXJpYW50cQB+AAF4cP////90AAJDTnQAAHQAAnpocQB+AARxAH4ABHg=", "rO0ABXQAAA==");
      locale0.getDisplayName(locale1);
      // Undeclared exception!
      try { 
        Base64.decodeToObject("4s^@12");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Base64.encodeFromFile("?8Q(oWA6X&}437");
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        Base64.encodeBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        Base64.decodeToFile((String) null, "ACtyq?E_~Yy<@9T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Base64.encodeFileToFile("oFgP(cKAO4ehBcxDk-", "oFgP(cKAO4ehBcxDk-");
      String string0 = "y:vH:S0OMREH_I@";
      Base64.encodeFileToFile("oFgP(cKAO4ehBcxDk-", "y:vH:S0OMREH_I@");
      Base64.encodeObject((Serializable) false, (-646));
      Base64.encodeFromFile("H4sIAAAAAAAAAFvzloG1uIhBMCuxLFEvJzEvXc8pPz8nNTHvrEJRw9U5v94xMTBGMbCWJeaUplYUMAAAZ2bo-C8AAAA=");
      String string1 = "WcTi\\|f-\">";
      // Undeclared exception!
      try { 
        Base64.decodeToFile("WcTi|f-\">", "y:vH:S0OMREH_I@");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 127
         //
         verifyException("org.apache.activemq.artemis.utils.Base64$OutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Base64.encodeFromFile("#");
      String string0 = null;
      // Undeclared exception!
      try { 
        Base64.encodeFromFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = null;
      String string1 = "FATAL";
      // Undeclared exception!
      try { 
        Base64.encodeFileToFile((String) null, "FATAL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        Base64.decodeToFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      locale0.getDisplayCountry();
      int int0 = 330;
      Base64.encodeObject((Serializable) locale0, 330);
      locale0.getDisplayName();
      Base64.encodeFromFile("Taiwan");
      // Undeclared exception!
      try { 
        Base64.encodeFromFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Base64.decodeFileToFile("", (String) null);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)2;
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)62;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      byteArrayInputStream0.markSupported();
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(bufferedInputStream0);
      base64_InputStream0.read(byteArray0, 0, 3621);
      Base64.encodeObject((Serializable) (byte)0);
      // Undeclared exception!
      try { 
        Base64.encodeToFile(byteArray0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)100;
      byteArray0[4] = (byte)78;
      byteArray0[5] = (byte) (-3);
      // Undeclared exception!
      try { 
        Base64.encodeToFile(byteArray0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Base64.encodeFileToFile("", "");
      Base64.encodeFileToFile("Invalid character in Base64 data.", "-d");
      byte[] byteArray0 = Base64.decode("", 26);
      Base64.decode(byteArray0, 26, 0, 0);
      Base64.encodeObject((Serializable) "Invalid character in Base64 data.");
      Base64.encodeObject((Serializable) "Invalid character in Base64 data.");
      MockFile mockFile0 = new MockFile("-d", ":6J");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(mockPrintStream0);
      base64_OutputStream0.resumeEncoding();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "";
      byte[] byteArray0 = Base64.decode("");
      int int0 = 3227;
      int int1 = (-2860);
      // Undeclared exception!
      try { 
        Base64.encodeBytes(byteArray0, 3227, (-2860));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "";
      Base64.decodeToFile("", "");
      String string1 = null;
      // Undeclared exception!
      try { 
        Base64.decodeFileToFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Base64.decode("de-DE");
      Base64.encodeBytes((byte[]) null, 4096, 0);
      // Undeclared exception!
      try { 
        Base64.encodeBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Base64.decodeFileToFile("", "");
      byte[] byteArray0 = new byte[0];
      Base64.encodeBytes(byteArray0);
      int int0 = 4;
      int int1 = 65;
      // Undeclared exception!
      try { 
        Base64.encodeBytes(byteArray0, 4, 40, 65);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte) (-59);
      byteArray0[0] = (byte) (-59);
      byte byte1 = (byte)91;
      byteArray0[1] = (byte)91;
      byte byte2 = (byte)90;
      byteArray0[2] = (byte)90;
      byte byte3 = (byte)110;
      byteArray0[3] = (byte)110;
      // Undeclared exception!
      try { 
        Base64.encodeBytes(byteArray0, 307, (-1092), (int) (byte) (-59));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(pipedOutputStream0, 0);
      base64_OutputStream0.suspendEncoding();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-81);
      pipedOutputStream0.close();
      byteArray0[1] = (byte)4;
      try { 
        base64_OutputStream0.write(byteArray0, (int) (byte) (-81), (int) (byte)4);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = ";Uo X_7WG";
      Base64.encodeToFile(byteArray0, ";Uo X_7WG");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      int int0 = 267;
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(byteArrayOutputStream0, 267);
      byteArrayOutputStream0.writeTo(base64_OutputStream0);
      int int1 = 0;
      base64_OutputStream0.write(0);
      int int2 = (-1669);
      base64_OutputStream0.flushBase64();
      base64_OutputStream0.write(1673);
      base64_OutputStream0.write(byteArray0, (-1669), (-1937));
      int int3 = 0;
      byteArrayOutputStream0.write(byteArray0);
      base64_OutputStream0.write(byteArray0, 267, 0);
      String string1 = null;
      base64_OutputStream0.close();
      base64_OutputStream0.suspendEncoding();
      // Undeclared exception!
      try { 
        Base64.decodeFileToFile(";Uo X_7WG", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-26);
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)51;
      byteArray0[5] = (byte)33;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)72;
      Base64.encodeBytes(byteArray0);
      byte[] byteArray1 = Base64.decode("5gbCADMhAwBI", (int) (byte) (-62));
      Base64.decodeToFile("5gbCADMhAwBI", "Logging Provider: %s");
      Base64.decodeToFile(">H;P/", "19omeloZql");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      try { 
        byteArrayOutputStream0.write(byteArray1, (int) (byte)3, (int) (byte) (-62));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.encodeBytes((byte[]) null, 0, 122);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Base64.encodeBytes(byteArray0, (-1981));
      Base64.encodeFromFile("");
      String string0 = "xz";
      Base64.decode("xz");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(bufferedOutputStream0);
      Base64.OutputStream base64_OutputStream1 = new Base64.OutputStream(base64_OutputStream0);
      // Undeclared exception!
      try { 
        Base64.decode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Base64.encodeFromFile("d?.!8/;C");
      Base64.decodeToFile(" Z1-D:t0Lj fTP;;Y|", "Usage: java Base64 -e|-d inputfile outputfile");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)62;
      Base64.decode(byteArray0, (int) (byte)62, (int) (byte)0, (-2847));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(pipedOutputStream0, (-2847));
      base64_OutputStream0.resumeEncoding();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Object object0 = new Object();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(dataInputStream0, (-859));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte)3;
      base64_InputStream0.read(byteArray0, 3291, (-3196));
      try { 
        base64_InputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Base64.decodeFromFile("[uI31");
      Base64.encodeFileToFile("}`PP~d-", "}`PP~d-");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(byteArrayOutputStream0);
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(objectOutputStream0);
      // Undeclared exception!
      try { 
        base64_OutputStream0.write((byte[]) null, 2118, 127);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)77;
      byte byte0 = (byte) (-119);
      byteArray0[2] = (byte) (-119);
      byte byte1 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(byteArrayInputStream0, 95);
      base64_InputStream0.reset();
      byteArrayInputStream0.close();
      base64_InputStream0.read(byteArray0);
      base64_InputStream0.markSupported();
      base64_InputStream0.skip(2906L);
      // Undeclared exception!
      try { 
        base64_InputStream0.read((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)90;
      Base64.encodeToFile(byteArray0, "Eg==");
      Base64.encodeObject((Serializable) true);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(mockFileInputStream0, (byte)10);
      try { 
        base64_InputStream0.read(byteArray0, 9, 27);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-121);
      byteArray0[1] = (byte) (-122);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)108;
      byteArray0[4] = (byte)84;
      byteArray0[5] = (byte) (-20);
      byteArray0[6] = (byte)0;
      Base64.encodeBytes(byteArray0, 0);
      Base64.encodeFromFile("h4YAbFTsAA==");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)84, (byte) (-122));
      byteArrayInputStream0.reset();
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(byteArrayInputStream0);
      base64_InputStream0.read(byteArray0, (-256), (int) (byte)0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("|y");
      mockPrintStream0.println((Object) "|y");
      Locale locale0 = new Locale("|y", "", "");
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      mockPrintStream0.println(3055.0);
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "|y";
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      locale0.getDisplayCountry(locale1);
      objectArray0[2] = (Object) mockPrintStream0;
      mockPrintStream0.format(locale0, "", objectArray0);
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(mockPrintStream0, 2072);
      Base64.encodeFileToFile("|y", "org.jboss.logging.Slf4jLoggerProvider");
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Base64.decode(byteArray0, (-59), (-59), 1750);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Base64.encodeFileToFile("Improperly padded Base64 input.", "Improperly padded Base64 input.");
      MockFile mockFile0 = new MockFile("uS{#q.,^YpUwPY$");
      mockFile0.getAbsolutePath();
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Base64.decode("uS{#q.,^YpUwPY$", 109);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream((InputStream) null);
      Base64.encodeFileToFile("uS{#q.,^YpUwPY$", "9");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/activemq-artemis/artemis-commons");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "uS{#q.,^YpUwPY$");
      Base64.decodeFromFile("uS{#q.,^YpUwPY$");
      // Undeclared exception!
      try { 
        Base64.decodeFileToFile("9", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Base64.encodeFileToFile("(decimal)", "(decimal)");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)15;
      Base64.encodeBytes(byteArray0, (int) (byte)15);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(base64_InputStream0);
      Base64.InputStream base64_InputStream1 = new Base64.InputStream(pushbackInputStream0, (byte)15);
      base64_InputStream1.read();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)65;
      byteArray0[5] = (byte) (-127);
      Base64.encodeBytes(byteArray0, (int) (byte)33, 0, 353);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      Base64.main(stringArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 241, (byte)0);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(byteArrayInputStream0);
      base64_InputStream0.read();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.encodeBytes((byte[]) null, 2500, 2500, 2500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = 1075;
      // Undeclared exception!
      try { 
        Base64.encodeBytes((byte[]) null, 1075, 1075, 1075);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.DeflaterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = null;
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-4);
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)88;
      byteArray0[5] = (byte) (-112);
      byteArray0[6] = (byte) (-121);
      byteArray0[7] = (byte)0;
      // Undeclared exception!
      try { 
        Base64.encodeBytes(byteArray0, 5, 1006, (-1783));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-49);
      Base64.encodeBytes(byteArray0, 3214);
      Base64.decode("H4sIAAAAAAAAADsPAKww2dkBAAAA", (int) (byte) (-49));
      String string0 = "AMQ202013: Unable to deserialize object.";
      MockFile mockFile0 = new MockFile("");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, "H4sIAAAAAAAAADsPAKww2dkBAAAA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"H4sIAAAAAAAAADsPAKww2dkBAAAA\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MockFile mockFile0 = new MockFile("uS{#q.,^YpUwPY$");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Base64.decode("uS{#q.,^YpUwPY$", 109);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream((InputStream) null);
      Base64.encodeFileToFile("uS{#q.,^YpUwPY$", "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/activemq-artemis/artemis-commons");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "uS{#q.,^YpUwPY$");
      Base64.decode("RC_ve40G", 0);
      Base64.decodeFileToFile("", (String) null);
      Base64.encodeFromFile("uS{#q.,^YpUwPY$");
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = 101;
      // Undeclared exception!
      try { 
        Base64.encodeBytes((byte[]) null, 101);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      // Undeclared exception!
      try { 
        Base64.encodeBytes(byteArray0, (int) (byte)122, (int) (byte)2, 60844);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 122
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = Base64.NO_OPTIONS;
      Base64.encodeObject((Serializable) 0);
      Base64.encodeObject((Serializable) "rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAA");
      Base64.decodeToObject("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(byteArrayOutputStream0);
      base64_OutputStream0.suspendEncoding();
      Base64.decodeToFile("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=", "rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=");
      Base64.encodeFromFile("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=");
      byte[] byteArray0 = new byte[4];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/activemq-artemis/artemis-commons");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)61;
      byteArray0[3] = (byte)121;
      Base64.encodeBytes(byteArray0, 0, (int) (byte)0, 0);
      // Undeclared exception!
      try { 
        Base64.decodeFileToFile("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=", ".A6Ty}X9|o&4MG");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -19
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = Base64.decode("Bad Base64 input character at ");
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream((OutputStream) null);
      Base64.encodeBytes(byteArray0, (-1351));
      Base64.encodeObject((Serializable) "Bad Base64 input character at ");
      Base64.encodeObject((Serializable) "Bad Base64 input character at ");
      Base64.encodeToFile(byteArray0, "Bad Base64 input character at ");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      MockFile mockFile0 = new MockFile("uS{#q.,^YpUwPY$");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Base64.decode("uS{#q.,^YpUwPY$", 109);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream((InputStream) null);
      Base64.encodeFileToFile("uS{#q.,^YpUwPY$", "");
      Base64.decode("RC_ve40G", 0);
      // Undeclared exception!
      try { 
        Base64.decode((byte[]) null, 0, 109, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeFileToFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      Base64.encodeObject((Serializable) uRI0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("rO0ABXNyAAxqYXZhLm5ldC5VUkmsAXguQ55JqwMAAUwABnN0cmluZ3QAEkxqYXZhL2xhbmcvU3Ry\naW5nO3hwdAAOaHR0cDovL2Zvby5iYXJ4", true);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(objectOutputStream0, 0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("rO0ABXNyAAxqYXZhLm5ldC5VUkmsAXguQ55JqwMAAUwABnN0cmluZ3QAEkxqYXZhL2xhbmcvU3Ry\naW5nO3hwdAAOaHR0cDovL2Zvby5iYXJ4");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "rO0ABXNyAAxqYXZhLm5ldC5VUkmsAXguQ55JqwMAAUwABnN0cmluZ3QAEkxqYXZhL2xhbmcvU3Ry\naW5nO3hwdAAOaHR0cDovL2Zvby5iYXJ4");
      base64_OutputStream0.close();
      byte[] byteArray0 = Base64.decode("rO0ABXNyAAxqYXZhLm5ldC5VUkmsAXguQ55JqwMAAUwABnN0cmluZ3QAEkxqYXZhL2xhbmcvU3Ry\naW5nO3hwdAAOaHR0cDovL2Zvby5iYXJ4", 6);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(pushbackInputStream0, 6);
      // Undeclared exception!
      try { 
        base64_InputStream0.read();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -19
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Base64.encodeBytes(byteArray0);
      Base64.decodeToFile("AA==", "AA==");
      Base64.encodeObject((Serializable) "AA==", 889);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/activemq-artemis/artemis-commons");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Base64.decodeToObject("AA==");
      int int0 = Base64.URL_SAFE;
      Base64.encodeObject((Serializable) 16);
      Base64.encodeBytes(byteArray0, 0, 0, 3849);
      Base64.encodeObject((Serializable) evoSuiteFile0, (-470));
      Base64.decodeFromFile("AA==");
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte) (-45);
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)67;
      byteArray0[4] = (byte) (-127);
      byteArray0[5] = (byte)51;
      Base64.encodeBytes(byteArray0);
      Base64.decodeFileToFile("ZNMDQ4Ez", "Z:xf");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Z:xf";
      stringArray0[1] = "ZNMDQ4Ez";
      stringArray0[2] = "Z:xf";
      Base64.main(stringArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Z:xf");
      Base64.encodeObject((Serializable) false);
      MockPrintStream mockPrintStream0 = new MockPrintStream("~1");
      Locale locale0 = Locale.FRANCE;
      PrintStream printStream0 = mockPrintStream0.printf(locale0, "=0[~7;{", (Object[]) stringArray0);
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(printStream0);
      base64_OutputStream0.flushBase64();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decode((String) null, 771);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      int int0 = Base64.NO_OPTIONS;
      Base64.encodeObject((Serializable) 0);
      Base64.encodeObject((Serializable) "rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAA");
      Base64.decodeToObject("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(byteArrayOutputStream0);
      base64_OutputStream0.suspendEncoding();
      Base64.decodeToFile("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=", "rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=");
      Base64.encodeFromFile("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=");
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)20;
      byteArray0[3] = (byte)121;
      Base64.encodeObject((Serializable) "rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=", (-31));
      Base64.encodeBytes(byteArray0, 0, (int) (byte)20, 0);
      base64_OutputStream0.write((-1528));
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)3;
      Base64.encodeBytes(byteArray0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)84;
      // Undeclared exception!
      try { 
        Base64.encodeBytes(byteArray0, (int) (byte)8, (int) (byte)84);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream((OutputStream) null);
      base64_OutputStream0.flushBase64();
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)3;
      byteArray0[0] = (byte)3;
      Base64.encodeToFile(byteArray0, "");
      Base64.encodeFileToFile("", "?t;)|dO^");
      Base64.encodeObject((Serializable) (byte)3, (int) (byte)3);
      // Undeclared exception!
      try { 
        Base64.encodeBytes(byteArray0, (int) (byte)3, (int) (byte)3, (-54));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.DeflaterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      MockFile mockFile0 = new MockFile("OLQ!");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(mockFileOutputStream0, (-3412));
      base64_OutputStream0.write((-2806));
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-113);
      byteArray0[3] = (byte) (-58);
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)32;
      byteArray0[6] = (byte) (-34);
      Base64.decode(byteArray0, 5, 1, 10);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte) (-46);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte)38;
      byteArray0[6] = (byte) (-80);
      Base64.decode(byteArray0, (int) (byte)0, (int) (byte)38, (int) (byte) (-80));
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-70);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-95);
      byteArray0[3] = (byte)6;
      // Undeclared exception!
      try { 
        Base64.decode(byteArray0, 10, 71, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("kolDbp3ONhSjkP*1Lx_");
      mockFileOutputStream0.flush();
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(mockFileOutputStream0, (-2623));
      byte[] byteArray0 = new byte[0];
      Base64.encodeBytes(byteArray0, (-2623));
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte) (-12);
      byteArray0[3] = (byte)89;
      Base64.decode(byteArray0, (int) (byte)0, 0, (int) (byte)0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Base64.decode("Cannot find LocationAwareLogger.log() method", 510);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "zh");
      byte[] byteArray0 = new byte[8];
      byteArray0[6] = (byte)13;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byteArray0[2] = (byte) (-107);
      byteArray0[3] = (byte) (-107);
      Base64.encodeBytes(byteArray0, 4, (int) (byte)0, 3158);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[1] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[2] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[3] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[4] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      Base64.main(stringArray0);
      Base64.decodeFromFile("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
      Base64.InputStream base64_InputStream0 = new Base64.InputStream((InputStream) null);
      // Undeclared exception!
      try { 
        base64_InputStream0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64$InputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-62);
      Base64.encodeToFile(byteArray0, "Q|UO|J$qvlmO:o@");
      Base64.decodeFileToFile("Q|UO|J$qvlmO:o@", "4J#[");
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeToObject("J/9NpeLO/n=pO");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 127
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      int int0 = Base64.NO_OPTIONS;
      Base64.encodeObject((Serializable) 0);
      Base64.encodeFromFile("rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAA");
      // Undeclared exception!
      try { 
        Base64.decodeToObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)13;
      byteArray0[6] = (byte)13;
      byte byte1 = (byte) (-107);
      byteArray0[2] = (byte) (-107);
      byte byte2 = (byte)93;
      byteArray0[3] = (byte)93;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "2{vr]z}^{yGdnL*?");
      Base64.encodeBytes(byteArray0, 4, (int) (byte)0, 3158);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[1] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[2] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[3] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[4] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      Base64.main(stringArray0);
      // Undeclared exception!
      try { 
        Base64.decodeFromFile("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 127
         //
         verifyException("org.apache.activemq.artemis.utils.Base64$InputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        Base64.decodeFromFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = "uMOoD";
      stringArray0[0] = "uMOoD";
      stringArray0[1] = "O+s)RaUF";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[2] = " could not be instantiated";
      stringArray0[3] = "qR/H+@n-G";
      stringArray0[4] = "org.apache.activemp.artemis.utils.Base64$InputStream";
      Base64.main(stringArray0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      Base64.encodeBytes(byteArray0);
      Base64.encodeFileToFile("org.apache.activemp.artemis.utils.Base64$InputStream", ")e8=j| &,pv^VO.a0#");
      int int0 = 118;
      // Undeclared exception!
      try { 
        Base64.encodeBytes(byteArray0, (int) (byte)2, 118);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String string0 = "system property";
      Base64.decodeFileToFile("s'jam  ", "system property");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(dataInputStream0, (byte) (-1));
      base64_InputStream0.read();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(pipedOutputStream0, false, "s'jam  ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // s'jam  
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 6;
      Base64.encodeBytes(byteArray0, 6);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[1] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[2] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[3] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[4] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[5] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      Base64.main(stringArray0);
      Base64.encodeObject((Serializable) "H4sIAAAAAAAAAAMAAAAAAAAAAAA=", 6);
      String string0 = "jboss";
      Base64.decodeToFile("L22BA?99u", "H4sIAAAAAAAAAFvzloG1hEHGw6TY0xEOfB2RgC0APDRVqiMAAAA=");
      // Undeclared exception!
      try { 
        Base64.encodeBytes(byteArray0, 6, 6, 6);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.DeflaterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "zh");
      byte[] byteArray0 = new byte[8];
      byteArray0[6] = (byte)13;
      byteArray0[2] = (byte) (-107);
      byteArray0[3] = (byte)93;
      Base64.encodeBytes(byteArray0, 4, (int) (byte)0, 3158);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[1] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[2] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[3] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      Base64.main(stringArray0);
      Base64.decodeFromFile("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0, (byte)93);
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(bufferedOutputStream0);
      base64_OutputStream0.write((-597));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 4);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(dataInputStream0);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(pushbackInputStream1, 147);
      try { 
        base64_InputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[6] = (byte)13;
      byteArray0[2] = (byte) (-107);
      byteArray0[3] = (byte)93;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Logging Provider: %s");
      Base64.encodeBytes(byteArray0, 4, (int) (byte)0, 3158);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[1] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[2] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[3] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[4] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      Base64.main(stringArray0);
      Base64.decodeFromFile("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
      Base64.InputStream base64_InputStream0 = new Base64.InputStream((InputStream) null);
      // Undeclared exception!
      try { 
        base64_InputStream0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64$InputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[6] = (byte)13;
      byteArray0[2] = (byte) (-107);
      byteArray0[3] = (byte)93;
      Base64.encodeBytes(byteArray0, 4, (int) (byte)0, 3158);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[1] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[2] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[3] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[4] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      Base64.main(stringArray0);
      Base64.decodeFromFile("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
      Base64.InputStream base64_InputStream0 = new Base64.InputStream((InputStream) null);
      // Undeclared exception!
      try { 
        base64_InputStream0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64$InputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-107);
      byteArray0[3] = (byte)93;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Logging Provider: %s");
      Base64.encodeBytes(byteArray0, 4, (int) (byte)0, 3158);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[1] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[2] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[3] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      stringArray0[4] = "H4sIAAAAAAAAAAMAAAAAAAAAAAA=";
      Base64.main(stringArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
      byte[] byteArray1 = Base64.decodeFromFile("H4sIAAAAAAAAAAMAAAAAAAAAAAA=");
      Base64.InputStream base64_InputStream0 = new Base64.InputStream((InputStream) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(30);
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(byteArrayOutputStream0, 69);
      base64_OutputStream0.resumeEncoding();
      base64_OutputStream0.resumeEncoding();
      base64_OutputStream0.write((int) (byte)0);
      Base64.encodeBytes(byteArray0, (int) (byte)0);
      Base64.encodeBytes(byteArray1, (-3446));
      // Undeclared exception!
      try { 
        base64_InputStream0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64$InputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      int int0 = Base64.NO_OPTIONS;
      Base64.encodeObject((Serializable) 0);
      Base64.encodeObject((Serializable) "rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAA");
      Base64.decodeToObject("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.close();
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(byteArrayOutputStream0);
      base64_OutputStream0.suspendEncoding();
      Base64.decodeToFile("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=", "rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=");
      Base64.encodeFromFile("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)61;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)20;
      byteArray0[3] = (byte)121;
      Base64.encodeObject((Serializable) "rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAA", 147);
      // Undeclared exception!
      try { 
        Base64.encodeBytes(byteArray0, 0, (int) (byte)20, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Base64.encodeBytes(byteArray0);
      Base64.decodeToFile("AA==", "AA==");
      Base64.encodeObject((Serializable) "AA==", 889);
      Base64.decodeToObject("AA==");
      int int0 = Base64.URL_SAFE;
      Base64.encodeObject((Serializable) 16);
      Base64.encodeBytes(byteArray0, 0, 0, 3849);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAQ";
      Base64.main(stringArray0);
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream("", false);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        Base64.encodeBytes((byte[]) null, (int) (byte) (-104), 1579);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-49);
      Base64.encodeBytes(byteArray0);
      Base64.encodeBytes(byteArray0, 3214);
      byte[] byteArray1 = Base64.decode("H4sIAAAAAAAAADsPAKww2dkBAAAA");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("zw==");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "H4sIAAAAAAAAADsPAKww2dkBAAAA");
      String string0 = "<'IXn-M\\kDfr";
      Base64.decodeFileToFile("zw==", "<'IXn-MkDfr");
      Base64.encodeFromFile("H4sIAAAAAAAAADsPAKww2dkBAAAA");
      Base64.encodeObject((Serializable) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2361);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(pipedInputStream0);
      base64_InputStream0.read(byteArray1, 1702, (int) (byte) (-49));
      MockFile mockFile0 = new MockFile("");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, "H4sIAAAAAAAAADsPAKww2dkBAAAA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"H4sIAAAAAAAAADsPAKww2dkBAAAA\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream(92);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)126;
      byteArray0[3] = (byte)64;
      Base64.encodeBytes(byteArray0, 53);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(pipedInputStream0, (-1527));
      try { 
        base64_InputStream0.read(byteArray0, (-1527), 8);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      int int0 = Base64.NO_OPTIONS;
      Base64.encodeObject((Serializable) 0);
      Base64.encodeObject((Serializable) "rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAA");
      Base64.decodeToObject("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Base64.OutputStream base64_OutputStream0 = new Base64.OutputStream(byteArrayOutputStream0);
      base64_OutputStream0.suspendEncoding();
      boolean boolean0 = Base64.decodeToFile("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=", "rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=");
      Base64.encodeFromFile("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=");
      byte[] byteArray0 = new byte[22];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)121;
      Base64.encodeObject((Serializable) "rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=", (-31));
      Base64.encodeBytes(byteArray0, 0, (int) (byte)0, 0);
      base64_OutputStream0.flush();
      byteArrayOutputStream0.writeTo(base64_OutputStream0);
      base64_OutputStream0.write((-1528));
      Base64.decode(byteArray0, 0, 0, 1);
      Base64.encodeFileToFile("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=", "_~gz57?T$'");
      Base64.encodeFileToFile("rO0ABXQAbXJPMEFCWE55QUJGcVlYWmhMbXhoYm1jdVNXNTBaV2RsY2hMaW9LVDNnWWM0QWdBQlNR\nQUZkbUZzZFdWNGNnQVFhbUYyWVM1c1lXNW4KTGs1MWJXSmxjb2FzbFIwTGxPQ0xBZ0FBZUhBQUFB\nQUE=", "org.apache.activemq.artemis.utils.Base64$InputStream");
      boolean boolean1 = Base64.decodeFileToFile("", "rO0ABXNyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5n\nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAA");
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      String string0 = "log";
      Base64.decodeFileToFile("log", "log");
      Base64.encodeObject((Serializable) "log");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Base64.decode("+N\"", 477);
      Base64.encodeObject((Serializable) null, 477);
      String string1 = "org.apache.activemq.artemis.utils.Base64$OutputStream";
      Base64.decodeFileToFile("org.apache.activemq.artemis.utils.Base64$OutputStream", (String) null);
      Base64.decode("rO0ABXA=", 477);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream((InputStream) null);
      // Undeclared exception!
      try { 
        base64_InputStream0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.Base64$InputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte)101;
      byteArray0[1] = (byte)90;
      Base64.encodeToFile(byteArray0, "Eg==");
      Base64.encodeFromFile("Eg==");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Base64.InputStream base64_InputStream0 = new Base64.InputStream(mockFileInputStream0, (byte)101);
      try { 
        base64_InputStream0.read(byteArray0, 9, 27);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }
}
