/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:23:18 GMT 2022
 */

package org.apache.activemq.artemis.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.PatternSyntaxException;
import org.apache.activemq.artemis.api.core.SimpleString;
import org.apache.activemq.artemis.utils.CompositeAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CompositeAddress_ESTest extends CompositeAddress_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompositeAddress.SEPARATOR = "";
      SimpleString simpleString0 = SimpleString.toSimpleString("");
      SimpleString simpleString1 = CompositeAddress.toFullQN(simpleString0, simpleString0);
      assertTrue(simpleString1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompositeAddress.SEPARATOR = "";
      String string0 = CompositeAddress.toFullQN("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = CompositeAddress.isFullyQualified("l>O>FYVA\"kdzm: ke::l>O>FYVA\"kdzm: ke");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("ln", "ln");
      boolean boolean0 = compositeAddress0.isFqqn();
      assertEquals("ln", compositeAddress0.getQueueName());
      assertEquals("ln", compositeAddress0.getAddress());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompositeAddress compositeAddress0 = CompositeAddress.getQueueName("l>O>FYVA\"kdzm: ke::l>O>FYVA\"kdzm: ke");
      assertTrue(compositeAddress0.isFqqn());
      assertEquals("l>O>FYVA\"kdzm: ke", compositeAddress0.getQueueName());
      assertEquals("l>O>FYVA\"kdzm: ke", compositeAddress0.getAddress());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("!9#U(", (String) null);
      String string0 = compositeAddress0.getQueueName();
      assertTrue(compositeAddress0.isFqqn());
      assertEquals("!9#U(", compositeAddress0.getAddress());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("Vq\":C/1", "Vq\":C/1");
      String string0 = compositeAddress0.getQueueName();
      assertTrue(compositeAddress0.isFqqn());
      assertEquals("Vq\":C/1", compositeAddress0.getAddress());
      assertEquals("Vq\":C/1", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("::");
      SimpleString simpleString1 = CompositeAddress.extractQueueName(simpleString0);
      assertEquals(0, simpleString1.length());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = CompositeAddress.extractQueueName("::");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = CompositeAddress.extractAddressName("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString("Not A Fully Qualified Name");
      // Undeclared exception!
      try { 
        CompositeAddress.toFullQN(simpleString0, (SimpleString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.SimpleString", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.isFullyQualified((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompositeAddress.SEPARATOR = "L";
      // Undeclared exception!
      try { 
        CompositeAddress.getQueueName("L");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.getQueueName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompositeAddress.SEPARATOR = "";
      SimpleString simpleString0 = new SimpleString('E');
      // Undeclared exception!
      try { 
        CompositeAddress.extractQueueName(simpleString0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.extractQueueName((SimpleString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.extractQueueName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompositeAddress.SEPARATOR = "VqKzFnehn36p8[H~|";
      // Undeclared exception!
      try { 
        CompositeAddress.extractAddressName("VqKzFnehn36p8[H~|");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 17
         // VqKzFnehn36p8[H~|
         //                  ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.extractAddressName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.extractAddressName("::");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompositeAddress.SEPARATOR = "L";
      CompositeAddress compositeAddress0 = null;
      try {
        compositeAddress0 = new CompositeAddress("L");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompositeAddress compositeAddress0 = null;
      try {
        compositeAddress0 = new CompositeAddress((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = CompositeAddress.extractQueueName("Vq\":C/1");
      assertEquals("Vq\":C/1", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompositeAddress.SEPARATOR = "";
      // Undeclared exception!
      try { 
        CompositeAddress.extractQueueName("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.getQueueName("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not A Fully Qualified Name
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompositeAddress compositeAddress0 = CompositeAddress.getQueueName("::");
      assertEquals("", compositeAddress0.getAddress());
      assertFalse(compositeAddress0.isFqqn());
      assertEquals("", compositeAddress0.getQueueName());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("");
      assertEquals("", compositeAddress0.getQueueName());
      assertFalse(compositeAddress0.isFqqn());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("a\"3[@", "");
      String string0 = compositeAddress0.getAddress();
      assertTrue(compositeAddress0.isFqqn());
      assertEquals("a\"3[@", string0);
      assertEquals("", compositeAddress0.getQueueName());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress((String) null, (String) null);
      String string0 = compositeAddress0.getAddress();
      assertNull(string0);
      assertFalse(compositeAddress0.isFqqn());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      boolean boolean0 = CompositeAddress.isFullyQualified("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = CompositeAddress.extractAddressName("VqKzFnehn36p8[H~|");
      assertEquals("VqKzFnehn36p8[H~|", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("index: ", (SimpleString.StringSimpleStringPool) null);
      SimpleString simpleString1 = CompositeAddress.extractQueueName(simpleString0);
      assertEquals(18, simpleString1.sizeof());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      SimpleString simpleString0 = new SimpleString(byteArray0);
      SimpleString simpleString1 = CompositeAddress.toFullQN(simpleString0, simpleString0);
      assertNotSame(simpleString0, simpleString1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("", "");
      String string0 = compositeAddress0.getQueueName();
      assertFalse(compositeAddress0.isFqqn());
      assertEquals("", compositeAddress0.getAddress());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("", "");
      boolean boolean0 = compositeAddress0.isFqqn();
      assertFalse(boolean0);
      assertEquals("", compositeAddress0.getAddress());
      assertEquals("", compositeAddress0.getQueueName());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("", "");
      String string0 = compositeAddress0.getAddress();
      assertEquals("", compositeAddress0.getQueueName());
      assertEquals("", string0);
      assertFalse(compositeAddress0.isFqqn());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = CompositeAddress.toFullQN("org.apache.activemq.artemis.utils.CompositeAddress", "index: ");
      assertEquals("org.apache.activemq.artemis.utils.CompositeAddress::index: ", string0);
  }
}
