/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 20 11:26:30 GMT 2022
 */

package org.apache.activemq.artemis.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.activemq.artemis.api.core.SimpleString;
import org.apache.activemq.artemis.utils.CompositeAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompositeAddress_ESTest extends CompositeAddress_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = CompositeAddress.toFullQN((String) null, "c@L|SxL/3,1Lsd]4{");
      assertEquals("null::c@L|SxL/3,1Lsd]4{", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString("`VxH2{");
      SimpleString simpleString1 = CompositeAddress.toFullQN(simpleString0, simpleString0);
      SimpleString simpleString2 = CompositeAddress.toFullQN(simpleString0, simpleString1);
      assertEquals(22, simpleString2.length());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompositeAddress.SEPARATOR = "";
      SimpleString simpleString0 = SimpleString.toSimpleString("");
      SimpleString simpleString1 = CompositeAddress.toFullQN(simpleString0, simpleString0);
      assertNotSame(simpleString0, simpleString1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompositeAddress.SEPARATOR = "";
      String string0 = CompositeAddress.toFullQN("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = CompositeAddress.isFullyQualified("::");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompositeAddress compositeAddress0 = CompositeAddress.getQueueName("::");
      boolean boolean0 = compositeAddress0.isFqqn();
      assertFalse(boolean0);
      assertEquals("", compositeAddress0.getQueueName());
      assertEquals("", compositeAddress0.getAddress());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompositeAddress compositeAddress0 = CompositeAddress.getQueueName("x4c\"4_9M(cIX`;js ::x4c\"4_9M(cIX`;js ");
      assertTrue(compositeAddress0.isFqqn());
      assertEquals("x4c\"4_9M(cIX`;js ", compositeAddress0.getQueueName());
      assertEquals("x4c\"4_9M(cIX`;js ", compositeAddress0.getAddress());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("PA/M5{(ktI^#@2&FED");
      String string0 = compositeAddress0.getAddress();
      assertFalse(compositeAddress0.isFqqn());
      assertNull(string0);
      assertEquals("PA/M5{(ktI^#@2&FED", compositeAddress0.getQueueName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("vt_y8BI66", "::");
      String string0 = compositeAddress0.getAddress();
      assertEquals("vt_y8BI66", string0);
      assertEquals("::", compositeAddress0.getQueueName());
      assertTrue(compositeAddress0.isFqqn());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleString simpleString0 = new SimpleString("p&X>wzX");
      SimpleString simpleString1 = CompositeAddress.extractQueueName(simpleString0);
      assertEquals(7, simpleString1.length());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = CompositeAddress.extractAddressName("#");
      assertEquals("#", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = CompositeAddress.extractAddressName("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.toFullQN((SimpleString) null, (SimpleString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.isFullyQualified((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompositeAddress.SEPARATOR = "U";
      // Undeclared exception!
      try { 
        CompositeAddress.getQueueName("U");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.getQueueName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompositeAddress.SEPARATOR = "";
      SimpleString simpleString0 = SimpleString.toSimpleString("");
      // Undeclared exception!
      try { 
        CompositeAddress.extractQueueName(simpleString0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.extractQueueName((SimpleString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompositeAddress.SEPARATOR = "o";
      // Undeclared exception!
      try { 
        CompositeAddress.extractQueueName("o");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.extractQueueName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.extractAddressName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompositeAddress.SEPARATOR = "m";
      CompositeAddress compositeAddress0 = null;
      try {
        compositeAddress0 = new CompositeAddress("m");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompositeAddress compositeAddress0 = null;
      try {
        compositeAddress0 = new CompositeAddress((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = CompositeAddress.extractQueueName("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompositeAddress.SEPARATOR = "";
      String string0 = CompositeAddress.extractQueueName("org.apache.activemq.artemis.utils.CompositeAddress");
      assertEquals("g.apache.activemq.artemis.utils.CompositeAddress", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.getQueueName("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not A Fully Qualified Name
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("");
      String string0 = compositeAddress0.getQueueName();
      assertFalse(compositeAddress0.isFqqn());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress((String) null, (String) null);
      String string0 = compositeAddress0.getQueueName();
      assertNull(string0);
      assertFalse(compositeAddress0.isFqqn());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      boolean boolean0 = CompositeAddress.isFullyQualified("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompositeAddress.extractAddressName("::");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.activemq.artemis.utils.CompositeAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleString simpleString0 = SimpleString.toSimpleString("");
      SimpleString simpleString1 = CompositeAddress.extractQueueName(simpleString0);
      assertTrue(simpleString1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("m", "m");
      String string0 = compositeAddress0.getQueueName();
      assertEquals("m", compositeAddress0.getAddress());
      assertEquals("m", string0);
      assertTrue(compositeAddress0.isFqqn());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("m", "m");
      boolean boolean0 = compositeAddress0.isFqqn();
      assertEquals("m", compositeAddress0.getQueueName());
      assertEquals("m", compositeAddress0.getAddress());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompositeAddress compositeAddress0 = new CompositeAddress("", "::");
      String string0 = compositeAddress0.getAddress();
      assertEquals("", string0);
      assertEquals("::", compositeAddress0.getQueueName());
      assertFalse(compositeAddress0.isFqqn());
  }
}
