/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:10:01 GMT 2022
 */

package org.apache.activemq.artemis.utils.critical;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.activemq.artemis.utils.critical.CriticalAnalyzer;
import org.apache.activemq.artemis.utils.critical.CriticalComponentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CriticalComponent_ESTest extends CriticalComponent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl((CriticalAnalyzer) null, (-1));
      criticalComponentImpl0.leaveCritical((-1));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CriticalAnalyzer criticalAnalyzer0 = mock(CriticalAnalyzer.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(criticalAnalyzer0).isMeasuring();
      CriticalComponentImpl criticalComponentImpl0 = new CriticalComponentImpl(criticalAnalyzer0, (-725));
      criticalComponentImpl0.enterCritical((-599));
  }
}
