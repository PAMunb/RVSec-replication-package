/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:10:35 GMT 2022
 */

package org.apache.activemq.artemis.api.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.buffer.ByteBuf;
import java.nio.ByteBuffer;
import org.apache.activemq.artemis.api.core.ActiveMQBuffer;
import org.apache.activemq.artemis.api.core.ActiveMQBuffers;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ActiveMQBuffers_ESTest extends ActiveMQBuffers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ActiveMQBuffer activeMQBuffer0 = ActiveMQBuffers.wrappedBuffer(byteArray0);
      assertNotNull(activeMQBuffer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ActiveMQBuffer activeMQBuffer0 = ActiveMQBuffers.fixedBuffer(0);
      assertNotNull(activeMQBuffer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteBuffer byteBuffer0 = mock(ByteBuffer.class, new ViolatedAssumptionAnswer());
      ActiveMQBuffer activeMQBuffer0 = ActiveMQBuffers.wrappedBuffer(byteBuffer0);
      assertNotNull(activeMQBuffer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteBuf byteBuf0 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      ByteBuf byteBuf1 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      doReturn(byteBuf0).when(byteBuf1).duplicate();
      ActiveMQBuffer activeMQBuffer0 = ActiveMQBuffers.wrappedBuffer(byteBuf1);
      assertNotNull(activeMQBuffer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteBuf byteBuf0 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      doReturn((ByteBuf) null).when(byteBuf0).duplicate();
      // Undeclared exception!
      try { 
        ActiveMQBuffers.wrappedBuffer(byteBuf0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // buf
         //
         verifyException("io.netty.buffer.WrappedByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      ActiveMQBuffers.pooledBuffer(Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ActiveMQBuffers.pooledBuffer((-10));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialCapacity: -10 (expected: 0+)
         //
         verifyException("io.netty.buffer.AbstractByteBufAllocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        ActiveMQBuffers.dynamicBuffer((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.ActiveMQBuffers", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      ActiveMQBuffers.dynamicBuffer(Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        ActiveMQBuffers.dynamicBuffer((-10));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialCapacity: -10 (expected: 0+)
         //
         verifyException("io.netty.buffer.AbstractByteBufAllocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ActiveMQBuffer activeMQBuffer0 = ActiveMQBuffers.dynamicBuffer((int) (byte)0);
      assertNotNull(activeMQBuffer0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ActiveMQBuffer activeMQBuffer0 = ActiveMQBuffers.pooledBuffer(2413);
      assertNotNull(activeMQBuffer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        ActiveMQBuffers.wrappedBuffer((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.netty.buffer.Unpooled", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ActiveMQBuffer activeMQBuffer0 = ActiveMQBuffers.dynamicBuffer(byteArray0);
      assertNotNull(activeMQBuffer0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        ActiveMQBuffers.fixedBuffer((-5537));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialCapacity: -5537 (expected: 0+)
         //
         verifyException("io.netty.buffer.AbstractByteBufAllocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        ActiveMQBuffers.wrappedBuffer((ByteBuf) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.api.core.ActiveMQBuffers", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        ActiveMQBuffers.wrappedBuffer((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.netty.buffer.Unpooled", e);
      }
  }
}
