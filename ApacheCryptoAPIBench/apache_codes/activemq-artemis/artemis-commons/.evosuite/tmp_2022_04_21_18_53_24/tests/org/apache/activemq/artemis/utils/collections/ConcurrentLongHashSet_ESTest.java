/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:03:46 GMT 2022
 */

package org.apache.activemq.artemis.utils.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConcurrentLongHashSet_ESTest extends ConcurrentLongHashSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(1687);
      concurrentLongHashSet0.add(1687);
      ConcurrentLongHashSet.checkBiggerEqualZero(1687);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.contains(1687);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.remove(1687);
      concurrentLongHashSet0.clear();
      ConcurrentLongHashSet concurrentLongHashSet1 = new ConcurrentLongHashSet();
      // Undeclared exception!
      try { 
        ConcurrentLongHashSet.checkBiggerEqualZero((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(16, 16);
      ConcurrentLongHashSet.checkBiggerEqualZero(2589L);
      concurrentLongHashSet0.size();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.getUsedBucketCount();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.remove(2589L);
      concurrentLongHashSet0.getUsedBucketCount();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(16, 16);
      ConcurrentLongHashSet.checkBiggerEqualZero(2589L);
      concurrentLongHashSet0.size();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.getUsedBucketCount();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.remove(2589L);
      concurrentLongHashSet0.getUsedBucketCount();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(16, 16);
      ConcurrentLongHashSet.checkBiggerEqualZero(2627L);
      concurrentLongHashSet0.size();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.contains(0L);
      ConcurrentLongHashSet.alignToPowerOfTwo(0);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.add(453L);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.getUsedBucketCount();
      concurrentLongHashSet0.contains(Integer.MAX_VALUE);
      concurrentLongHashSet0.clear();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 1687;
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(1687);
      concurrentLongHashSet0.add(1687);
      ConcurrentLongHashSet.checkBiggerEqualZero(1687);
      concurrentLongHashSet0.items();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      // Undeclared exception!
      concurrentLongHashSet0.items();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(1687, 1687);
      concurrentLongHashSet0.add(1687);
      ConcurrentLongHashSet.checkBiggerEqualZero(1687);
      concurrentLongHashSet0.items();
      ConcurrentLongHashSet concurrentLongHashSet1 = new ConcurrentLongHashSet(1687, 1897);
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet1.forEach(concurrentLongHashSet_ConsumerLong0);
      ConcurrentLongHashSet concurrentLongHashSet2 = new ConcurrentLongHashSet(1897, 1646);
      concurrentLongHashSet2.capacity();
      concurrentLongHashSet1.getUsedBucketCount();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong1 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet2.forEach(concurrentLongHashSet_ConsumerLong1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(1687);
      concurrentLongHashSet0.add(1687);
      ConcurrentLongHashSet.checkBiggerEqualZero(1687);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.remove(1687);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(16, 16);
      concurrentLongHashSet0.size();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet0.remove(1L);
      concurrentLongHashSet0.isEmpty();
      long long0 = 1L;
      concurrentLongHashSet0.contains(1L);
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.add(16);
      concurrentLongHashSet0.add(1L);
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong1 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong1);
      ConcurrentLongHashSet concurrentLongHashSet1 = new ConcurrentLongHashSet(0, 1623);
      concurrentLongHashSet1.isEmpty();
      concurrentLongHashSet1.getUsedBucketCount();
      concurrentLongHashSet1.contains(510L);
      concurrentLongHashSet1.contains(1176L);
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.remove((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.contains(0L);
      concurrentLongHashSet0.getUsedBucketCount();
      concurrentLongHashSet0.contains(1L);
      ConcurrentLongHashSet.signSafeMod(0L, 1);
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.isEmpty();
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.contains((-532L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(16, 16);
      ConcurrentLongHashSet.checkBiggerEqualZero(2589L);
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.getUsedBucketCount();
      concurrentLongHashSet0.add(2589L);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.clear();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.add(23L);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.remove(23L);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(16, 16);
      concurrentLongHashSet0.size();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet0.remove(1L);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.contains(0L);
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.remove(0L);
      concurrentLongHashSet0.items();
      ConcurrentLongHashSet.hash((-2L));
      concurrentLongHashSet0.add(0L);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.add(23L);
      concurrentLongHashSet0.add(23L);
      concurrentLongHashSet0.capacity();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      ConcurrentLongHashSet.signSafeMod(0L, 0);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.clear();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.contains(0L);
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.add(0);
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet0.contains(0);
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.items();
      ConcurrentLongHashSet.checkBiggerEqualZero(1L);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.contains(1L);
      ConcurrentLongHashSet.alignToPowerOfTwo(0);
      concurrentLongHashSet0.add(Integer.MAX_VALUE);
      ConcurrentLongHashSet.alignToPowerOfTwo(0);
      ConcurrentLongHashSet.checkBiggerEqualZero(2783L);
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong1 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong1);
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.contains(Integer.MAX_VALUE);
      concurrentLongHashSet0.isEmpty();
      // Undeclared exception!
      try { 
        ConcurrentLongHashSet.checkBiggerEqualZero((-1419L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-2492));
      concurrentLongHashSet0.capacity();
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.add((-1717L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConcurrentLongHashSet.signSafeMod(852L, 47);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.items();
      ConcurrentLongHashSet.checkBiggerEqualZero(47);
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      ConcurrentLongHashSet.checkBiggerEqualZero(1212L);
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet0.remove(1212L);
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.remove(852L);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.contains(3900L);
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.clear();
      concurrentLongHashSet0.items();
      ConcurrentLongHashSet.hash(4);
      concurrentLongHashSet0.add(3900L);
      ConcurrentLongHashSet.signSafeMod(1212L, 0);
      concurrentLongHashSet0.add(2224014147482003909L);
      ConcurrentLongHashSet.signSafeMod(1107L, 4);
      ConcurrentLongHashSet.signSafeMod((-815L), 0);
      concurrentLongHashSet0.capacity();
      concurrentLongHashSet0.clear();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.getUsedBucketCount();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConcurrentLongHashSet.hash(0L);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-1887));
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.getUsedBucketCount();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.contains(0L);
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.add((-2477L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(0);
      concurrentLongHashSet0.remove(0);
      concurrentLongHashSet0.remove(0);
      concurrentLongHashSet0.contains(1L);
      concurrentLongHashSet0.items();
      ConcurrentLongHashSet.signSafeMod(0, (-49));
      ConcurrentLongHashSet.alignToPowerOfTwo(0);
      ConcurrentLongHashSet.hash(Integer.MAX_VALUE);
      ConcurrentLongHashSet.signSafeMod((-1564071193188575457L), Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long long0 = (-2867L);
      ConcurrentLongHashSet.signSafeMod((-2867L), (-1));
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.add(253L);
      concurrentLongHashSet0.clear();
      // Undeclared exception!
      try { 
        ConcurrentLongHashSet.checkBiggerEqualZero((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(1687, 1687);
      concurrentLongHashSet0.add(1687);
      ConcurrentLongHashSet.checkBiggerEqualZero(1687);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.isEmpty();
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.size();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet0.size();
      ConcurrentLongHashSet.signSafeMod(0, 0);
      ConcurrentLongHashSet.signSafeMod(1L, 0);
      concurrentLongHashSet0.remove(1);
      ConcurrentLongHashSet.alignToPowerOfTwo(0);
      concurrentLongHashSet0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = (-2492);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-2492));
      // Undeclared exception!
      try { 
        ConcurrentLongHashSet.checkBiggerEqualZero((-2492));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 32;
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-3141), 32);
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.clear();
      long long0 = (-1L);
      // Undeclared exception!
      try { 
        ConcurrentLongHashSet.checkBiggerEqualZero((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.contains(0L);
      concurrentLongHashSet0.getUsedBucketCount();
      int int0 = 1;
      concurrentLongHashSet0.contains(1L);
      ConcurrentLongHashSet.signSafeMod(0L, 1);
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.isEmpty();
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.contains((-532L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(16, 16);
      concurrentLongHashSet0.size();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      concurrentLongHashSet0.remove(1L);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.contains(0L);
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.add(0L);
      concurrentLongHashSet0.add(453L);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.getUsedBucketCount();
      concurrentLongHashSet0.contains(0);
      concurrentLongHashSet0.contains(0);
      concurrentLongHashSet0.remove(0L);
      concurrentLongHashSet0.contains(0L);
      ConcurrentLongHashSet.alignToPowerOfTwo(0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ConcurrentLongHashSet.alignToPowerOfTwo((-2490));
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-2490), 47);
      concurrentLongHashSet0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.add(812L);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.clear();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(1687, 1687);
      concurrentLongHashSet0.add(1687);
      ConcurrentLongHashSet.checkBiggerEqualZero(1687);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.getUsedBucketCount();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(1687);
      concurrentLongHashSet0.add(1687);
      ConcurrentLongHashSet.checkBiggerEqualZero(1687);
      concurrentLongHashSet0.clear();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.add(812L);
      concurrentLongHashSet0.isEmpty();
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.forEach((ConcurrentLongHashSet.ConsumerLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet$Section", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.items();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong0 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong0);
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong1 = mock(ConcurrentLongHashSet.ConsumerLong.class, new ViolatedAssumptionAnswer());
      concurrentLongHashSet0.add(2681L);
      concurrentLongHashSet0.forEach(concurrentLongHashSet_ConsumerLong1);
      concurrentLongHashSet0.isEmpty();
      ConcurrentLongHashSet.ConsumerLong concurrentLongHashSet_ConsumerLong2 = null;
      long long0 = 2857L;
      concurrentLongHashSet0.remove(2857L);
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.forEach((ConcurrentLongHashSet.ConsumerLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet$Section", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(256);
      concurrentLongHashSet0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-2492));
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.remove((-2492));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(5, 12);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = (-1482);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-1482));
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.remove((-1482));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(1687);
      concurrentLongHashSet0.contains(1687);
      concurrentLongHashSet0.add(1687);
      ConcurrentLongHashSet.checkBiggerEqualZero(1530L);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.clear();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(1687);
      concurrentLongHashSet0.add(1687);
      ConcurrentLongHashSet.checkBiggerEqualZero(1687);
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.contains(1687);
      concurrentLongHashSet0.isEmpty();
      concurrentLongHashSet0.remove(1687);
      ConcurrentLongHashSet concurrentLongHashSet1 = new ConcurrentLongHashSet();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.getUsedBucketCount();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ConcurrentLongHashSet.checkBiggerEqualZero(125L);
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.clear();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(21, 21);
      concurrentLongHashSet0.items();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet(3491);
      // Undeclared exception!
      try { 
        concurrentLongHashSet0.contains((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.activemq.artemis.utils.collections.ConcurrentLongHashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.contains(0L);
      concurrentLongHashSet0.contains(0L);
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      concurrentLongHashSet0.size();
      concurrentLongHashSet0.items();
      concurrentLongHashSet0.items();
      ConcurrentLongHashSet.checkBiggerEqualZero(0L);
      concurrentLongHashSet0.remove(0L);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      long long0 = 0L;
      int int0 = 4220;
      ConcurrentLongHashSet.signSafeMod(0L, 4220);
      ConcurrentLongHashSet concurrentLongHashSet0 = null;
      try {
        concurrentLongHashSet0 = new ConcurrentLongHashSet(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = new ConcurrentLongHashSet((-5259), 1366);
      concurrentLongHashSet0.remove(1366);
      concurrentLongHashSet0.isEmpty();
      assertEquals(1366L, concurrentLongHashSet0.capacity());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ConcurrentLongHashSet concurrentLongHashSet0 = null;
      try {
        concurrentLongHashSet0 = new ConcurrentLongHashSet(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = (-1170);
      ConcurrentLongHashSet concurrentLongHashSet0 = null;
      try {
        concurrentLongHashSet0 = new ConcurrentLongHashSet((-1170), (-1170));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
