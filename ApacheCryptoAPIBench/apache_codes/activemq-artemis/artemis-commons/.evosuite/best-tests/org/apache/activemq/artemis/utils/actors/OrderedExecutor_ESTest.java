/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:08:35 GMT 2022
 */

package org.apache.activemq.artemis.utils.actors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.Executor;
import org.apache.activemq.artemis.utils.actors.ArtemisExecutor;
import org.apache.activemq.artemis.utils.actors.OrderedExecutor;
import org.apache.activemq.artemis.utils.actors.ProcessorBase;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrderedExecutor_ESTest extends OrderedExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Executor executor0 = mock(Executor.class, new ViolatedAssumptionAnswer());
      ArtemisExecutor artemisExecutor0 = ArtemisExecutor.delegate(executor0);
      OrderedExecutor orderedExecutor0 = new OrderedExecutor(artemisExecutor0);
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      orderedExecutor0.doTask(runnable0);
      assertEquals(0, ProcessorBase.STATE_NOT_RUNNING);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OrderedExecutor orderedExecutor0 = new OrderedExecutor((Executor) null);
      // Undeclared exception!
      try { 
        orderedExecutor0.execute((Runnable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentLinkedQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Executor executor0 = mock(Executor.class, new ViolatedAssumptionAnswer());
      ArtemisExecutor artemisExecutor0 = ArtemisExecutor.delegate(executor0);
      OrderedExecutor orderedExecutor0 = new OrderedExecutor(artemisExecutor0);
      String string0 = orderedExecutor0.toString();
      assertEquals("OrderedExecutor(tasks=[])", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Executor executor0 = mock(Executor.class, new ViolatedAssumptionAnswer());
      ArtemisExecutor artemisExecutor0 = ArtemisExecutor.delegate(executor0);
      OrderedExecutor orderedExecutor0 = new OrderedExecutor(artemisExecutor0);
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      orderedExecutor0.execute(runnable0);
      assertEquals(2, ProcessorBase.STATE_FORCED_SHUTDOWN);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OrderedExecutor orderedExecutor0 = new OrderedExecutor((Executor) null);
      orderedExecutor0.doTask((Runnable) null);
      assertEquals(0, orderedExecutor0.shutdownNow());
  }
}
