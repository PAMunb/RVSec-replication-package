/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 17:13:06 GMT 2022
 */

package org.apache.deltaspike.core.impl.message;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Serializable;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.apache.deltaspike.core.api.message.LocaleResolver;
import org.apache.deltaspike.core.api.message.Message;
import org.apache.deltaspike.core.api.message.MessageContext;
import org.apache.deltaspike.core.api.message.MessageInterpolator;
import org.apache.deltaspike.core.api.message.MessageResolver;
import org.apache.deltaspike.core.impl.message.DefaultMessageContext;
import org.apache.deltaspike.core.impl.message.DefaultMessageInterpolator;
import org.apache.deltaspike.core.impl.message.DefaultMessageResolver;
import org.apache.deltaspike.core.impl.message.MessageFormatMessageInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultMessageContext_ESTest extends DefaultMessageContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = new DefaultMessageContext();
      DefaultMessageContext defaultMessageContext1 = new DefaultMessageContext(defaultMessageContext0);
      assertFalse(defaultMessageContext1.equals((Object)defaultMessageContext0));
      
      defaultMessageContext1.getMessageSources();
      MessageContext messageContext0 = defaultMessageContext0.localeResolver(defaultMessageContext1);
      defaultMessageContext0.getMessageResolver();
      defaultMessageContext0.getMessageSources();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "P\"=Cg$xRprEAiJ>JR{";
      defaultMessageContext0.getMessageSources();
      stringArray0[2] = "C!;AyE4^MZ/G|G:";
      defaultMessageContext1.getLocale();
      defaultMessageContext1.messageSource(stringArray0);
      stringArray0[3] = "yJOSq) +JxN.(#c";
      defaultMessageContext1.messageSource(stringArray0);
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      MessageContext messageContext1 = defaultMessageContext0.messageInterpolator(defaultMessageInterpolator0);
      assertSame(messageContext1, messageContext0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = new DefaultMessageContext();
      String[] stringArray0 = new String[5];
      MessageContext messageContext0 = defaultMessageContext0.messageSource(stringArray0);
      assertSame(messageContext0, defaultMessageContext0);
      
      MessageContext messageContext1 = messageContext0.messageSource(stringArray0);
      assertSame(messageContext1, messageContext0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = new DefaultMessageContext();
      DefaultMessageContext defaultMessageContext1 = new DefaultMessageContext(defaultMessageContext0);
      defaultMessageContext0.message();
      defaultMessageContext1.message();
      MessageContext messageContext0 = defaultMessageContext1.clone();
      Locale locale0 = defaultMessageContext1.getLocale();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      DefaultMessageResolver defaultMessageResolver0 = new DefaultMessageResolver();
      List<String> list0 = defaultMessageResolver0.getMessageSources(defaultMessageContext0);
      Locale.lookupTag(linkedList0, list0);
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[6];
      serializableArray0[0] = (Serializable) defaultMessageContext1;
      defaultMessageInterpolator0.interpolate("", serializableArray0, locale0);
      serializableArray0[1] = (Serializable) defaultMessageInterpolator0;
      MessageContext messageContext1 = defaultMessageContext1.localeResolver(messageContext0);
      serializableArray0[2] = (Serializable) ".\u0000~~NHieiZ)+[^V";
      serializableArray0[3] = (Serializable) ".\u0000~~NHieiZ)+[^V";
      serializableArray0[4] = (Serializable) defaultMessageContext1;
      serializableArray0[5] = (Serializable) messageContext0;
      defaultMessageInterpolator0.interpolate(".\u0000~~NHieiZ)+[^V", serializableArray0, locale0);
      defaultMessageContext0.messageInterpolator(defaultMessageInterpolator0);
      defaultMessageContext0.getMessageSources();
      defaultMessageContext0.clone();
      MessageContext messageContext2 = defaultMessageContext0.messageInterpolator(defaultMessageInterpolator0);
      DefaultMessageResolver defaultMessageResolver1 = new DefaultMessageResolver();
      MessageContext messageContext3 = defaultMessageContext0.messageResolver(defaultMessageResolver1);
      defaultMessageContext1.messageResolver(defaultMessageResolver1);
      defaultMessageContext0.localeResolver(messageContext1);
      defaultMessageContext1.localeResolver(messageContext2);
      defaultMessageContext1.localeResolver(messageContext3);
      defaultMessageContext1.messageInterpolator(defaultMessageInterpolator0);
      defaultMessageContext1.getMessageResolver();
      MessageInterpolator messageInterpolator0 = defaultMessageContext0.getMessageInterpolator();
      assertSame(messageInterpolator0, defaultMessageInterpolator0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = new DefaultMessageContext();
      MessageFormatMessageInterpolator messageFormatMessageInterpolator0 = new MessageFormatMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[8];
      serializableArray0[0] = (Serializable) messageFormatMessageInterpolator0;
      serializableArray0[1] = (Serializable) "";
      serializableArray0[2] = (Serializable) defaultMessageContext0;
      serializableArray0[3] = (Serializable) messageFormatMessageInterpolator0;
      serializableArray0[4] = (Serializable) messageFormatMessageInterpolator0;
      serializableArray0[5] = (Serializable) messageFormatMessageInterpolator0;
      Message message0 = defaultMessageContext0.message();
      serializableArray0[6] = (Serializable) message0;
      serializableArray0[7] = (Serializable) "";
      Locale locale0 = Locale.US;
      messageFormatMessageInterpolator0.interpolate("", serializableArray0, locale0);
      messageFormatMessageInterpolator0.interpolate("", (Serializable[]) null, (Locale) null);
      defaultMessageContext0.messageInterpolator(messageFormatMessageInterpolator0);
      defaultMessageContext0.clone();
      defaultMessageContext0.clone();
      defaultMessageContext0.getLocaleResolver();
      defaultMessageContext0.getLocaleResolver();
      MessageInterpolator messageInterpolator0 = defaultMessageContext0.getMessageInterpolator();
      assertSame(messageInterpolator0, messageFormatMessageInterpolator0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = new DefaultMessageContext();
      // Undeclared exception!
      try { 
        defaultMessageContext0.messageSource((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.message.DefaultMessageContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = null;
      try {
        defaultMessageContext0 = new DefaultMessageContext((MessageContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.message.DefaultMessageContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = new DefaultMessageContext();
      Message message0 = defaultMessageContext0.message();
      assertNull(message0.getTemplate());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = new DefaultMessageContext();
      MessageContext messageContext0 = defaultMessageContext0.clone();
      assertNotSame(defaultMessageContext0, messageContext0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = new DefaultMessageContext();
      DefaultMessageContext defaultMessageContext1 = new DefaultMessageContext(defaultMessageContext0);
      defaultMessageContext0.localeResolver(defaultMessageContext1);
      Locale locale0 = defaultMessageContext0.getLocale();
      assertEquals("", locale0.getVariant());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = new DefaultMessageContext();
      defaultMessageContext0.getMessageSources();
      defaultMessageContext0.getMessageInterpolator();
      MessageContext messageContext0 = defaultMessageContext0.messageInterpolator((MessageInterpolator) null);
      DefaultMessageContext defaultMessageContext1 = new DefaultMessageContext(messageContext0);
      defaultMessageContext0.localeResolver(defaultMessageContext1);
      defaultMessageContext0.getMessageResolver();
      MessageContext messageContext1 = defaultMessageContext1.messageResolver((MessageResolver) null);
      defaultMessageContext1.getMessageSources();
      defaultMessageContext0.message();
      defaultMessageContext1.message();
      String[] stringArray0 = new String[1];
      defaultMessageContext0.getLocale();
      stringArray0[0] = ";fok)![=_>:d;gF4Gi0";
      defaultMessageContext0.messageSource(stringArray0);
      defaultMessageContext0.localeResolver(defaultMessageContext1);
      defaultMessageContext1.getMessageInterpolator();
      defaultMessageContext1.localeResolver(defaultMessageContext0);
      defaultMessageContext0.messageInterpolator((MessageInterpolator) null);
      defaultMessageContext1.messageInterpolator((MessageInterpolator) null);
      defaultMessageContext0.message();
      defaultMessageContext1.message();
      defaultMessageContext0.localeResolver(messageContext1);
      defaultMessageContext1.messageInterpolator((MessageInterpolator) null);
      defaultMessageContext0.message();
      defaultMessageContext0.clone();
      defaultMessageContext1.message();
      defaultMessageContext0.messageResolver((MessageResolver) null);
      defaultMessageContext0.messageInterpolator((MessageInterpolator) null);
      defaultMessageContext1.getMessageInterpolator();
      LocaleResolver localeResolver0 = defaultMessageContext1.getLocaleResolver();
      defaultMessageContext0.localeResolver(localeResolver0);
      defaultMessageContext1.getMessageInterpolator();
      defaultMessageContext1.messageResolver((MessageResolver) null);
      MessageInterpolator messageInterpolator0 = defaultMessageContext1.getMessageInterpolator();
      assertNull(messageInterpolator0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = new DefaultMessageContext();
      Locale locale0 = defaultMessageContext0.getLocale();
      assertEquals("eng", locale0.getISO3Language());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = new DefaultMessageContext();
      defaultMessageContext0.getLocaleResolver();
      defaultMessageContext0.localeResolver((LocaleResolver) null);
      defaultMessageContext0.getMessageInterpolator();
      defaultMessageContext0.getMessageResolver();
      defaultMessageContext0.getLocaleResolver();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "uTj<)<";
      stringArray0[2] = "'A:$ljhVBo,!)u";
      stringArray0[3] = "";
      defaultMessageContext0.getLocale();
      stringArray0[4] = "org.apache.deltaspike.core.impl.message.DefaultMessageContext";
      stringArray0[5] = "org.apache.deltaspike.core.impl.message.MessageFormatMessageInterpolator";
      defaultMessageContext0.messageSource(stringArray0);
      defaultMessageContext0.getMessageInterpolator();
      defaultMessageContext0.getLocale();
      defaultMessageContext0.localeResolver((LocaleResolver) null);
      defaultMessageContext0.getLocaleResolver();
      List<String> list0 = defaultMessageContext0.getMessageSources();
      assertEquals(6, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultMessageContext defaultMessageContext0 = new DefaultMessageContext();
      DefaultMessageContext defaultMessageContext1 = new DefaultMessageContext(defaultMessageContext0);
      defaultMessageContext1.getMessageInterpolator();
      defaultMessageContext1.messageInterpolator((MessageInterpolator) null);
      defaultMessageContext1.getLocaleResolver();
      defaultMessageContext0.getMessageResolver();
      defaultMessageContext0.getLocaleResolver();
      defaultMessageContext0.getMessageResolver();
      defaultMessageContext1.getMessageSources();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "[Oql&9T8LI{[";
      stringArray0[1] = "";
      MessageContext messageContext0 = defaultMessageContext1.messageSource(stringArray0);
      assertSame(messageContext0, defaultMessageContext1);
  }
}
