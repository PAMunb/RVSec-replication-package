/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 17:13:59 GMT 2022
 */

package org.apache.deltaspike.core.impl.message;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Serializable;
import java.util.DuplicateFormatFlagsException;
import java.util.FormatFlagsConversionMismatchException;
import java.util.IllegalFormatConversionException;
import java.util.IllegalFormatFlagsException;
import java.util.Locale;
import java.util.MissingFormatWidthException;
import java.util.UnknownFormatConversionException;
import org.apache.deltaspike.core.impl.message.DefaultMessageInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultMessageInterpolator_ESTest extends DefaultMessageInterpolator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Locale locale0 = Locale.JAPAN;
      String string0 = defaultMessageInterpolator0.interpolate("", (Serializable[]) null, locale0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Serializable[] serializableArray0 = new Serializable[8];
      Locale locale0 = Locale.FRENCH;
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      // Undeclared exception!
      try { 
        defaultMessageInterpolator0.interpolate("w%-S4KqHv.:(Jp}89", serializableArray0, locale0);
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %-S
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[4];
      Locale locale0 = Locale.JAPANESE;
      // Undeclared exception!
      try { 
        defaultMessageInterpolator0.interpolate("I%#%=Ajzb'D+&^", serializableArray0, locale0);
        fail("Expecting exception: IllegalFormatFlagsException");
      
      } catch(IllegalFormatFlagsException e) {
         //
         // Flags = '#'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Locale locale0 = Locale.UK;
      Serializable[] serializableArray0 = new Serializable[1];
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      serializableArray0[0] = (Serializable) locale_FilteringMode0;
      // Undeclared exception!
      try { 
        defaultMessageInterpolator0.interpolate("!%C?bdDYT^uJT_B{z", serializableArray0, locale0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // c != java.util.Locale$FilteringMode
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[1];
      Locale locale0 = Locale.KOREA;
      // Undeclared exception!
      try { 
        defaultMessageInterpolator0.interpolate("%(h&i_=M", serializableArray0, locale0);
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = h, Flags = (
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[1];
      Locale locale0 = Locale.TAIWAN;
      // Undeclared exception!
      try { 
        defaultMessageInterpolator0.interpolate("G%++zSD~Hin()#Jm@", serializableArray0, locale0);
        fail("Expecting exception: DuplicateFormatFlagsException");
      
      } catch(DuplicateFormatFlagsException e) {
         //
         // Flags = '+'
         //
         verifyException("java.util.Formatter$Flags", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[1];
      Locale locale0 = Locale.JAPAN;
      // Undeclared exception!
      try { 
        defaultMessageInterpolator0.interpolate((String) null, serializableArray0, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[1];
      Locale locale0 = Locale.ITALY;
      // Undeclared exception!
      try { 
        defaultMessageInterpolator0.interpolate("#%rfHUQsCtOm`s0Vz", serializableArray0, locale0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'r'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[0];
      Locale locale0 = Locale.JAPAN;
      String string0 = defaultMessageInterpolator0.interpolate((String) null, serializableArray0, locale0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Locale locale0 = Locale.JAPAN;
      String string0 = defaultMessageInterpolator0.interpolate("]%:u+Ui*_vN.{w", (Serializable[]) null, locale0);
      assertEquals("]%:u+Ui*_vN.{w", string0);
  }
}
