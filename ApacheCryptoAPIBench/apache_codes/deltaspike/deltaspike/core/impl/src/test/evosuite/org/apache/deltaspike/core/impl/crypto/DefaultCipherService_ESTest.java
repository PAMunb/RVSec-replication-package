/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 17:08:35 GMT 2022
 */

package org.apache.deltaspike.core.impl.crypto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.apache.deltaspike.core.impl.crypto.DefaultCipherService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultCipherService_ESTest extends DefaultCipherService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.encrypt("", "b9 A!TR80o");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not find master.hash file. Create a master password first!
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      String string0 = defaultCipherService0.setMasterHash("", "user.home", true);
      assertEquals("f71aadc0286989d5e4d0f34dd0cd9ac365f5a249aebdcb9055c543c2a0955b36", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      byte[] byteArray0 = defaultCipherService0.secureHash("");
      assertEquals(32, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      byte[] byteArray0 = defaultCipherService0.hexToByte("yksbo~@@=mD-");
      assertEquals(7, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-17), (byte) (-5), (byte) (-17), (byte) (-17), (byte) (-17), (byte) (-49), (byte) (-17)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro/.deltaspike/master.hash");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = defaultCipherService0.getMasterFile();
      assertEquals("/home/pedro/.deltaspike", file0.getParent());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro/.deltaspike/master.hash");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "VN");
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      File file0 = defaultCipherService0.getMasterFile();
      assertFalse(file0.isDirectory());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      File file0 = defaultCipherService0.getMasterFile();
      assertEquals(0L, file0.lastModified());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      byte[] byteArray0 = new byte[8];
      String string0 = defaultCipherService0.byteToHex(byteArray0);
      assertEquals("0000000000000000", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      byte[] byteArray0 = new byte[0];
      String string0 = defaultCipherService0.byteToHex(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      byte[] byteArray0 = defaultCipherService0.aesEncrypt("[UTFu", "[UTFu");
      String string0 = defaultCipherService0.aesDecrypt(byteArray0, "[UTFu");
      assertEquals("[UTFu", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.setMasterHash((String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro/.deltaspike");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      try { 
        defaultCipherService0.setMasterHash("", "", true);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.secureHash((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.hexToByte("JqVf<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // not a valid hex string JqVf<
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro/.deltaspike/master.hash");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        defaultCipherService0.getMasterKey((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      defaultCipherService0.setMasterHash("", "", false);
      // Undeclared exception!
      try { 
        defaultCipherService0.getMasterKey("cd372fb85148700fa88095e3492d3f9f5beb43e555e5ff26d95f5a6adc36f8e6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.getMasterKey("TL C7|ik$");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not find master.hash file. Create a master password first!
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro/.deltaspike/master.hash");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.encrypt((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      defaultCipherService0.setMasterHash("&>Op~gp65yn2", "&>Op~gp65yn2", true);
      // Undeclared exception!
      try { 
        defaultCipherService0.encrypt("389c6a892b287eb68e117fbea39703139d95e5bc10c55c345bf09b9b2589857e", "389c6a892b287eb68e117fbea39703139d95e5bc10c55c345bf09b9b2589857e");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro/.deltaspike/master.hash");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        defaultCipherService0.decrypt((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.byteToHex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.aesEncrypt((String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.aesDecrypt((byte[]) null, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.decrypt("TR>R\"", "TR>R\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // not a valid hex string TR>R\"
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.decrypt("8b*}Qc@B", (String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not find master.hash file. Create a master password first!
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      try { 
        defaultCipherService0.setMasterHash("Ide]d[*N^)", "Ide]d[*N^)", false);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Can not create directory /home/pedro/.deltaspike
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      defaultCipherService0.setMasterHash("e=d:XAmRox5", "e=d:XAmRox5", true);
      // Undeclared exception!
      try { 
        defaultCipherService0.setMasterHash("232cd60e6e7013984e6bf431b6b0b9028a4d85aecf514a6c2973db1d3da79aef", "232cd60e6e7013984e6bf431b6b0b9028a4d85aecf514a6c2973db1d3da79aef", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.decrypt("", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not find master.hash file. Create a master password first!
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      defaultCipherService0.setMasterHash("", "", false);
      // Undeclared exception!
      try { 
        defaultCipherService0.decrypt("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      byte[] byteArray0 = defaultCipherService0.hexToByte("");
      assertEquals(0, byteArray0.length);
      
      String string0 = defaultCipherService0.aesDecrypt(byteArray0, "");
      assertEquals("", string0);
  }
}
