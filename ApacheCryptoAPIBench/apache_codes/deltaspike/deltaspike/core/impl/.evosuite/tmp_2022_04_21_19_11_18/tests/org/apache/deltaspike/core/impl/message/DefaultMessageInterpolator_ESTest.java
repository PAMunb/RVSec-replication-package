/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:16:54 GMT 2022
 */

package org.apache.deltaspike.core.impl.message;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Serializable;
import java.util.IllegalFormatConversionException;
import java.util.Locale;
import java.util.MissingFormatArgumentException;
import java.util.UnknownFormatConversionException;
import org.apache.deltaspike.core.impl.message.DefaultMessageInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultMessageInterpolator_ESTest extends DefaultMessageInterpolator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Locale locale0 = Locale.CANADA;
      String string0 = defaultMessageInterpolator0.interpolate((String) null, (Serializable[]) null, locale0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Locale locale0 = Locale.CANADA;
      String string0 = defaultMessageInterpolator0.interpolate("", (Serializable[]) null, locale0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[1];
      Locale locale0 = Locale.ROOT;
      // Undeclared exception!
      try { 
        defaultMessageInterpolator0.interpolate("%", serializableArray0, locale0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '%'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[2];
      Locale locale0 = Locale.GERMAN;
      // Undeclared exception!
      try { 
        defaultMessageInterpolator0.interpolate("%<3oIKr+#L1W", serializableArray0, locale0);
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%<3o'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[2];
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      serializableArray0[0] = (Serializable) locale_FilteringMode0;
      Locale locale0 = Locale.ROOT;
      // Undeclared exception!
      try { 
        defaultMessageInterpolator0.interpolate("6q7%gC7W", serializableArray0, locale0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // g != java.util.Locale$FilteringMode
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[9];
      Locale locale0 = Locale.CANADA;
      // Undeclared exception!
      try { 
        defaultMessageInterpolator0.interpolate((String) null, serializableArray0, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultMessageInterpolator defaultMessageInterpolator0 = new DefaultMessageInterpolator();
      Serializable[] serializableArray0 = new Serializable[0];
      Locale locale0 = Locale.ROOT;
      String string0 = defaultMessageInterpolator0.interpolate("\"M1Lmls*k|g~", serializableArray0, locale0);
      assertEquals("\"M1Lmls*k|g~", string0);
  }
}
