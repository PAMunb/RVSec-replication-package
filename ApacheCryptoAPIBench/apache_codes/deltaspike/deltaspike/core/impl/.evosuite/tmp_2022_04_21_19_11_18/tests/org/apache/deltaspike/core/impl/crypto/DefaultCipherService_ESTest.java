/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:14:15 GMT 2022
 */

package org.apache.deltaspike.core.impl.crypto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.apache.deltaspike.core.impl.crypto.DefaultCipherService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultCipherService_ESTest extends DefaultCipherService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      byte[] byteArray0 = defaultCipherService0.secureHash("]PN}BJ");
      assertEquals(32, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      byte[] byteArray0 = defaultCipherService0.hexToByte("{)igrc;h]a");
      assertArrayEquals(new byte[] {(byte) (-17), (byte) (-17), (byte) (-4), (byte) (-17), (byte) (-6)}, byteArray0);
      assertEquals(5, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      String string0 = defaultCipherService0.setMasterHash("w5mmkgl&0A", "", true);
      assertEquals("cd372fb85148700fa88095e3492d3f9f5beb43e555e5ff26d95f5a6adc36f8e6", string0);
      
      File file0 = defaultCipherService0.getMasterFile();
      assertEquals(256L, file0.length());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro/.deltaspike/master.hash");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      File file0 = defaultCipherService0.getMasterFile();
      assertEquals("master.hash", file0.getName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      File file0 = defaultCipherService0.getMasterFile();
      assertTrue(file0.isFile());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      byte[] byteArray0 = new byte[1];
      String string0 = defaultCipherService0.byteToHex(byteArray0);
      assertEquals("00", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      byte[] byteArray0 = new byte[0];
      String string0 = defaultCipherService0.byteToHex(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.setMasterHash((String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro/.deltaspike");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "8vXcB*]k");
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      try { 
        defaultCipherService0.setMasterHash("8vXcB*]k", "8vXcB*]k", true);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.secureHash((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.hexToByte("zlg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // not a valid hex string zlg
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      defaultCipherService0.setMasterHash("", "", true);
      // Undeclared exception!
      try { 
        defaultCipherService0.getMasterKey((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      defaultCipherService0.setMasterHash("Can not create directory ", "Can not create directory ", true);
      // Undeclared exception!
      try { 
        defaultCipherService0.getMasterKey("1ea4b3574a326ea4ecea81fdadc6258b8595fbf6dcdf683b69b23952681e801c");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.getMasterKey(" ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not find master.hash file. Create a master password first!
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      defaultCipherService0.setMasterHash("", "", false);
      // Undeclared exception!
      try { 
        defaultCipherService0.encrypt("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      defaultCipherService0.setMasterHash("", "", true);
      // Undeclared exception!
      try { 
        defaultCipherService0.encrypt("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro/.deltaspike/master.hash");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.decrypt((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.byteToHex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.aesEncrypt((String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.aesDecrypt((byte[]) null, "XStzVG2&oP%:5CV2");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.IllegalArgumentException: Null input buffer
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      byte[] byteArray0 = defaultCipherService0.aesEncrypt("(UV]N XE *(@", "");
      String string0 = defaultCipherService0.aesDecrypt(byteArray0, "");
      assertEquals("(UV]N XE *(@", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.decrypt(" + :E$>TiL", " + :E$>TiL");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // not a valid hex string + :E$>TiL
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.decrypt("", ".deltaspike/master.hash");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not find master.hash file. Create a master password first!
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      defaultCipherService0.setMasterHash("", "", false);
      // Undeclared exception!
      try { 
        defaultCipherService0.decrypt("cd372fb85148700fa88095e3492d3f9f5beb43e555e5ff26d95f5a6adc36f8e6", "cd372fb85148700fa88095e3492d3f9f5beb43e555e5ff26d95f5a6adc36f8e6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      try { 
        defaultCipherService0.setMasterHash(". Create a master password first!", ". Create a master password first!", false);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Can not create directory /home/pedro/.deltaspike
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      defaultCipherService0.setMasterHash("", "", false);
      // Undeclared exception!
      try { 
        defaultCipherService0.setMasterHash("", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      // Undeclared exception!
      try { 
        defaultCipherService0.encrypt("", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not find master.hash file. Create a master password first!
         //
         verifyException("org.apache.deltaspike.core.impl.crypto.DefaultCipherService", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultCipherService defaultCipherService0 = new DefaultCipherService();
      byte[] byteArray0 = defaultCipherService0.hexToByte(" ");
      assertEquals(0, byteArray0.length);
      
      String string0 = defaultCipherService0.aesDecrypt(byteArray0, "1~");
      assertEquals("", string0);
  }
}
