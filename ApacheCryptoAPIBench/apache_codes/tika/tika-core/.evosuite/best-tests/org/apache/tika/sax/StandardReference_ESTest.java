/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:38:46 GMT 2022
 */

package org.apache.tika.sax;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.tika.sax.StandardReference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StandardReference_ESTest extends StandardReference_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("cN]D=1:kOLBZeJP", "]!ZvI/?bt");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setSeparator("]!ZvI/?bt");
      standardReference0.getSeparator();
      assertEquals("cN]D=1:kOLBZeJP", standardReference0.getMainOrganizationAcronym());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("]!ZvI/?bt", standardReference0.getIdentifier());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("cN]D=1:kOLBZeJP", "]!ZvI/?bt");
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder1 = standardReference_StandardReferenceBuilder0.setSecondOrganization("", "org.apache.tika.sax.StandardReference$StandardReferenceBuilder");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder1.build();
      String string0 = standardReference0.getSeparator();
      assertEquals("]!ZvI/?bt", standardReference0.getIdentifier());
      assertEquals("", string0);
      assertEquals("org.apache.tika.sax.StandardReference$StandardReferenceBuilder", standardReference0.getSecondOrganizationAcronym());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("cN]D=1:kOLBZeJP", standardReference0.getMainOrganizationAcronym());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder((String) null, (String) null);
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder1 = standardReference_StandardReferenceBuilder0.setSecondOrganization((String) null, "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder1.build();
      String string0 = standardReference0.getSecondOrganizationAcronym();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder((String) null, (String) null);
      standardReference_StandardReferenceBuilder0.setScore(744.2674135599);
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      double double0 = standardReference0.getScore();
      assertEquals(744.2674135599, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "{/)S+/1eCuvtaT2");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setScore((-1177.5598109));
      double double0 = standardReference0.getScore();
      assertEquals((-1177.5598109), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "{/)S+/1eCuvtaT2");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getMainOrganizationAcronym();
      assertNotNull(string0);
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("{/)S+/1eCuvtaT2", standardReference0.getIdentifier());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder((String) null, (String) null);
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.getIdentifier();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder((String) null, (String) null);
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setIdentifier("");
      standardReference0.getIdentifier();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("org.apache.tika.sax.StandardReference", "org.apache.tika.sax.StandardReference");
      standardReference_StandardReferenceBuilder0.setSecondOrganization("org.apache.tika.sax.StandardReference", "org.apache.tika.sax.StandardReference");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.toString();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("org.apache.tika.sax.StandardReferenceorg.apache.tika.sax.StandardReferenceorg.apache.tika.sax.StandardReference org.apache.tika.sax.StandardReference", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "{/)S+/1eCuvtaT2");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.toString();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals(" {/)S+/1eCuvtaT2", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("q", "");
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder1 = standardReference_StandardReferenceBuilder0.setSecondOrganization("", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder1.build();
      String string0 = standardReference0.toString();
      assertEquals("q ", string0);
      assertEquals("", standardReference0.getSecondOrganizationAcronym());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("q", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getMainOrganizationAcronym();
      assertEquals("", standardReference0.getIdentifier());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertNotNull(string0);
      assertEquals("q", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("cN]D=1:kOLBZeJP", "]!ZvI/?bt");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getSeparator();
      assertNull(string0);
      assertEquals("]!ZvI/?bt", standardReference0.getIdentifier());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("cN]D=1:kOLBZeJP", standardReference0.getMainOrganizationAcronym());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("q", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setSecondOrganizationAcronym("iR!|}~4");
      standardReference0.getSecondOrganizationAcronym();
      assertEquals("", standardReference0.getIdentifier());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("q", standardReference0.getMainOrganizationAcronym());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("q", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getSecondOrganizationAcronym();
      assertEquals("", standardReference0.getIdentifier());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("q", standardReference0.getMainOrganizationAcronym());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("q", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      assertEquals("q", standardReference0.getMainOrganizationAcronym());
      
      standardReference0.setMainOrganizationAcronym((String) null);
      standardReference0.getMainOrganizationAcronym();
      assertEquals("", standardReference0.getIdentifier());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("cN]D=1:kOLBZeJP", "]!ZvI/?bt");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getIdentifier();
      assertEquals("cN]D=1:kOLBZeJP", standardReference0.getMainOrganizationAcronym());
      assertEquals("]!ZvI/?bt", string0);
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "{/)S+/1eCuvtaT2");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      double double0 = standardReference0.getScore();
      assertEquals("", standardReference0.getMainOrganizationAcronym());
      assertEquals("{/)S+/1eCuvtaT2", standardReference0.getIdentifier());
      assertEquals(0.0, double0, 0.01);
  }
}
