/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:37:46 GMT 2022
 */

package org.apache.tika.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.CharBuffer;
import java.nio.file.Path;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.parser.ParseContext;
import org.apache.tika.parser.Parser;
import org.apache.tika.parser.ParsingReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParsingReader_ESTest extends ParsingReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParsingReader parsingReader0 = new ParsingReader((InputStream) null, "3NN%J\"*M_aR;");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ParsingReader parsingReader0 = null;
      try {
        parsingReader0 = new ParsingReader((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.file.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).getAbsolutePath();
      ParsingReader parsingReader0 = null;
      try {
        parsingReader0 = new ParsingReader(file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      ParsingReader parsingReader0 = new ParsingReader(inputStream0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Parser parser0 = mock(Parser.class, new ViolatedAssumptionAnswer());
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      ParseContext parseContext0 = mock(ParseContext.class, new ViolatedAssumptionAnswer());
      ParsingReader parsingReader0 = null;
      try {
        parsingReader0 = new ParsingReader(parser0, inputStream0, (Metadata) null, parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.ParsingReader$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Parser parser0 = mock(Parser.class, new ViolatedAssumptionAnswer());
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      Metadata metadata0 = mock(Metadata.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(metadata0).get(anyString());
      ParseContext parseContext0 = mock(ParseContext.class, new ViolatedAssumptionAnswer());
      ParsingReader parsingReader0 = new ParsingReader(parser0, inputStream0, metadata0, parseContext0);
      parsingReader0.ready();
      parsingReader0.close();
      parsingReader0.markSupported();
      char[] charArray0 = new char[0];
      try { 
        parsingReader0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      Metadata metadata0 = mock(Metadata.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(metadata0).get(anyString());
      ParseContext parseContext0 = mock(ParseContext.class, new ViolatedAssumptionAnswer());
      ParsingReader parsingReader0 = new ParsingReader((Parser) null, inputStream0, metadata0, parseContext0);
      parsingReader0.close();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Parser parser0 = mock(Parser.class, new ViolatedAssumptionAnswer());
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      Metadata metadata0 = mock(Metadata.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(metadata0).get(anyString());
      ParseContext parseContext0 = mock(ParseContext.class, new ViolatedAssumptionAnswer());
      ParsingReader parsingReader0 = new ParsingReader(parser0, inputStream0, metadata0, parseContext0);
      parsingReader0.ready();
      // Undeclared exception!
      try { 
        parsingReader0.read((char[]) null, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Parser parser0 = mock(Parser.class, new ViolatedAssumptionAnswer());
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      Metadata metadata0 = mock(Metadata.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(metadata0).get(anyString());
      ParseContext parseContext0 = mock(ParseContext.class, new ViolatedAssumptionAnswer());
      ParsingReader parsingReader0 = new ParsingReader(parser0, inputStream0, metadata0, parseContext0);
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = mock(CharBuffer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        parsingReader0.read(charArray0, 166, (-469));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedReader", e);
      }
  }
}
