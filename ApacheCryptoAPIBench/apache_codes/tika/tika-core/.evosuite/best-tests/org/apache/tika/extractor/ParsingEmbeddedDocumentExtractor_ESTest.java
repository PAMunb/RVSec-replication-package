/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:28:07 GMT 2022
 */

package org.apache.tika.extractor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.nio.file.Path;
import java.sql.Blob;
import javax.sql.rowset.serial.SerialBlob;
import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
import org.apache.tika.io.TikaInputStream;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.parser.ParseContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParsingEmbeddedDocumentExtractor_ESTest extends ParsingEmbeddedDocumentExtractor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParsingEmbeddedDocumentExtractor parsingEmbeddedDocumentExtractor0 = new ParsingEmbeddedDocumentExtractor((ParseContext) null);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        parsingEmbeddedDocumentExtractor0.shouldParseEmbedded(metadata0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      ParsingEmbeddedDocumentExtractor parsingEmbeddedDocumentExtractor0 = new ParsingEmbeddedDocumentExtractor(parseContext0);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        parsingEmbeddedDocumentExtractor0.parseEmbedded((InputStream) null, (ContentHandler) null, metadata0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      ParsingEmbeddedDocumentExtractor parsingEmbeddedDocumentExtractor0 = new ParsingEmbeddedDocumentExtractor(parseContext0);
      byte[] byteArray0 = new byte[5];
      SerialBlob serialBlob0 = new SerialBlob(byteArray0);
      Metadata metadata0 = new Metadata();
      TikaInputStream tikaInputStream0 = TikaInputStream.get((Blob) serialBlob0, metadata0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      parsingEmbeddedDocumentExtractor0.parseEmbedded(tikaInputStream0, xMLReaderAdapter0, metadata0, false);
      assertEquals(1, metadata0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Metadata metadata0 = new Metadata();
      TikaInputStream tikaInputStream0 = TikaInputStream.get((InputStream) pipedInputStream0);
      ParseContext parseContext0 = new ParseContext();
      ParsingEmbeddedDocumentExtractor parsingEmbeddedDocumentExtractor0 = new ParsingEmbeddedDocumentExtractor(parseContext0);
      tikaInputStream0.setOpenContainer(metadata0);
      parsingEmbeddedDocumentExtractor0.parseEmbedded(tikaInputStream0, defaultHandler2_0, metadata0, true);
      assertEquals(0L, tikaInputStream0.getPosition());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      Path path0 = mockFile1.toPath();
      Metadata metadata0 = new Metadata();
      TikaInputStream tikaInputStream0 = TikaInputStream.get(path0, metadata0);
      ParsingEmbeddedDocumentExtractor parsingEmbeddedDocumentExtractor0 = new ParsingEmbeddedDocumentExtractor(parseContext0);
      // Undeclared exception!
      try { 
        parsingEmbeddedDocumentExtractor0.parseEmbedded(tikaInputStream0, (ContentHandler) null, metadata0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ContentHandlerDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      Path path0 = mockFile1.toPath();
      Metadata metadata0 = new Metadata();
      TikaInputStream tikaInputStream0 = TikaInputStream.get(path0, metadata0);
      ParsingEmbeddedDocumentExtractor parsingEmbeddedDocumentExtractor0 = new ParsingEmbeddedDocumentExtractor(parseContext0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      parsingEmbeddedDocumentExtractor0.parseEmbedded(tikaInputStream0, xMLReaderAdapter0, metadata0, true);
      assertEquals(0L, tikaInputStream0.getPosition());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      Metadata metadata0 = new Metadata();
      TikaInputStream tikaInputStream0 = TikaInputStream.get(path0, metadata0);
      ParsingEmbeddedDocumentExtractor parsingEmbeddedDocumentExtractor0 = new ParsingEmbeddedDocumentExtractor(parseContext0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      parsingEmbeddedDocumentExtractor0.parseEmbedded(tikaInputStream0, xMLReaderAdapter0, metadata0, true);
      assertTrue(tikaInputStream0.hasLength());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      ParsingEmbeddedDocumentExtractor parsingEmbeddedDocumentExtractor0 = new ParsingEmbeddedDocumentExtractor(parseContext0);
      Metadata metadata0 = new Metadata();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      parsingEmbeddedDocumentExtractor0.parseEmbedded(byteArrayInputStream0, defaultHandler2_0, metadata0, true);
      assertEquals(0, metadata0.size());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      ParsingEmbeddedDocumentExtractor parsingEmbeddedDocumentExtractor0 = new ParsingEmbeddedDocumentExtractor(parseContext0);
      Metadata metadata0 = new Metadata();
      boolean boolean0 = parsingEmbeddedDocumentExtractor0.shouldParseEmbedded(metadata0);
      assertTrue(boolean0);
  }
}
