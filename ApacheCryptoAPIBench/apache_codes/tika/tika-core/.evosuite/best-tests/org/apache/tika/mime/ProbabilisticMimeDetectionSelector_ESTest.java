/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:18:27 GMT 2022
 */

package org.apache.tika.mime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.mime.MediaType;
import org.apache.tika.mime.MediaTypeRegistry;
import org.apache.tika.mime.MimeTypes;
import org.apache.tika.mime.ProbabilisticMimeDetectionSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProbabilisticMimeDetectionSelector_ESTest extends ProbabilisticMimeDetectionSelector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.extension_trust((-1.0F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.magic_trust((-1.0F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.priorMetaFileType(0.8259944F);
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.priorExtensionFileType(1.0F);
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.priorMagicFileType(2494.2795F);
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
      byte[] byteArray0 = new byte[21];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1460297294), (-1460297294));
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        probabilisticMimeDetectionSelector0.detect(byteArrayInputStream0, metadata0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Metadata metadata0 = new Metadata();
      try { 
        probabilisticMimeDetectionSelector0.detect(pipedInputStream0, metadata0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
      byte[] byteArray0 = new byte[20];
      byteArray0[0] = (byte)40;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1);
      Metadata metadata0 = new Metadata();
      MediaType mediaType0 = probabilisticMimeDetectionSelector0.detect(byteArrayInputStream0, metadata0);
      assertEquals("text", mediaType0.getType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0);
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)80, (byte)80);
      Metadata metadata0 = new Metadata();
      MediaType mediaType0 = probabilisticMimeDetectionSelector0.detect(byteArrayInputStream0, metadata0);
      assertFalse(mediaType0.hasParameters());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      Metadata metadata0 = new Metadata();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector((MimeTypes) null, probabilisticMimeDetectionSelector_Builder0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        probabilisticMimeDetectionSelector0.detect(pipedInputStream0, metadata0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.ProbabilisticMimeDetectionSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector((MimeTypes) null);
      Metadata metadata0 = new Metadata();
      MediaType mediaType0 = probabilisticMimeDetectionSelector0.detect((InputStream) null, metadata0);
      assertFalse(mediaType0.hasParameters());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.threshold((-1159.7764F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.meta_neg(0.1F);
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.extension_neg((-245.6F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.magic_neg((-28.127775F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.extension_trust(0.1F);
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.magic_trust(0.1F);
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
      byte[] byteArray0 = new byte[35];
      byteArray0[0] = (byte)40;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1);
      Metadata metadata0 = new Metadata();
      MediaType mediaType0 = probabilisticMimeDetectionSelector0.detect(byteArrayInputStream0, metadata0);
      assertFalse(mediaType0.hasParameters());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.priorMetaFileType((-1.0F));
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.priorExtensionFileType((-1763.666F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.priorMagicFileType((-5.0F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector((MimeTypes) null, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector((MimeTypes) null, probabilisticMimeDetectionSelector_Builder0);
      // Undeclared exception!
      try { 
        probabilisticMimeDetectionSelector0.getMediaTypeRegistry();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.ProbabilisticMimeDetectionSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.meta_trust((-1.0F));
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      // Undeclared exception!
      probabilisticMimeDetectionSelector_Builder0.build2();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0);
      MediaTypeRegistry mediaTypeRegistry0 = probabilisticMimeDetectionSelector0.getMediaTypeRegistry();
      assertNotNull(mediaTypeRegistry0);
  }
}
