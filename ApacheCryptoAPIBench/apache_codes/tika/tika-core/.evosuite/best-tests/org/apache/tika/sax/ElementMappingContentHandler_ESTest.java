/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:37:41 GMT 2022
 */

package org.apache.tika.sax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import javax.xml.namespace.QName;
import org.apache.tika.sax.ElementMappingContentHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ElementMappingContentHandler_ESTest extends ElementMappingContentHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(defaultHandler2_0, (Map<QName, ElementMappingContentHandler.TargetElement>) null);
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.endElement("4.YaJcR}c~`ks.", "Zi{@mS", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ElementMappingContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QName qName0 = QName.valueOf("j*|{z$U3d0Aa]K");
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(qName0);
      Map<QName, QName> map0 = elementMappingContentHandler_TargetElement0.getAttributesMapping();
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement1 = new ElementMappingContentHandler.TargetElement(qName0, map0);
      assertFalse(elementMappingContentHandler_TargetElement1.equals((Object)elementMappingContentHandler_TargetElement0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QName qName0 = new QName("");
      String string0 = ElementMappingContentHandler.getQNameAsString(qName0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(xMLReaderAdapter0, (Map<QName, ElementMappingContentHandler.TargetElement>) null);
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.startElement("", "", "", (Attributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ElementMappingContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(xMLReaderAdapter0, (Map<QName, ElementMappingContentHandler.TargetElement>) null);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.startElement((String) null, (String) null, (String) null, attributesImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        ElementMappingContentHandler.getQNameAsString((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ElementMappingContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(xMLReaderAdapter0, (Map<QName, ElementMappingContentHandler.TargetElement>) null);
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.endElement((String) null, (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement("Y\"9", "Y\"9");
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(259, 0).when(attributes0).getLength();
      doReturn("8Iu7%").when(attributes0).getLocalName(anyInt());
      doReturn("pB)eLi$A<n8u.4DEK").when(attributes0).getURI(anyInt());
      Attributes attributes1 = elementMappingContentHandler_TargetElement0.mapAttributes(attributes0);
      assertNotNull(attributes1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName(".*", ".*", ".*");
      String string0 = ElementMappingContentHandler.getQNameAsString(qName0);
      assertEquals(".*:.*", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(defaultHandler2_0, (Map<QName, ElementMappingContentHandler.TargetElement>) null);
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(":", "org.apache.tika.sax.ElementMappingContentHandler");
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(attributes0).getLength();
      Attributes attributes1 = elementMappingContentHandler_TargetElement0.mapAttributes(attributes0);
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.startElement(":", "", "ypM}s'M[+!CNg", attributes1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ElementMappingContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement("Y\"9", "Y\"9");
      QName qName0 = elementMappingContentHandler_TargetElement0.getMappedTagName();
      assertNotNull(qName0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement("", "");
      Map<QName, QName> map0 = elementMappingContentHandler_TargetElement0.getAttributesMapping();
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement1 = new ElementMappingContentHandler.TargetElement("", "57_Q", map0);
      assertFalse(elementMappingContentHandler_TargetElement1.equals((Object)elementMappingContentHandler_TargetElement0));
  }
}
