/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:42:17 GMT 2022
 */

package org.apache.tika.detect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tika.detect.NNTrainedModel;
import org.apache.tika.detect.NNTrainedModelBuilder;
import org.apache.tika.mime.MediaType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NNTrainedModelBuilder_ESTest extends NNTrainedModelBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      float[] floatArray0 = new float[2];
      nNTrainedModelBuilder0.setParams(floatArray0);
      float[] floatArray1 = nNTrainedModelBuilder0.getParams();
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      float[] floatArray0 = new float[0];
      nNTrainedModelBuilder0.setParams(floatArray0);
      float[] floatArray1 = nNTrainedModelBuilder0.getParams();
      assertSame(floatArray1, floatArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      nNTrainedModelBuilder0.setNumOfOutputs(45);
      int int0 = nNTrainedModelBuilder0.getNumOfOutputs();
      assertEquals(45, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      nNTrainedModelBuilder0.setNumOfOutputs((-2642));
      int int0 = nNTrainedModelBuilder0.getNumOfOutputs();
      assertEquals((-2642), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      nNTrainedModelBuilder0.setNumOfInputs(2427);
      int int0 = nNTrainedModelBuilder0.getNumOfInputs();
      assertEquals(2427, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      nNTrainedModelBuilder0.setNumOfInputs((-382));
      int int0 = nNTrainedModelBuilder0.getNumOfInputs();
      assertEquals((-382), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      nNTrainedModelBuilder0.setNumOfHidden(45);
      int int0 = nNTrainedModelBuilder0.getNumOfHidden();
      assertEquals(45, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      nNTrainedModelBuilder0.setNumOfHidden((-1763));
      int int0 = nNTrainedModelBuilder0.getNumOfHidden();
      assertEquals((-1763), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      nNTrainedModelBuilder0.setNumOfHidden(61);
      // Undeclared exception!
      try { 
        nNTrainedModelBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.detect.NNTrainedModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      nNTrainedModelBuilder0.setNumOfOutputs((-2642));
      // Undeclared exception!
      try { 
        nNTrainedModelBuilder0.build();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.detect.NNTrainedModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      int int0 = nNTrainedModelBuilder0.getNumOfHidden();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      float[] floatArray0 = nNTrainedModelBuilder0.getParams();
      assertNull(floatArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      nNTrainedModelBuilder0.setNumOfHidden(1);
      nNTrainedModelBuilder0.setNumOfOutputs(1);
      float[] floatArray0 = new float[4];
      nNTrainedModelBuilder0.setParams(floatArray0);
      NNTrainedModel nNTrainedModel0 = nNTrainedModelBuilder0.build();
      assertNotNull(nNTrainedModel0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      // Undeclared exception!
      try { 
        nNTrainedModelBuilder0.build();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.tika.detect.NNTrainedModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      int int0 = nNTrainedModelBuilder0.getNumOfInputs();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      int int0 = nNTrainedModelBuilder0.getNumOfOutputs();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      MediaType mediaType0 = nNTrainedModelBuilder0.getType();
      assertNull(mediaType0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NNTrainedModelBuilder nNTrainedModelBuilder0 = new NNTrainedModelBuilder();
      nNTrainedModelBuilder0.setType((MediaType) null);
      assertEquals(0, nNTrainedModelBuilder0.getNumOfInputs());
  }
}
