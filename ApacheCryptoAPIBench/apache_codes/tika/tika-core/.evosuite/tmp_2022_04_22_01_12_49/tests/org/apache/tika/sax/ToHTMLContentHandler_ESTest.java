/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:38:19 GMT 2022
 */

package org.apache.tika.sax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import org.apache.tika.sax.ToHTMLContentHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ToHTMLContentHandler_ESTest extends ToHTMLContentHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ToHTMLContentHandler toHTMLContentHandler0 = new ToHTMLContentHandler();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(attributes0).getLength();
      toHTMLContentHandler0.startElement("", "", "]B(", attributes0);
      toHTMLContentHandler0.endElement("]B(", "* APT+", "Error writing: ");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      ToHTMLContentHandler toHTMLContentHandler0 = null;
      try {
        toHTMLContentHandler0 = new ToHTMLContentHandler(outputStream0, "@^mi$=");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ToHTMLContentHandler toHTMLContentHandler0 = new ToHTMLContentHandler();
      toHTMLContentHandler0.inStartElement = true;
      toHTMLContentHandler0.endElement("br", "br", "br");
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ToHTMLContentHandler toHTMLContentHandler0 = new ToHTMLContentHandler();
      toHTMLContentHandler0.inStartElement = true;
      // Undeclared exception!
      try { 
        toHTMLContentHandler0.endElement("", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ToXMLContentHandler$ElementInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ToHTMLContentHandler toHTMLContentHandler0 = new ToHTMLContentHandler();
      // Undeclared exception!
      try { 
        toHTMLContentHandler0.endElement("Error writing: ", "Error writing: ", "Error writing: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ToXMLContentHandler$ElementInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ToHTMLContentHandler toHTMLContentHandler0 = new ToHTMLContentHandler();
      toHTMLContentHandler0.startDocument();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ToHTMLContentHandler toHTMLContentHandler0 = null;
      try {
        toHTMLContentHandler0 = new ToHTMLContentHandler((OutputStream) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }
}
