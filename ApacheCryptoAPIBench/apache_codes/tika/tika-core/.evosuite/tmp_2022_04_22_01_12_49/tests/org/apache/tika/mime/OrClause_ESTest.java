/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:37:44 GMT 2022
 */

package org.apache.tika.mime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.tika.mime.Clause;
import org.apache.tika.mime.OrClause;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrClause_ESTest extends OrClause_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OrClause orClause0 = new OrClause((List<Clause>) null);
      // Undeclared exception!
      try { 
        orClause0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.OrClause", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OrClause orClause0 = new OrClause((List<Clause>) null);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        orClause0.eval(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.OrClause", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OrClause orClause0 = new OrClause((List<Clause>) null);
      String string0 = orClause0.toString();
      assertEquals("ornull", string0);
  }
}
