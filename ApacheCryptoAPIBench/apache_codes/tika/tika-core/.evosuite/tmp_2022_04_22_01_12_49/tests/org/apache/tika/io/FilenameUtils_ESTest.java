/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:33:13 GMT 2022
 */

package org.apache.tika.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tika.io.FilenameUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FilenameUtils_ESTest extends FilenameUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = FilenameUtils.getName("nf9(8etB^h: Ss3wZ|");
      assertEquals(" Ss3wZ|", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = FilenameUtils.normalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = FilenameUtils.getName(".");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = FilenameUtils.getName("..");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = FilenameUtils.getName("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = FilenameUtils.getName((String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        FilenameUtils.normalize((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name cannot be null
         //
         verifyException("org.apache.tika.io.FilenameUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = FilenameUtils.normalize("@GCcu<4o");
      assertEquals("@GCcu%3C4o", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FilenameUtils filenameUtils0 = new FilenameUtils();
  }
}
