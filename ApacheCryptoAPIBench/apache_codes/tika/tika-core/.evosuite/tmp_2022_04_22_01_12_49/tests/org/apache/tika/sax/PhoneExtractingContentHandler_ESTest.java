/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:40:09 GMT 2022
 */

package org.apache.tika.sax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.sax.PhoneExtractingContentHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXParseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PhoneExtractingContentHandler_ESTest extends PhoneExtractingContentHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      System.setCurrentTimeMillis((-267L));
      Metadata metadata0 = new Metadata();
      PhoneExtractingContentHandler phoneExtractingContentHandler0 = new PhoneExtractingContentHandler((ContentHandler) null, metadata0);
      // Undeclared exception!
      try { 
        phoneExtractingContentHandler0.endDocument();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ContentHandlerDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PhoneExtractingContentHandler phoneExtractingContentHandler0 = new PhoneExtractingContentHandler();
      // Undeclared exception!
      try { 
        phoneExtractingContentHandler0.characters((char[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PhoneExtractingContentHandler phoneExtractingContentHandler0 = new PhoneExtractingContentHandler();
      char[] charArray0 = new char[1];
      charArray0[0] = 'A';
      int int0 = 0;
      phoneExtractingContentHandler0.endPrefixMapping("q");
      PhoneExtractingContentHandler phoneExtractingContentHandler1 = new PhoneExtractingContentHandler(phoneExtractingContentHandler0, (Metadata) null);
      phoneExtractingContentHandler0.setContentHandler(phoneExtractingContentHandler1);
      phoneExtractingContentHandler1.unparsedEntityDecl("identifier", "q", "q", "q");
      int int1 = 1;
      // Undeclared exception!
      try { 
        phoneExtractingContentHandler0.characters(charArray0, int0, int1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PhoneExtractingContentHandler phoneExtractingContentHandler0 = new PhoneExtractingContentHandler();
      PhoneExtractingContentHandler phoneExtractingContentHandler1 = new PhoneExtractingContentHandler(phoneExtractingContentHandler0, (Metadata) null);
      char[] charArray0 = new char[9];
      charArray0[0] = ' ';
      charArray0[1] = 'D';
      charArray0[2] = '/';
      charArray0[3] = '&';
      charArray0[4] = 'D';
      charArray0[5] = '';
      charArray0[6] = 'p';
      charArray0[7] = 'L';
      charArray0[8] = '5';
      phoneExtractingContentHandler1.characters(charArray0, 0, 99);
      assertArrayEquals(new char[] {' ', 'D', '/', '&', 'D', '', 'p', 'L', '5'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PhoneExtractingContentHandler phoneExtractingContentHandler0 = new PhoneExtractingContentHandler();
      char[] charArray0 = new char[8];
      phoneExtractingContentHandler0.endPrefixMapping("a?");
      charArray0[0] = 'y';
      charArray0[1] = '\'';
      phoneExtractingContentHandler0.startDocument();
      phoneExtractingContentHandler0.skippedEntity("");
      phoneExtractingContentHandler0.notationDecl("(,1L0 zO[h(il_b", "", "");
      charArray0[2] = 'S';
      charArray0[3] = ';';
      charArray0[4] = '2';
      phoneExtractingContentHandler0.warning((SAXParseException) null);
      charArray0[5] = 'c';
      charArray0[6] = '>';
      charArray0[7] = 'E';
      phoneExtractingContentHandler0.characters(charArray0, 0, 0);
      assertArrayEquals(new char[] {'y', '\'', 'S', ';', '2', 'c', '>', 'E'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PhoneExtractingContentHandler phoneExtractingContentHandler0 = new PhoneExtractingContentHandler();
      Metadata metadata0 = mock(Metadata.class, new ViolatedAssumptionAnswer());
      PhoneExtractingContentHandler phoneExtractingContentHandler1 = new PhoneExtractingContentHandler(phoneExtractingContentHandler0, metadata0);
      phoneExtractingContentHandler1.endDocument();
      char[] charArray0 = new char[3];
      charArray0[0] = 'w';
      charArray0[1] = '{';
      charArray0[2] = '&';
      // Undeclared exception!
      try { 
        phoneExtractingContentHandler0.characters(charArray0, (-690), (-690));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -690 > -1380
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PhoneExtractingContentHandler phoneExtractingContentHandler0 = new PhoneExtractingContentHandler();
      phoneExtractingContentHandler0.endDocument();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PhoneExtractingContentHandler phoneExtractingContentHandler0 = new PhoneExtractingContentHandler();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        phoneExtractingContentHandler0.characters(charArray0, 58, 3179);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PhoneExtractingContentHandler phoneExtractingContentHandler0 = new PhoneExtractingContentHandler();
      char[] charArray0 = new char[4];
      charArray0[0] = 'J';
      charArray0[1] = 'N';
      charArray0[2] = 'p';
      String string0 = "";
      SAXParseException sAXParseException0 = mock(SAXParseException.class, new ViolatedAssumptionAnswer());
      phoneExtractingContentHandler0.error(sAXParseException0);
      // Undeclared exception!
      try { 
        phoneExtractingContentHandler0.characters(charArray0, 46, 66);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PhoneExtractingContentHandler phoneExtractingContentHandler0 = new PhoneExtractingContentHandler();
      // Undeclared exception!
      try { 
        phoneExtractingContentHandler0.characters((char[]) null, (-926), (-926));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -926 > -1852
         //
         verifyException("java.util.Arrays", e);
      }
  }
}
