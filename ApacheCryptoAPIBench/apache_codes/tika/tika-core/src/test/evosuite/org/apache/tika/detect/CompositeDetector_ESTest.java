/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:46:25 GMT 2022
 */

package org.apache.tika.detect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.util.LinkedList;
import java.util.List;
import org.apache.tika.config.ServiceLoader;
import org.apache.tika.detect.CompositeDetector;
import org.apache.tika.detect.DefaultProbDetector;
import org.apache.tika.detect.Detector;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.mime.MediaType;
import org.apache.tika.mime.MimeTypes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompositeDetector_ESTest extends CompositeDetector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      DefaultProbDetector defaultProbDetector0 = new DefaultProbDetector(mimeTypes0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        defaultProbDetector0.detect(bufferedInputStream0, metadata0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      DefaultProbDetector defaultProbDetector0 = new DefaultProbDetector(mimeTypes0);
      Metadata metadata0 = new Metadata();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1734), 1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        defaultProbDetector0.detect(bufferedInputStream0, metadata0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      DefaultProbDetector defaultProbDetector0 = new DefaultProbDetector(mimeTypes0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      Metadata metadata0 = new Metadata();
      try { 
        defaultProbDetector0.detect(dataInputStream0, metadata0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      DefaultProbDetector defaultProbDetector0 = new DefaultProbDetector(mimeTypes0);
      List<Detector> list0 = defaultProbDetector0.getDetectors();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      DefaultProbDetector defaultProbDetector0 = new DefaultProbDetector(mimeTypes0);
      ServiceLoader serviceLoader0 = new ServiceLoader();
      InputStream inputStream0 = serviceLoader0.getResourceAsStream("");
      Metadata metadata0 = new Metadata();
      MediaType mediaType0 = defaultProbDetector0.detect(inputStream0, metadata0);
      assertEquals("text", mediaType0.getType());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      DefaultProbDetector defaultProbDetector0 = new DefaultProbDetector(mimeTypes0);
      Metadata metadata0 = new Metadata();
      MediaType mediaType0 = defaultProbDetector0.detect((InputStream) null, metadata0);
      assertEquals("application", mediaType0.getType());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      DefaultProbDetector defaultProbDetector0 = new DefaultProbDetector(mimeTypes0);
      // Undeclared exception!
      try { 
        defaultProbDetector0.detect((InputStream) null, (Metadata) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.ProbabilisticMimeDetectionSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Detector[] detectorArray0 = new Detector[0];
      CompositeDetector compositeDetector0 = new CompositeDetector(detectorArray0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LinkedList<Detector> linkedList0 = new LinkedList<Detector>();
      CompositeDetector compositeDetector0 = new CompositeDetector(linkedList0);
  }
}
