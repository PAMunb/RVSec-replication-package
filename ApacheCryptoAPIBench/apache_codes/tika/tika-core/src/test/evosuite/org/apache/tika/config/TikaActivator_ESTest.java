/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:51:22 GMT 2022
 */

package org.apache.tika.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.regex.Pattern;
import org.apache.tika.config.TikaActivator;
import org.apache.tika.detect.NameDetector;
import org.apache.tika.mime.MediaType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.osgi.framework.BundleContext;
import org.osgi.framework.Filter;
import org.osgi.framework.ServiceReference;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TikaActivator_ESTest extends TikaActivator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TikaActivator tikaActivator0 = new TikaActivator();
      BundleContext bundleContext0 = mock(BundleContext.class, new ViolatedAssumptionAnswer());
      doReturn((Filter) null, (Filter) null).when(bundleContext0).createFilter(anyString());
      doReturn((Object) null, (Object) null).when(bundleContext0).getServiceReferences(anyString() , anyString());
      tikaActivator0.start(bundleContext0);
      BundleContext bundleContext1 = mock(BundleContext.class, new ViolatedAssumptionAnswer());
      tikaActivator0.stop(bundleContext1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TikaActivator tikaActivator0 = new TikaActivator();
      BundleContext bundleContext0 = mock(BundleContext.class, new ViolatedAssumptionAnswer());
      doReturn((Filter) null, (Filter) null).when(bundleContext0).createFilter(anyString());
      doReturn((Object) null, (Object) null).when(bundleContext0).getServiceReferences(anyString() , anyString());
      doReturn(false).when(bundleContext0).ungetService(any(org.osgi.framework.ServiceReference.class));
      tikaActivator0.start(bundleContext0);
      ServiceReference serviceReference0 = mock(ServiceReference.class, new ViolatedAssumptionAnswer());
      tikaActivator0.removedService(serviceReference0, serviceReference0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TikaActivator tikaActivator0 = new TikaActivator();
      BundleContext bundleContext0 = mock(BundleContext.class, new ViolatedAssumptionAnswer());
      doReturn((Filter) null, (Filter) null).when(bundleContext0).createFilter(anyString());
      doReturn((Object) null).when(bundleContext0).getService(any(org.osgi.framework.ServiceReference.class));
      doReturn((Object) null, (Object) null).when(bundleContext0).getServiceReferences(anyString() , anyString());
      tikaActivator0.start(bundleContext0);
      ServiceReference serviceReference0 = mock(ServiceReference.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(serviceReference0).getProperty(anyString());
      Object object0 = tikaActivator0.addingService(serviceReference0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TikaActivator tikaActivator0 = new TikaActivator();
      Filter filter0 = mock(Filter.class, new ViolatedAssumptionAnswer());
      HashMap<Pattern, MediaType> hashMap0 = new HashMap<Pattern, MediaType>();
      NameDetector nameDetector0 = new NameDetector(hashMap0);
      ServiceReference[] serviceReferenceArray0 = new ServiceReference[5];
      ServiceReference serviceReference0 = mock(ServiceReference.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(serviceReference0).getProperty(anyString());
      serviceReferenceArray0[1] = serviceReference0;
      BundleContext bundleContext0 = mock(BundleContext.class, new ViolatedAssumptionAnswer());
      doReturn(filter0, filter0).when(bundleContext0).createFilter(anyString());
      doReturn(nameDetector0).when(bundleContext0).getService(any(org.osgi.framework.ServiceReference.class));
      doReturn((Object) serviceReferenceArray0, (Object) serviceReferenceArray0).when(bundleContext0).getServiceReferences(anyString() , anyString());
      tikaActivator0.start(bundleContext0);
      Object object0 = tikaActivator0.addingService(serviceReferenceArray0[1]);
      assertSame(object0, nameDetector0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TikaActivator tikaActivator0 = new TikaActivator();
      try { 
        tikaActivator0.start((BundleContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.osgi.util.tracker.ServiceTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TikaActivator tikaActivator0 = new TikaActivator();
      Integer integer0 = new Integer(0);
      ServiceReference serviceReference0 = mock(ServiceReference.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(serviceReference0).getProperty(anyString());
      // Undeclared exception!
      try { 
        tikaActivator0.addingService(serviceReference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.config.TikaActivator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TikaActivator tikaActivator0 = new TikaActivator();
      ServiceReference serviceReference0 = mock(ServiceReference.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        tikaActivator0.removedService(serviceReference0, serviceReference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.config.TikaActivator", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TikaActivator tikaActivator0 = new TikaActivator();
      ServiceReference serviceReference0 = mock(ServiceReference.class, new ViolatedAssumptionAnswer());
      tikaActivator0.modifiedService(serviceReference0, serviceReference0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TikaActivator tikaActivator0 = new TikaActivator();
      BundleContext bundleContext0 = mock(BundleContext.class, new ViolatedAssumptionAnswer());
      try { 
        tikaActivator0.stop(bundleContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.config.TikaActivator", e);
      }
  }
}
