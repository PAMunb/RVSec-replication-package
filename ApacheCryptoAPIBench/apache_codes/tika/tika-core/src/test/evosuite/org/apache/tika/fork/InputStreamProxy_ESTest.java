/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:58:26 GMT 2022
 */

package org.apache.tika.fork;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import org.apache.tika.fork.InputStreamProxy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InputStreamProxy_ESTest extends InputStreamProxy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InputStreamProxy inputStreamProxy0 = new InputStreamProxy(514);
      // Undeclared exception!
      try { 
        inputStreamProxy0.read((byte[]) null, 514, 514);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.fork.InputStreamProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InputStreamProxy inputStreamProxy0 = new InputStreamProxy((-954));
      // Undeclared exception!
      try { 
        inputStreamProxy0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.fork.InputStreamProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InputStreamProxy inputStreamProxy0 = new InputStreamProxy(3015);
      DataOutputStream dataOutputStream0 = mock(DataOutputStream.class, new ViolatedAssumptionAnswer());
      inputStreamProxy0.init((DataInputStream) null, dataOutputStream0);
  }
}
