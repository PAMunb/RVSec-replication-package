/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:32:55 GMT 2022
 */

package org.apache.tika.mime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.mime.MediaType;
import org.apache.tika.mime.MediaTypeRegistry;
import org.apache.tika.mime.MimeTypes;
import org.apache.tika.mime.ProbabilisticMimeDetectionSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ProbabilisticMimeDetectionSelector_ESTest extends ProbabilisticMimeDetectionSelector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.meta_trust((-517.93F));
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.extension_trust((-1765.423F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.magic_trust((-847.99F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector((MimeTypes) null, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.priorMetaFileType((-1270.3608F));
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.priorExtensionFileType(1648.0F);
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.priorMagicFileType((-847.99F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector((MimeTypes) null, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
      MediaTypeRegistry mediaTypeRegistry0 = probabilisticMimeDetectionSelector0.getMediaTypeRegistry();
      assertNotNull(mediaTypeRegistry0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.magic_trust(2602.0F);
      probabilisticMimeDetectionSelector_Builder0.threshold((-1765.423F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte) (-45);
      byteArray0[2] = (byte) (-68);
      byteArray0[3] = (byte) (-37);
      byteArray0[4] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Metadata metadata0 = new Metadata();
      MediaType mediaType0 = probabilisticMimeDetectionSelector0.detect(byteArrayInputStream0, metadata0);
      assertNull(mediaType0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector((MimeTypes) null, probabilisticMimeDetectionSelector_Builder0);
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        probabilisticMimeDetectionSelector0.detect(byteArrayInputStream0, metadata0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.ProbabilisticMimeDetectionSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2192), (byte)127);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        probabilisticMimeDetectionSelector0.detect(dataInputStream0, metadata0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      Metadata metadata0 = new Metadata();
      try { 
        probabilisticMimeDetectionSelector0.detect(bufferedInputStream0, metadata0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, (ProbabilisticMimeDetectionSelector.Builder) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.magic_trust(2601.7454F);
      probabilisticMimeDetectionSelector_Builder0.priorMagicFileType(1.0F);
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)82;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Metadata metadata0 = new Metadata();
      MediaType mediaType0 = probabilisticMimeDetectionSelector0.detect(byteArrayInputStream0, metadata0);
      assertNotNull(mediaType0);
      assertEquals("octet-stream", mediaType0.getSubtype());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)82;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Metadata metadata0 = new Metadata();
      MediaType mediaType0 = probabilisticMimeDetectionSelector0.detect(byteArrayInputStream0, metadata0);
      assertEquals("text", mediaType0.getType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Metadata metadata0 = new Metadata();
      MediaType mediaType0 = probabilisticMimeDetectionSelector0.detect(byteArrayInputStream0, metadata0);
      assertFalse(mediaType0.hasParameters());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
      Metadata metadata0 = new Metadata();
      MediaType mediaType0 = probabilisticMimeDetectionSelector0.detect((InputStream) null, metadata0);
      assertFalse(mediaType0.hasParameters());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.meta_neg(778.87354F);
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.extension_neg((-847.99F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector((MimeTypes) null, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.magic_neg(1648.0F);
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.meta_trust(1648.0F);
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.extension_trust(1648.0F);
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      probabilisticMimeDetectionSelector_Builder0.priorMetaFileType(34.19059F);
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder1 = probabilisticMimeDetectionSelector_Builder0.priorExtensionFileType((-1765.423F));
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector((MimeTypes) null);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(probabilisticMimeDetectionSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector((MimeTypes) null, probabilisticMimeDetectionSelector_Builder0);
      // Undeclared exception!
      try { 
        probabilisticMimeDetectionSelector0.getMediaTypeRegistry();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.ProbabilisticMimeDetectionSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      // Undeclared exception!
      probabilisticMimeDetectionSelector_Builder0.build2();
  }
}
