/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:56:52 GMT 2022
 */

package org.apache.tika.mime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.apache.tika.mime.AndClause;
import org.apache.tika.mime.Clause;
import org.apache.tika.mime.MagicMatch;
import org.apache.tika.mime.MediaType;
import org.apache.tika.mime.OrClause;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrClause_ESTest extends OrClause_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Clause> linkedList0 = new LinkedList<Clause>();
      MediaType mediaType0 = mock(MediaType.class, new ViolatedAssumptionAnswer());
      MagicMatch magicMatch0 = new MagicMatch(mediaType0, "", "&ZPw1#QP/}", "", "");
      linkedList0.add((Clause) magicMatch0);
      OrClause orClause0 = new OrClause(linkedList0);
      // Undeclared exception!
      try { 
        orClause0.size();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"&ZPw1#QP/}\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OrClause orClause0 = new OrClause((List<Clause>) null);
      // Undeclared exception!
      try { 
        orClause0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.OrClause", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<Clause> linkedList0 = new LinkedList<Clause>();
      MediaType mediaType0 = mock(MediaType.class, new ViolatedAssumptionAnswer());
      MagicMatch magicMatch0 = new MagicMatch(mediaType0, "or", "or", "=M:x", "or");
      linkedList0.offer(magicMatch0);
      OrClause orClause0 = new OrClause(linkedList0);
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        orClause0.eval(byteArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"or\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<Clause> linkedList0 = new LinkedList<Clause>();
      Clause[] clauseArray0 = new Clause[0];
      AndClause andClause0 = new AndClause(clauseArray0);
      linkedList0.offer(andClause0);
      OrClause orClause0 = new OrClause(linkedList0);
      int int0 = orClause0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<Clause> linkedList0 = new LinkedList<Clause>();
      linkedList0.add((Clause) null);
      OrClause orClause0 = new OrClause(linkedList0);
      // Undeclared exception!
      try { 
        orClause0.eval((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.OrClause", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<Clause> linkedList0 = new LinkedList<Clause>();
      OrClause orClause0 = new OrClause(linkedList0);
      boolean boolean0 = orClause0.eval((byte[]) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<Clause> linkedList0 = new LinkedList<Clause>();
      OrClause orClause0 = new OrClause(linkedList0);
      String string0 = orClause0.toString();
      assertEquals("or[]", string0);
  }
}
