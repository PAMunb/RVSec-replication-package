/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:48:05 GMT 2022
 */

package org.apache.tika.language.detect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tika.language.detect.LanguageConfidence;
import org.apache.tika.language.detect.LanguageResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LanguageResult_ESTest extends LanguageResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LanguageConfidence languageConfidence0 = LanguageConfidence.LOW;
      LanguageResult languageResult0 = new LanguageResult((String) null, languageConfidence0, 3105.0F);
      float float0 = languageResult0.getRawScore();
      assertEquals(3105.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LanguageConfidence languageConfidence0 = LanguageConfidence.LOW;
      LanguageResult languageResult0 = new LanguageResult("", languageConfidence0, (-1.0F));
      float float0 = languageResult0.getRawScore();
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LanguageConfidence languageConfidence0 = LanguageConfidence.LOW;
      LanguageResult languageResult0 = new LanguageResult((String) null, languageConfidence0, 3105.0F);
      languageResult0.getLanguage();
      assertEquals(3105.0F, languageResult0.getRawScore(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LanguageConfidence languageConfidence0 = LanguageConfidence.NONE;
      LanguageResult languageResult0 = new LanguageResult("pSGzS:g}VnMNuH/|I_", languageConfidence0, (-1456.1F));
      languageResult0.getLanguage();
      assertEquals((-1456.1F), languageResult0.getRawScore(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LanguageResult languageResult0 = new LanguageResult((String) null, (LanguageConfidence) null, 0.0F);
      languageResult0.getConfidence();
      assertEquals(0.0F, languageResult0.getRawScore(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LanguageConfidence languageConfidence0 = LanguageConfidence.LOW;
      LanguageResult languageResult0 = new LanguageResult((String) null, languageConfidence0, 3105.0F);
      // Undeclared exception!
      try { 
        languageResult0.isLanguage("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.detect.LanguageResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LanguageConfidence languageConfidence0 = LanguageConfidence.LOW;
      LanguageResult languageResult0 = new LanguageResult((String) null, languageConfidence0, 3105.0F);
      boolean boolean0 = languageResult0.NULL.isLanguage("null: LOW (3105.000000)");
      assertEquals(3105.0F, languageResult0.getRawScore(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LanguageResult languageResult0 = LanguageResult.NULL;
      boolean boolean0 = languageResult0.NULL.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LanguageResult languageResult0 = LanguageResult.NULL;
      boolean boolean0 = languageResult0.isUnknown();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LanguageConfidence languageConfidence0 = LanguageConfidence.LOW;
      LanguageResult languageResult0 = new LanguageResult((String) null, languageConfidence0, 3105.0F);
      boolean boolean0 = languageResult0.isUnknown();
      assertFalse(boolean0);
      assertEquals(3105.0F, languageResult0.getRawScore(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LanguageConfidence languageConfidence0 = LanguageConfidence.HIGH;
      LanguageResult languageResult0 = new LanguageResult((String) null, languageConfidence0, 17.0F);
      boolean boolean0 = languageResult0.isReasonablyCertain();
      assertTrue(boolean0);
      assertEquals(17.0F, languageResult0.getRawScore(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LanguageResult languageResult0 = LanguageResult.NULL;
      boolean boolean0 = languageResult0.isReasonablyCertain();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LanguageResult languageResult0 = LanguageResult.NULL;
      String string0 = languageResult0.getLanguage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LanguageResult languageResult0 = LanguageResult.NULL;
      LanguageConfidence languageConfidence0 = languageResult0.getConfidence();
      assertEquals(LanguageConfidence.NONE, languageConfidence0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LanguageConfidence languageConfidence0 = LanguageConfidence.HIGH;
      LanguageResult languageResult0 = new LanguageResult((String) null, languageConfidence0, 17.0F);
      String string0 = languageResult0.toString();
      assertEquals("null: HIGH (17.000000)", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LanguageResult languageResult0 = LanguageResult.NULL;
      float float0 = languageResult0.getRawScore();
      assertEquals(0.0F, float0, 0.01F);
  }
}
