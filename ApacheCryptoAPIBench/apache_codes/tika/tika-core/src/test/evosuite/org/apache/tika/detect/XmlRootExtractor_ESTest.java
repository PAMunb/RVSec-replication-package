/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:52:59 GMT 2022
 */

package org.apache.tika.detect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PushbackInputStream;
import javax.xml.namespace.QName;
import org.apache.tika.detect.XmlRootExtractor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlRootExtractor_ESTest extends XmlRootExtractor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlRootExtractor xmlRootExtractor0 = new XmlRootExtractor();
      // Undeclared exception!
      try { 
        xmlRootExtractor0.extractRootElement((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlRootExtractor xmlRootExtractor0 = new XmlRootExtractor();
      byte[] byteArray0 = new byte[1];
      QName qName0 = xmlRootExtractor0.extractRootElement(byteArray0);
      assertNull(qName0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlRootExtractor xmlRootExtractor0 = new XmlRootExtractor();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      QName qName0 = xmlRootExtractor0.extractRootElement((InputStream) pushbackInputStream0);
      assertNull(qName0);
  }
}
