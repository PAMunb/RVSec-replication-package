/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:46:02 GMT 2022
 */

package org.apache.tika.fork;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.net.URL;
import org.apache.tika.fork.ClassLoaderProxy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassLoaderProxy_ESTest extends ClassLoaderProxy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(42);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      classLoaderProxy0.init(dataInputStream0, dataOutputStream0);
      // Undeclared exception!
      try { 
        classLoaderProxy0.findResource("p");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.MalformedURLException: unknown protocol: tika-in-memory
         //
         verifyException("org.apache.tika.fork.MemoryURLStreamHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(42);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      classLoaderProxy0.init(dataInputStream0, dataOutputStream0);
      URL uRL0 = classLoaderProxy0.findResource("p");
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(42);
      // Undeclared exception!
      try { 
        classLoaderProxy0.findResources((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.fork.ClassLoaderProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(1);
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-124), 21);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1540);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      classLoaderProxy0.init(dataInputStream0, dataOutputStream0);
      // Undeclared exception!
      try { 
        classLoaderProxy0.findResources("A~7e");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(46);
      PipedInputStream pipedInputStream0 = new PipedInputStream(3148);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(46);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      classLoaderProxy0.init(dataInputStream0, dataOutputStream0);
      try { 
        classLoaderProxy0.findResources("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(42);
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)46;
      byteArray0[5] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readByte();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      classLoaderProxy0.init(dataInputStream0, dataOutputStream0);
      classLoaderProxy0.findResource("p");
      classLoaderProxy0.findResources("p");
      try { 
        classLoaderProxy0.findResources("Unable to load class ");
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(447);
      // Undeclared exception!
      try { 
        classLoaderProxy0.findClass("OnE}2'_ezt~7w");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.fork.ClassLoaderProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(42);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      classLoaderProxy0.init(dataInputStream0, dataOutputStream0);
      classLoaderProxy0.findResource("p");
      try { 
        classLoaderProxy0.findClass("p");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Unable to load class p
         //
         verifyException("org.apache.tika.fork.ClassLoaderProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(42);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      classLoaderProxy0.init(dataInputStream0, dataOutputStream0);
      classLoaderProxy0.findResource("p");
      // Undeclared exception!
      try { 
        classLoaderProxy0.findClass("p");
        fail("Expecting exception: ClassFormatError");
      
      } catch(ClassFormatError e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(42);
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      classLoaderProxy0.init(dataInputStream0, dataOutputStream0);
      try { 
        classLoaderProxy0.findClass("Uabl o loadAclass ");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Unable to find class Uabl o loadAclass 
         //
         verifyException("org.apache.tika.fork.ClassLoaderProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(42);
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readByte();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      classLoaderProxy0.init(dataInputStream0, dataOutputStream0);
      classLoaderProxy0.findResource("p");
      classLoaderProxy0.findResources("p");
      // Undeclared exception!
      try { 
        classLoaderProxy0.findResources("Unable to load class ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.MalformedURLException: unknown protocol: tika-in-memory
         //
         verifyException("org.apache.tika.fork.MemoryURLStreamHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(42);
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      classLoaderProxy0.init(dataInputStream0, dataOutputStream0);
      classLoaderProxy0.findResource("p");
      URL uRL0 = classLoaderProxy0.findResource("p");
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(1);
      // Undeclared exception!
      try { 
        classLoaderProxy0.findResource("tika-in-memory");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.fork.ClassLoaderProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassLoaderProxy classLoaderProxy0 = new ClassLoaderProxy(1);
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-124), 21);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1540);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      classLoaderProxy0.init(dataInputStream0, dataOutputStream0);
      // Undeclared exception!
      try { 
        classLoaderProxy0.findResource("tika-in-memory");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
