/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:54:08 GMT 2022
 */

package org.apache.tika.mime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tika.mime.Clause;
import org.apache.tika.mime.Magic;
import org.apache.tika.mime.MimeType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Magic_ESTest extends Magic_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MimeType mimeType0 = mock(MimeType.class, new ViolatedAssumptionAnswer());
      Magic magic0 = new Magic(mimeType0, 2159, (Clause) null);
      MimeType mimeType1 = mock(MimeType.class, new ViolatedAssumptionAnswer());
      Magic magic1 = new Magic(mimeType1, 2159, (Clause) null);
      // Undeclared exception!
      try { 
        magic0.compareTo(magic1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.Magic", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MimeType mimeType0 = mock(MimeType.class, new ViolatedAssumptionAnswer());
      Magic magic0 = new Magic(mimeType0, 0, (Clause) null);
      int int0 = magic0.getPriority();
      assertEquals(0, int0);
      assertEquals("[0/null]", magic0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MimeType mimeType0 = mock(MimeType.class, new ViolatedAssumptionAnswer());
      Magic magic0 = new Magic(mimeType0, (-1106), (Clause) null);
      int int0 = magic0.getPriority();
      assertEquals("[-1106/null]", magic0.toString());
      assertEquals((-1106), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MimeType mimeType0 = mock(MimeType.class, new ViolatedAssumptionAnswer());
      Magic magic0 = new Magic(mimeType0, 503, (Clause) null);
      MimeType mimeType1 = mock(MimeType.class, new ViolatedAssumptionAnswer());
      Magic magic1 = new Magic(mimeType1, (-136), magic0);
      int int0 = magic0.compareTo(magic1);
      assertEquals("[-136/[503/null]]", magic1.toString());
      assertEquals((-639), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Magic magic0 = new Magic((MimeType) null, 0, (Clause) null);
      // Undeclared exception!
      try { 
        magic0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.Magic", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Magic magic0 = new Magic((MimeType) null, (-938), (Clause) null);
      // Undeclared exception!
      try { 
        magic0.equals(magic0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.Magic", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MimeType mimeType0 = mock(MimeType.class, new ViolatedAssumptionAnswer());
      Magic magic0 = new Magic(mimeType0, 2312, (Clause) null);
      Magic magic1 = new Magic(mimeType0, 2312, magic0);
      boolean boolean0 = magic1.equals(magic0);
      assertEquals("[2312/[2312/null]]", magic1.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MimeType mimeType0 = mock(MimeType.class, new ViolatedAssumptionAnswer());
      Magic magic0 = new Magic(mimeType0, 446, (Clause) null);
      MimeType mimeType1 = mock(MimeType.class, new ViolatedAssumptionAnswer());
      Magic magic1 = new Magic(mimeType1, 446, magic0);
      boolean boolean0 = magic0.equals(magic1);
      assertFalse(boolean0);
      assertEquals("[446/[446/null]]", magic1.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MimeType mimeType0 = mock(MimeType.class, new ViolatedAssumptionAnswer());
      Magic magic0 = new Magic(mimeType0, 2312, (Clause) null);
      boolean boolean0 = magic0.equals(magic0);
      assertTrue(boolean0);
      assertEquals("[2312/null]", magic0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Magic magic0 = new Magic((MimeType) null, 1, (Clause) null);
      boolean boolean0 = magic0.equals((Object) null);
      assertEquals("[1/null]", magic0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Magic magic0 = new Magic((MimeType) null, 1, (Clause) null);
      Magic magic1 = new Magic((MimeType) null, 1130, (Clause) null);
      int int0 = magic0.compareTo(magic1);
      assertEquals("[1130/null]", magic1.toString());
      assertEquals(1129, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Magic magic0 = new Magic((MimeType) null, (-258), (Clause) null);
      magic0.getType();
      assertEquals("[-258/null]", magic0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Magic magic0 = new Magic((MimeType) null, 1, (Clause) null);
      String string0 = magic0.toString();
      assertEquals("[1/null]", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MimeType mimeType0 = mock(MimeType.class, new ViolatedAssumptionAnswer());
      Magic magic0 = new Magic(mimeType0, (-1106), (Clause) null);
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        magic0.eval(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.Magic", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Magic magic0 = new Magic((MimeType) null, 1, (Clause) null);
      // Undeclared exception!
      try { 
        magic0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.Magic", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MimeType mimeType0 = mock(MimeType.class, new ViolatedAssumptionAnswer());
      Magic magic0 = new Magic(mimeType0, (-1682), (Clause) null);
      magic0.hashCode();
      assertEquals("[-1682/null]", magic0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Magic magic0 = new Magic((MimeType) null, 1, (Clause) null);
      int int0 = magic0.getPriority();
      assertEquals("[1/null]", magic0.toString());
      assertEquals(1, int0);
  }
}
