/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:39:23 GMT 2022
 */

package org.apache.tika.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.nio.CharBuffer;
import java.util.List;
import org.apache.tika.language.LanguageProfilerBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LanguageProfilerBuilder_ESTest extends LanguageProfilerBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1579);
      LanguageProfilerBuilder.NGramEntry languageProfilerBuilder_NGramEntry0 = new LanguageProfilerBuilder.NGramEntry(charBuffer0);
      LanguageProfilerBuilder.NGramEntry languageProfilerBuilder_NGramEntry1 = new LanguageProfilerBuilder.NGramEntry(charBuffer0);
      languageProfilerBuilder_NGramEntry0.equals(languageProfilerBuilder_NGramEntry1);
      assertEquals(0, languageProfilerBuilder_NGramEntry1.getCount());
      assertEquals(0.0F, languageProfilerBuilder_NGramEntry1.getFrequency(), 0.01F);
      assertEquals(0, languageProfilerBuilder_NGramEntry0.getCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-create";
      // Undeclared exception!
      try { 
        LanguageProfilerBuilder.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.tika.language.LanguageProfilerBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("(3Pap'Q", (-636), (-106));
      MockPrintStream mockPrintStream0 = new MockPrintStream("nce");
      languageProfilerBuilder0.save(mockPrintStream0);
      assertEquals("(3Pap'Q", languageProfilerBuilder0.getName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder((String) null);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      stringBuilder0.append(true);
      languageProfilerBuilder0.analyze(stringBuilder0);
      float float0 = languageProfilerBuilder0.getSimilarity(languageProfilerBuilder0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder(";}(E?", 0, 0);
      StringBuffer stringBuffer0 = new StringBuffer();
      languageProfilerBuilder0.add(stringBuffer0);
      assertEquals(";}(E?", languageProfilerBuilder0.getName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-score";
      stringArray0[2] = "-score";
      stringArray0[4] = "dAf3{I6d;";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-score");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "ed,\"");
      stringArray0[5] = "dAf3{I6d;";
      stringArray0[6] = "dAf3{I6d;";
      LanguageProfilerBuilder.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-similarity");
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "dAf3{I6d;";
      stringArray0[1] = "dAf3{I6d;";
      stringArray0[2] = "dAf3{I6d;";
      stringArray0[3] = "-similarity";
      stringArray0[4] = "-similarity";
      stringArray0[6] = "dAf3{I6d;";
      LanguageProfilerBuilder.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "aQute.lib.osgi.InstructionFilter";
      stringArray0[1] = "-create";
      stringArray0[3] = "aQute.lib.osgi.InstructionFilter";
      stringArray0[4] = "-create";
      LanguageProfilerBuilder.main(stringArray0);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("SI8zjpwwjY");
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("#0w,2Oh.O8=?|V?Y|Pq");
      languageProfilerBuilder0.add(stringBuffer0);
      List<LanguageProfilerBuilder.NGramEntry> list0 = languageProfilerBuilder0.getSorted();
      assertEquals(8, list0.size());
      assertEquals("#0w,2Oh.O8=?|V?Y|Pq", languageProfilerBuilder0.getName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder(";}(E?", 0, 0);
      StringBuilder stringBuilder0 = new StringBuilder("NGramProfile: ;}(E?\n");
      LanguageProfilerBuilder languageProfilerBuilder1 = new LanguageProfilerBuilder("NGramProfile: ;}(E?\n");
      languageProfilerBuilder0.analyze(stringBuilder0);
      float float0 = languageProfilerBuilder0.getSimilarity(languageProfilerBuilder1);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder((String) null);
      String string0 = languageProfilerBuilder0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("");
      String string0 = languageProfilerBuilder0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("dAf3{I6d;", (-1457), (-1457));
      // Undeclared exception!
      try { 
        languageProfilerBuilder0.save((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.LanguageProfilerBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("dAf3{I6d;");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("4yV>rZYi\"w-L<<30qo", true);
      try { 
        languageProfilerBuilder0.save(mockFileOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("G.1.ea9}1Y}3~nS*R", (-98), 464);
      // Undeclared exception!
      try { 
        languageProfilerBuilder0.load((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("&w`core", 4, (-401));
      // Undeclared exception!
      try { 
        languageProfilerBuilder0.load((InputStream) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.LanguageProfilerBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("DGrl3JH4 ;");
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-18), 30);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      // Undeclared exception!
      try { 
        languageProfilerBuilder0.load(bufferedInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("/u]D");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        languageProfilerBuilder0.load(mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("-similarity");
      try { 
        languageProfilerBuilder0.getSimilarity((LanguageProfilerBuilder) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not calculate a score how well NGramProfiles match each other
         //
         verifyException("org.apache.tika.language.LanguageProfilerBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0, 63);
      // Undeclared exception!
      try { 
        LanguageProfilerBuilder.create("org.apache.tika.exception.TikaException", pushbackInputStream0, "org.apache.tika.exception.TikaException");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-91), 668);
      // Undeclared exception!
      try { 
        LanguageProfilerBuilder.create("/4%*doyV", byteArrayInputStream0, "/4%*doyV");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder(" for Apache Tika Language Identification\n", (-1543), 200);
      StringBuilder stringBuilder0 = new StringBuilder("NGramProfile:  for Apache Tika Language Identification\n\n");
      // Undeclared exception!
      try { 
        languageProfilerBuilder0.analyze(stringBuilder0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("]'zc/e/;5[:(Ipr\"", 1076, (-4398));
      // Undeclared exception!
      try { 
        languageProfilerBuilder0.analyze((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.LanguageProfilerBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("-score", (-2242), (-3358));
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "dAf3{I6d;");
      // Undeclared exception!
      try { 
        languageProfilerBuilder0.analyze(stringBuilder0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.LanguageProfilerBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder(" for Apache Tika Language Identification\n", (-1543), 200);
      StringBuffer stringBuffer0 = new StringBuffer("-create");
      // Undeclared exception!
      try { 
        languageProfilerBuilder0.add(stringBuffer0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1543
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder(";}(E?");
      // Undeclared exception!
      try { 
        languageProfilerBuilder0.add((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.LanguageProfilerBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder(":;l~ H#PAH5G`@Id");
      languageProfilerBuilder0.getSorted();
      languageProfilerBuilder0.getSorted();
      assertEquals(":;l~ H#PAH5G`@Id", languageProfilerBuilder0.getName());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      LanguageProfilerBuilder.NGramEntry languageProfilerBuilder_NGramEntry0 = new LanguageProfilerBuilder.NGramEntry(stringBuilder0);
      languageProfilerBuilder_NGramEntry0.size();
      assertEquals(0, languageProfilerBuilder_NGramEntry0.getCount());
      assertEquals(0.0F, languageProfilerBuilder_NGramEntry0.getFrequency(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LanguageProfilerBuilder.NGramEntry languageProfilerBuilder_NGramEntry0 = new LanguageProfilerBuilder.NGramEntry("kezcH,ekS+`", 35);
      String string0 = languageProfilerBuilder_NGramEntry0.toString();
      assertEquals("kezcH,ekS+`", string0);
      assertEquals(35, languageProfilerBuilder_NGramEntry0.getCount());
      assertEquals(0.0F, languageProfilerBuilder_NGramEntry0.getFrequency(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LanguageProfilerBuilder.NGramEntry languageProfilerBuilder_NGramEntry0 = new LanguageProfilerBuilder.NGramEntry("kezcH,ekS+`", 35);
      CharSequence charSequence0 = languageProfilerBuilder_NGramEntry0.getSeq();
      assertEquals("kezcH,ekS+`", charSequence0);
      assertEquals(0.0F, languageProfilerBuilder_NGramEntry0.getFrequency(), 0.01F);
      assertEquals(35, languageProfilerBuilder_NGramEntry0.getCount());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LanguageProfilerBuilder.NGramEntry languageProfilerBuilder_NGramEntry0 = new LanguageProfilerBuilder.NGramEntry("]'zc/e/;5[:(Ipr\"", (-4385));
      languageProfilerBuilder_NGramEntry0.inc();
      assertEquals((-4384), languageProfilerBuilder_NGramEntry0.getCount());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      File file0 = MockFile.createTempFile("presence:", "presence:");
      StringBuffer stringBuffer0 = new StringBuffer("presence:");
      stringBuffer0.append((CharSequence) "presence:");
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("presence:");
      languageProfilerBuilder0.add(stringBuffer0);
      languageProfilerBuilder0.normalize();
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      languageProfilerBuilder0.save(mockPrintStream0);
      assertEquals(151L, file0.length());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "aQute.lib.osgi.InstructionFilter";
      stringArray0[1] = "-create";
      // Undeclared exception!
      try { 
        LanguageProfilerBuilder.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "dAf3{I6d;";
      LanguageProfilerBuilder.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        LanguageProfilerBuilder.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      try { 
        LanguageProfilerBuilder.create("E89 P9t)k6[", sequenceInputStream0, "E89 P9t)k6[");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not create profile, E89 P9t)k6[
         //
         verifyException("org.apache.tika.language.LanguageProfilerBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("", (-1910926102), (byte) (-1));
      languageProfilerBuilder0.load(byteArrayInputStream0);
      assertEquals("", languageProfilerBuilder0.getName());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder((String) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-83);
      byteArray0[2] = (byte) (-83);
      byteArray0[4] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        languageProfilerBuilder0.load(byteArrayInputStream0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\u0000\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      File file0 = MockFile.createTempFile("presence:", "presence:");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      LanguageProfilerBuilder languageProfilerBuilder0 = LanguageProfilerBuilder.create("presence:", mockFileInputStream0, "presence:");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      languageProfilerBuilder0.save(mockFileOutputStream0);
      languageProfilerBuilder0.load(mockFileInputStream0);
      assertEquals(97L, file0.length());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      File file0 = MockFile.createTempFile("presence:", "presence:");
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("org.apache.tika.language.LanguageProfilerBuilder$NGramEntry");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      languageProfilerBuilder0.save(mockFileOutputStream0);
      assertEquals(97L, file0.length());
      
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      languageProfilerBuilder0.load(mockFileInputStream0);
      assertEquals("org.apache.tika.language.LanguageProfilerBuilder$NGramEntry", languageProfilerBuilder0.getName());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("/4%*doyV");
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        languageProfilerBuilder0.load(dataInputStream0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("dAf3{I6d;");
      LanguageProfilerBuilder languageProfilerBuilder1 = new LanguageProfilerBuilder("-similarity");
      StringBuffer stringBuffer0 = new StringBuffer("-similarity");
      languageProfilerBuilder1.add(stringBuffer0);
      float float0 = languageProfilerBuilder0.getSimilarity(languageProfilerBuilder1);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(":[lxRv6:X-MBy}FI6");
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("nKw profile ");
      languageProfilerBuilder0.add(stringBuffer0);
      String string0 = languageProfilerBuilder0.toString();
      assertEquals("NGramProfile: nKw profile \n[-MB/1/0.0]\n[6:X/1/0.0]\n[:X/1/0.0]\n[:[l/1/0.0]\n[By}/1/0.0]\n[FI6/1/0.0]\n[MBy/1/0.0]\n[Rv6/1/0.0]\n[X-/1/0.0]\n[[lx/1/0.0]\n[lxR/1/0.0]\n[v6:/1/0.0]\n[xRv/1/0.0]\n[y}F/1/0.0]\n[}FI/1/0.0]\n[-M/1/0.0]\n", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("presence:", 1, 4);
      StringBuilder stringBuilder0 = new StringBuilder("NGramProfile: presence:\n");
      languageProfilerBuilder0.analyze(stringBuilder0);
      assertEquals("presence:", languageProfilerBuilder0.getName());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("uI~");
      StringBuffer stringBuffer0 = new StringBuffer();
      languageProfilerBuilder0.add(stringBuffer0);
      assertEquals("uI~", languageProfilerBuilder0.getName());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LanguageProfilerBuilder.NGramEntry languageProfilerBuilder_NGramEntry0 = new LanguageProfilerBuilder.NGramEntry("Similarity is ", 2986);
      boolean boolean0 = languageProfilerBuilder_NGramEntry0.equals("NGramProfile: M8ZRxiAk|{\n");
      assertFalse(boolean0);
      assertEquals(0.0F, languageProfilerBuilder_NGramEntry0.getFrequency(), 0.01F);
      assertEquals(14, languageProfilerBuilder_NGramEntry0.size());
      assertEquals(2986, languageProfilerBuilder_NGramEntry0.getCount());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("Oi");
      LanguageProfilerBuilder.NGramEntry languageProfilerBuilder_NGramEntry0 = new LanguageProfilerBuilder.NGramEntry(stringBuilder0);
      int int0 = languageProfilerBuilder_NGramEntry0.compareTo(languageProfilerBuilder_NGramEntry0);
      assertEquals(0, int0);
      assertEquals(0.0F, languageProfilerBuilder_NGramEntry0.getFrequency(), 0.01F);
      assertEquals(0, languageProfilerBuilder_NGramEntry0.getCount());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LanguageProfilerBuilder.NGramEntry languageProfilerBuilder_NGramEntry0 = new LanguageProfilerBuilder.NGramEntry("]ag-?1oL5lh", 16);
      languageProfilerBuilder_NGramEntry0.getProfile();
      assertEquals(16, languageProfilerBuilder_NGramEntry0.getCount());
      assertEquals(0.0F, languageProfilerBuilder_NGramEntry0.getFrequency(), 0.01F);
      assertEquals(12, languageProfilerBuilder_NGramEntry0.size());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LanguageProfilerBuilder.NGramEntry languageProfilerBuilder_NGramEntry0 = new LanguageProfilerBuilder.NGramEntry("]'zc/e/;5[:(Ipr\"", (-4385));
      float float0 = languageProfilerBuilder_NGramEntry0.getFrequency();
      assertEquals((-4385), languageProfilerBuilder_NGramEntry0.getCount());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("]'zc/e/;5[:(Ipr\"", languageProfilerBuilder_NGramEntry0.toString());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LanguageProfilerBuilder.NGramEntry languageProfilerBuilder_NGramEntry0 = new LanguageProfilerBuilder.NGramEntry("Usage: NGramProfile [-create profilename filename encoding] [-similarity file1 file2] [-score profile-name filename encoding]", (-967));
      int int0 = languageProfilerBuilder_NGramEntry0.getCount();
      assertEquals(0.0F, languageProfilerBuilder_NGramEntry0.getFrequency(), 0.01F);
      assertEquals((-967), int0);
      assertEquals("Usage: NGramProfile [-create profilename filename encoding] [-similarity file1 file2] [-score profile-name filename encoding]", languageProfilerBuilder_NGramEntry0.toString());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LanguageProfilerBuilder.NGramEntry languageProfilerBuilder_NGramEntry0 = new LanguageProfilerBuilder.NGramEntry("&w`core", 7);
      languageProfilerBuilder_NGramEntry0.setProfile((LanguageProfilerBuilder) null);
      assertEquals(7, languageProfilerBuilder_NGramEntry0.getCount());
      assertEquals(0.0F, languageProfilerBuilder_NGramEntry0.getFrequency(), 0.01F);
      assertEquals(7, languageProfilerBuilder_NGramEntry0.size());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("aQute.lib.osgi.InstructionFilter", 0, 0);
      StringBuilder stringBuilder0 = new StringBuilder("aQute.lib.osgi.InstructionFilter");
      languageProfilerBuilder0.analyze(stringBuilder0);
      assertEquals("aQute.lib.osgi.InstructionFilter", languageProfilerBuilder0.getName());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("ngp");
      String string0 = languageProfilerBuilder0.getName();
      assertEquals("ngp", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("dAf3{I6d;", (-1457), (-1457));
      // Undeclared exception!
      try { 
        languageProfilerBuilder0.normalize();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.LanguageProfilerBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      LanguageProfilerBuilder languageProfilerBuilder0 = new LanguageProfilerBuilder("dAf3{I6d;");
      StringBuffer stringBuffer0 = new StringBuffer("-similarity");
      languageProfilerBuilder0.add(stringBuffer0);
      float float0 = languageProfilerBuilder0.getSimilarity(languageProfilerBuilder0);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("dAf3{I6d;", languageProfilerBuilder0.getName());
  }
}
