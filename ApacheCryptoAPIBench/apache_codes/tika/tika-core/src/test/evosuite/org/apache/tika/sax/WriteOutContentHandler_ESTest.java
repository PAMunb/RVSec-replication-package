/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:46:19 GMT 2022
 */

package org.apache.tika.sax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.io.Writer;
import org.apache.tika.sax.WriteOutContentHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WriteOutContentHandler_ESTest extends WriteOutContentHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 1481;
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(1481);
      MockThrowable mockThrowable0 = new MockThrowable();
      writeOutContentHandler0.setContentHandler(writeOutContentHandler0);
      mockThrowable0.getStackTrace();
      MockThrowable.getDefaultStackTrace();
      writeOutContentHandler0.isWriteLimitReached(mockThrowable0);
      Random.setNextRandom(1481);
      int int1 = 1;
      Random.setNextRandom(1);
      char[] charArray0 = new char[3];
      charArray0[0] = '^';
      charArray0[1] = 'c';
      charArray0[2] = '/';
      // Undeclared exception!
      try { 
        writeOutContentHandler0.characters(charArray0, int1, int1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("rx|99@6]8j{L", "i2kk");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(mockFileOutputStream0);
      writeOutContentHandler0.startDocument();
      MockThrowable mockThrowable0 = new MockThrowable();
      writeOutContentHandler0.isWriteLimitReached(mockThrowable0);
      WriteOutContentHandler writeOutContentHandler1 = new WriteOutContentHandler(writeOutContentHandler0, (-2539));
      writeOutContentHandler0.setContentHandler(writeOutContentHandler1);
      char[] charArray0 = new char[9];
      charArray0[0] = 'e';
      charArray0[1] = 'a';
      charArray0[2] = 'K';
      charArray0[3] = '(';
      charArray0[4] = 'd';
      charArray0[5] = 'S';
      charArray0[6] = '\"';
      charArray0[7] = ';';
      charArray0[8] = '\\';
      writeOutContentHandler0.ignorableWhitespace(charArray0, 2114, 1603);
      int int0 = 3313;
      Random.setNextRandom(int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(defaultHandler2_0, 607);
      MockException mockException0 = new MockException(">VWzR?");
      SAXException sAXException0 = new SAXException(mockException0);
      MockThrowable mockThrowable0 = new MockThrowable(sAXException0);
      MockException mockException1 = new MockException("ws5`9s4hy/Ib<*0`nu", mockThrowable0);
      MockException mockException2 = new MockException(mockException1);
      writeOutContentHandler0.isWriteLimitReached(mockException2);
      char[] charArray0 = new char[5];
      charArray0[0] = '\\';
      charArray0[1] = 'x';
      charArray0[2] = 'G';
      charArray0[3] = 'o';
      charArray0[4] = '';
      writeOutContentHandler0.ignorableWhitespace(charArray0, 0, 607);
      assertArrayEquals(new char[] {'\\', 'x', 'G', 'o', ''}, charArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      SAXParseException sAXParseException0 = null;
      defaultHandler2_0.warning((SAXParseException) null);
      int int0 = 46;
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(defaultHandler2_0, 46);
      String string0 = "org.apache.tika.sax.WriteOutContentHandler";
      writeOutContentHandler0.unparsedEntityDecl("_3#G?LUV!#:mw,Q3", "_3#G?LUV!#:mw,Q3", "org.apache.tika.sax.WriteOutContentHandler", "#z6{yEvn!`0Z0K");
      Throwable throwable0 = null;
      String string1 = "6bB\\341";
      writeOutContentHandler0.endPrefixMapping("6bB\u00E1");
      MockException mockException0 = new MockException((Throwable) null);
      writeOutContentHandler0.isWriteLimitReached(mockException0);
      char[] charArray0 = new char[0];
      defaultHandler2_0.startCDATA();
      writeOutContentHandler0.characters(charArray0, 46, 46);
      try { 
        writeOutContentHandler0.characters(charArray0, 46, 46);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Your document contained more than 46 characters, and so your requested limit has been reached. To receive the full text of the document, increase your limit. (Text up to the limit is however available).
         //
         verifyException("org.apache.tika.sax.WriteOutContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler((Writer) null);
      char[] charArray0 = new char[2];
      String string0 = "";
      String string1 = "presence:";
      String string2 = "org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException";
      // Undeclared exception!
      try { 
        writeOutContentHandler0.characters(charArray0, 46, 1271);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ToTextContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(1);
      char[] charArray0 = new char[6];
      charArray0[0] = '';
      writeOutContentHandler0.processingInstruction("N9(<a>WV", "aQute.lib.osgi.Instruction");
      charArray0[1] = '8';
      charArray0[2] = 'd';
      charArray0[3] = 'Q';
      charArray0[4] = '+';
      charArray0[5] = '=';
      writeOutContentHandler0.ignorableWhitespace(charArray0, 1, 1);
      assertArrayEquals(new char[] {'', '8', 'd', 'Q', '+', '='}, charArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultHandler defaultHandler0 = new DefaultHandler();
      int int0 = 42;
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(defaultHandler0, 42);
      SAXParseException sAXParseException0 = new SAXParseException("", "", ",say$N+", (-5130), 1);
      Throwable throwable0 = sAXParseException0.fillInStackTrace();
      writeOutContentHandler0.isWriteLimitReached(throwable0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'Y';
      charArray0[1] = 'u';
      writeOutContentHandler0.characters(charArray0, 42, 13);
      try { 
        writeOutContentHandler0.ignorableWhitespace(charArray0, 1353, 46);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Your document contained more than 42 characters, and so your requested limit has been reached. To receive the full text of the document, increase your limit. (Text up to the limit is however available).
         //
         verifyException("org.apache.tika.sax.WriteOutContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      int int0 = (-786);
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(defaultHandler2_0, (-786));
      defaultHandler2_0.resolveEntity("", "", "", (String) null);
      int int1 = (-791);
      writeOutContentHandler0.characters((char[]) null, (-791), (-786));
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException0 = new SAXParseException("Your document contained more than ", locatorImpl0);
      sAXParseException0.getCause();
      // Undeclared exception!
      try { 
        writeOutContentHandler0.isWriteLimitReached((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.WriteOutContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(2022);
      char[] charArray0 = new char[3];
      charArray0[0] = '{';
      charArray0[1] = 'M';
      charArray0[2] = '_';
      // Undeclared exception!
      try { 
        writeOutContentHandler0.ignorableWhitespace(charArray0, 2022, 2022);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler((-4021));
      char[] charArray0 = new char[4];
      charArray0[0] = '&';
      charArray0[1] = 'f';
      charArray0[2] = 'n';
      charArray0[3] = 's';
      // Undeclared exception!
      try { 
        writeOutContentHandler0.ignorableWhitespace(charArray0, (-4021), (-1746));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = null;
      try {
        writeOutContentHandler0 = new WriteOutContentHandler((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(".k;),#`*rV1<L6S<");
      mockPrintWriter0.println(true);
      int int0 = 0;
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(mockPrintWriter0, 0);
      char[] charArray0 = null;
      mockPrintWriter0.print(".k;),#`*rV1<L6S<");
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setXMLVersion("");
      writeOutContentHandler0.endPrefixMapping(".k;),#`*rV1<L6S<");
      writeOutContentHandler0.setDocumentLocator(locator2Impl0);
      int int1 = 1;
      mockPrintWriter0.print(true);
      // Undeclared exception!
      try { 
        writeOutContentHandler0.ignorableWhitespace((char[]) null, 0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(0);
      char[] charArray0 = new char[0];
      try { 
        writeOutContentHandler0.ignorableWhitespace(charArray0, 0, 444);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Your document contained more than 0 characters, and so your requested limit has been reached. To receive the full text of the document, increase your limit. (Text up to the limit is however available).
         //
         verifyException("org.apache.tika.sax.WriteOutContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(bufferedOutputStream0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'p';
      charArray0[1] = 'Z';
      charArray0[2] = 'z';
      charArray0[3] = '_';
      // Undeclared exception!
      try { 
        writeOutContentHandler0.ignorableWhitespace(charArray0, (-1), (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(mockPrintWriter0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'w';
      charArray0[1] = '.';
      charArray0[2] = 'R';
      // Undeclared exception!
      try { 
        writeOutContentHandler0.characters(charArray0, (-2586), 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler((-752));
      char[] charArray0 = new char[3];
      charArray0[0] = 'w';
      charArray0[1] = 'e';
      charArray0[2] = 'Q';
      // Undeclared exception!
      try { 
        writeOutContentHandler0.characters(charArray0, (-473), (-752));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler();
      char[] charArray0 = new char[2];
      charArray0[0] = 'q';
      charArray0[1] = 'e';
      // Undeclared exception!
      try { 
        writeOutContentHandler0.ignorableWhitespace(charArray0, (-4531), (-1975));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 1;
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(1);
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        writeOutContentHandler0.characters(charArray0, 1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler();
      char[] charArray0 = new char[1];
      String string0 = "CcNb\"*";
      writeOutContentHandler0.resolveEntity("CcNb\"*", "CcNb\"*");
      String string1 = null;
      writeOutContentHandler0.endElement("", "+O6exbc}$1R<d?/:", " increase your limit. (Text up to the limit is");
      writeOutContentHandler0.notationDecl((String) null, "", "35m6TDJ*fT");
      charArray0[0] = 'Q';
      int int0 = 244;
      // Undeclared exception!
      try { 
        writeOutContentHandler0.ignorableWhitespace(charArray0, 244, 244);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler();
      int int0 = 1543;
      WriteOutContentHandler writeOutContentHandler1 = new WriteOutContentHandler(writeOutContentHandler0, 1543);
      char[] charArray0 = new char[3];
      charArray0[0] = 'm';
      charArray0[1] = '*';
      charArray0[2] = '4';
      writeOutContentHandler1.characters(charArray0, 0, 0);
      // Undeclared exception!
      try { 
        writeOutContentHandler0.characters(charArray0, 0, 1543);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(byteArrayOutputStream0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(0);
      SAXParseException sAXParseException0 = new SAXParseException("Your document contained more than ", (Locator) null);
      writeOutContentHandler0.warning(sAXParseException0);
      char[] charArray0 = new char[1];
      charArray0[0] = '[';
      try { 
        writeOutContentHandler0.characters(charArray0, 0, 1615);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Your document contained more than 0 characters, and so your requested limit has been reached. To receive the full text of the document, increase your limit. (Text up to the limit is however available).
         //
         verifyException("org.apache.tika.sax.WriteOutContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler();
      MockException mockException0 = new MockException();
      MockThrowable mockThrowable0 = new MockThrowable("", mockException0);
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      boolean boolean0 = writeOutContentHandler0.isWriteLimitReached(mockThrowable1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(100000);
      char[] charArray0 = new char[2];
      charArray0[0] = '1';
      charArray0[1] = ',';
      // Undeclared exception!
      try { 
        writeOutContentHandler0.characters(charArray0, 100000, 100000);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler();
      char[] charArray0 = new char[0];
      writeOutContentHandler0.ignorableWhitespace(charArray0, 0, 0);
      assertEquals(0, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler();
      char[] charArray0 = new char[3];
      writeOutContentHandler0.characters(charArray0, 1, 1);
      Random.setNextRandom(1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(bufferedOutputStream0);
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        writeOutContentHandler0.ignorableWhitespace(charArray0, (-1), (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(xMLReaderAdapter0, (-2312));
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      char[] charArray0 = new char[6];
      charArray0[2] = 'f';
      try { 
        writeOutContentHandler0.ignorableWhitespace(charArray0, 443, 443);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Your document contained more than -2312 characters, and so your requested limit has been reached. To receive the full text of the document, increase your limit. (Text up to the limit is however available).
         //
         verifyException("org.apache.tika.sax.WriteOutContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(4);
      MockException mockException0 = new MockException("");
      MockException mockException1 = new MockException("", mockException0);
      writeOutContentHandler0.isWriteLimitReached(mockException1);
      char[] charArray0 = new char[7];
      charArray0[0] = 'h';
      charArray0[1] = 'h';
      charArray0[2] = 'U';
      charArray0[5] = 'K';
      writeOutContentHandler0.ignorableWhitespace(charArray0, 4, 0);
      boolean boolean0 = writeOutContentHandler0.isWriteLimitReached(mockException1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler((-1431));
      char[] charArray0 = new char[1];
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Random.setNextRandom((-1431));
      writeOutContentHandler0.setContentHandler(xMLReaderAdapter0);
      try { 
        writeOutContentHandler0.characters(charArray0, 0, 0);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Your document contained more than -1431 characters, and so your requested limit has been reached. To receive the full text of the document, increase your limit. (Text up to the limit is however available).
         //
         verifyException("org.apache.tika.sax.WriteOutContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("|");
      WriteOutContentHandler writeOutContentHandler0 = new WriteOutContentHandler(mockPrintWriter0);
      char[] charArray0 = new char[1];
      int int0 = 0;
      // Undeclared exception!
      try { 
        writeOutContentHandler0.characters(charArray0, 0, 'v');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedWriter", e);
      }
  }
}
