/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:48:33 GMT 2022
 */

package org.apache.tika.detect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.util.HashMap;
import java.util.regex.Pattern;
import org.apache.tika.detect.NameDetector;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.mime.MediaType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NameDetector_ESTest extends NameDetector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<Pattern, MediaType> hashMap0 = new HashMap<Pattern, MediaType>();
      NameDetector nameDetector0 = new NameDetector(hashMap0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        nameDetector0.detect(pipedInputStream0, (Metadata) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.detect.NameDetector", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<Pattern, MediaType> hashMap0 = new HashMap<Pattern, MediaType>();
      NameDetector nameDetector0 = new NameDetector(hashMap0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Metadata metadata0 = new Metadata();
      MediaType mediaType0 = nameDetector0.detect(pipedInputStream0, metadata0);
      assertEquals("octet-stream", mediaType0.getSubtype());
  }
}
