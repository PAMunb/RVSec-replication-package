/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:37:57 GMT 2022
 */

package org.apache.tika.mime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.SortedSet;
import org.apache.tika.mime.MediaType;
import org.apache.tika.mime.MediaTypeRegistry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MediaTypeRegistry_ESTest extends MediaTypeRegistry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      HashMap<String, String> hashMap0 = new HashMap<String, String>(0, 2095.204F);
      MediaType mediaType0 = new MediaType("", "", hashMap0);
      MediaType mediaType1 = new MediaType(mediaType0, "", "");
      mediaTypeRegistry0.normalize(mediaType1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      mediaTypeRegistry0.addType((MediaType) null);
      // Undeclared exception!
      try { 
        mediaTypeRegistry0.getTypes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      mediaTypeRegistry0.addType((MediaType) null);
      // Undeclared exception!
      try { 
        mediaTypeRegistry0.getAliases((MediaType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.MediaTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.OCTET_STREAM;
      mediaTypeRegistry0.getSupertype(mediaType0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.TEXT_PLAIN;
      mediaTypeRegistry0.getSupertype(mediaType0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.TEXT_HTML;
      mediaTypeRegistry0.getSupertype(mediaType0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.video("*ZS%q$;/_D\u0005\"Wb");
      mediaTypeRegistry0.getSupertype(mediaType0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.TEXT_PLAIN;
      mediaTypeRegistry0.addSuperType(mediaType0, mediaType0);
      mediaTypeRegistry0.getSupertype(mediaType0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      mediaTypeRegistry0.isInstanceOf((MediaType) null, (MediaType) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      HashMap<String, String> hashMap0 = new HashMap<String, String>(0, 2095.204F);
      MediaType mediaType0 = new MediaType("", "", hashMap0);
      mediaTypeRegistry0.isInstanceOf(mediaType0, mediaType0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.APPLICATION_XML;
      mediaTypeRegistry0.addType(mediaType0);
      mediaTypeRegistry0.normalize(mediaType0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      mediaTypeRegistry0.normalize((MediaType) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.TEXT_HTML;
      mediaTypeRegistry0.isInstanceOf(mediaType0, (MediaType) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.video("+xml");
      mediaTypeRegistry0.getSupertype(mediaType0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.APPLICATION_XML;
      mediaTypeRegistry0.addSuperType(mediaType0, mediaType0);
      mediaTypeRegistry0.isSpecializationOf(mediaType0, mediaType0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      mediaTypeRegistry0.getSupertype((MediaType) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.APPLICATION_ZIP;
      MediaType mediaType1 = new MediaType(mediaType0, "9L", "`gMC-[Jp");
      mediaTypeRegistry0.isInstanceOf(mediaType1, mediaType0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.APPLICATION_ZIP;
      MediaType mediaType1 = MediaType.EMPTY;
      mediaTypeRegistry0.addSuperType(mediaType1, mediaType1);
      mediaTypeRegistry0.getChildTypes(mediaType0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.APPLICATION_XML;
      mediaTypeRegistry0.addSuperType(mediaType0, mediaType0);
      mediaTypeRegistry0.getChildTypes(mediaType0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.APPLICATION_XML;
      mediaTypeRegistry0.addType(mediaType0);
      mediaTypeRegistry0.getAliases(mediaType0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.TEXT_PLAIN;
      mediaTypeRegistry0.addAlias(mediaType0, (MediaType) null);
      mediaTypeRegistry0.getAliases((MediaType) null);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      MediaTypeRegistry.getDefaultRegistry();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.APPLICATION_XML;
      boolean boolean0 = mediaTypeRegistry0.isSpecializationOf(mediaType0, mediaType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.APPLICATION_XML;
      boolean boolean0 = mediaTypeRegistry0.isInstanceOf("Description is missing", mediaType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      SortedSet<MediaType> sortedSet0 = mediaTypeRegistry0.getTypes();
      assertEquals(0, sortedSet0.size());
  }
}
