/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:24:01 GMT 2022
 */

package org.apache.tika.mime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.Charset;
import java.util.SortedSet;
import org.apache.tika.mime.MediaType;
import org.apache.tika.mime.MediaTypeRegistry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MediaTypeRegistry_ESTest extends MediaTypeRegistry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = new MediaType("'+zip", "[y'+K");
      MediaType mediaType1 = mediaTypeRegistry0.getSupertype(mediaType0);
      mediaTypeRegistry0.addAlias(mediaType1, mediaType0);
      mediaTypeRegistry0.normalize(mediaType0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.image("+xml");
      MediaType mediaType1 = mediaTypeRegistry0.getSupertype(mediaType0);
      mediaTypeRegistry0.isSpecializationOf(mediaType0, mediaType1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      mediaTypeRegistry0.addType((MediaType) null);
      // Undeclared exception!
      try { 
        mediaTypeRegistry0.getTypes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      mediaTypeRegistry0.addAlias((MediaType) null, (MediaType) null);
      MediaType mediaType0 = MediaType.OCTET_STREAM;
      // Undeclared exception!
      try { 
        mediaTypeRegistry0.getAliases(mediaType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.MediaTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.video("'");
      MediaType mediaType1 = mediaTypeRegistry0.getSupertype(mediaType0);
      mediaTypeRegistry0.getSupertype(mediaType1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.text("^Ou&'IJ;l");
      mediaTypeRegistry0.getSupertype(mediaType0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      mediaTypeRegistry0.isInstanceOf((MediaType) null, (MediaType) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.EMPTY;
      MediaType mediaType1 = MediaType.video("creator");
      mediaTypeRegistry0.isInstanceOf(mediaType1, mediaType0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.text("empty+zip");
      mediaTypeRegistry0.isInstanceOf(mediaType0, mediaType0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.EMPTY;
      MediaType mediaType1 = new MediaType(mediaType0, "creator", "creator");
      mediaTypeRegistry0.addType(mediaType0);
      mediaTypeRegistry0.normalize(mediaType1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.EMPTY;
      mediaTypeRegistry0.normalize(mediaType0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      mediaTypeRegistry0.normalize((MediaType) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.image("+xml");
      mediaTypeRegistry0.isSpecializationOf(mediaType0, mediaType0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.TEXT_HTML;
      mediaTypeRegistry0.getSupertype(mediaType0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.TEXT_PLAIN;
      mediaTypeRegistry0.getSupertype(mediaType0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.text("+zip+zip");
      mediaTypeRegistry0.getSupertype(mediaType0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.APPLICATION_XML;
      Charset charset0 = Charset.defaultCharset();
      MediaType mediaType1 = new MediaType(mediaType0, charset0);
      mediaTypeRegistry0.isInstanceOf(mediaType1, mediaType0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = new MediaType("+xml", "+xml");
      mediaTypeRegistry0.addSuperType(mediaType0, mediaType0);
      mediaTypeRegistry0.getSupertype(mediaType0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      mediaTypeRegistry0.getSupertype((MediaType) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      boolean boolean0 = mediaTypeRegistry0.isInstanceOf("+v%Tqh/Rk-d%+", (MediaType) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.video("'");
      mediaTypeRegistry0.addSuperType(mediaType0, mediaType0);
      SortedSet<MediaType> sortedSet0 = mediaTypeRegistry0.getChildTypes(mediaType0);
      assertTrue(sortedSet0.contains(mediaType0));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = MediaType.application("CW+;x6(\"]&z<03`");
      mediaTypeRegistry0.addSuperType(mediaType0, mediaType0);
      MediaType mediaType1 = MediaType.video("'");
      SortedSet<MediaType> sortedSet0 = mediaTypeRegistry0.getChildTypes(mediaType1);
      assertFalse(sortedSet0.contains(mediaType0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      mediaTypeRegistry0.addSuperType((MediaType) null, (MediaType) null);
      // Undeclared exception!
      try { 
        mediaTypeRegistry0.getChildTypes((MediaType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.mime.MediaTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = new MediaType("'+zip", "[y'+K");
      MediaType mediaType1 = mediaTypeRegistry0.getSupertype(mediaType0);
      mediaTypeRegistry0.addAlias(mediaType1, mediaType0);
      SortedSet<MediaType> sortedSet0 = mediaTypeRegistry0.getAliases(mediaType1);
      assertTrue(sortedSet0.contains(mediaType0));
      assertEquals("octet-stream", mediaType1.getSubtype());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = new MediaType("+xml", "[y'+K");
      MediaType mediaType1 = mediaTypeRegistry0.getSupertype(mediaType0);
      assertNotNull(mediaType1);
      
      mediaTypeRegistry0.addAlias(mediaType1, mediaType0);
      assertEquals("octet-stream", mediaType1.getSubtype());
      
      mediaTypeRegistry0.getAliases(mediaType0);
      assertNotSame(mediaType0, mediaType1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      MediaType mediaType0 = new MediaType("+xml", "[y'+K");
      mediaTypeRegistry0.addAlias(mediaType0, mediaType0);
      SortedSet<MediaType> sortedSet0 = mediaTypeRegistry0.getAliases(mediaType0);
      assertFalse(sortedSet0.contains(mediaType0));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      MediaTypeRegistry.getDefaultRegistry();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      SortedSet<MediaType> sortedSet0 = mediaTypeRegistry0.getTypes();
      assertTrue(sortedSet0.isEmpty());
  }
}
