/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 16:02:55 GMT 2022
 */

package org.apache.tika.language.detect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tika.language.detect.LanguageDetector;
import org.apache.tika.language.detect.LanguageResult;
import org.apache.tika.language.detect.LanguageWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LanguageWriter_ESTest extends LanguageWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LanguageDetector languageDetector0 = mock(LanguageDetector.class, new ViolatedAssumptionAnswer());
      LanguageWriter languageWriter0 = new LanguageWriter(languageDetector0);
      char[] charArray0 = new char[5];
      languageWriter0.write(charArray0, (-2176), 0);
      assertEquals(5, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LanguageWriter languageWriter0 = null;
      try {
        languageWriter0 = new LanguageWriter((LanguageDetector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.detect.LanguageWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LanguageDetector languageDetector0 = mock(LanguageDetector.class, new ViolatedAssumptionAnswer());
      LanguageWriter languageWriter0 = new LanguageWriter(languageDetector0);
      languageWriter0.close();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LanguageDetector languageDetector0 = mock(LanguageDetector.class, new ViolatedAssumptionAnswer());
      LanguageWriter languageWriter0 = new LanguageWriter(languageDetector0);
      languageWriter0.reset();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LanguageDetector languageDetector0 = mock(LanguageDetector.class, new ViolatedAssumptionAnswer());
      doReturn((LanguageResult) null).when(languageDetector0).detect();
      LanguageWriter languageWriter0 = new LanguageWriter(languageDetector0);
      LanguageResult languageResult0 = languageWriter0.getLanguage();
      assertNull(languageResult0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LanguageDetector languageDetector0 = mock(LanguageDetector.class, new ViolatedAssumptionAnswer());
      LanguageWriter languageWriter0 = new LanguageWriter(languageDetector0);
      languageWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LanguageDetector languageDetector0 = mock(LanguageDetector.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(languageDetector0).toString();
      LanguageWriter languageWriter0 = new LanguageWriter(languageDetector0);
      LanguageDetector languageDetector1 = languageWriter0.getDetector();
      assertSame(languageDetector1, languageDetector0);
  }
}
