/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:39:42 GMT 2022
 */

package org.apache.tika.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.CharConversionException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.net.URI;
import java.net.URL;
import java.net.URLStreamHandler;
import java.nio.file.Path;
import java.util.Enumeration;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.tika.config.LoadErrorHandler;
import org.apache.tika.config.ServiceLoader;
import org.apache.tika.config.TikaConfig;
import org.apache.tika.detect.CompositeDetector;
import org.apache.tika.detect.CompositeEncodingDetector;
import org.apache.tika.mime.MimeTypes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.xml.sax.SAXParseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TikaConfig_ESTest extends TikaConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      CompositeEncodingDetector compositeEncodingDetector0 = TikaConfig.getDefaultEncodingDetector(serviceLoader0);
      assertNotNull(compositeEncodingDetector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, (LoadErrorHandler) null);
      CompositeDetector compositeDetector0 = TikaConfig.getDefaultDetector(mimeTypes0, serviceLoader0);
      assertNotNull(compositeDetector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(path0, serviceLoader0);
        fail("Expecting exception: SAXParseException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      MockFile mockFile0 = new MockFile("org.apache.tika.config.TikaConfig");
      Path path0 = mockFile0.toPath();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(path0, serviceLoader0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // /home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/tika/tika-core/org.apache.tika.config.TikaConfig (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(path0);
        fail("Expecting exception: SAXParseException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("LH#T");
      Path path0 = mockFile0.toPath();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(path0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // /home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/tika/tika-core/LH#T (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      MockFile mockFile0 = new MockFile(")j}s2_tKOX", "bq51j]|)%CBR");
      URL uRL0 = mockFile0.toURL();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(uRL0, serviceLoader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      MockFile mockFile0 = new MockFile("org.apache.tika.detect.ZeroSizeFileDetector");
      URL uRL0 = mockFile0.toURL();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(uRL0, serviceLoader0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // /home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/tika/tika-core/org.apache.tika.detect.ZeroSizeFileDetector (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, ":!V6jz", uRLStreamHandler0);
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(uRL1, (ClassLoader) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI cannot be null
         //
         verifyException("javax.xml.parsers.DocumentBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassLoader classLoader0 = ServiceLoader.getContextClassLoader();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      URL uRL0 = mockFile0.toURL();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(uRL0, classLoader0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // /tmp/foo.bar (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("", "Ar}X37x<3~dhNqup_e", 902, "", uRLStreamHandler0);
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(uRL0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI cannot be null
         //
         verifyException("javax.xml.parsers.DocumentBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile(",", "");
      URL uRL0 = mockFile0.toURL();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(uRL0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // /home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/tika/tika-core/, (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig("{r");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // /home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/tika/tika-core/{r (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(classLoader1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(sequenceInputStream0);
        fail("Expecting exception: SAXParseException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-62);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(byteArrayInputStream0);
        fail("Expecting exception: CharConversionException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      MockFile mockFile0 = new MockFile("");
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(mockFile0, serviceLoader0);
        fail("Expecting exception: SAXParseException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      MockFile mockFile0 = new MockFile("mF9dit", "");
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(mockFile0, serviceLoader0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // /home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/tika/tika-core/mF9dit (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(mockFile0);
        fail("Expecting exception: SAXParseException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // File cannot be null
         //
         verifyException("javax.xml.parsers.DocumentBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassLoader classLoader0 = ServiceLoader.getContextClassLoader();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      TikaConfig tikaConfig0 = new TikaConfig(iIOMetadataNode0, classLoader0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      TikaConfig tikaConfig0 = new TikaConfig(iIOMetadataNode0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((URL) null, serviceLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((File) null, serviceLoader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // File cannot be null
         //
         verifyException("javax.xml.parsers.DocumentBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.config.TikaConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.config.TikaConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassLoader classLoader0 = ServiceLoader.getContextClassLoader();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((Element) null, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.config.TikaConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((Path) null, serviceLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.config.TikaConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      TikaConfig.getDefaultConfig();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassLoader classLoader0 = ServiceLoader.getContextClassLoader();
      TikaConfig tikaConfig0 = new TikaConfig(classLoader0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((Document) null, serviceLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.config.TikaConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((URL) null, (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((InputStream) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // InputStream cannot be null
         //
         verifyException("javax.xml.parsers.DocumentBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.config.TikaConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        TikaConfig.getDefaultEncodingDetector((ServiceLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.detect.DefaultEncodingDetector", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      // Undeclared exception!
      try { 
        TikaConfig.getDefaultDetector(mimeTypes0, (ServiceLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.detect.DefaultDetector", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockFile mockFile0 = new MockFile("tiff:SamplesPerPixel");
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // /home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/tika/tika-core/tiff:SamplesPerPixel (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TikaConfig tikaConfig0 = null;
      try {
        tikaConfig0 = new TikaConfig("");
        fail("Expecting exception: SAXParseException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TikaConfig tikaConfig0 = new TikaConfig();
  }
}
