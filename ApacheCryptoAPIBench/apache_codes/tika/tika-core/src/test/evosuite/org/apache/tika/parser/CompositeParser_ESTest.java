/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:42:17 GMT 2022
 */

package org.apache.tika.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.apache.tika.config.InitializableProblemHandler;
import org.apache.tika.config.LoadErrorHandler;
import org.apache.tika.config.ServiceLoader;
import org.apache.tika.detect.EncodingDetector;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.mime.MediaType;
import org.apache.tika.mime.MediaTypeRegistry;
import org.apache.tika.parser.CompositeParser;
import org.apache.tika.parser.DefaultParser;
import org.apache.tika.parser.ParseContext;
import org.apache.tika.parser.Parser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompositeParser_ESTest extends CompositeParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0);
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0, (EncodingDetector) null);
      ParseContext parseContext0 = new ParseContext();
      Map<MediaType, Parser> map0 = defaultParser0.getParsers(parseContext0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0);
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0, (EncodingDetector) null);
      ParseContext parseContext0 = new ParseContext();
      Metadata metadata0 = new Metadata();
      Parser parser0 = defaultParser0.getParser(metadata0, parseContext0);
      assertNotNull(parser0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      compositeParser0.setFallback((Parser) null);
      Metadata metadata0 = new Metadata();
      Parser parser0 = compositeParser0.getParser(metadata0);
      assertNull(parser0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      DefaultParser defaultParser0 = new DefaultParser((MediaTypeRegistry) null, classLoader0);
      MediaTypeRegistry mediaTypeRegistry0 = defaultParser0.getMediaTypeRegistry();
      assertNull(mediaTypeRegistry0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0);
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0, (EncodingDetector) null);
      List<Parser> list0 = defaultParser0.getAllComponentParsers();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0);
      List<Parser> list0 = defaultParser0.getAllComponentParsers();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0);
      Parser[] parserArray0 = new Parser[4];
      parserArray0[0] = (Parser) defaultParser0;
      parserArray0[1] = (Parser) defaultParser0;
      parserArray0[2] = (Parser) defaultParser0;
      parserArray0[3] = (Parser) defaultParser0;
      CompositeParser compositeParser0 = new CompositeParser(mediaTypeRegistry0, parserArray0);
      Map<MediaType, List<Parser>> map0 = compositeParser0.findDuplicateParsers(parseContext0);
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      // Undeclared exception!
      try { 
        compositeParser0.setParsers((Map<MediaType, Parser>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      ParseContext parseContext0 = new ParseContext();
      // Undeclared exception!
      try { 
        compositeParser0.parse((InputStream) null, (ContentHandler) defaultHandler0, (Metadata) null, parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Metadata metadata0 = new Metadata();
      ParseContext parseContext0 = new ParseContext();
      // Undeclared exception!
      try { 
        compositeParser0.parse((InputStream) null, (ContentHandler) xMLReaderAdapter0, metadata0, parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The Stream must not be null
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser((MediaTypeRegistry) null);
      ParseContext parseContext0 = new ParseContext();
      // Undeclared exception!
      try { 
        defaultParser0.getSupportedTypes(parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      Parser[] parserArray0 = new Parser[7];
      CompositeParser compositeParser0 = new CompositeParser(mediaTypeRegistry0, parserArray0);
      // Undeclared exception!
      try { 
        compositeParser0.getParsers(parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      Parser[] parserArray0 = new Parser[5];
      CompositeParser compositeParser0 = new CompositeParser(mediaTypeRegistry0, parserArray0);
      // Undeclared exception!
      try { 
        compositeParser0.getParsers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      ParseContext parseContext0 = new ParseContext();
      // Undeclared exception!
      try { 
        compositeParser0.getParser((Metadata) null, parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      // Undeclared exception!
      try { 
        compositeParser0.getParser((Metadata) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      CompositeParser compositeParser0 = null;
      try {
        compositeParser0 = new CompositeParser(mediaTypeRegistry0, (Parser[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0);
      Map<MediaType, Parser> map0 = defaultParser0.getParsers(parseContext0);
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0);
      ParseContext parseContext0 = new ParseContext();
      Set<MediaType> set0 = defaultParser0.getSupportedTypes(parseContext0);
      assertEquals(1, set0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Metadata metadata0 = new Metadata();
      ParseContext parseContext0 = new ParseContext();
      compositeParser0.parse((InputStream) pipedInputStream0, (ContentHandler) xMLReaderAdapter0, metadata0, parseContext0);
      assertEquals(0, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Metadata metadata0 = new Metadata();
      ParseContext parseContext0 = new ParseContext();
      try { 
        compositeParser0.parse((InputStream) pipedInputStream0, (ContentHandler) null, metadata0, parseContext0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected RuntimeException from org.apache.tika.parser.EmptyParser@3
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0);
      Map<MediaType, Parser> map0 = defaultParser0.getParsers();
      defaultParser0.setParsers(map0);
      assertFalse(map0.isEmpty());
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LoadErrorHandler loadErrorHandler0 = mock(LoadErrorHandler.class, new ViolatedAssumptionAnswer());
      InitializableProblemHandler initializableProblemHandler0 = mock(InitializableProblemHandler.class, new ViolatedAssumptionAnswer());
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, loadErrorHandler0, initializableProblemHandler0, false);
      Class<Parser> class0 = Parser.class;
      List<Parser> list0 = serviceLoader0.loadDynamicServiceProviders(class0);
      CompositeParser compositeParser0 = new CompositeParser((MediaTypeRegistry) null, list0);
      HashMap<MediaType, Parser> hashMap0 = new HashMap<MediaType, Parser>();
      compositeParser0.setParsers(hashMap0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0);
      Parser[] parserArray0 = new Parser[4];
      parserArray0[0] = (Parser) defaultParser0;
      parserArray0[1] = (Parser) defaultParser0;
      parserArray0[2] = (Parser) defaultParser0;
      CompositeParser compositeParser0 = new CompositeParser(mediaTypeRegistry0, parserArray0);
      // Undeclared exception!
      try { 
        compositeParser0.findDuplicateParsers(parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LoadErrorHandler loadErrorHandler0 = mock(LoadErrorHandler.class, new ViolatedAssumptionAnswer());
      InitializableProblemHandler initializableProblemHandler0 = mock(InitializableProblemHandler.class, new ViolatedAssumptionAnswer());
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, loadErrorHandler0, initializableProblemHandler0, false);
      Class<Parser> class0 = Parser.class;
      List<Parser> list0 = serviceLoader0.loadDynamicServiceProviders(class0);
      CompositeParser compositeParser0 = new CompositeParser((MediaTypeRegistry) null, list0);
      ParseContext parseContext0 = new ParseContext();
      Map<MediaType, List<Parser>> map0 = compositeParser0.findDuplicateParsers(parseContext0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LoadErrorHandler loadErrorHandler0 = mock(LoadErrorHandler.class, new ViolatedAssumptionAnswer());
      InitializableProblemHandler initializableProblemHandler0 = mock(InitializableProblemHandler.class, new ViolatedAssumptionAnswer());
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, loadErrorHandler0, initializableProblemHandler0, false);
      Class<Parser> class0 = Parser.class;
      List<Parser> list0 = serviceLoader0.loadDynamicServiceProviders(class0);
      CompositeParser compositeParser0 = new CompositeParser((MediaTypeRegistry) null, list0);
      compositeParser0.setMediaTypeRegistry((MediaTypeRegistry) null);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      Metadata metadata0 = new Metadata();
      Parser parser0 = compositeParser0.getParser(metadata0);
      assertNotNull(parser0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LoadErrorHandler loadErrorHandler0 = mock(LoadErrorHandler.class, new ViolatedAssumptionAnswer());
      InitializableProblemHandler initializableProblemHandler0 = mock(InitializableProblemHandler.class, new ViolatedAssumptionAnswer());
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, loadErrorHandler0, initializableProblemHandler0, false);
      Class<Parser> class0 = Parser.class;
      List<Parser> list0 = serviceLoader0.loadDynamicServiceProviders(class0);
      CompositeParser compositeParser0 = new CompositeParser((MediaTypeRegistry) null, list0);
      Parser parser0 = compositeParser0.getFallback();
      compositeParser0.setFallback(parser0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      Map<MediaType, Parser> map0 = compositeParser0.getParsers();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      MediaTypeRegistry mediaTypeRegistry0 = compositeParser0.getMediaTypeRegistry();
      assertNotNull(mediaTypeRegistry0);
  }
}
