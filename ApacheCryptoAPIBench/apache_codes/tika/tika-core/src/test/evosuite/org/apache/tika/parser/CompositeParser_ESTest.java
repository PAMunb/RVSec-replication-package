/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:37:48 GMT 2022
 */

package org.apache.tika.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.apache.tika.config.LoadErrorHandler;
import org.apache.tika.config.ServiceLoader;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.mime.MediaType;
import org.apache.tika.mime.MediaTypeRegistry;
import org.apache.tika.mime.MimeTypes;
import org.apache.tika.parser.CompositeParser;
import org.apache.tika.parser.DefaultParser;
import org.apache.tika.parser.ErrorParser;
import org.apache.tika.parser.ParseContext;
import org.apache.tika.parser.Parser;
import org.apache.tika.parser.RecursiveParserWrapper;
import org.apache.tika.sax.BasicContentHandlerFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.XMLFilterImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CompositeParser_ESTest extends CompositeParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      MediaTypeRegistry mediaTypeRegistry0 = mimeTypes0.getMediaTypeRegistry();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0);
      Map<MediaType, Parser> map0 = defaultParser0.getParsers();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LoadErrorHandler loadErrorHandler0 = mock(LoadErrorHandler.class, new ViolatedAssumptionAnswer());
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, loadErrorHandler0);
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0);
      defaultParser0.setFallback((Parser) null);
      ParseContext parseContext0 = new ParseContext();
      Metadata metadata0 = new Metadata();
      Parser parser0 = defaultParser0.getParser(metadata0, parseContext0);
      assertNull(parser0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      MediaTypeRegistry mediaTypeRegistry0 = mimeTypes0.getMediaTypeRegistry();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0);
      ParseContext parseContext0 = new ParseContext();
      Metadata metadata0 = new Metadata();
      Parser parser0 = defaultParser0.getParser(metadata0, parseContext0);
      assertNotNull(parser0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LoadErrorHandler loadErrorHandler0 = mock(LoadErrorHandler.class, new ViolatedAssumptionAnswer());
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, loadErrorHandler0);
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0);
      defaultParser0.setFallback((Parser) null);
      Metadata metadata0 = new Metadata();
      Parser parser0 = defaultParser0.getParser(metadata0);
      assertNull(parser0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<Parser> linkedList0 = new LinkedList<Parser>();
      CompositeParser compositeParser0 = new CompositeParser((MediaTypeRegistry) null, linkedList0);
      MediaTypeRegistry mediaTypeRegistry0 = compositeParser0.getMediaTypeRegistry();
      assertNull(mediaTypeRegistry0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      MediaTypeRegistry mediaTypeRegistry0 = mimeTypes0.getMediaTypeRegistry();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0);
      List<Parser> list0 = defaultParser0.getAllComponentParsers();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      // Undeclared exception!
      try { 
        compositeParser0.setParsers((Map<MediaType, Parser>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      ParseContext parseContext0 = new ParseContext();
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.IGNORE;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 145);
      ContentHandler contentHandler0 = basicContentHandlerFactory0.getNewContentHandler();
      // Undeclared exception!
      try { 
        compositeParser0.parse((InputStream) null, contentHandler0, (Metadata) null, parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      ParseContext parseContext0 = new ParseContext();
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.IGNORE;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, (-3507));
      ContentHandler contentHandler0 = basicContentHandlerFactory0.getNewContentHandler();
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        compositeParser0.parse((InputStream) null, contentHandler0, metadata0, parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The Stream must not be null
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser((MediaTypeRegistry) null);
      // Undeclared exception!
      try { 
        defaultParser0.getSupportedTypes((ParseContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, classLoader0);
      ParseContext parseContext0 = new ParseContext();
      // Undeclared exception!
      try { 
        defaultParser0.getParser((Metadata) null, parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      // Undeclared exception!
      try { 
        compositeParser0.getParser((Metadata) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser((MediaTypeRegistry) null);
      // Undeclared exception!
      try { 
        defaultParser0.findDuplicateParsers((ParseContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompositeParser compositeParser0 = null;
      try {
        compositeParser0 = new CompositeParser((MediaTypeRegistry) null, (Parser[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      Parser[] parserArray0 = new Parser[2];
      ErrorParser errorParser0 = new ErrorParser();
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.XML;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 1106);
      RecursiveParserWrapper recursiveParserWrapper0 = new RecursiveParserWrapper(errorParser0, basicContentHandlerFactory0);
      parserArray0[0] = (Parser) recursiveParserWrapper0;
      CompositeParser compositeParser0 = new CompositeParser(mediaTypeRegistry0, parserArray0);
      ParseContext parseContext0 = new ParseContext();
      // Undeclared exception!
      try { 
        compositeParser0.getParsers(parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      ParseContext parseContext0 = new ParseContext();
      Map<MediaType, Parser> map0 = compositeParser0.getParsers(parseContext0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser((MediaTypeRegistry) null, (List<Parser>) null);
      // Undeclared exception!
      try { 
        compositeParser0.getParsers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      List<Parser> list0 = compositeParser0.getAllComponentParsers();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      MediaTypeRegistry mediaTypeRegistry0 = compositeParser0.getMediaTypeRegistry();
      assertNotNull(mediaTypeRegistry0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.XML;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 0);
      ContentHandler contentHandler0 = basicContentHandlerFactory0.getNewContentHandler();
      Metadata metadata0 = new Metadata();
      ParseContext parseContext0 = new ParseContext();
      byte[] byteArray0 = new byte[18];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        compositeParser0.parse((InputStream) byteArrayInputStream0, contentHandler0, metadata0, parseContext0);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Your document contained more than 0 characters, and so your requested limit has been reached. To receive the full text of the document, increase your limit. (Text up to the limit is however available).
         //
         verifyException("org.apache.tika.sax.WriteOutContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LoadErrorHandler loadErrorHandler0 = mock(LoadErrorHandler.class, new ViolatedAssumptionAnswer());
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, loadErrorHandler0);
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0);
      ParseContext parseContext0 = new ParseContext();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      XMLReader xMLReader0 = parseContext0.getXMLReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(xMLReader0);
      Metadata metadata0 = new Metadata();
      defaultParser0.parse((InputStream) mockFileInputStream0, (ContentHandler) xMLFilterImpl0, metadata0, parseContext0);
      assertEquals(1, metadata0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0);
      ParseContext parseContext0 = new ParseContext();
      Map<MediaType, List<Parser>> map0 = defaultParser0.findDuplicateParsers(parseContext0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0);
      ParseContext parseContext0 = new ParseContext();
      Map<MediaType, Parser> map0 = defaultParser0.getParsers(parseContext0);
      defaultParser0.setParsers(map0);
      assertEquals(1, map0.size());
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0);
      Parser parser0 = defaultParser0.getFallback();
      assertNotNull(parser0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LoadErrorHandler loadErrorHandler0 = mock(LoadErrorHandler.class, new ViolatedAssumptionAnswer());
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, loadErrorHandler0);
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0);
      defaultParser0.setMediaTypeRegistry(mediaTypeRegistry0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      Metadata metadata0 = new Metadata();
      try { 
        compositeParser0.parse((InputStream) bufferedInputStream0, (ContentHandler) null, metadata0, (ParseContext) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected RuntimeException from org.apache.tika.parser.EmptyParser@3
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, classLoader0);
      ParseContext parseContext0 = new ParseContext();
      Set<MediaType> set0 = defaultParser0.getSupportedTypes(parseContext0);
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LoadErrorHandler loadErrorHandler0 = mock(LoadErrorHandler.class, new ViolatedAssumptionAnswer());
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, loadErrorHandler0);
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0);
      Metadata metadata0 = new Metadata();
      Parser parser0 = defaultParser0.getParser(metadata0);
      assertNotNull(parser0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LoadErrorHandler loadErrorHandler0 = mock(LoadErrorHandler.class, new ViolatedAssumptionAnswer());
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, loadErrorHandler0);
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0);
      defaultParser0.setFallback((Parser) null);
      Parser parser0 = defaultParser0.getFallback();
      assertNull(parser0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LoadErrorHandler loadErrorHandler0 = mock(LoadErrorHandler.class, new ViolatedAssumptionAnswer());
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, loadErrorHandler0);
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0);
      Map<MediaType, Parser> map0 = defaultParser0.getParsers();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = new MediaTypeRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LoadErrorHandler loadErrorHandler0 = mock(LoadErrorHandler.class, new ViolatedAssumptionAnswer());
      ServiceLoader serviceLoader0 = new ServiceLoader(classLoader0, loadErrorHandler0);
      DefaultParser defaultParser0 = new DefaultParser(mediaTypeRegistry0, serviceLoader0);
      List<Parser> list0 = defaultParser0.getAllComponentParsers();
      assertEquals(0, list0.size());
  }
}
