/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:56:25 GMT 2022
 */

package org.apache.tika.sax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import javax.xml.namespace.QName;
import org.apache.tika.sax.ElementMappingContentHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ElementMappingContentHandler_ESTest extends ElementMappingContentHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      HashMap<QName, QName> hashMap0 = new HashMap<QName, QName>();
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(qName0, hashMap0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      String string0 = ElementMappingContentHandler.getQNameAsString(qName0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(xMLFilterImpl0, (Map<QName, ElementMappingContentHandler.TargetElement>) null);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.startElement("!K>`)8OPK3dW=L-", "!K>`)8OPK3dW=L-", "org.apache.tika.sax.ElementMappingContentHandler$TargetElement", attributes2Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ElementMappingContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(defaultHandler2_0, hashMap0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.startElement((String) null, (String) null, "", attributes2Impl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        ElementMappingContentHandler.getQNameAsString((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ElementMappingContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(defaultHandler2_0, (Map<QName, ElementMappingContentHandler.TargetElement>) null);
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.endElement("u|X1aT58ReOzjU", "}j.", "QDYjM!fXa3/;}pm%b5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ElementMappingContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler((ContentHandler) null, hashMap0);
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.endElement("", (String) null, "|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(qName0);
      QName qName1 = elementMappingContentHandler_TargetElement0.getMappedTagName();
      assertSame(qName0, qName1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<QName, QName> hashMap0 = new HashMap<QName, QName>();
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement("", "", hashMap0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      QName qName0 = new QName("");
      hashMap0.put(qName0, qName0);
      attributes2Impl0.addAttribute("", "", "", "", "");
      Attributes attributes0 = elementMappingContentHandler_TargetElement0.mapAttributes(attributes2Impl0);
      assertNotNull(attributes0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = new QName("QDYjM!fXa3/;}pm%b5", "QDYjM!fXa3/;}pm%b5", "QDYjM!fXa3/;}pm%b5");
      String string0 = ElementMappingContentHandler.getQNameAsString(qName0);
      assertEquals("QDYjM!fXa3/;}pm%b5:QDYjM!fXa3/;}pm%b5", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(defaultHandler2_0, hashMap0);
      QName qName0 = QName.valueOf("");
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(qName0);
      hashMap0.put(qName0, elementMappingContentHandler_TargetElement0);
      elementMappingContentHandler0.endElement("", "", "");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(defaultHandler2_0, hashMap0);
      elementMappingContentHandler0.endElement("presence:", "", "presence:");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(defaultHandler0, hashMap0);
      elementMappingContentHandler0.startElement(":", "", "", attributes2Impl0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = new QName("", "");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      HashMap<QName, QName> hashMap1 = new HashMap<QName, QName>();
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement("", ".?", hashMap1);
      hashMap0.put(qName0, elementMappingContentHandler_TargetElement0);
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(xMLReaderAdapter0, hashMap0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      elementMappingContentHandler0.startElement("", "", "", attributes2Impl0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement("", "");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(qName0);
      Map<QName, QName> map0 = elementMappingContentHandler_TargetElement0.getAttributesMapping();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<QName, QName> hashMap0 = new HashMap<QName, QName>();
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement("", "", hashMap0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.addAttribute("", "", "", "", "");
      Attributes attributes0 = elementMappingContentHandler_TargetElement0.mapAttributes(attributes2Impl0);
      assertNotNull(attributes0);
  }
}
