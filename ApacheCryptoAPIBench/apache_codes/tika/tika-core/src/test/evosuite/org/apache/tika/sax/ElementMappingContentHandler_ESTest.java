/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:49:04 GMT 2022
 */

package org.apache.tika.sax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import javax.xml.namespace.QName;
import org.apache.tika.sax.ElementMappingContentHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ElementMappingContentHandler_ESTest extends ElementMappingContentHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QName qName0 = new QName("");
      String string0 = ElementMappingContentHandler.getQNameAsString(qName0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(xMLFilterImpl0, hashMap0);
      QName qName0 = QName.valueOf("");
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(qName0);
      hashMap0.put(qName0, elementMappingContentHandler_TargetElement0);
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.startElement("", "", "", (Attributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ElementMappingContentHandler$TargetElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler((ContentHandler) null, hashMap0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.startElement("a38E", (String) null, "a38E", attributes2Impl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ElementMappingContentHandler.getQNameAsString((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ElementMappingContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(xMLReaderAdapter0, hashMap0);
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.endElement((String) null, (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QName qName0 = new QName("");
      HashMap<QName, QName> hashMap0 = new HashMap<QName, QName>();
      hashMap0.put(qName0, qName0);
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(qName0, hashMap0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      attributesImpl0.addAttribute("", "", "", "N^<':b|(tR+(", "");
      Attributes attributes0 = elementMappingContentHandler_TargetElement0.mapAttributes(attributesImpl0);
      assertFalse(attributes0.equals((Object)attributesImpl0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QName qName0 = new QName("");
      HashMap<QName, QName> hashMap0 = new HashMap<QName, QName>();
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(qName0, hashMap0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      attributesImpl0.addAttribute("", "", "", "N^<':b|(tR+(", "");
      Attributes attributes0 = elementMappingContentHandler_TargetElement0.mapAttributes(attributesImpl0);
      assertNotSame(attributesImpl0, attributes0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QName qName0 = new QName("._pS#>;XW] [n@", "._pS#>;XW] [n@", "._pS#>;XW] [n@");
      String string0 = ElementMappingContentHandler.getQNameAsString(qName0);
      assertEquals("._pS#>;XW] [n@:._pS#>;XW] [n@", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      QName qName0 = QName.valueOf("");
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(qName0);
      hashMap0.put(qName0, elementMappingContentHandler_TargetElement0);
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(xMLReaderAdapter0, hashMap0);
      elementMappingContentHandler0.endElement("", "", "");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler((ContentHandler) null, hashMap0);
      elementMappingContentHandler0.endElement("a38E", "a38E", "_Av{01Fi_CLpS0o-");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      QName qName0 = QName.valueOf("");
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(qName0);
      hashMap0.put(qName0, elementMappingContentHandler_TargetElement0);
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(xMLReaderAdapter0, hashMap0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      elementMappingContentHandler0.startElement("", "", "", attributes2Impl0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<QName, ElementMappingContentHandler.TargetElement> hashMap0 = new HashMap<QName, ElementMappingContentHandler.TargetElement>();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler((ContentHandler) null, hashMap0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      elementMappingContentHandler0.startElement("", "m&}.}y%1z+FN", "_Av{01Fi_CLpS0o-", attributes2Impl0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ElementMappingContentHandler elementMappingContentHandler0 = new ElementMappingContentHandler(xMLReaderAdapter0, (Map<QName, ElementMappingContentHandler.TargetElement>) null);
      // Undeclared exception!
      try { 
        elementMappingContentHandler0.endElement("", "X[yu+dQ$", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.ElementMappingContentHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = QName.valueOf("a38E");
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(qName0);
      QName qName1 = elementMappingContentHandler_TargetElement0.getMappedTagName();
      assertSame(qName0, qName1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(qName0);
      Map<QName, QName> map0 = elementMappingContentHandler_TargetElement0.getAttributesMapping();
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement1 = new ElementMappingContentHandler.TargetElement("'7iFPA$qu\"R\"8{ ", "", map0);
      assertFalse(elementMappingContentHandler_TargetElement1.equals((Object)elementMappingContentHandler_TargetElement0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ElementMappingContentHandler.TargetElement elementMappingContentHandler_TargetElement0 = new ElementMappingContentHandler.TargetElement(".?,ggl(#}(uE7Aik", ".?,ggl(#}(uE7Aik");
      Map<QName, QName> map0 = elementMappingContentHandler_TargetElement0.getAttributesMapping();
      assertTrue(map0.isEmpty());
  }
}
