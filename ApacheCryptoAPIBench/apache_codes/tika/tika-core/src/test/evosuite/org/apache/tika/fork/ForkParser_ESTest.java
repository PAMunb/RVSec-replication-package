/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:26:13 GMT 2022
 */

package org.apache.tika.fork;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.util.List;
import org.apache.tika.fork.ForkParser;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.parser.CompositeParser;
import org.apache.tika.parser.DelegatingParser;
import org.apache.tika.parser.ParseContext;
import org.apache.tika.parser.Parser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.ext.DefaultHandler2;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ForkParser_ESTest extends ForkParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      DelegatingParser delegatingParser0 = new DelegatingParser();
      ForkParser forkParser0 = new ForkParser(classLoader0, delegatingParser0);
      forkParser0.close();
      forkParser0.getPoolSize();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CompositeParser compositeParser0 = new CompositeParser();
      ParseContext parseContext0 = new ParseContext();
      ForkParser forkParser0 = new ForkParser(classLoader0, compositeParser0);
      Metadata metadata0 = new Metadata();
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      try { 
        forkParser0.parse((InputStream) pipedInputStream0, (ContentHandler) defaultHandler2_0, metadata0, parseContext0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ParseContext parseContext0 = new ParseContext();
      ForkParser forkParser0 = new ForkParser(classLoader0, (Parser) null);
      Metadata metadata0 = new Metadata();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/apache-tika-fork-0.jar");
      FileSystemHandling.createFolder(evoSuiteFile0);
      try { 
        forkParser0.parse((InputStream) pipedInputStream0, (ContentHandler) null, metadata0, parseContext0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      DelegatingParser delegatingParser0 = new DelegatingParser();
      ForkParser forkParser0 = new ForkParser(classLoader0, delegatingParser0);
      List<String> list0 = forkParser0.getJavaCommandAsList();
      forkParser0.setJavaCommand(list0);
      assertEquals(2, list0.size());
      assertEquals(5, forkParser0.getPoolSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      Metadata metadata0 = new Metadata();
      ParseContext parseContext0 = new ParseContext();
      ForkParser forkParser0 = new ForkParser((ClassLoader) null, compositeParser0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      // Undeclared exception!
      try { 
        forkParser0.parse((InputStream) null, (ContentHandler) defaultHandler2_0, metadata0, parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null stream
         //
         verifyException("org.apache.tika.fork.ForkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CompositeParser compositeParser0 = new CompositeParser();
      ForkParser forkParser0 = new ForkParser(classLoader0, compositeParser0);
      String string0 = forkParser0.getJavaCommand();
      assertEquals("java -Xmx32m", string0);
      assertEquals(5, forkParser0.getPoolSize());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CompositeParser compositeParser0 = new CompositeParser();
      ForkParser forkParser0 = new ForkParser(classLoader0, compositeParser0);
      ForkParser forkParser1 = null;
      try {
        forkParser1 = new ForkParser(classLoader0, forkParser0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The underlying parser of a ForkParser should not be a ForkParser, but a specific implementation.
         //
         verifyException("org.apache.tika.fork.ForkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CompositeParser compositeParser0 = new CompositeParser();
      ForkParser forkParser0 = new ForkParser(classLoader0, compositeParser0);
      forkParser0.getSupportedTypes((ParseContext) null);
      assertEquals(5, forkParser0.getPoolSize());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ForkParser forkParser0 = new ForkParser(classLoader0, (Parser) null);
      int int0 = forkParser0.getPoolSize();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompositeParser compositeParser0 = new CompositeParser();
      ForkParser forkParser0 = new ForkParser((ClassLoader) null, compositeParser0);
      forkParser0.setServerPulseMillis(0L);
      assertEquals(5, forkParser0.getPoolSize());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ForkParser forkParser0 = new ForkParser(classLoader0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ForkParser forkParser0 = new ForkParser(classLoader0, (Parser) null);
      forkParser0.setPoolSize((-5618));
      int int0 = forkParser0.getPoolSize();
      assertEquals((-5618), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      CompositeParser compositeParser0 = new CompositeParser();
      ForkParser forkParser0 = new ForkParser(classLoader0, compositeParser0);
      forkParser0.setJavaCommand("");
      assertEquals(5, forkParser0.getPoolSize());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ForkParser forkParser0 = new ForkParser();
  }
}
