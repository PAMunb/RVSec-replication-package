/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:49:57 GMT 2022
 */

package org.apache.tika.sax;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.tika.sax.StandardReference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardReference_ESTest extends StandardReference_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder(">$crO6N6Z", ">$crO6N6Z");
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder1 = standardReference_StandardReferenceBuilder0.setSecondOrganization(">$crO6N6Z", ">$crO6N6Z");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder1.build();
      standardReference0.getSeparator();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "zr@");
      standardReference_StandardReferenceBuilder0.setSecondOrganization("", "sH9zwyq=Sv)VAU");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getSeparator();
      assertEquals("zr@", standardReference0.getIdentifier());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("", standardReference0.getMainOrganizationAcronym());
      assertEquals("", string0);
      assertEquals("sH9zwyq=Sv)VAU", standardReference0.getSecondOrganizationAcronym());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("zd!8pM!r!?`ue", "zd!8pM!r!?`ue");
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder1 = standardReference_StandardReferenceBuilder0.setSecondOrganization("", "agWSwh");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder1.build();
      String string0 = standardReference0.getSecondOrganizationAcronym();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("zd!8pM!r!?`ue", standardReference0.getIdentifier());
      assertEquals("", standardReference0.getSeparator());
      assertEquals("agWSwh", string0);
      assertEquals("zd!8pM!r!?`ue", standardReference0.getMainOrganizationAcronym());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder((String) null, "':I=1b=RGL7IK8LBqG_");
      standardReference_StandardReferenceBuilder0.setSecondOrganization("d:Q!esTXKv`Q7Z>*", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getSecondOrganizationAcronym();
      assertEquals("':I=1b=RGL7IK8LBqG_", standardReference0.getIdentifier());
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("d:Q!esTXKv`Q7Z>*", standardReference0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("uXreJZfgUPW2Axe-j", "uXreJZfgUPW2Axe-j");
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder1 = standardReference_StandardReferenceBuilder0.setScore(2906.494);
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder1.build();
      double double0 = standardReference0.getScore();
      assertEquals(2906.494, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder((String) null, (String) null);
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.getMainOrganizationAcronym();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("2Y", "2Y");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getMainOrganizationAcronym();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder((String) null, (String) null);
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.getIdentifier();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("M?F_26[h~A-;vZ{uU", "M?F_26[h~A-;vZ{uU");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getIdentifier();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("$>GK", "$>GK");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.toString();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("$>GK $>GK", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "");
      standardReference_StandardReferenceBuilder0.setSecondOrganization(" ", " ");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.toString();
      assertEquals("   ", string0);
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setScore((-1754.0173654806274));
      double double0 = standardReference0.getScore();
      assertEquals((-1754.0173654806274), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getMainOrganizationAcronym();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("$>GK", "$>GK");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getSeparator();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("$>GK", "$>GK");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setSecondOrganizationAcronym("$>GK");
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("$>GK", "$>GK");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setIdentifier("$>GK");
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("$>GK", "$>GK");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getSecondOrganizationAcronym();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setSeparator("");
      String string0 = standardReference0.toString();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setMainOrganizationAcronym(" ");
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getIdentifier();
      assertNotNull(string0);
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      double double0 = standardReference0.getScore();
      assertEquals(0.0, double0, 0.01);
  }
}
