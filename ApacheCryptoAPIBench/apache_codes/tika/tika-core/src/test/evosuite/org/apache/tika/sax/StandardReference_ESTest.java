/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:57:55 GMT 2022
 */

package org.apache.tika.sax;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.tika.sax.StandardReference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StandardReference_ESTest extends StandardReference_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setSeparator("C:&$F5Z");
      standardReference0.getSeparator();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "org.apache.tika.sax.StandardReference");
      standardReference_StandardReferenceBuilder0.setSecondOrganization("", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getSeparator();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("org.apache.tika.sax.StandardReference", standardReference0.getIdentifier());
      assertEquals("", standardReference0.getSecondOrganizationAcronym());
      assertEquals("", standardReference0.getMainOrganizationAcronym());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("rVe}X*S|yg&~WlD);W", "p{@gp+&x|h7");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setSecondOrganizationAcronym("org.apache.tika.sax.StandardReference");
      standardReference0.getSecondOrganizationAcronym();
      assertEquals("rVe}X*S|yg&~WlD);W", standardReference0.getMainOrganizationAcronym());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("p{@gp+&x|h7", standardReference0.getIdentifier());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("QZ5h6#@i", "QZ5h6#@i");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      
      standardReference0.setScore(1.0);
      double double0 = standardReference0.getScore();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "wwf2Alhy5C A)!mbL");
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder1 = standardReference_StandardReferenceBuilder0.setScore((-1252.7));
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder1.build();
      double double0 = standardReference0.getScore();
      assertEquals("wwf2Alhy5C A)!mbL", standardReference0.getIdentifier());
      assertEquals((-1252.7), double0, 0.01);
      assertEquals("", standardReference0.getMainOrganizationAcronym());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder((String) null, "M6hDS(?)642N*YX");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getMainOrganizationAcronym();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "wwf2Alhy5C A)!mbL");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      assertEquals("wwf2Alhy5C A)!mbL", standardReference0.getIdentifier());
      
      standardReference0.setIdentifier((String) null);
      standardReference0.getIdentifier();
      assertEquals("", standardReference0.getMainOrganizationAcronym());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getIdentifier();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("org.apache.tika.sax.StandardReference$1", "org.apache.tika.sax.StandardReference$1");
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder1 = standardReference_StandardReferenceBuilder0.setSecondOrganization("", "org.apache.tika.sax.StandardReference$1");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder1.build();
      String string0 = standardReference0.toString();
      assertEquals("org.apache.tika.sax.StandardReference$1 org.apache.tika.sax.StandardReference$1", string0);
      assertEquals("org.apache.tika.sax.StandardReference$1", standardReference0.getSecondOrganizationAcronym());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "wwf2Alhy5C A)!mbL");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.toString();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals(" wwf2Alhy5C A)!mbL", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("org.apache.tika.sax.StandardReference$1", "org.apache.tika.sax.StandardReference$1");
      standardReference_StandardReferenceBuilder0.setSecondOrganization("org.apache.tika.sax.StandardReference$1", "R]hfQ\u0012|{x[M|-: ");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.toString();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertEquals("org.apache.tika.sax.StandardReference$1org.apache.tika.sax.StandardReference$1R]hfQ\u0012|{x[M|-:  org.apache.tika.sax.StandardReference$1", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("org.apache.tika.sax.StandardReference$1", "org.apache.tika.sax.StandardReference$1");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getMainOrganizationAcronym();
      assertNotNull(string0);
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("", "org.apache.tika.sax.StandardReference");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getSeparator();
      assertEquals("org.apache.tika.sax.StandardReference", standardReference0.getIdentifier());
      assertNull(string0);
      assertEquals("", standardReference0.getMainOrganizationAcronym());
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("org.apache.tika.sax.StandardReference$1", "org.apache.tika.sax.StandardReference$1");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setSecondOrganizationAcronym("");
      standardReference0.getSecondOrganizationAcronym();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("org.apache.tika.sax.StandardReference$1", "org.apache.tika.sax.StandardReference$1");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getSecondOrganizationAcronym();
      assertNull(string0);
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("org.apache.tika.sax.StandardReference$1", "org.apache.tika.sax.StandardReference$1");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      standardReference0.setMainOrganizationAcronym("");
      standardReference0.getMainOrganizationAcronym();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("QZ5h6#@i", "QZ5h6#@i");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      String string0 = standardReference0.getIdentifier();
      assertEquals(0.0, standardReference0.getScore(), 0.01);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StandardReference.StandardReferenceBuilder standardReference_StandardReferenceBuilder0 = new StandardReference.StandardReferenceBuilder("QZ5h6#@i", "QZ5h6#@i");
      StandardReference standardReference0 = standardReference_StandardReferenceBuilder0.build();
      double double0 = standardReference0.getScore();
      assertEquals(0.0, double0, 0.01);
  }
}
