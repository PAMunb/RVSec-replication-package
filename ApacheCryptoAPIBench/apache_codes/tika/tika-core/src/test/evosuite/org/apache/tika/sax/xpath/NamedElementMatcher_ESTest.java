/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:48:41 GMT 2022
 */

package org.apache.tika.sax.xpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tika.sax.xpath.Matcher;
import org.apache.tika.sax.xpath.NamedElementMatcher;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NamedElementMatcher_ESTest extends NamedElementMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NamedElementMatcher namedElementMatcher0 = new NamedElementMatcher("]IgG0Rnkk?S", "]IgG0Rnkk?S", (Matcher) null);
      Matcher matcher0 = namedElementMatcher0.descend("]IgG0Rnkk?S", "]IgG0Rnkk?S");
      assertNull(matcher0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NamedElementMatcher namedElementMatcher0 = new NamedElementMatcher("", "zhrx~:sg&j;", (Matcher) null);
      Matcher matcher0 = namedElementMatcher0.descend("org.apache.tika.sax.xpath.ChildMatcher", "nW;e)}=euOl^ Za");
      // Undeclared exception!
      try { 
        matcher0.descend("nW;e)}=euOl^ Za", "Z");
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Matcher matcher0 = Matcher.FAIL;
      NamedElementMatcher namedElementMatcher0 = new NamedElementMatcher((String) null, (String) null, matcher0);
      // Undeclared exception!
      try { 
        namedElementMatcher0.descend((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Matcher matcher0 = new Matcher();
      NamedElementMatcher namedElementMatcher0 = new NamedElementMatcher("Dl", "Dl", matcher0);
      Matcher matcher1 = namedElementMatcher0.descend((String) null, "El");
      assertNotSame(matcher1, matcher0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Matcher matcher0 = Matcher.FAIL;
      NamedElementMatcher namedElementMatcher0 = new NamedElementMatcher("", "", matcher0);
      Matcher matcher1 = namedElementMatcher0.descend("", "");
      assertSame(matcher0, matcher1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Matcher matcher0 = Matcher.FAIL;
      NamedElementMatcher namedElementMatcher0 = new NamedElementMatcher("", "", matcher0);
      Matcher matcher1 = namedElementMatcher0.descend("", "org.apache.tika.sax.xpath.ChildMatcher");
      assertFalse(matcher1.matchesElement());
  }
}
