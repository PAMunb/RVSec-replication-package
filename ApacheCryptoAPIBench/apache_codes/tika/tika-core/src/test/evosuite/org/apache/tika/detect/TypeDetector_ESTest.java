/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:57:53 GMT 2022
 */

package org.apache.tika.detect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import org.apache.tika.detect.TypeDetector;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.mime.MediaType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeDetector_ESTest extends TypeDetector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TypeDetector typeDetector0 = new TypeDetector();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        typeDetector0.detect(inputStream0, (Metadata) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.detect.TypeDetector", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TypeDetector typeDetector0 = new TypeDetector();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      Metadata metadata0 = mock(Metadata.class, new ViolatedAssumptionAnswer());
      doReturn("Content-Type").when(metadata0).get(anyString());
      MediaType mediaType0 = typeDetector0.detect(inputStream0, metadata0);
      assertEquals("application/octet-stream", mediaType0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TypeDetector typeDetector0 = new TypeDetector();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      Metadata metadata0 = mock(Metadata.class, new ViolatedAssumptionAnswer());
      doReturn("L#w/rl9~{'`eUa").when(metadata0).get(anyString());
      MediaType mediaType0 = typeDetector0.detect(inputStream0, metadata0);
      assertEquals("rl9~{'`eua", mediaType0.getSubtype());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TypeDetector typeDetector0 = new TypeDetector();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      Metadata metadata0 = mock(Metadata.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(metadata0).get(anyString());
      MediaType mediaType0 = typeDetector0.detect(inputStream0, metadata0);
      assertFalse(mediaType0.hasParameters());
  }
}
