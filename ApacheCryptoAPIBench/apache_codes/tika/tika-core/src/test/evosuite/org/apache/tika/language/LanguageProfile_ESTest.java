/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:47:57 GMT 2022
 */

package org.apache.tika.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.tika.language.LanguageProfile;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LanguageProfile_ESTest extends LanguageProfile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      assertEquals(0L, languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      assertNotNull(languageProfile0);
      
      languageProfile0.add("}jk", 65536L);
      assertEquals(65536L, languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      
      double double0 = languageProfile0.distance(languageProfile0);
      assertEquals(65536L, languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile("rsz");
      assertEquals(2L, languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      assertNotNull(languageProfile0);
      
      languageProfile0.add("rsz", (-371L));
      assertEquals((-369L), languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      
      double double0 = languageProfile0.distance(languageProfile0);
      assertEquals((-369L), languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile(1);
      assertEquals(0L, languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertNotNull(languageProfile0);
      
      LanguageProfile languageProfile1 = new LanguageProfile(725);
      assertEquals(0L, languageProfile1.getCount());
      assertFalse(languageProfile1.equals((Object)languageProfile0));
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertNotNull(languageProfile1);
      
      // Undeclared exception!
      try { 
        languageProfile1.distance(languageProfile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to calculage distance of language profiles with different ngram lengths: 1 != 725
         //
         verifyException("org.apache.tika.language.LanguageProfile", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      assertEquals(0L, languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      assertNotNull(languageProfile0);
      
      LanguageProfile.useInterleaved = false;
      LanguageProfile languageProfile1 = new LanguageProfile("fV<ySLi\"b*t(", 3);
      assertEquals(8L, languageProfile1.getCount());
      assertFalse(languageProfile1.equals((Object)languageProfile0));
      assertFalse(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertNotNull(languageProfile1);
      
      double double0 = languageProfile0.distance(languageProfile1);
      assertEquals(0L, languageProfile0.getCount());
      assertEquals(8L, languageProfile1.getCount());
      assertFalse(languageProfile0.equals((Object)languageProfile1));
      assertFalse(languageProfile1.equals((Object)languageProfile0));
      assertNotSame(languageProfile0, languageProfile1);
      assertNotSame(languageProfile1, languageProfile0);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertFalse(LanguageProfile.useInterleaved);
      assertFalse(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertEquals(0.3535533905932738, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      assertEquals(0L, languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      assertNotNull(languageProfile0);
      
      LanguageProfile.useInterleaved = false;
      LanguageProfile languageProfile1 = new LanguageProfile("", 113);
      assertEquals(0L, languageProfile1.getCount());
      assertFalse(languageProfile1.equals((Object)languageProfile0));
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertFalse(LanguageProfile.useInterleaved);
      assertNotNull(languageProfile1);
      
      // Undeclared exception!
      try { 
        languageProfile1.distance(languageProfile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to calculage distance of language profiles with different ngram lengths: 3 != 113
         //
         verifyException("org.apache.tika.language.LanguageProfile", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      assertEquals(0L, languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertNotNull(languageProfile0);
      
      languageProfile0.add("}jk", (-1550L));
      assertEquals((-1550L), languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      
      long long0 = languageProfile0.getCount("}jk");
      assertEquals((-1550L), languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertEquals((-1550L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      assertEquals(0L, languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      assertNotNull(languageProfile0);
      
      languageProfile0.add(">w.", (long) 3);
      assertEquals(3L, languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      
      long long0 = languageProfile0.getCount();
      assertEquals(3L, languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      assertEquals(0L, languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      assertNotNull(languageProfile0);
      
      languageProfile0.add("G?j", (-1L));
      assertEquals((-1L), languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      
      long long0 = languageProfile0.getCount();
      assertEquals((-1L), languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      assertEquals(0L, languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertNotNull(languageProfile0);
      
      // Undeclared exception!
      try { 
        languageProfile0.distance((LanguageProfile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.LanguageProfile", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile((-858));
      assertEquals(0L, languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      assertNotNull(languageProfile0);
      
      // Undeclared exception!
      try { 
        languageProfile0.distance(languageProfile0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.LanguageProfile$Interleaved$Entry", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      assertEquals(0L, languageProfile0.getCount());
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertTrue(LanguageProfile.useInterleaved);
      assertNotNull(languageProfile0);
      
      // Undeclared exception!
      try { 
        languageProfile0.add((String) null, 3L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.LanguageProfile", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      assertEquals(0L, languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertNotNull(languageProfile0);
      
      // Undeclared exception!
      try { 
        languageProfile0.add((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.LanguageProfile", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LanguageProfile languageProfile0 = null;
      try {
        languageProfile0 = new LanguageProfile((String) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.LanguageProfile", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LanguageProfile languageProfile0 = null;
      try {
        languageProfile0 = new LanguageProfile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.language.LanguageProfile", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      assertEquals(0L, languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertNotNull(languageProfile0);
      
      // Undeclared exception!
      try { 
        languageProfile0.add("T7]Cba+;_55{Pm", 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to add an ngram of incorrect length: 14 != 3
         //
         verifyException("org.apache.tika.language.LanguageProfile", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile("");
      assertEquals(0L, languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertNotNull(languageProfile0);
      
      languageProfile0.add("OS(");
      assertEquals(1L, languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      
      long long0 = languageProfile0.getCount("OS(");
      assertEquals(1L, languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile("", (-893));
      assertEquals(0L, languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertNotNull(languageProfile0);
      
      // Undeclared exception!
      try { 
        languageProfile0.add("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to add an ngram of incorrect length: 0 != -893
         //
         verifyException("org.apache.tika.language.LanguageProfile", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      assertEquals(0L, languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertNotNull(languageProfile0);
      
      double double0 = languageProfile0.distance(languageProfile0);
      assertEquals(0L, languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertEquals(0.0, double0, 0.01);
      
      languageProfile0.add("}jk", (long) 3);
      assertEquals(3L, languageProfile0.getCount());
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      
      double double1 = languageProfile0.distance(languageProfile0);
      assertEquals(3L, languageProfile0.getCount());
      assertEquals(double1, double0, 0.01);
      assertTrue(LanguageProfile.useInterleaved);
      assertEquals(3, LanguageProfile.DEFAULT_NGRAM_LENGTH);
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile("rsz");
      languageProfile0.distance(languageProfile0);
      languageProfile0.add("rsz", (long) 3);
      double double0 = languageProfile0.distance(languageProfile0);
      assertEquals(5L, languageProfile0.getCount());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile("vUA/(*;@:M&=7T");
      LanguageProfile languageProfile1 = new LanguageProfile("7]SZH5oFZJ");
      double double0 = languageProfile1.distance(languageProfile0);
      assertEquals(0.6454972243679028, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile("vUA/(*;@:M&=7T");
      LanguageProfile languageProfile1 = new LanguageProfile(3);
      double double0 = languageProfile1.distance(languageProfile0);
      assertEquals(0.5, double0, 0.01);
      assertEquals(4L, languageProfile0.getCount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      LanguageProfile languageProfile1 = new LanguageProfile(65536);
      // Undeclared exception!
      try { 
        languageProfile0.distance(languageProfile1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to calculage distance of language profiles with different ngram lengths: 65536 != 3
         //
         verifyException("org.apache.tika.language.LanguageProfile", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      LanguageProfile.useInterleaved = false;
      LanguageProfile languageProfile1 = new LanguageProfile(28);
      // Undeclared exception!
      try { 
        languageProfile0.distance(languageProfile1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to calculage distance of language profiles with different ngram lengths: 28 != 3
         //
         verifyException("org.apache.tika.language.LanguageProfile", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LanguageProfile languageProfile0 = null;
      try {
        languageProfile0 = new LanguageProfile("vU *@:M7", 38);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to add an ngram of incorrect length: 3 != 38
         //
         verifyException("org.apache.tika.language.LanguageProfile", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile("9-ew|s^OH[`a9cLz#y");
      LanguageProfile.useInterleaved = false;
      double double0 = languageProfile0.distance(languageProfile0);
      assertEquals(0.0, double0, 0.01);
      assertEquals(9L, languageProfile0.getCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      long long0 = languageProfile0.getCount("T7]Cba+;_55{Pm");
      assertEquals(0L, languageProfile0.getCount());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile("");
      languageProfile0.toString();
      assertEquals(0L, languageProfile0.getCount());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LanguageProfile languageProfile0 = new LanguageProfile();
      long long0 = languageProfile0.getCount();
      assertEquals(0L, long0);
  }
}
