/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:35:01 GMT 2022
 */

package org.apache.tika;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.net.URL;
import java.net.URLStreamHandler;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.regex.Pattern;
import org.apache.tika.Tika;
import org.apache.tika.config.ServiceLoader;
import org.apache.tika.config.TikaConfig;
import org.apache.tika.detect.DefaultDetector;
import org.apache.tika.detect.Detector;
import org.apache.tika.detect.NameDetector;
import org.apache.tika.detect.OverrideDetector;
import org.apache.tika.detect.ZeroSizeFileDetector;
import org.apache.tika.language.translate.DefaultTranslator;
import org.apache.tika.language.translate.EmptyTranslator;
import org.apache.tika.language.translate.Translator;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.mime.MediaType;
import org.apache.tika.mime.MimeTypes;
import org.apache.tika.parser.CompositeParser;
import org.apache.tika.parser.DummyInitializableParser;
import org.apache.tika.parser.EmptyParser;
import org.apache.tika.parser.Parser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Tika_ESTest extends Tika_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      tika0.translate("Error translating data.", "format", "modified");
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OverrideDetector overrideDetector0 = new OverrideDetector();
      EmptyParser emptyParser0 = new EmptyParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(overrideDetector0, emptyParser0, emptyTranslator0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Metadata metadata0 = new Metadata();
      tika0.parseToString((InputStream) pipedInputStream0, metadata0, 0);
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      DefaultDetector defaultDetector0 = new DefaultDetector(mimeTypes0);
      CompositeParser compositeParser0 = new CompositeParser();
      Tika tika0 = new Tika(defaultDetector0, compositeParser0, (Translator) null);
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Metadata metadata0 = new Metadata();
      tika0.parseToString((InputStream) byteArrayInputStream0, metadata0);
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      // Undeclared exception!
      try { 
        tika0.translate("/}_P", "/}_P");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Error translating data.
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      MockFile mockFile0 = new MockFile("Error translating data.", "Error translating data.");
      Path path0 = mockFile0.toPath();
      try { 
        tika0.parseToString(path0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OverrideDetector overrideDetector0 = new OverrideDetector();
      EmptyParser emptyParser0 = new EmptyParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(overrideDetector0, emptyParser0, emptyTranslator0);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        tika0.parseToString((InputStream) null, metadata0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        tika0.parseToString((InputStream) sequenceInputStream0, metadata0, 48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        tika0.parseToString((InputStream) null, metadata0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      Metadata metadata0 = new Metadata();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1090, 1090);
      // Undeclared exception!
      try { 
        tika0.parseToString((InputStream) byteArrayInputStream0, metadata0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        tika0.parseToString((InputStream) sequenceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.parse((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      // Undeclared exception!
      try { 
        tika0.detect(path0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      URL uRL0 = MockURL.getFtpExample();
      // Undeclared exception!
      try { 
        tika0.detect(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      URL uRL0 = MockURL.getHttpExample();
      try { 
        tika0.detect(uRL0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Metadata metadata0 = new Metadata();
      try { 
        tika0.detect((InputStream) pipedInputStream0, metadata0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-5291), 1);
      // Undeclared exception!
      try { 
        tika0.detect((InputStream) byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5291
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      Metadata metadata0 = new Metadata();
      tika0.detect((InputStream) null, metadata0);
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      tika0.detect((InputStream) null);
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      Metadata metadata0 = new Metadata();
      MockFile mockFile0 = new MockFile("r?#Xz9F ##eakXWH*");
      Path path0 = mockFile0.toPath();
      try { 
        tika0.parse(path0, metadata0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      Metadata metadata0 = new Metadata();
      MockFile mockFile0 = new MockFile("", "language");
      try { 
        tika0.parse((File) mockFile0, metadata0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      tika0.detect((InputStream) null, "description");
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      String string0 = tika0.toString();
      assertEquals(100000, tika0.getMaxStringLength());
      assertEquals("Apache Tika", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      URL uRL0 = MockURL.getFileExample();
      // Undeclared exception!
      try { 
        tika0.detect(uRL0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      MockFile mockFile0 = new MockFile("Error translating data.");
      try { 
        tika0.detect((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Error translating data.");
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile("Error translating data.");
      tika0.detect((File) mockFile0);
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      MockFile mockFile0 = new MockFile("Error translating data.", "Error translating data.");
      Path path0 = mockFile0.toPath();
      try { 
        tika0.detect(path0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      try { 
        tika0.detect(path0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // \u00C9 um diret\u00F3rio
         //
         verifyException("org.apache.tika.io.TaggedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      byte[] byteArray0 = new byte[3];
      tika0.detect(byteArray0, "}$#$^.D_H0,_/");
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        tika0.parseToString((InputStream) sequenceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HashMap<Pattern, MediaType> hashMap0 = new HashMap<Pattern, MediaType>();
      NameDetector nameDetector0 = new NameDetector(hashMap0);
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(nameDetector0, (Parser) null, emptyTranslator0);
      tika0.getTranslator();
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.translate((InputStream) null, "", "language");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Error translating data.
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HashMap<Pattern, MediaType> hashMap0 = new HashMap<Pattern, MediaType>();
      NameDetector nameDetector0 = new NameDetector(hashMap0);
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(nameDetector0, (Parser) null, emptyTranslator0);
      int int0 = tika0.getMaxStringLength();
      assertEquals(100000, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DummyInitializableParser dummyInitializableParser0 = new DummyInitializableParser();
      Tika tika0 = new Tika((Detector) null, dummyInitializableParser0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      MockFile mockFile0 = new MockFile("Error translating data.", "Error translating data.");
      try { 
        tika0.parse((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Tika tika0 = new Tika((Detector) null, (Parser) null, (Translator) null);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        tika0.translate((InputStream) byteArrayInputStream0, "eKwSZ#a]Z[");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Error translating data.
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      byte[] byteArray0 = new byte[6];
      tika0.detect(byteArray0);
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Tika tika0 = null;
      try {
        tika0 = new Tika((TikaConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HashMap<Pattern, MediaType> hashMap0 = new HashMap<Pattern, MediaType>();
      NameDetector nameDetector0 = new NameDetector(hashMap0);
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(nameDetector0, (Parser) null, emptyTranslator0);
      tika0.getDetector();
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("f@Z<", (String) null, (int) (byte)83, "application/octet-stream", uRLStreamHandler0);
      // Undeclared exception!
      try { 
        tika0.parseToString(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      // Undeclared exception!
      try { 
        tika0.translate("}$#$^.D_H0,_/", "/}_P", "}$#$^.D_H0,_/");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Error translating data.
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Tika tika0 = new Tika();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      tika0.detect("coverage");
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OverrideDetector overrideDetector0 = new OverrideDetector();
      Tika tika0 = new Tika(overrideDetector0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      tika0.translate(")1LT:E8Qz(p<jY4DV.t", "empty");
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, defaultTranslator0);
      tika0.setMaxStringLength((byte) (-96));
      assertEquals((-96), tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HashMap<Pattern, MediaType> hashMap0 = new HashMap<Pattern, MediaType>();
      NameDetector nameDetector0 = new NameDetector(hashMap0);
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(nameDetector0, (Parser) null, emptyTranslator0);
      tika0.getParser();
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.parseToString((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ZeroSizeFileDetector zeroSizeFileDetector0 = new ZeroSizeFileDetector();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(zeroSizeFileDetector0, (Parser) null, emptyTranslator0);
      MockFile mockFile0 = new MockFile("Error translating data.", "Error translating data.");
      Path path0 = mockFile0.toPath();
      try { 
        tika0.parse(path0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }
}
