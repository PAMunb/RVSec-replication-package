/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:20:59 GMT 2022
 */

package org.apache.tika;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.net.URL;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import java.time.ZoneId;
import java.util.Enumeration;
import java.util.Map;
import java.util.Set;
import org.apache.tika.Tika;
import org.apache.tika.config.ServiceLoader;
import org.apache.tika.config.TikaConfig;
import org.apache.tika.detect.DefaultProbDetector;
import org.apache.tika.detect.Detector;
import org.apache.tika.detect.TypeDetector;
import org.apache.tika.language.translate.DefaultTranslator;
import org.apache.tika.language.translate.EmptyTranslator;
import org.apache.tika.language.translate.Translator;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.mime.MediaType;
import org.apache.tika.mime.MimeTypes;
import org.apache.tika.mime.ProbabilisticMimeDetectionSelector;
import org.apache.tika.parser.DummyParameterizedParser;
import org.apache.tika.parser.DummyParser;
import org.apache.tika.parser.EmptyParser;
import org.apache.tika.parser.ErrorParser;
import org.apache.tika.parser.ParseContext;
import org.apache.tika.parser.Parser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Tika_ESTest extends Tika_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, (Parser) null, emptyTranslator0);
      tika0.translate("v_;(,<43gkndDETZ^,", "B+(v`ZkO>P%1Bk");
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      tika0.translate("Apache Tika", "Apache Tika", "Apache Tika");
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      tika0.translate((InputStream) byteArrayInputStream0, "|+?0=", "");
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      EmptyParser emptyParser0 = EmptyParser.INSTANCE;
      Tika tika0 = new Tika((Detector) null, emptyParser0, defaultTranslator0);
      Metadata metadata0 = new Metadata();
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      tika0.parseToString((InputStream) sequenceInputStream0, metadata0, (-1866));
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika((Detector) null, (Parser) null, defaultTranslator0);
      tika0.getParser();
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika((Detector) null, (Parser) null, defaultTranslator0);
      tika0.getDetector();
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      ParseContext parseContext0 = new ParseContext();
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
      DummyParameterizedParser dummyParameterizedParser0 = new DummyParameterizedParser();
      Set<MediaType> set0 = dummyParameterizedParser0.getSupportedTypes(parseContext0);
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      DummyParser dummyParser0 = new DummyParser(set0, map0, "f=");
      Tika tika0 = new Tika(probabilisticMimeDetectionSelector0, dummyParser0, defaultTranslator0);
      tika0.detect((String) null);
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika((Detector) null, (Parser) null, defaultTranslator0);
      // Undeclared exception!
      try { 
        tika0.translate("Message:From-Email", "Message:From-Email");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Error translating data.
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      try { 
        tika0.parseToString(path0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error
         //
         verifyException("org.apache.tika.parser.ErrorParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, (Parser) null, emptyTranslator0);
      MockFile mockFile0 = new MockFile("xshort");
      Path path0 = mockFile0.toPath();
      try { 
        tika0.parseToString(path0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      URL uRL0 = MockURL.getFtpExample();
      // Undeclared exception!
      try { 
        tika0.parseToString(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      URL uRL0 = MockURL.getFileExample();
      // Undeclared exception!
      try { 
        tika0.parseToString(uRL0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Metadata metadata0 = new Metadata();
      try { 
        tika0.parseToString((InputStream) byteArrayInputStream0, metadata0, (int) (byte)0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error
         //
         verifyException("org.apache.tika.parser.ErrorParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ErrorParser errorParser0 = ErrorParser.INSTANCE;
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        tika0.parseToString((InputStream) null, metadata0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika((Detector) null, (Parser) null, defaultTranslator0);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        tika0.parseToString((InputStream) byteArrayInputStream0, metadata0, (-531));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika((Detector) null, (Parser) null, defaultTranslator0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        tika0.parseToString((InputStream) pipedInputStream0, metadata0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      DefaultProbDetector defaultProbDetector0 = new DefaultProbDetector(probabilisticMimeDetectionSelector0, classLoader0);
      ErrorParser errorParser0 = ErrorParser.INSTANCE;
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(defaultProbDetector0, errorParser0, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.parseToString((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.parseToString((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tika tika0 = new Tika((Detector) null, (Parser) null, (Translator) null);
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("Error translating data.", (String) null, (File) mockFile0);
      // Undeclared exception!
      try { 
        tika0.parseToString(file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      MockFile mockFile0 = new MockFile("org.apache.tika.sax.SafeContentHandler$1");
      Path path0 = mockFile0.toPath();
      Metadata metadata0 = new Metadata();
      try { 
        tika0.parse(path0, metadata0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      Tika tika0 = new Tika((Detector) null, errorParser0, (Translator) null);
      // Undeclared exception!
      try { 
        tika0.parse((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      URL uRL0 = MockURL.getFtpExample();
      // Undeclared exception!
      try { 
        tika0.parse(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      URL uRL0 = MockURL.getHttpExample();
      try { 
        tika0.parse(uRL0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      EmptyParser emptyParser0 = EmptyParser.INSTANCE;
      Tika tika0 = new Tika((Detector) null, emptyParser0, defaultTranslator0);
      File file0 = MockFile.createTempFile("BJ}bW2MGQ4aPq#z=", "BJ}bW2MGQ4aPq#z=");
      MockFile mockFile0 = new MockFile(file0, "Unexpected IOException");
      Metadata metadata0 = new Metadata();
      try { 
        tika0.parse((File) mockFile0, metadata0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, (Parser) null, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.parse((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.detect((byte[]) null, "yl+0k5(d Bgk*=3&^K");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EmptyParser emptyParser0 = EmptyParser.INSTANCE;
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, emptyParser0, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.detect((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      MockFile mockFile0 = new MockFile("h!K2", "h!K2");
      Path path0 = mockFile0.toPath();
      try { 
        tika0.detect(path0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.detect((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      URL uRL0 = MockURL.getFtpExample();
      // Undeclared exception!
      try { 
        tika0.detect(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika((Detector) null, (Parser) null, defaultTranslator0);
      URL uRL0 = MockURL.getFileExample();
      // Undeclared exception!
      try { 
        tika0.detect(uRL0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      URL uRL0 = MockURL.getHttpExample();
      try { 
        tika0.detect(uRL0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      TypeDetector typeDetector0 = new TypeDetector();
      Tika tika0 = new Tika(typeDetector0, errorParser0, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.detect((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      MockFile mockFile0 = new MockFile("$x/#'p00=+1db\"~t&", "$x/#'p00=+1db\"~t&");
      try { 
        tika0.detect((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EmptyParser emptyParser0 = EmptyParser.INSTANCE;
      Tika tika0 = new Tika((Detector) null, emptyParser0, (Translator) null);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        tika0.detect((InputStream) null, metadata0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        tika0.detect((InputStream) dataInputStream0, (Metadata) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 100000);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        tika0.detect((InputStream) pushbackInputStream0, metadata0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        tika0.parse(path0, metadata0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika((Detector) null, (Parser) null, defaultTranslator0);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        tika0.parse((File) null, metadata0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      String string0 = tika0.toString();
      assertEquals(100000, tika0.getMaxStringLength());
      assertEquals("Apache Tika", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("Unexpected IOException", "org.apache.tika.config.InitializableProblemHandler$4", (File) mockFile0);
      Tika tika0 = new Tika((Detector) null, (Parser) null, defaultTranslator0);
      // Undeclared exception!
      try { 
        tika0.detect(file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        tika0.detect(byteArray0, "org.apache.tika.Tika");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika((Detector) null, (Parser) null, defaultTranslator0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1);
      // Undeclared exception!
      try { 
        tika0.detect((InputStream) pushbackInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(693);
      try { 
        tika0.parseToString((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error
         //
         verifyException("org.apache.tika.parser.ErrorParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      tika0.getTranslator();
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.translate((InputStream) null, "Unexpected SAX processing failure", "Unexpected SAX processing failure");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Error translating data.
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, (Parser) null, emptyTranslator0);
      int int0 = tika0.getMaxStringLength();
      assertEquals(100000, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Tika tika0 = new Tika((Detector) null, (Parser) null);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      MockFile mockFile0 = new MockFile("mask", "1HWM1");
      try { 
        tika0.parse((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika((Detector) null, (Parser) null, defaultTranslator0);
      // Undeclared exception!
      try { 
        tika0.translate((InputStream) null, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Error translating data.
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        tika0.detect(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Tika tika0 = null;
      try {
        tika0 = new Tika((TikaConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      MimeTypes mimeTypes0 = new MimeTypes();
      ProbabilisticMimeDetectionSelector.Builder probabilisticMimeDetectionSelector_Builder0 = new ProbabilisticMimeDetectionSelector.Builder();
      ProbabilisticMimeDetectionSelector probabilisticMimeDetectionSelector0 = new ProbabilisticMimeDetectionSelector(mimeTypes0, probabilisticMimeDetectionSelector_Builder0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      DefaultProbDetector defaultProbDetector0 = new DefaultProbDetector(probabilisticMimeDetectionSelector0, classLoader0);
      ErrorParser errorParser0 = ErrorParser.INSTANCE;
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika(defaultProbDetector0, errorParser0, emptyTranslator0);
      tika0.getDetector();
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, (Parser) null, emptyTranslator0);
      URL uRL0 = MockURL.getHttpExample();
      try { 
        tika0.parseToString(uRL0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ServiceLoader serviceLoader0 = new ServiceLoader();
      DefaultTranslator defaultTranslator0 = new DefaultTranslator(serviceLoader0);
      Tika tika0 = new Tika((Detector) null, (Parser) null, defaultTranslator0);
      // Undeclared exception!
      try { 
        tika0.translate("org.apache.tika.Tika", "org.apache.tika.sax.WriteOutContentHandler", "d\"c2iKhj'p2DU*M\"7<");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Error translating data.
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Tika tika0 = new Tika();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      EmptyParser emptyParser0 = EmptyParser.INSTANCE;
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, emptyParser0, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.detect("r ,&h<\"{-l+:?]YKeb<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.Tika", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      URL uRL0 = MockURL.getFileExample();
      // Undeclared exception!
      try { 
        tika0.parse(uRL0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Tika tika0 = new Tika((Detector) null);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      assertEquals(100000, tika0.getMaxStringLength());
      
      tika0.setMaxStringLength(1);
      assertEquals(1, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ErrorParser errorParser0 = ErrorParser.INSTANCE;
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      tika0.getParser();
      assertEquals(100000, tika0.getMaxStringLength());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      EmptyParser emptyParser0 = EmptyParser.INSTANCE;
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, emptyParser0, emptyTranslator0);
      // Undeclared exception!
      try { 
        tika0.parseToString((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.io.TikaInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      Tika tika0 = new Tika((Detector) null, errorParser0, (Translator) null);
      MockFile mockFile0 = new MockFile("xINcVt+'*%", "xINcVt+'*%");
      try { 
        tika0.parseToString((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ErrorParser errorParser0 = new ErrorParser();
      EmptyTranslator emptyTranslator0 = new EmptyTranslator();
      Tika tika0 = new Tika((Detector) null, errorParser0, emptyTranslator0);
      MockFile mockFile0 = new MockFile("$x/#'p00=+1db\"~t&", "$x/#'p00=+1db\"~t&");
      Path path0 = mockFile0.toPath();
      try { 
        tika0.parse(path0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }
}
