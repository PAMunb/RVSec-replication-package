/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:34:43 GMT 2022
 */

package org.apache.tika.sax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.UnsupportedEncodingException;
import org.apache.tika.sax.BasicContentHandlerFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BasicContentHandlerFactory_ESTest extends BasicContentHandlerFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BasicContentHandlerFactory.parseHandlerType("", (BasicContentHandlerFactory.HANDLER_TYPE) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory((BasicContentHandlerFactory.HANDLER_TYPE) null, (-1671));
      basicContentHandlerFactory0.getType();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory((BasicContentHandlerFactory.HANDLER_TYPE) null, 12);
      // Undeclared exception!
      try { 
        basicContentHandlerFactory0.getNewContentHandler();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.sax.BasicContentHandlerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.XML;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, (-5070));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("0*qUd`F");
      try { 
        basicContentHandlerFactory0.getNewContentHandler((OutputStream) mockFileOutputStream0, "0*qUd`F");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.HTML;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, (-3532));
      MockFile mockFile0 = new MockFile(")^,*;}QN4^PsyL");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 42);
      try { 
        basicContentHandlerFactory0.getNewContentHandler((OutputStream) bufferedOutputStream0, ")^,*;}QN4^PsyL");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.XML;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 3754);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        basicContentHandlerFactory0.getNewContentHandler((OutputStream) dataOutputStream0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("java.io.OutputStreamWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.TEXT;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 3455);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      try { 
        basicContentHandlerFactory0.getNewContentHandler((OutputStream) byteArrayOutputStream0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("java.io.OutputStreamWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.BODY;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      try { 
        basicContentHandlerFactory0.getNewContentHandler((OutputStream) dataOutputStream0, "tex");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.TEXT;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, (-1));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        basicContentHandlerFactory0.getNewContentHandler((OutputStream) pipedOutputStream0, "0_0Q#%");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.IGNORE;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 61);
      ContentHandler contentHandler0 = basicContentHandlerFactory0.getNewContentHandler((OutputStream) null, "S3T");
      assertNotNull(contentHandler0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.HTML;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 247);
      MockPrintStream mockPrintStream0 = new MockPrintStream("{WE=J>9v?0}BUXB&U");
      try { 
        basicContentHandlerFactory0.getNewContentHandler((OutputStream) mockPrintStream0, "{WE=J>9v?0}BUXB&U");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.XML;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, (-3556));
      ContentHandler contentHandler0 = basicContentHandlerFactory0.getNewContentHandler();
      assertNotNull(contentHandler0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.TEXT;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, (-1));
      ContentHandler contentHandler0 = basicContentHandlerFactory0.getNewContentHandler();
      assertNotNull(contentHandler0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.HTML;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 247);
      ContentHandler contentHandler0 = basicContentHandlerFactory0.getNewContentHandler();
      assertNotNull(contentHandler0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.TEXT;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 3455);
      ContentHandler contentHandler0 = basicContentHandlerFactory0.getNewContentHandler();
      assertNotNull(contentHandler0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.HTML;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, (-3532));
      ContentHandler contentHandler0 = basicContentHandlerFactory0.getNewContentHandler();
      assertNotNull(contentHandler0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.BODY;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 0);
      ContentHandler contentHandler0 = basicContentHandlerFactory0.getNewContentHandler();
      assertNotNull(contentHandler0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.XML;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 3963);
      ContentHandler contentHandler0 = basicContentHandlerFactory0.getNewContentHandler();
      assertNotNull(contentHandler0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.HTML;
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE1 = BasicContentHandlerFactory.parseHandlerType("", basicContentHandlerFactory_HANDLER_TYPE0);
      assertEquals(BasicContentHandlerFactory.HANDLER_TYPE.HTML, basicContentHandlerFactory_HANDLER_TYPE1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.HTML;
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE1 = BasicContentHandlerFactory.parseHandlerType("BODY", basicContentHandlerFactory_HANDLER_TYPE0);
      assertEquals(BasicContentHandlerFactory.HANDLER_TYPE.BODY, basicContentHandlerFactory_HANDLER_TYPE1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.TEXT;
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE1 = BasicContentHandlerFactory.parseHandlerType("xml", basicContentHandlerFactory_HANDLER_TYPE0);
      assertEquals(BasicContentHandlerFactory.HANDLER_TYPE.XML, basicContentHandlerFactory_HANDLER_TYPE1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.IGNORE;
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE1 = BasicContentHandlerFactory.parseHandlerType("txt", basicContentHandlerFactory_HANDLER_TYPE0);
      assertEquals(BasicContentHandlerFactory.HANDLER_TYPE.TEXT, basicContentHandlerFactory_HANDLER_TYPE1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.BODY;
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE1 = BasicContentHandlerFactory.parseHandlerType("IGNORE", basicContentHandlerFactory_HANDLER_TYPE0);
      assertEquals(BasicContentHandlerFactory.HANDLER_TYPE.IGNORE, basicContentHandlerFactory_HANDLER_TYPE1);
      
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE1, (byte)113);
      basicContentHandlerFactory0.getNewContentHandler();
      assertNotSame(basicContentHandlerFactory_HANDLER_TYPE0, basicContentHandlerFactory_HANDLER_TYPE1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.XML;
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE1 = BasicContentHandlerFactory.parseHandlerType((String) null, basicContentHandlerFactory_HANDLER_TYPE0);
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE2 = BasicContentHandlerFactory.parseHandlerType("HTML", basicContentHandlerFactory_HANDLER_TYPE1);
      assertEquals(BasicContentHandlerFactory.HANDLER_TYPE.HTML, basicContentHandlerFactory_HANDLER_TYPE2);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.TEXT;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, (-2406));
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE1 = basicContentHandlerFactory0.getType();
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE2 = BasicContentHandlerFactory.parseHandlerType("text", basicContentHandlerFactory_HANDLER_TYPE1);
      assertSame(basicContentHandlerFactory_HANDLER_TYPE2, basicContentHandlerFactory_HANDLER_TYPE0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.BODY;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, (-3059));
      // Undeclared exception!
      try { 
        basicContentHandlerFactory0.getNewContentHandler((OutputStream) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }
}
