/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:52:20 GMT 2022
 */

package org.apache.tika.extractor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Blob;
import java.util.Map;
import java.util.Set;
import javax.sql.rowset.serial.SerialBlob;
import org.apache.tika.TikaTest;
import org.apache.tika.config.TikaConfig;
import org.apache.tika.detect.CompositeDetector;
import org.apache.tika.detect.Detector;
import org.apache.tika.detect.OverrideDetector;
import org.apache.tika.extractor.ParserContainerExtractor;
import org.apache.tika.io.TikaInputStream;
import org.apache.tika.mime.MediaType;
import org.apache.tika.parser.DelegatingParser;
import org.apache.tika.parser.DummyParser;
import org.apache.tika.parser.ParseContext;
import org.apache.tika.parser.Parser;
import org.apache.tika.parser.RecursiveParserWrapper;
import org.apache.tika.sax.BasicContentHandlerFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ParserContainerExtractor_ESTest extends ParserContainerExtractor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MediaType mediaType0 = MediaType.EMPTY;
      Map<String, String> map0 = mediaType0.getParameters();
      DummyParser dummyParser0 = new DummyParser((Set<MediaType>) null, map0, "DEp*");
      OverrideDetector overrideDetector0 = new OverrideDetector();
      ParserContainerExtractor parserContainerExtractor0 = new ParserContainerExtractor(dummyParser0, overrideDetector0);
      // Undeclared exception!
      try { 
        parserContainerExtractor0.isSupported((TikaInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DelegatingParser delegatingParser0 = new DelegatingParser();
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.IGNORE;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 1);
      RecursiveParserWrapper recursiveParserWrapper0 = new RecursiveParserWrapper(delegatingParser0, basicContentHandlerFactory0, false);
      ParseContext parseContext0 = new ParseContext();
      Set<MediaType> set0 = recursiveParserWrapper0.getSupportedTypes(parseContext0);
      MediaType mediaType0 = MediaType.EMPTY;
      Map<String, String> map0 = mediaType0.getParameters();
      DummyParser dummyParser0 = new DummyParser(set0, map0, "DEp*");
      OverrideDetector overrideDetector0 = new OverrideDetector();
      ParserContainerExtractor parserContainerExtractor0 = new ParserContainerExtractor(dummyParser0, overrideDetector0);
      ParserContainerExtractor parserContainerExtractor1 = new ParserContainerExtractor(recursiveParserWrapper0, overrideDetector0);
      TikaTest.TrackingHandler tikaTest_TrackingHandler0 = new TikaTest.TrackingHandler(set0);
      // Undeclared exception!
      try { 
        parserContainerExtractor1.extract((TikaInputStream) null, parserContainerExtractor0, tikaTest_TrackingHandler0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // X-TIKA:embedded_resource_path : SIMPLE
         //
         verifyException("org.apache.tika.metadata.Metadata", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Detector[] detectorArray0 = new Detector[0];
      CompositeDetector compositeDetector0 = new CompositeDetector(detectorArray0);
      ParserContainerExtractor parserContainerExtractor0 = new ParserContainerExtractor((Parser) null, compositeDetector0);
      byte[] byteArray0 = new byte[6];
      SerialBlob serialBlob0 = new SerialBlob(byteArray0);
      TikaInputStream tikaInputStream0 = TikaInputStream.get((Blob) serialBlob0);
      String[] stringArray0 = new String[6];
      Set<MediaType> set0 = MediaType.set(stringArray0);
      TikaTest.TrackingHandler tikaTest_TrackingHandler0 = new TikaTest.TrackingHandler(set0);
      // Undeclared exception!
      try { 
        parserContainerExtractor0.extract(tikaInputStream0, parserContainerExtractor0, tikaTest_TrackingHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.extractor.ParserContainerExtractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DelegatingParser delegatingParser0 = new DelegatingParser();
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.IGNORE;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 1);
      RecursiveParserWrapper recursiveParserWrapper0 = new RecursiveParserWrapper(delegatingParser0, basicContentHandlerFactory0, false);
      ParseContext parseContext0 = new ParseContext();
      Set<MediaType> set0 = recursiveParserWrapper0.getSupportedTypes(parseContext0);
      MediaType mediaType0 = MediaType.EMPTY;
      Map<String, String> map0 = mediaType0.getParameters();
      DummyParser dummyParser0 = new DummyParser(set0, map0, "DEp*");
      OverrideDetector overrideDetector0 = new OverrideDetector();
      ParserContainerExtractor parserContainerExtractor0 = new ParserContainerExtractor(dummyParser0, overrideDetector0);
      boolean boolean0 = parserContainerExtractor0.isSupported((TikaInputStream) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ParserContainerExtractor parserContainerExtractor0 = null;
      try {
        parserContainerExtractor0 = new ParserContainerExtractor((TikaConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.AutoDetectParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ParserContainerExtractor parserContainerExtractor0 = new ParserContainerExtractor();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DelegatingParser delegatingParser0 = new DelegatingParser();
      BasicContentHandlerFactory.HANDLER_TYPE basicContentHandlerFactory_HANDLER_TYPE0 = BasicContentHandlerFactory.HANDLER_TYPE.IGNORE;
      BasicContentHandlerFactory basicContentHandlerFactory0 = new BasicContentHandlerFactory(basicContentHandlerFactory_HANDLER_TYPE0, 1);
      RecursiveParserWrapper recursiveParserWrapper0 = new RecursiveParserWrapper(delegatingParser0, basicContentHandlerFactory0, false);
      ParseContext parseContext0 = new ParseContext();
      Set<MediaType> set0 = recursiveParserWrapper0.getSupportedTypes(parseContext0);
      MediaType mediaType0 = MediaType.EMPTY;
      Map<String, String> map0 = mediaType0.getParameters();
      DummyParser dummyParser0 = new DummyParser(set0, map0, "DEp*");
      OverrideDetector overrideDetector0 = new OverrideDetector();
      ParserContainerExtractor parserContainerExtractor0 = new ParserContainerExtractor(dummyParser0, overrideDetector0);
      TikaTest.TrackingHandler tikaTest_TrackingHandler0 = new TikaTest.TrackingHandler(set0);
      parserContainerExtractor0.extract((TikaInputStream) null, parserContainerExtractor0, tikaTest_TrackingHandler0);
  }
}
