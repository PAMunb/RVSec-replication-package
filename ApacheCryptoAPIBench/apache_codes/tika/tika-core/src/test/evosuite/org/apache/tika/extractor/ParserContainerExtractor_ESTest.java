/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 16:00:56 GMT 2022
 */

package org.apache.tika.extractor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Set;
import org.apache.tika.config.TikaConfig;
import org.apache.tika.detect.Detector;
import org.apache.tika.extractor.EmbeddedResourceHandler;
import org.apache.tika.extractor.ParserContainerExtractor;
import org.apache.tika.io.TikaInputStream;
import org.apache.tika.mime.MediaType;
import org.apache.tika.mime.MediaTypeRegistry;
import org.apache.tika.mime.MimeTypes;
import org.apache.tika.parser.Parser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParserContainerExtractor_ESTest extends ParserContainerExtractor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Parser parser0 = mock(Parser.class, new ViolatedAssumptionAnswer());
      doReturn((Set) null).when(parser0).getSupportedTypes(any(org.apache.tika.parser.ParseContext.class));
      Detector detector0 = mock(Detector.class, new ViolatedAssumptionAnswer());
      doReturn((MediaType) null).when(detector0).detect(any(java.io.InputStream.class) , any(org.apache.tika.metadata.Metadata.class));
      ParserContainerExtractor parserContainerExtractor0 = new ParserContainerExtractor(parser0, detector0);
      TikaInputStream tikaInputStream0 = mock(TikaInputStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        parserContainerExtractor0.isSupported(tikaInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Parser parser0 = mock(Parser.class, new ViolatedAssumptionAnswer());
      Detector detector0 = mock(Detector.class, new ViolatedAssumptionAnswer());
      ParserContainerExtractor parserContainerExtractor0 = new ParserContainerExtractor(parser0, detector0);
      Detector detector1 = mock(Detector.class, new ViolatedAssumptionAnswer());
      ParserContainerExtractor parserContainerExtractor1 = new ParserContainerExtractor((Parser) null, detector1);
      TikaInputStream tikaInputStream0 = mock(TikaInputStream.class, new ViolatedAssumptionAnswer());
      EmbeddedResourceHandler embeddedResourceHandler0 = mock(EmbeddedResourceHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        parserContainerExtractor1.extract(tikaInputStream0, parserContainerExtractor0, embeddedResourceHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.extractor.ParserContainerExtractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = mock(MediaTypeRegistry.class, new ViolatedAssumptionAnswer());
      MediaTypeRegistry mediaTypeRegistry1 = mock(MediaTypeRegistry.class, new ViolatedAssumptionAnswer());
      MimeTypes mimeTypes0 = mock(MimeTypes.class, new ViolatedAssumptionAnswer());
      doReturn(mediaTypeRegistry1).when(mimeTypes0).getMediaTypeRegistry();
      Parser parser0 = mock(Parser.class, new ViolatedAssumptionAnswer());
      TikaConfig tikaConfig0 = mock(TikaConfig.class, new ViolatedAssumptionAnswer());
      doReturn((Detector) null).when(tikaConfig0).getDetector();
      doReturn(mediaTypeRegistry0).when(tikaConfig0).getMediaTypeRegistry();
      doReturn(mimeTypes0).when(tikaConfig0).getMimeRepository();
      doReturn(parser0).when(tikaConfig0).getParser();
      ParserContainerExtractor parserContainerExtractor0 = new ParserContainerExtractor(tikaConfig0);
      TikaInputStream tikaInputStream0 = mock(TikaInputStream.class, new ViolatedAssumptionAnswer());
      EmbeddedResourceHandler embeddedResourceHandler0 = mock(EmbeddedResourceHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        parserContainerExtractor0.extract(tikaInputStream0, parserContainerExtractor0, embeddedResourceHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.AutoDetectParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TikaConfig tikaConfig0 = mock(TikaConfig.class, new ViolatedAssumptionAnswer());
      doReturn((Detector) null).when(tikaConfig0).getDetector();
      doReturn((MediaTypeRegistry) null).when(tikaConfig0).getMediaTypeRegistry();
      doReturn((MimeTypes) null).when(tikaConfig0).getMimeRepository();
      doReturn((Parser) null).when(tikaConfig0).getParser();
      ParserContainerExtractor parserContainerExtractor0 = null;
      try {
        parserContainerExtractor0 = new ParserContainerExtractor(tikaConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.detect.DefaultDetector", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MediaTypeRegistry mediaTypeRegistry0 = mock(MediaTypeRegistry.class, new ViolatedAssumptionAnswer());
      MediaTypeRegistry mediaTypeRegistry1 = mock(MediaTypeRegistry.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mediaTypeRegistry1).isSpecializationOf(any(org.apache.tika.mime.MediaType.class) , any(org.apache.tika.mime.MediaType.class));
      MimeTypes mimeTypes0 = mock(MimeTypes.class, new ViolatedAssumptionAnswer());
      doReturn((MediaType) null).when(mimeTypes0).detect(any(java.io.InputStream.class) , any(org.apache.tika.metadata.Metadata.class));
      doReturn(mediaTypeRegistry1).when(mimeTypes0).getMediaTypeRegistry();
      Parser parser0 = mock(Parser.class, new ViolatedAssumptionAnswer());
      doReturn((Set) null).when(parser0).getSupportedTypes(any(org.apache.tika.parser.ParseContext.class));
      TikaConfig tikaConfig0 = mock(TikaConfig.class, new ViolatedAssumptionAnswer());
      doReturn((Detector) null).when(tikaConfig0).getDetector();
      doReturn(mediaTypeRegistry0).when(tikaConfig0).getMediaTypeRegistry();
      doReturn(mimeTypes0).when(tikaConfig0).getMimeRepository();
      doReturn(parser0).when(tikaConfig0).getParser();
      ParserContainerExtractor parserContainerExtractor0 = new ParserContainerExtractor(tikaConfig0);
      TikaInputStream tikaInputStream0 = mock(TikaInputStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        parserContainerExtractor0.isSupported(tikaInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.CompositeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ParserContainerExtractor parserContainerExtractor0 = new ParserContainerExtractor();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Parser parser0 = mock(Parser.class, new ViolatedAssumptionAnswer());
      Detector detector0 = mock(Detector.class, new ViolatedAssumptionAnswer());
      ParserContainerExtractor parserContainerExtractor0 = new ParserContainerExtractor(parser0, detector0);
      TikaInputStream tikaInputStream0 = mock(TikaInputStream.class, new ViolatedAssumptionAnswer());
      EmbeddedResourceHandler embeddedResourceHandler0 = mock(EmbeddedResourceHandler.class, new ViolatedAssumptionAnswer());
      parserContainerExtractor0.extract(tikaInputStream0, parserContainerExtractor0, embeddedResourceHandler0);
  }
}
