/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 15:51:38 GMT 2022
 */

package org.apache.tika.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.net.MalformedURLException;
import java.net.URI;
import java.util.LinkedHashSet;
import java.util.Set;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.mime.MediaType;
import org.apache.tika.parser.NetworkParser;
import org.apache.tika.parser.ParseContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.helpers.XMLFilterImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NetworkParser_ESTest extends NetworkParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      NetworkParser networkParser0 = new NetworkParser((URI) null, (Set<MediaType>) null);
      Set<MediaType> set0 = networkParser0.getSupportedTypes(parseContext0);
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      LinkedHashSet<MediaType> linkedHashSet0 = new LinkedHashSet<MediaType>();
      NetworkParser networkParser0 = new NetworkParser(uRI0, linkedHashSet0);
      ParseContext parseContext0 = new ParseContext();
      Set<MediaType> set0 = networkParser0.getSupportedTypes(parseContext0);
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      LinkedHashSet<MediaType> linkedHashSet0 = new LinkedHashSet<MediaType>();
      NetworkParser networkParser0 = new NetworkParser(uRI0, linkedHashSet0);
      ParseContext parseContext0 = new ParseContext();
      MediaType mediaType0 = MediaType.APPLICATION_XML;
      linkedHashSet0.add(mediaType0);
      Set<MediaType> set0 = networkParser0.getSupportedTypes(parseContext0);
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      URI uRI0 = MockURI.create("Message:CC-Name");
      NetworkParser networkParser0 = new NetworkParser(uRI0);
      Metadata metadata0 = new Metadata();
      try { 
        networkParser0.parse((InputStream) pipedInputStream0, (ContentHandler) xMLFilterImpl0, metadata0, parseContext0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: message
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      URI uRI0 = MockURI.aHttpURI;
      NetworkParser networkParser0 = new NetworkParser(uRI0);
      Metadata metadata0 = new Metadata();
      ParseContext parseContext0 = new ParseContext();
      try { 
        networkParser0.parse((InputStream) pipedInputStream0, (ContentHandler) xMLFilterImpl0, metadata0, parseContext0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: foo.bar
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      URI uRI0 = MockURI.URI("telnet", "sKieu2\"#-w'XM[hh", "");
      NetworkParser networkParser0 = new NetworkParser(uRI0);
      Metadata metadata0 = new Metadata();
      ParseContext parseContext0 = new ParseContext();
      // Undeclared exception!
      try { 
        networkParser0.parse((InputStream) pipedInputStream0, (ContentHandler) xMLFilterImpl0, metadata0, parseContext0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      URI uRI0 = MockURI.aFTPURI;
      NetworkParser networkParser0 = new NetworkParser(uRI0);
      Metadata metadata0 = new Metadata();
      // Undeclared exception!
      try { 
        networkParser0.parse((InputStream) pipedInputStream0, (ContentHandler) xMLFilterImpl0, metadata0, parseContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.tika.parser.NetworkParser", e);
      }
  }
}
