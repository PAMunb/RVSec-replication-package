/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 16 13:51:28 GMT 2022
 */

package org.apache.tika.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.Future;
import org.apache.tika.parser.ParseContext;
import org.apache.tika.utils.ConcurrentUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConcurrentUtils_ESTest extends ConcurrentUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      Thread thread0 = MockThread.currentThread();
      Future future0 = ConcurrentUtils.execute(parseContext0, thread0);
      assertNotNull(future0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ParseContext parseContext0 = new ParseContext();
      // Undeclared exception!
      try { 
        ConcurrentUtils.execute(parseContext0, (Runnable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.Executors", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConcurrentUtils concurrentUtils0 = new ConcurrentUtils();
  }
}
