/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:02:54 GMT 2022
 */

package org.apache.wicket.util.file;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.apache.wicket.util.file.FolderDeleteStrategy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FolderDeleteStrategy_ESTest extends FolderDeleteStrategy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/wicket/wicket-util");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FolderDeleteStrategy folderDeleteStrategy0 = new FolderDeleteStrategy();
      MockFile mockFile0 = new MockFile("", "");
      // Undeclared exception!
      folderDeleteStrategy0.deleteQuietly(mockFile0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FolderDeleteStrategy folderDeleteStrategy0 = new FolderDeleteStrategy();
      MockFile mockFile0 = new MockFile("", "");
      try { 
        folderDeleteStrategy0.delete(mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Deletion failed: /home
         //
         verifyException("org.apache.commons.io.FileDeleteStrategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FolderDeleteStrategy folderDeleteStrategy0 = new FolderDeleteStrategy();
      MockFile mockFile0 = new MockFile("wKL|K\"");
      MockFile.createTempFile("Nh0^g<VF.u=V(|j_+}K", "", (java.io.File) mockFile0);
      folderDeleteStrategy0.delete(mockFile0);
      assertFalse(mockFile0.isHidden());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FolderDeleteStrategy folderDeleteStrategy0 = new FolderDeleteStrategy();
      MockFile mockFile0 = new MockFile("wKL|K\"");
      folderDeleteStrategy0.delete(mockFile0);
      assertFalse(mockFile0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FolderDeleteStrategy folderDeleteStrategy0 = new FolderDeleteStrategy();
      folderDeleteStrategy0.delete((java.io.File) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FolderDeleteStrategy folderDeleteStrategy0 = new FolderDeleteStrategy();
      MockFile mockFile0 = new MockFile("", "");
      // Undeclared exception!
      try { 
        folderDeleteStrategy0.deleteQuietly(mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FolderDeleteStrategy folderDeleteStrategy0 = new FolderDeleteStrategy();
      MockFile mockFile0 = new MockFile("wKL|K\"");
      MockFile.createTempFile("Nh0^g<VF.u=V(|j_+}K", "", (java.io.File) mockFile0);
      boolean boolean0 = folderDeleteStrategy0.deleteQuietly(mockFile0);
      assertTrue(mockFile0.isFile());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FolderDeleteStrategy folderDeleteStrategy0 = new FolderDeleteStrategy();
      MockFile mockFile0 = new MockFile("wKL|K\"");
      boolean boolean0 = folderDeleteStrategy0.deleteQuietly(mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FolderDeleteStrategy folderDeleteStrategy0 = new FolderDeleteStrategy();
      boolean boolean0 = folderDeleteStrategy0.deleteQuietly((java.io.File) null);
      assertFalse(boolean0);
  }
}
