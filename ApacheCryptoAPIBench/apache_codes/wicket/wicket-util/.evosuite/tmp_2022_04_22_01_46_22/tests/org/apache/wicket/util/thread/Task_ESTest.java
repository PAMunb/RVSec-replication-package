/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:05:14 GMT 2022
 */

package org.apache.wicket.util.thread;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.wicket.util.thread.ICode;
import org.apache.wicket.util.thread.Task;
import org.apache.wicket.util.time.Duration;
import org.apache.wicket.util.time.Time;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.slf4j.Logger;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Task_ESTest extends Task_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Task task0 = new Task("]");
      // Undeclared exception!
      try { 
        task0.setPriority(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.thread.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Task task0 = new Task("*S.tE.DT'&m}']cq!");
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      ICode iCode0 = mock(ICode.class, new ViolatedAssumptionAnswer());
      task0.run(duration0, iCode0);
      task0.setPriority(1);
      assertEquals(1, task0.getPriority());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Task task0 = new Task("a#zUoOeOwxws");
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      ICode iCode0 = mock(ICode.class, new ViolatedAssumptionAnswer());
      task0.run(duration0, iCode0);
      int int0 = task0.getPriority();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Task task0 = new Task("*S.tE.DT'&m}']cq!");
      task0.stop();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Task task0 = new Task("");
      // Undeclared exception!
      try { 
        task0.setPriority(1666);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.thread.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Task task0 = new Task("");
      // Undeclared exception!
      try { 
        task0.setPriority((-3596));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.thread.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Task task0 = new Task("*S.tE.DT'&m}']cq!");
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      ICode iCode0 = mock(ICode.class, new ViolatedAssumptionAnswer());
      task0.run(duration0, iCode0);
      task0.interrupt();
      assertEquals(5, task0.getPriority());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Task task0 = new Task("*S.tE.DT'&m}']cq!");
      Logger logger0 = task0.getLog();
      Logger logger1 = task0.getLog();
      assertSame(logger1, logger0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Task task0 = new Task("b");
      task0.setStartTime((Time) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Task task0 = new Task("*S.tE.DT'&m}']cq!");
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      ICode iCode0 = mock(ICode.class, new ViolatedAssumptionAnswer());
      task0.run(duration0, iCode0);
      // Undeclared exception!
      try { 
        task0.setDaemon(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempt to set daemon state of a task that has already been started
         //
         verifyException("org.apache.wicket.util.thread.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Task task0 = new Task("8");
      task0.setDaemon(true);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Task task0 = new Task("org.apach.wicket.util.thread.Task$1");
      Duration duration0 = mock(Duration.class, new ViolatedAssumptionAnswer());
      ICode iCode0 = mock(ICode.class, new ViolatedAssumptionAnswer());
      task0.run(duration0, iCode0);
      ICode iCode1 = mock(ICode.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        task0.run((Duration) null, iCode1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempt to start task that has already been started
         //
         verifyException("org.apache.wicket.util.thread.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Task task0 = new Task("4E5T+Qm\"T>e");
      task0.interrupt();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Task task0 = new Task("a#zUoOeOwxws");
      // Undeclared exception!
      try { 
        task0.getPriority();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.thread.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Task task0 = new Task("Task '{}' terminated");
      String string0 = task0.toString();
      assertEquals("[name=Task '{}' terminated, startTime=2014.02.14-8.21pm, isDaemon=true, isStarted=false, codeListener=null]", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Task task0 = new Task("");
      Logger logger0 = task0.getLog();
      task0.setLog(logger0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Task task0 = new Task("");
      task0.run((Duration) null, (ICode) null);
      // Undeclared exception!
      try { 
        task0.setStartTime((Time) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempt to set start time of task that has already been started
         //
         verifyException("org.apache.wicket.util.thread.Task", e);
      }
  }
}
