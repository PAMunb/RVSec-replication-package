/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:19:12 GMT 2022
 */

package org.apache.wicket.util.license;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.util.List;
import org.apache.wicket.util.license.XmlPrologHeaderHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlPrologHeaderHandler_ESTest extends XmlPrologHeaderHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlPrologHeaderHandler xmlPrologHeaderHandler0 = new XmlPrologHeaderHandler((List<String>) null);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).getAbsolutePath();
      // Undeclared exception!
      try { 
        xmlPrologHeaderHandler0.checkLicenseHeader(file0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlPrologHeaderHandler xmlPrologHeaderHandler0 = new XmlPrologHeaderHandler((List<String>) null);
      List<String> list0 = xmlPrologHeaderHandler0.getSuffixes();
      assertEquals(1, list0.size());
  }
}
