/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:16:14 GMT 2022
 */

package org.apache.wicket.util.convert.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DecimalFormat;
import java.util.Locale;
import org.apache.wicket.util.convert.converter.BigIntegerConverter;
import org.apache.wicket.util.convert.converter.IntegerConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractIntegerConverter_ESTest extends AbstractIntegerConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntegerConverter integerConverter0 = new IntegerConverter();
      Locale locale0 = Locale.KOREAN;
      DecimalFormat decimalFormat0 = (DecimalFormat)integerConverter0.newNumberFormat(locale0);
      assertEquals("###0", decimalFormat0.toPattern());
      assertTrue(decimalFormat0.isParseIntegerOnly());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BigIntegerConverter bigIntegerConverter0 = new BigIntegerConverter();
      // Undeclared exception!
      try { 
        bigIntegerConverter0.newNumberFormat((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
