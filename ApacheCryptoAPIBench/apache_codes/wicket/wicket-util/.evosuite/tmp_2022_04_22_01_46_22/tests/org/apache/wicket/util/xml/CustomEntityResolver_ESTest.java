/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:09:41 GMT 2022
 */

package org.apache.wicket.util.xml;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.wicket.util.xml.CustomEntityResolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xml.sax.InputSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CustomEntityResolver_ESTest extends CustomEntityResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CustomEntityResolver customEntityResolver0 = CustomEntityResolver.getPreloaded();
      // Undeclared exception!
      try { 
        customEntityResolver0.put((CustomEntityResolver.EntityKey) null, (CustomEntityResolver.EntityLocator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'key' may not be null.
         //
         verifyException("org.apache.wicket.util.lang.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CustomEntityResolver customEntityResolver0 = new CustomEntityResolver();
      CustomEntityResolver.EntityKey customEntityResolver_EntityKey0 = mock(CustomEntityResolver.EntityKey.class, new ViolatedAssumptionAnswer());
      CustomEntityResolver.EntityLocator customEntityResolver_EntityLocator0 = mock(CustomEntityResolver.EntityLocator.class, new ViolatedAssumptionAnswer());
      customEntityResolver0.put(customEntityResolver_EntityKey0, customEntityResolver_EntityLocator0);
      // Undeclared exception!
      try { 
        customEntityResolver0.resolveEntity("org.apache.wicket.util.string.Strings$2", "org.apache.wicket.util.string.Strings$2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CustomEntityResolver customEntityResolver0 = CustomEntityResolver.getPreloaded();
      InputSource inputSource0 = customEntityResolver0.resolveEntity("http://java.sun.com/dtd/web-app_2_3.dtd", "http://java.sun.com/dtd/web-app_2_3.dtd");
      assertNull(inputSource0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CustomEntityResolver customEntityResolver0 = CustomEntityResolver.getPreloaded();
      InputSource inputSource0 = customEntityResolver0.resolveEntity("-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN", "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN");
      assertNull(inputSource0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CustomEntityResolver customEntityResolver0 = CustomEntityResolver.getPreloaded();
      InputSource inputSource0 = customEntityResolver0.resolveEntity((String) null, "-[IKYVT<3>3wD");
      assertNull(inputSource0);
  }
}
