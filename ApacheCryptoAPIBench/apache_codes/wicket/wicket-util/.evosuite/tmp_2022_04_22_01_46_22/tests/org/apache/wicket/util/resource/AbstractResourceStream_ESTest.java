/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:17:20 GMT 2022
 */

package org.apache.wicket.util.resource;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.file.Path;
import java.util.Locale;
import org.apache.wicket.util.file.File;
import org.apache.wicket.util.lang.Bytes;
import org.apache.wicket.util.resource.FileResourceStream;
import org.apache.wicket.util.resource.FileSystemResourceStream;
import org.apache.wicket.util.resource.StringBufferResourceStream;
import org.apache.wicket.util.resource.StringResourceStream;
import org.apache.wicket.util.string.AppendingStringBuffer;
import org.apache.wicket.util.time.Time;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractResourceStream_ESTest extends AbstractResourceStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      File file0 = new File("@5_vNT#=");
      Path path0 = file0.toPath();
      FileSystemResourceStream fileSystemResourceStream0 = new FileSystemResourceStream(path0);
      fileSystemResourceStream0.setVariation((String) null);
      assertNull(fileSystemResourceStream0.getStyle());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StringResourceStream stringResourceStream0 = new StringResourceStream(stringBuffer0);
      stringResourceStream0.setStyle("/");
      assertEquals("", stringResourceStream0.asString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      File file0 = new File("org.apache.wicket.util.resource.AbstractResourceStream");
      FileResourceStream fileResourceStream0 = new FileResourceStream(file0);
      Bytes bytes0 = fileResourceStream0.length();
      assertEquals(0L, bytes0.bytes());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      File file0 = new File("");
      Path path0 = file0.toPath();
      FileSystemResourceStream fileSystemResourceStream0 = new FileSystemResourceStream(path0);
      Bytes bytes0 = fileSystemResourceStream0.length();
      assertEquals(3.814697265625E-6, bytes0.gigabytes(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      File file0 = new File("org.apache.wicket.util.resource.AbstractResourceStream");
      FileResourceStream fileResourceStream0 = new FileResourceStream(file0);
      Time time0 = fileResourceStream0.lastModifiedTime();
      assertNull(time0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringResourceStream stringResourceStream0 = new StringResourceStream((CharSequence) null, "");
      Time time0 = stringResourceStream0.lastModifiedTime();
      assertEquals(1392409281320L, time0.getMilliseconds());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream();
      stringBufferResourceStream0.setStyle("Mon");
      String string0 = stringBufferResourceStream0.getStyle();
      assertEquals("Mon", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream();
      stringBufferResourceStream0.setStyle("");
      String string0 = stringBufferResourceStream0.getStyle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("Wn5WJt,CA`");
      AppendingStringBuffer appendingStringBuffer0 = new AppendingStringBuffer(stringBuffer0);
      StringResourceStream stringResourceStream0 = new StringResourceStream(appendingStringBuffer0);
      Locale locale0 = stringResourceStream0.getLocale();
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      java.io.File file0 = MockFile.createTempFile("text", ">7c6zh(A=");
      FileResourceStream fileResourceStream0 = new FileResourceStream(file0);
      Locale locale0 = Locale.ENGLISH;
      fileResourceStream0.setLocale(locale0);
      Locale locale1 = fileResourceStream0.getLocale();
      assertEquals("", locale1.getCountry());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      File file0 = new File("", "");
      FileResourceStream fileResourceStream0 = new FileResourceStream((java.io.File) file0);
      String string0 = fileResourceStream0.getContentType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream();
      String string0 = stringBufferResourceStream0.getContentType();
      assertEquals("text", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream("");
      String string0 = stringBufferResourceStream0.getContentType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("SlqteIN};LXjmg", "org.apache.wicket.util.resource.AbstractResourceStream");
      File file0 = new File(mockFile0);
      FileSystemResourceStream fileSystemResourceStream0 = new FileSystemResourceStream(file0);
      // Undeclared exception!
      try { 
        fileSystemResourceStream0.length();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Length of path /home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/wicket/wicket-util/SlqteIN};LXjmg/org.apache.wicket.util.resource.AbstractResourceStream could not be acquired
         //
         verifyException("org.apache.wicket.util.resource.FileSystemResourceStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      FileSystemResourceStream fileSystemResourceStream0 = new FileSystemResourceStream(path0);
      // Undeclared exception!
      try { 
        fileSystemResourceStream0.getContentType();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.file.Files$FileTypeDetectors
         //
         verifyException("java.nio.file.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream();
      String string0 = stringBufferResourceStream0.getVariation();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringResourceStream stringResourceStream0 = new StringResourceStream("$;sevizOu2bqF", "");
      String string0 = stringResourceStream0.getStyle();
      assertNull(string0);
  }
}
