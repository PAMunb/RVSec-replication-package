/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:06:57 GMT 2022
 */

package org.apache.wicket.util.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.wicket.util.collections.ClassMetaCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClassMetaCache_ESTest extends ClassMetaCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<String> class0 = String.class;
      ClassMetaCache<Object> classMetaCache0 = new ClassMetaCache<Object>();
      // Undeclared exception!
      try { 
        classMetaCache0.put(class0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassMetaCache<String> classMetaCache0 = new ClassMetaCache<String>();
      // Undeclared exception!
      try { 
        classMetaCache0.get((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.collections.ClassMetaCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassMetaCache<String> classMetaCache0 = new ClassMetaCache<String>();
      Class<String> class0 = String.class;
      classMetaCache0.put(class0, "");
      String string0 = classMetaCache0.put(class0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ClassMetaCache<Object> classMetaCache0 = new ClassMetaCache<Object>();
      Object object0 = classMetaCache0.get(class0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassMetaCache<String> classMetaCache0 = new ClassMetaCache<String>();
      Class<Object> class0 = Object.class;
      classMetaCache0.put(class0, "");
      String string0 = classMetaCache0.get(class0);
      assertEquals("", string0);
  }
}
