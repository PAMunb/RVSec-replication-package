/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:09:14 GMT 2022
 */

package org.apache.wicket.util.collections;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.EmptyStackException;
import org.apache.wicket.util.collections.ArrayListStack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArrayListStack_ESTest extends ArrayListStack_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayListStack<Integer> arrayListStack0 = new ArrayListStack<Integer>();
      Integer integer0 = new Integer(0);
      arrayListStack0.add(0, integer0);
      arrayListStack0.add(integer0);
      int int0 = arrayListStack0.search(integer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayListStack<Object> arrayListStack0 = new ArrayListStack<Object>();
      Integer integer0 = new Integer(1);
      arrayListStack0.push(integer0);
      arrayListStack0.push(arrayListStack0);
      arrayListStack0.pop();
      assertTrue(arrayListStack0.contains(1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayListStack<Object> arrayListStack0 = new ArrayListStack<Object>();
      arrayListStack0.push((Object) null);
      Object object0 = arrayListStack0.pop();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayListStack<Integer> arrayListStack0 = new ArrayListStack<Integer>(206);
      arrayListStack0.push((Integer) null);
      Integer integer0 = arrayListStack0.peek();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayListStack<Object> arrayListStack0 = null;
      try {
        arrayListStack0 = new ArrayListStack<Object>((Collection<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayListStack<Object> arrayListStack0 = null;
      try {
        arrayListStack0 = new ArrayListStack<Object>((-4733));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -4733
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayListStack<Object> arrayListStack0 = new ArrayListStack<Object>();
      // Undeclared exception!
      try { 
        arrayListStack0.peek();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.collections.ArrayListStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayListStack<Integer> arrayListStack0 = new ArrayListStack<Integer>();
      Integer integer0 = new Integer(0);
      arrayListStack0.add(0, integer0);
      int int0 = arrayListStack0.search(integer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayListStack<Object> arrayListStack0 = new ArrayListStack<Object>();
      Integer integer0 = new Integer((-23));
      int int0 = arrayListStack0.search(integer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayListStack<Object> arrayListStack0 = new ArrayListStack<Object>();
      boolean boolean0 = arrayListStack0.empty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayListStack<Integer> arrayListStack0 = new ArrayListStack<Integer>();
      Integer integer0 = new Integer(0);
      arrayListStack0.add(0, integer0);
      boolean boolean0 = arrayListStack0.empty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayListStack<Object> arrayListStack0 = new ArrayListStack<Object>();
      arrayListStack0.push(arrayListStack0);
      ArrayListStack arrayListStack1 = (ArrayListStack)arrayListStack0.peek();
      assertFalse(arrayListStack1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayListStack<Integer> arrayListStack0 = new ArrayListStack<Integer>();
      // Undeclared exception!
      try { 
        arrayListStack0.pop();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.collections.ArrayListStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayListStack<Integer> arrayListStack0 = new ArrayListStack<Integer>(206);
      ArrayListStack<Integer> arrayListStack1 = new ArrayListStack<Integer>(arrayListStack0);
      assertTrue(arrayListStack1.isEmpty());
  }
}
