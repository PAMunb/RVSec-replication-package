/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:12:55 GMT 2022
 */

package org.apache.wicket.util.crypt;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.wicket.util.crypt.TrivialCrypt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TrivialCrypt_ESTest extends TrivialCrypt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TrivialCrypt trivialCrypt0 = new TrivialCrypt();
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = trivialCrypt0.crypt(byteArray0, 857);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1)}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TrivialCrypt trivialCrypt0 = new TrivialCrypt();
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = trivialCrypt0.crypt(byteArray0, 857);
      assertNotSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TrivialCrypt trivialCrypt0 = new TrivialCrypt();
      // Undeclared exception!
      try { 
        trivialCrypt0.crypt((byte[]) null, (byte) (-96));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.crypt.TrivialCrypt", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TrivialCrypt trivialCrypt0 = new TrivialCrypt();
      String string0 = trivialCrypt0.encryptUrlSafe("e|0");
      assertEquals("moPP", string0);
  }
}
