/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:08:32 GMT 2022
 */

package org.apache.wicket.util.file;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.net.URI;
import java.util.Enumeration;
import org.apache.wicket.util.file.File;
import org.apache.wicket.util.file.Folder;
import org.apache.wicket.util.time.Time;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class File_ESTest extends File_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      File file0 = new File("org.apache.commons.io.filefilter.AbstractFileFilter");
      String string0 = file0.getExtension();
      assertEquals("AbstractFileFilter", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      File file0 = new File(".\"E> ?>TS#By(WdC$", ".\"E> ?>TS#By(WdC$");
      file0.writeObject(".\"E> ?>TS#By(WdC$");
      Folder folder0 = file0.getParentFolder();
      try { 
        folder0.write(file0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      File file0 = new File("org.apache.commons.io.filefilter.AbstractFileFilter", "org.apache.commons.io.filefilter.AbstractFileFilter");
      file0.writeObject("org.apache.commons.io.filefilter.AbstractFileFilter");
      file0.sync();
      assertEquals(0L, file0.length());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      File file0 = new File("", "/gkE&#");
      file0.outputStream();
      int int0 = file0.write(file0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      File file0 = new File(":");
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = file0.write((InputStream) byteArrayInputStream0);
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      File file0 = new File("", "/gkE&#");
      file0.outputStream();
      boolean boolean0 = file0.remove();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      File file0 = new File("", "/gkE&#");
      file0.outputStream();
      String string0 = file0.readString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      File file0 = new File("", "/gkE&#");
      file0.outputStream();
      InputStream inputStream0 = file0.inputStream();
      assertNotNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      File file0 = new File(".\"E> ?>TS#By(WdC$", ".\"E> ?>TS#By(WdC$");
      Folder folder0 = file0.getParentFolder();
      assertFalse(folder0.canRead());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      File file0 = new File("{Yw:/o{(*I|!,)S");
      Folder folder0 = file0.getParentFolder();
      assertEquals(0L, folder0.getUsableSpace());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      File file0 = new File("", "wkC]Ld0L]ah)G@U");
      File file1 = file0.file(".Z");
      assertEquals("/wkC]Ld0L]ah)G@U/.Z", file1.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      File file0 = new File("");
      File file1 = file0.file("");
      assertTrue(file1.isDirectory());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      File file0 = new File("", "");
      // Undeclared exception!
      try { 
        file0.writeObject("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      File file0 = new File("org.apache.commons.io.filefilter.AbstractFileFilter");
      // Undeclared exception!
      try { 
        file0.write((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      File file0 = new File("{Yw:/o{(*I|!,)S", "{Yw:/o{(*I|!,)S");
      file0.outputStream();
      File file1 = new File(file0, "org.apache.wicket.util.file.File");
      try { 
        file1.write("org.apache.wicket.util.file.File");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      File file0 = new File("aEoX/[9q&vG[");
      // Undeclared exception!
      try { 
        file0.write((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.io.Streams", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      File file0 = new File("org.apache.commons.io.filefilter.AbstractFileFilter", "org.apache.commons.io.filefilter.AbstractFileFilter");
      PipedInputStream pipedInputStream0 = new PipedInputStream(2727);
      try { 
        file0.write((InputStream) pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      File file0 = new File("");
      try { 
        file0.write((InputStream) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      File file0 = new File("O", "O");
      file0.outputStream();
      try { 
        file0.readString();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      File file0 = new File("org.apache.commons.io.filefilter.AbstMactFileFilOer", "org.apache.commons.io.filefilter.AbstMactFileFilOer");
      file0.writeObject("org.apache.commons.io.filefilter.AbstMactFileFilOer");
      try { 
        file0.readObject();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      File file0 = new File("org.apache.commons.io.filefilter.AbstractFileFilter");
      // Undeclared exception!
      try { 
        file0.outputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("3H|cIpeC#awlbg");
      File file0 = new File(mockFile0);
      Folder folder0 = file0.getParentFolder();
      try { 
        folder0.outputStream();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      File file0 = new File("org.apache.comons.io.filefilter.AbstractileFilter");
      // Undeclared exception!
      try { 
        file0.getParentFolder();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      File file0 = new File("#Pk#n&v_Ysn");
      File file1 = null;
      try {
        file1 = new File(file0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      File file0 = null;
      try {
        file0 = new File((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      File file0 = null;
      try {
        file0 = new File(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      File file0 = null;
      try {
        file0 = new File("{Yw:/o{(*I|!,)S", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      File file0 = null;
      try {
        file0 = new File((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      File file0 = new File("]Y/7uA", "'bytes' cannot be negative: ");
      File file1 = null;
      try {
        file1 = new File((java.io.File) file0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      File file0 = new File("{Yw:/o{(*I|!,)S");
      try { 
        file0.inputStream();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      File file0 = new File("second");
      file0.write("second");
      File file1 = new File(file0, "second");
      Folder folder0 = file1.getParentFolder();
      assertEquals(6L, folder0.length());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      File file0 = new File("{Yw:/o{(*I|!,)S", "{Yw:/o{(*I|!,)S");
      try { 
        file0.writeObject("{Yw:/o{(*I|!,)S");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // Couldn't create path /home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/wicket/wicket-util/{Yw:/o{(*I|!,)S/{Yw:
         //
         verifyException("org.apache.wicket.util.file.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      File file0 = new File("/gkE&#", "{Yw:/o(*UMI|!,)S");
      Time time0 = file0.lastModifiedTime();
      assertNull(time0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      File file0 = new File("{Yw:/o{(*I|!,)S", "{Yw:/o{(*I|!,)S");
      file0.outputStream();
      Time time0 = file0.lastModifiedTime();
      assertNotNull(time0);
      assertEquals(1392409281320L, time0.getMilliseconds());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      File file0 = new File(".\"E> ?>TS#By(WdC$", ".\"E> ?>TS#By(WdC$");
      String string0 = file0.getExtension();
      assertNotNull(string0);
      assertEquals("\"E> ?>TS#By(WdC$", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      File file0 = new File("{Yw:/o{(*I|!,)S", "{Yw:/o{(*I|!,)S");
      String string0 = file0.getExtension();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      File file0 = new File(uRI0);
      String string0 = file0.toQuotedString();
      assertEquals("\"/tmp/foo.bar\"", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      File file0 = new File("/gkE&#", "{Yw:/o(*UMI|!,)S");
      // Undeclared exception!
      try { 
        file0.file((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      File file0 = null;
      try {
        file0 = new File((java.io.File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.file.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      File file0 = new File("/gkE&#", "{Yw:/o(*UMI|!,)S");
      try { 
        file0.readString();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      File file0 = new File("org.apache.commons.io.filefilter.AbstMactFileFilOer", "org.apache.commons.io.filefilter.AbstMactFileFilOer");
      try { 
        file0.readObject();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      java.io.File file0 = MockFile.createTempFile("The filter must not be null", "");
      URI uRI0 = file0.toURI();
      File file1 = new File(uRI0);
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      int int0 = file1.write((InputStream) sequenceInputStream0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      java.io.File file0 = MockFile.createTempFile("The filter must not be null", "");
      URI uRI0 = file0.toURI();
      File file1 = new File(uRI0);
      File file2 = new File((java.io.File) file1, "");
      assertTrue(file2.equals((Object)file1));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      java.io.File file0 = MockFile.createTempFile("The filter must not be null", "");
      URI uRI0 = file0.toURI();
      File file1 = new File(uRI0);
      Folder folder0 = file1.getParentFolder();
      try { 
        folder0.sync();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      File file0 = new File("{Yw:/o{(*I|!,)S", "{Yw:/o{(*I|!,)S");
      file0.write("org.apache.wicket.util.file.File");
      String string0 = file0.readString();
      assertEquals("org.apache.wicket.util.file.File", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      File file0 = new File("", "/gkE&#");
      boolean boolean0 = file0.remove();
      assertFalse(boolean0);
  }
}
