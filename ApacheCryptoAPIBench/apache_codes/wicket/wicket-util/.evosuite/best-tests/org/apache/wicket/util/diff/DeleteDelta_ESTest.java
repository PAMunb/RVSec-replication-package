/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:12:06 GMT 2022
 */

package org.apache.wicket.util.diff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.apache.wicket.util.diff.Chunk;
import org.apache.wicket.util.diff.DeleteDelta;
import org.apache.wicket.util.diff.RevisionVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DeleteDelta_ESTest extends DeleteDelta_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeleteDelta deleteDelta0 = new DeleteDelta();
      Object[] objectArray0 = new Object[5];
      Chunk chunk0 = new Chunk(objectArray0, 0, (-1));
      deleteDelta0.init(chunk0, chunk0);
      Chunk chunk1 = new Chunk(655, 2);
      deleteDelta0.revised = chunk1;
      String string0 = deleteDelta0.toString();
      assertEquals("1d657\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Chunk chunk0 = new Chunk(0, 0);
      DeleteDelta deleteDelta0 = new DeleteDelta(chunk0);
      List<Object> list0 = Chunk.slice(objectArray0, (-1), (-249));
      deleteDelta0.verify(list0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeleteDelta deleteDelta0 = new DeleteDelta();
      Object[] objectArray0 = new Object[5];
      Chunk chunk0 = new Chunk(objectArray0, 0, (-1));
      deleteDelta0.init(chunk0, chunk0);
      StringBuilder stringBuilder0 = new StringBuilder(2);
      deleteDelta0.toString(stringBuilder0);
      assertEquals("1d0\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("L(<SC0w.cvo");
      Chunk chunk0 = new Chunk(4303, 0);
      DeleteDelta deleteDelta0 = new DeleteDelta(chunk0);
      deleteDelta0.toRCSString(stringBuilder0, "L(<SC0w.cvo");
      assertEquals("L(<SC0w.cvod4304 0L(<SC0w.cvo", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DeleteDelta deleteDelta0 = new DeleteDelta();
      Object[] objectArray0 = new Object[5];
      Chunk chunk0 = new Chunk(objectArray0, 0, (-1));
      deleteDelta0.init(chunk0, chunk0);
      deleteDelta0.applyTo((List<Object>) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      List<Object> list0 = Chunk.slice(objectArray0, 1168, 0);
      DeleteDelta deleteDelta0 = new DeleteDelta();
      // Undeclared exception!
      try { 
        deleteDelta0.verify(list0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.diff.DeleteDelta", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Chunk chunk0 = new Chunk(0, 0);
      DeleteDelta deleteDelta0 = new DeleteDelta(chunk0);
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        deleteDelta0.toString(stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.diff.DeleteDelta", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DeleteDelta deleteDelta0 = new DeleteDelta();
      StringBuilder stringBuilder0 = new StringBuilder("L(<SC0w.cvo");
      // Undeclared exception!
      try { 
        deleteDelta0.toRCSString(stringBuilder0, "Sxz2v");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.diff.DeleteDelta", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DeleteDelta deleteDelta0 = new DeleteDelta();
      // Undeclared exception!
      try { 
        deleteDelta0.applyTo((List<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.diff.DeleteDelta", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Chunk chunk0 = new Chunk(0, 1020);
      DeleteDelta deleteDelta0 = new DeleteDelta(chunk0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        deleteDelta0.applyTo(linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1019, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Chunk chunk0 = new Chunk(objectArray0, (-2169), (-2040), 611);
      DeleteDelta deleteDelta0 = new DeleteDelta(chunk0);
      List<Object> list0 = Chunk.slice(objectArray0, (-1209), 0);
      try { 
        deleteDelta0.verify(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.diff.DeleteDelta", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Chunk chunk0 = new Chunk(objectArray0, (-249), 0, 0);
      DeleteDelta deleteDelta0 = new DeleteDelta(chunk0);
      RevisionVisitor revisionVisitor0 = mock(RevisionVisitor.class, new ViolatedAssumptionAnswer());
      deleteDelta0.accept(revisionVisitor0);
  }
}
