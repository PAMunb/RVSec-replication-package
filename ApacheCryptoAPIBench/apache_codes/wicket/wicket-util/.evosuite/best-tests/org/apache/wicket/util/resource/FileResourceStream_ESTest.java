/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:04:56 GMT 2022
 */

package org.apache.wicket.util.resource;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import org.apache.wicket.util.file.File;
import org.apache.wicket.util.lang.Bytes;
import org.apache.wicket.util.resource.FileResourceStream;
import org.apache.wicket.util.time.Time;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileResourceStream_ESTest extends FileResourceStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      File file0 = new File("");
      FileResourceStream fileResourceStream0 = new FileResourceStream(file0);
      String string0 = fileResourceStream0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      File file0 = new File("(hG");
      file0.write("(hG");
      FileResourceStream fileResourceStream0 = new FileResourceStream(file0);
      Bytes bytes0 = fileResourceStream0.length();
      assertEquals(2.7284841053187847E-12, bytes0.terabytes(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      File file0 = new File("(hG");
      file0.write("(hG");
      FileResourceStream fileResourceStream0 = new FileResourceStream(file0);
      Time time0 = fileResourceStream0.lastModifiedTime();
      assertEquals(1392409281320L, time0.getMilliseconds());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis((-3582L));
      java.io.File file0 = MockFile.createTempFile("a4aSZ35LUyF%cuTg1", "");
      File file1 = new File(file0);
      FileResourceStream fileResourceStream0 = new FileResourceStream(file1);
      Time time0 = fileResourceStream0.lastModifiedTime();
      assertEquals((-3582L), time0.getMilliseconds());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis((-3582L));
      java.io.File file0 = MockFile.createTempFile("a4aSZ35LUyF%cuTg1", "");
      File file1 = new File(file0);
      FileResourceStream fileResourceStream0 = new FileResourceStream(file1);
      File file2 = fileResourceStream0.getFile();
      assertEquals("a4aSZ35LUyF%cuTg10", file2.getName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      File file0 = new File(".");
      FileResourceStream fileResourceStream0 = new FileResourceStream(file0);
      File file1 = fileResourceStream0.getFile();
      assertFalse(file1.canRead());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      FileResourceStream fileResourceStream0 = new FileResourceStream(mockFile0);
      File file0 = fileResourceStream0.getFile();
      assertTrue(file0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      File file0 = new File("(hG");
      file0.write("(hG");
      FileResourceStream fileResourceStream0 = new FileResourceStream(file0);
      File file1 = fileResourceStream0.getFile();
      assertEquals("(hG", file1.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", ";uy*JPJGbn%8cF*");
      FileResourceStream fileResourceStream0 = new FileResourceStream(mockFile0);
      try { 
        fileResourceStream0.getInputStream();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Resource /;uy*JPJGbn%8cF* could not be found
         //
         verifyException("org.apache.wicket.util.resource.FileResourceStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileResourceStream fileResourceStream0 = null;
      try {
        fileResourceStream0 = new FileResourceStream((File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'file' may not be null.
         //
         verifyException("org.apache.wicket.util.lang.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileResourceStream fileResourceStream0 = null;
      try {
        fileResourceStream0 = new FileResourceStream((java.io.File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.file.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", ";uy*JPJGbn%8cF*");
      FileResourceStream fileResourceStream0 = new FileResourceStream(mockFile0);
      String string0 = fileResourceStream0.locationAsString();
      assertEquals("/;uy*JPJGbn%8cF*", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      File file0 = new File("o$tF{f#f:%");
      FileResourceStream fileResourceStream0 = new FileResourceStream((java.io.File) file0);
      Bytes bytes0 = fileResourceStream0.length();
      assertEquals(0.0, bytes0.kilobytes(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", ";uy*JPJGbn%8cF*");
      FileResourceStream fileResourceStream0 = new FileResourceStream(mockFile0);
      String string0 = fileResourceStream0.toString();
      assertEquals("/;uy*JPJGbn%8cF*", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      java.io.File file0 = MockFile.createTempFile("[&!.", "[&!.");
      FileResourceStream fileResourceStream0 = new FileResourceStream(file0);
      InputStream inputStream0 = fileResourceStream0.getInputStream();
      InputStream inputStream1 = fileResourceStream0.getInputStream();
      assertSame(inputStream1, inputStream0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      File file0 = new File("(hG");
      FileResourceStream fileResourceStream0 = new FileResourceStream(file0);
      String string0 = fileResourceStream0.getContentType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      File file0 = new File("o$tF{f#f:%");
      file0.createNewFile();
      FileResourceStream fileResourceStream0 = new FileResourceStream((java.io.File) file0);
      fileResourceStream0.getInputStream();
      fileResourceStream0.close();
      assertNull(fileResourceStream0.getVariation());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      File file0 = new File("(hG");
      FileResourceStream fileResourceStream0 = new FileResourceStream(file0);
      fileResourceStream0.close();
      assertNull(fileResourceStream0.getStyle());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", ";uy*JPJGbn%8cF*");
      FileResourceStream fileResourceStream0 = new FileResourceStream(mockFile0);
      Time time0 = fileResourceStream0.lastModifiedTime();
      assertNull(time0);
  }
}
