/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:10:18 GMT 2022
 */

package org.apache.wicket.util.convert.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.JComponent;
import javax.swing.text.MaskFormatter;
import org.apache.wicket.util.convert.IConverter;
import org.apache.wicket.util.convert.MaskConverter;
import org.apache.wicket.util.convert.converter.CalendarConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CalendarConverter_ESTest extends CalendarConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CalendarConverter calendarConverter0 = new CalendarConverter();
      Locale locale0 = Locale.US;
      TimeZone timeZone0 = TimeZone.getDefault();
      Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
      String string0 = calendarConverter0.convertToString(calendar0, locale0);
      assertEquals("2/14/14", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MaskConverter<Date> maskConverter0 = new MaskConverter<Date>("U=");
      CalendarConverter calendarConverter0 = new CalendarConverter(maskConverter0);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      Locale locale0 = Locale.GERMANY;
      // Undeclared exception!
      try { 
        calendarConverter0.convertToString((Calendar) mockGregorianCalendar0, locale0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.text.ParseException: Invalid character: r
         //
         verifyException("org.apache.wicket.util.convert.MaskConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CalendarConverter calendarConverter0 = new CalendarConverter();
      // Undeclared exception!
      try { 
        calendarConverter0.convertToObject("of{gxi", (Locale) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot parse 'of{gxi' using format java.text.SimpleDateFormat@8629ad2d
         //
         verifyException("org.apache.wicket.util.convert.converter.AbstractConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MaskConverter<Date> maskConverter0 = new MaskConverter<Date>((String) null);
      CalendarConverter calendarConverter0 = new CalendarConverter(maskConverter0);
      Locale locale0 = Locale.CANADA_FRENCH;
      // Undeclared exception!
      try { 
        calendarConverter0.convertToObject((String) null, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.text.MaskFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MaskFormatter maskFormatter0 = new MaskFormatter("");
      MaskConverter<Date> maskConverter0 = new MaskConverter<Date>(maskFormatter0);
      CalendarConverter calendarConverter0 = new CalendarConverter(maskConverter0);
      Locale locale0 = Locale.CHINA;
      // Undeclared exception!
      try { 
        calendarConverter0.convertToObject("", locale0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.util.Date
         //
         verifyException("org.apache.wicket.util.convert.converter.CalendarConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CalendarConverter calendarConverter0 = null;
      try {
        calendarConverter0 = new CalendarConverter((IConverter<Date>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'dateConverter' may not be null.
         //
         verifyException("org.apache.wicket.util.lang.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CalendarConverter calendarConverter0 = new CalendarConverter();
      Locale locale0 = JComponent.getDefaultLocale();
      String string0 = calendarConverter0.convertToString((Calendar) null, locale0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MaskFormatter maskFormatter0 = new MaskFormatter();
      MaskConverter<Date> maskConverter0 = new MaskConverter<Date>(maskFormatter0);
      CalendarConverter calendarConverter0 = new CalendarConverter(maskConverter0);
      Locale locale0 = new Locale("`SYct", "Class already loaded: ");
      Calendar calendar0 = MockCalendar.getInstance(locale0);
      String string0 = calendarConverter0.convertToString(calendar0, locale0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CalendarConverter calendarConverter0 = new CalendarConverter();
      Locale locale0 = JComponent.getDefaultLocale();
      Calendar calendar0 = calendarConverter0.convertToObject("", locale0);
      assertNull(calendar0);
  }
}
