/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:04:11 GMT 2022
 */

package org.apache.wicket.util.listener;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Iterator;
import org.apache.wicket.util.listener.ChangeListenerSet;
import org.apache.wicket.util.listener.IChangeListener;
import org.apache.wicket.util.listener.ListenerCollection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ListenerCollection_ESTest extends ListenerCollection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ChangeListenerSet<Integer> changeListenerSet0 = new ChangeListenerSet<Integer>();
      changeListenerSet0.reversedNotify((ListenerCollection.INotifier<IChangeListener<Integer>>) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ChangeListenerSet<ChangeListenerSet<Integer>> changeListenerSet0 = new ChangeListenerSet<ChangeListenerSet<Integer>>();
      IChangeListener<ChangeListenerSet<Integer>> iChangeListener0 = (IChangeListener<ChangeListenerSet<Integer>>) mock(IChangeListener.class, new ViolatedAssumptionAnswer());
      changeListenerSet0.add(iChangeListener0);
      // Undeclared exception!
      try { 
        changeListenerSet0.notify((ListenerCollection.INotifier<IChangeListener<ChangeListenerSet<Integer>>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.listener.ListenerCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ChangeListenerSet<ChangeListenerSet<Integer>> changeListenerSet0 = new ChangeListenerSet<ChangeListenerSet<Integer>>();
      IChangeListener<ChangeListenerSet<Integer>> iChangeListener0 = (IChangeListener<ChangeListenerSet<Integer>>) mock(IChangeListener.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iChangeListener0).toString();
      changeListenerSet0.add(iChangeListener0);
      changeListenerSet0.notifyIgnoringExceptions((ListenerCollection.INotifier<IChangeListener<ChangeListenerSet<Integer>>>) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ChangeListenerSet<Object> changeListenerSet0 = new ChangeListenerSet<Object>();
      IChangeListener<Object> iChangeListener0 = (IChangeListener<Object>) mock(IChangeListener.class, new ViolatedAssumptionAnswer());
      changeListenerSet0.add(iChangeListener0);
      Integer integer0 = new Integer(1);
      changeListenerSet0.notifyListeners(integer0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ChangeListenerSet<Object> changeListenerSet0 = new ChangeListenerSet<Object>();
      changeListenerSet0.notify((ListenerCollection.INotifier<IChangeListener<Object>>) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ChangeListenerSet<Object> changeListenerSet0 = new ChangeListenerSet<Object>();
      IChangeListener<Object> iChangeListener0 = (IChangeListener<Object>) mock(IChangeListener.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iChangeListener0).toString();
      changeListenerSet0.add(iChangeListener0);
      changeListenerSet0.reversedNotifyIgnoringExceptions((ListenerCollection.INotifier<IChangeListener<Object>>) null);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ChangeListenerSet<Object> changeListenerSet0 = new ChangeListenerSet<Object>();
      IChangeListener<Object> iChangeListener0 = (IChangeListener<Object>) mock(IChangeListener.class, new ViolatedAssumptionAnswer());
      changeListenerSet0.add(iChangeListener0);
      // Undeclared exception!
      try { 
        changeListenerSet0.reversedNotify((ListenerCollection.INotifier<IChangeListener<Object>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.listener.ListenerCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ChangeListenerSet<Object> changeListenerSet0 = new ChangeListenerSet<Object>();
      Iterator<IChangeListener<Object>> iterator0 = changeListenerSet0.iterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ChangeListenerSet<Object> changeListenerSet0 = new ChangeListenerSet<Object>();
      changeListenerSet0.remove((IChangeListener<Object>) null);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ChangeListenerSet<Object> changeListenerSet0 = new ChangeListenerSet<Object>();
      boolean boolean0 = changeListenerSet0.add((IChangeListener<Object>) null);
      assertFalse(boolean0);
  }
}
