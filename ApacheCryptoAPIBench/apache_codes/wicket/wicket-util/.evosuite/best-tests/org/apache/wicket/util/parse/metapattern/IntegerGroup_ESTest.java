/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:11:25 GMT 2022
 */

package org.apache.wicket.util.parse.metapattern;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.Matcher;
import org.apache.wicket.util.parse.metapattern.IntegerGroup;
import org.apache.wicket.util.parse.metapattern.MetaPattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntegerGroup_ESTest extends IntegerGroup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IntegerGroup integerGroup0 = new IntegerGroup();
      IntegerGroup integerGroup1 = new IntegerGroup(integerGroup0);
      assertFalse(integerGroup1.equals((Object)integerGroup0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IntegerGroup integerGroup0 = new IntegerGroup();
      // Undeclared exception!
      try { 
        integerGroup0.getLong((Matcher) null, 0L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.parse.metapattern.Group", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IntegerGroup integerGroup0 = new IntegerGroup();
      integerGroup0.pattern();
      // Undeclared exception!
      try { 
        integerGroup0.getLong((Matcher) null, (-1L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.parse.metapattern.Group", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IntegerGroup integerGroup0 = new IntegerGroup();
      Matcher matcher0 = integerGroup0.matcher((CharSequence) "(-?d+)");
      // Undeclared exception!
      try { 
        integerGroup0.getLong(matcher0, 16L);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IntegerGroup integerGroup0 = new IntegerGroup();
      integerGroup0.pattern();
      // Undeclared exception!
      try { 
        integerGroup0.getLong((Matcher) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.parse.metapattern.Group", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntegerGroup integerGroup0 = new IntegerGroup();
      Matcher matcher0 = integerGroup0.matcher((CharSequence) "(-?d+)");
      // Undeclared exception!
      try { 
        integerGroup0.getLong(matcher0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IntegerGroup integerGroup0 = new IntegerGroup();
      // Undeclared exception!
      try { 
        integerGroup0.getInt((Matcher) null, (-1833));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.parse.metapattern.Group", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MetaPattern metaPattern0 = MetaPattern.DIGITS;
      IntegerGroup integerGroup0 = new IntegerGroup(metaPattern0, 0);
      integerGroup0.pattern(0);
      // Undeclared exception!
      try { 
        integerGroup0.getInt((Matcher) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.parse.metapattern.Group", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntegerGroup integerGroup0 = new IntegerGroup();
      Matcher matcher0 = integerGroup0.matcher((CharSequence) "(-?d+)");
      // Undeclared exception!
      try { 
        integerGroup0.getInt(matcher0, 620);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IntegerGroup integerGroup0 = new IntegerGroup();
      integerGroup0.pattern();
      // Undeclared exception!
      try { 
        integerGroup0.getInt((Matcher) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.parse.metapattern.Group", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IntegerGroup integerGroup0 = new IntegerGroup();
      Matcher matcher0 = integerGroup0.matcher((CharSequence) "(-?d+)");
      // Undeclared exception!
      try { 
        integerGroup0.getInt(matcher0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IntegerGroup integerGroup0 = null;
      try {
        integerGroup0 = new IntegerGroup((MetaPattern) null, (-5));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.parse.metapattern.MetaPattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IntegerGroup integerGroup0 = null;
      try {
        integerGroup0 = new IntegerGroup((MetaPattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.parse.metapattern.MetaPattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IntegerGroup integerGroup0 = new IntegerGroup();
      // Undeclared exception!
      try { 
        integerGroup0.getInt((Matcher) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.parse.metapattern.Group", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IntegerGroup integerGroup0 = new IntegerGroup();
      // Undeclared exception!
      try { 
        integerGroup0.getLong((Matcher) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.parse.metapattern.Group", e);
      }
  }
}
