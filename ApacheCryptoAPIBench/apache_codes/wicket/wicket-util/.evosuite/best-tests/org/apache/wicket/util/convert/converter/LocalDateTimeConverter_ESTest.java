/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:19:09 GMT 2022
 */

package org.apache.wicket.util.convert.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.DateTimeException;
import java.time.LocalDateTime;
import java.time.OffsetTime;
import java.time.ZoneOffset;
import java.time.format.DateTimeFormatter;
import java.time.temporal.TemporalAccessor;
import org.apache.wicket.util.convert.converter.LocalDateTimeConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.mock.java.time.MockOffsetTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalDateTimeConverter_ESTest extends LocalDateTimeConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LocalDateTimeConverter localDateTimeConverter0 = new LocalDateTimeConverter();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDateTime localDateTime0 = MockLocalDateTime.ofEpochSecond((-766L), 0, zoneOffset0);
      LocalDateTime localDateTime1 = localDateTimeConverter0.createTemporal(localDateTime0);
      assertSame(localDateTime0, localDateTime1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LocalDateTimeConverter localDateTimeConverter0 = new LocalDateTimeConverter();
      OffsetTime offsetTime0 = MockOffsetTime.now();
      // Undeclared exception!
      try { 
        localDateTimeConverter0.createTemporal(offsetTime0);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Unable to obtain LocalDateTime from TemporalAccessor: 20:21:21.320Z of type java.time.OffsetTime
         //
         verifyException("java.time.LocalDateTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LocalDateTimeConverter localDateTimeConverter0 = new LocalDateTimeConverter();
      Class<LocalDateTime> class0 = localDateTimeConverter0.getTargetType();
      assertFalse(class0.isInterface());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LocalDateTimeConverter localDateTimeConverter0 = new LocalDateTimeConverter();
      // Undeclared exception!
      try { 
        localDateTimeConverter0.createTemporal((TemporalAccessor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LocalDateTimeConverter localDateTimeConverter0 = new LocalDateTimeConverter();
      DateTimeFormatter dateTimeFormatter0 = localDateTimeConverter0.getDateTimeFormatter();
      assertNotNull(dateTimeFormatter0);
  }
}
