/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:13:05 GMT 2022
 */

package org.apache.wicket.util.convert.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.wicket.util.convert.converter.LongConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LongConverter_ESTest extends LongConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LongConverter longConverter0 = new LongConverter();
      Class<Long> class0 = longConverter0.getTargetType();
      assertEquals(17, class0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LongConverter longConverter0 = new LongConverter();
      Locale locale0 = Locale.UK;
      Long long0 = longConverter0.convertToObject((String) null, locale0);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LongConverter longConverter0 = new LongConverter();
      Locale locale0 = Locale.GERMAN;
      // Undeclared exception!
      try { 
        longConverter0.convertToObject(",!K+T.RgW", locale0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot parse ',!K+T.RgW' using format java.text.DecimalFormat@674dc
         //
         verifyException("org.apache.wicket.util.convert.converter.AbstractConverter", e);
      }
  }
}
