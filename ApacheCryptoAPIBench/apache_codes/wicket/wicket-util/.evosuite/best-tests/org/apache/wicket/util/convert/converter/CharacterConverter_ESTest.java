/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:12:24 GMT 2022
 */

package org.apache.wicket.util.convert.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.wicket.util.convert.IConverter;
import org.apache.wicket.util.convert.MaskConverter;
import org.apache.wicket.util.convert.converter.CharacterConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterConverter_ESTest extends CharacterConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CharacterConverter characterConverter0 = new CharacterConverter();
      Class<Character> class0 = characterConverter0.getTargetType();
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharacterConverter characterConverter0 = new CharacterConverter();
      Locale locale0 = new Locale(" ", " ");
      Character character0 = characterConverter0.convertToObject(" ", locale0);
      assertEquals(' ', (char)character0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CharacterConverter characterConverter0 = new CharacterConverter();
      Locale locale0 = Locale.ITALY;
      Character character0 = characterConverter0.convertToObject("t", locale0);
      assertEquals('t', (char)character0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IConverter<Character> iConverter0 = CharacterConverter.INSTANCE;
      Locale locale0 = Locale.TAIWAN;
      // Undeclared exception!
      try { 
        iConverter0.convertToObject((String) null, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.convert.converter.CharacterConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Class<Object> class0 = Object.class;
      MaskConverter<Character> maskConverter0 = new MaskConverter<Character>("rCLs>n:", class0);
      // Undeclared exception!
      try { 
        maskConverter0.convertToObject("org.apache.commons.io.filefilter.FalseFileFilter", locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CharacterConverter characterConverter0 = new CharacterConverter();
      // Undeclared exception!
      try { 
        characterConverter0.convertToObject("n*dL1M0Gd:x", (Locale) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert 'n*dL1M0Gd:x' to Character
         //
         verifyException("org.apache.wicket.util.convert.converter.AbstractConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CharacterConverter characterConverter0 = new CharacterConverter();
      Locale locale0 = Locale.UK;
      Character character0 = characterConverter0.convertToObject("", locale0);
      assertNull(character0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CharacterConverter characterConverter0 = new CharacterConverter();
      Locale locale0 = Locale.GERMAN;
      Character character0 = characterConverter0.convertToObject("1", locale0);
      assertEquals('1', (char)character0);
  }
}
