/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:11:00 GMT 2022
 */

package org.apache.wicket.util.resource;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import org.apache.wicket.util.resource.IResourceStream;
import org.apache.wicket.util.resource.XSLTResourceStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XSLTResourceStream_ESTest extends XSLTResourceStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn((InputStream) null).when(iResourceStream0).getInputStream();
      IResourceStream iResourceStream1 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn((InputStream) null).when(iResourceStream1).getInputStream();
      XSLTResourceStream xSLTResourceStream0 = null;
      try {
        xSLTResourceStream0 = new XSLTResourceStream(iResourceStream0, iResourceStream1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // javax.xml.transform.TransformerConfigurationException: java.net.MalformedURLException
         //
         verifyException("org.apache.wicket.util.resource.XSLTResourceStream", e);
      }
  }
}
