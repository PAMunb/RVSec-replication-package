/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:15:59 GMT 2022
 */

package org.apache.wicket.util.resource;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.util.Locale;
import org.apache.wicket.util.lang.Bytes;
import org.apache.wicket.util.resource.IResourceStream;
import org.apache.wicket.util.resource.ResourceStreamWrapper;
import org.apache.wicket.util.time.Time;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ResourceStreamWrapper_ESTest extends ResourceStreamWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn("fe/54EG@b!").when(iResourceStream0).getVariation();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      String string0 = resourceStreamWrapper0.getVariation();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn("").when(iResourceStream0).getVariation();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      String string0 = resourceStreamWrapper0.getVariation();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn("P,e").when(iResourceStream0).getStyle();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      String string0 = resourceStreamWrapper0.getStyle();
      assertEquals("P,e", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn("").when(iResourceStream0).getStyle();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      String string0 = resourceStreamWrapper0.getStyle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn((InputStream) null).when(iResourceStream0).getInputStream();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      InputStream inputStream0 = resourceStreamWrapper0.getInputStream();
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn("P,e").when(iResourceStream0).getContentType();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      String string0 = resourceStreamWrapper0.getContentType();
      assertEquals("P,e", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn("").when(iResourceStream0).getContentType();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      String string0 = resourceStreamWrapper0.getContentType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResourceStreamWrapper resourceStreamWrapper0 = null;
      try {
        resourceStreamWrapper0 = new ResourceStreamWrapper((IResourceStream) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'delegate' may not be null.
         //
         verifyException("org.apache.wicket.util.lang.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iResourceStream0).getContentType();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      String string0 = resourceStreamWrapper0.getContentType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn((Time) null).when(iResourceStream0).lastModifiedTime();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      Time time0 = resourceStreamWrapper0.lastModifiedTime();
      assertNull(time0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iResourceStream0).toString();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      IResourceStream iResourceStream1 = resourceStreamWrapper0.getDelegate();
      assertNull(iResourceStream1.getVariation());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      resourceStreamWrapper0.setVariation("c}; _b[CTF.k-T;3");
      assertNull(resourceStreamWrapper0.getVariation());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iResourceStream0).getStyle();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      String string0 = resourceStreamWrapper0.getStyle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      resourceStreamWrapper0.close();
      assertNull(resourceStreamWrapper0.getStyle());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      resourceStreamWrapper0.setStyle("h.mma");
      assertNull(resourceStreamWrapper0.getStyle());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      resourceStreamWrapper0.setLocale((Locale) null);
      assertNull(resourceStreamWrapper0.getStyle());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn((Bytes) null).when(iResourceStream0).length();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      Bytes bytes0 = resourceStreamWrapper0.length();
      assertNull(bytes0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn((Locale) null).when(iResourceStream0).getLocale();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      Locale locale0 = resourceStreamWrapper0.getLocale();
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(inputStream0).toString();
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn(inputStream0).when(iResourceStream0).getInputStream();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      InputStream inputStream1 = resourceStreamWrapper0.getInputStream();
      assertSame(inputStream1, inputStream0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IResourceStream iResourceStream0 = mock(IResourceStream.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iResourceStream0).getVariation();
      ResourceStreamWrapper resourceStreamWrapper0 = new ResourceStreamWrapper(iResourceStream0);
      String string0 = resourceStreamWrapper0.getVariation();
      assertNull(string0);
  }
}
