/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:57:54 GMT 2022
 */

package org.apache.wicket.util.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.text.ParseException;
import org.apache.wicket.util.io.FullyBufferedReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FullyBufferedReader_ESTest extends FullyBufferedReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      fullyBufferedReader0.countLinesTo((-634));
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader((String) null);
      fullyBufferedReader0.toString();
      assertEquals(1, fullyBufferedReader0.getLineNumber());
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(" E\t6");
      fullyBufferedReader0.toString();
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      fullyBufferedReader0.size();
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      fullyBufferedReader0.getSubstring(0, 0);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(" *1y");
      CharSequence charSequence0 = fullyBufferedReader0.getSubstring(0, 4);
      assertEquals(" *1y", charSequence0);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader(", column ");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      fullyBufferedReader0.setPosition(2953);
      int int0 = fullyBufferedReader0.getPosition();
      assertEquals(2953, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(", column ");
      int int0 = fullyBufferedReader0.findOutOfQuotes('l', 1);
      assertEquals(4, int0);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("w=Q C");
      int int0 = fullyBufferedReader0.find("w=Q C", (-701));
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      fullyBufferedReader0.find("=mVE5K-mv6xcb", 0);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("A#");
      fullyBufferedReader0.setPosition(10);
      int int0 = fullyBufferedReader0.find("");
      assertEquals(10, fullyBufferedReader0.getPosition());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      fullyBufferedReader0.find("Pi/h");
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HjA;Fd5");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      int int0 = fullyBufferedReader0.find('H', (-1));
      assertEquals(0, int0);
      assertEquals(1, fullyBufferedReader0.getLineNumber());
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(", column ");
      int int0 = fullyBufferedReader0.find(' ', (-1643));
      assertEquals(1, fullyBufferedReader0.getLineNumber());
      assertEquals(1, int0);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("|:");
      fullyBufferedReader0.find('d', 45);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(", column ");
      int int0 = fullyBufferedReader0.find('o');
      assertEquals(1, fullyBufferedReader0.getLineNumber());
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HjA;Fd5");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      int int0 = fullyBufferedReader0.find('k');
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals((-1), int0);
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(" =D1y");
      char char0 = fullyBufferedReader0.charAt(0);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
      assertEquals(' ', char0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("86JDR{Z@g(t6DW6fnEk");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      char char0 = fullyBufferedReader0.charAt(1);
      assertEquals('6', char0);
      assertEquals(1, fullyBufferedReader0.getLineNumber());
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader((String) null);
      // Undeclared exception!
      try { 
        fullyBufferedReader0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader((String) null);
      // Undeclared exception!
      try { 
        fullyBufferedReader0.getSubstring((-987), (-987));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(", column ");
      // Undeclared exception!
      try { 
        fullyBufferedReader0.getSubstring(4320);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader((String) null);
      // Undeclared exception!
      try { 
        fullyBufferedReader0.getSubstring(1316);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader((String) null);
      // Undeclared exception!
      try { 
        fullyBufferedReader0.findOutOfQuotes(' ', (int) ' ', ' ');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(", column ");
      // Undeclared exception!
      try { 
        fullyBufferedReader0.findOutOfQuotes(' ', (-701));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader((String) null);
      // Undeclared exception!
      try { 
        fullyBufferedReader0.find((String) null, (int) 'H');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(", column ");
      // Undeclared exception!
      try { 
        fullyBufferedReader0.find((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader((String) null);
      // Undeclared exception!
      try { 
        fullyBufferedReader0.find('s');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("Pi/h");
      // Undeclared exception!
      try { 
        fullyBufferedReader0.countLinesTo(52);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader((String) null);
      // Undeclared exception!
      try { 
        fullyBufferedReader0.countLinesTo(111);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(", column ");
      // Undeclared exception!
      try { 
        fullyBufferedReader0.charAt((-1270));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader((String) null);
      // Undeclared exception!
      try { 
        fullyBufferedReader0.charAt(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = null;
      try {
        fullyBufferedReader0 = new FullyBufferedReader((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.io.Streams", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      FullyBufferedReader fullyBufferedReader0 = null;
      try {
        fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("The parameter 'bufSize' must not be <= 0");
      try { 
        fullyBufferedReader0.findOutOfQuotes(' ', (int) ' ', ')');
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Opening/closing quote not found for quote at (line 1, column 1)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(" olu-ecmn");
      int int0 = fullyBufferedReader0.getColumnNumber();
      assertEquals(1, int0);
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader((String) null);
      // Undeclared exception!
      try { 
        fullyBufferedReader0.find('7', (-1630));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("");
      int int0 = fullyBufferedReader0.getLineNumber();
      assertEquals(1, int0);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      fullyBufferedReader0.findOutOfQuotes('6', (int) '6');
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("U]:0`QV\"pqwU;8,cL:");
      try { 
        fullyBufferedReader0.findOutOfQuotes('w', 5);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Opening/closing quote not found for quote at (line 1, column 8)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("The parameter 'bufSize' must not be <= 0");
      int int0 = fullyBufferedReader0.findOutOfQuotes(' ', 13, ' ');
      assertEquals(15, fullyBufferedReader0.getColumnNumber());
      assertEquals(23, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("Pi/h");
      // Undeclared exception!
      try { 
        fullyBufferedReader0.findOutOfQuotes('h', (-355), 'h');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("<%o");
      fullyBufferedReader0.setPositionMarker(2413);
      fullyBufferedReader0.getSubstring(51);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("org.apache.wicket.util.io.FullyBufferedReader");
      CharSequence charSequence0 = fullyBufferedReader0.getSubstring((-547));
      assertEquals("org.apache.wicket.util.io.FullyBufferedReader", charSequence0);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HjA;Fd5");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      CharSequence charSequence0 = fullyBufferedReader0.getSubstring(0);
      assertEquals("", charSequence0);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      int int0 = fullyBufferedReader0.getPosition();
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(0, int0);
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(" olumn");
      // Undeclared exception!
      try { 
        fullyBufferedReader0.getSubstring(32, 32);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(", column ");
      int int0 = fullyBufferedReader0.find(", column ");
      assertEquals(0, int0);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      fullyBufferedReader0.setPosition((-1205));
      int int0 = fullyBufferedReader0.getPosition();
      assertEquals((-1205), int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HjA;Fd5");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      int int0 = fullyBufferedReader0.find('H');
      assertEquals(0, int0);
      assertEquals(1, fullyBufferedReader0.getLineNumber());
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader((String) null);
      // Undeclared exception!
      try { 
        fullyBufferedReader0.findOutOfQuotes('7', (-628));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringReader stringReader0 = new StringReader(", column ");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      fullyBufferedReader0.size();
      assertEquals(1, fullyBufferedReader0.getLineNumber());
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("");
      fullyBufferedReader0.toString();
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HjA;Fd5");
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader(stringReader0);
      char char0 = fullyBufferedReader0.charAt(0);
      assertEquals(1, fullyBufferedReader0.getLineNumber());
      assertEquals('H', char0);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("H|Vtk}");
      int int0 = fullyBufferedReader0.find("", 10);
      assertEquals(6, int0);
      assertEquals(1, fullyBufferedReader0.getColumnNumber());
      assertEquals(1, fullyBufferedReader0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FullyBufferedReader fullyBufferedReader0 = new FullyBufferedReader("");
      try { 
        fullyBufferedReader0.findOutOfQuotes('7', 2048, '7');
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Opening/closing quote not found for quote at (line 1, column 1)
         //
         verifyException("org.apache.wicket.util.io.FullyBufferedReader", e);
      }
  }
}
