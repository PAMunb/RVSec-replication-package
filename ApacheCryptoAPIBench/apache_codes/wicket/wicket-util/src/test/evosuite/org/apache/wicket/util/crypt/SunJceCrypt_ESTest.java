/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:18:44 GMT 2022
 */

package org.apache.wicket.util.crypt;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.InvalidParameterException;
import java.security.NoSuchAlgorithmException;
import java.security.spec.AlgorithmParameterSpec;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.KeySpec;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.SecretKey;
import org.apache.wicket.util.crypt.SunJceCrypt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SunJceCrypt_ESTest extends SunJceCrypt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      byte[] byteArray0 = sunJceCrypt0.crypt(sunJceCrypt0.SALT, 1);
      assertEquals(16, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = sunJceCrypt0.crypt(byteArray0, 2);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      KeySpec keySpec0 = sunJceCrypt0.createKeySpec();
      assertNotNull(keySpec0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      SecretKey secretKey0 = sunJceCrypt0.generateSecretKey();
      AlgorithmParameterSpec algorithmParameterSpec0 = sunJceCrypt0.createParameterSpec();
      Cipher cipher0 = sunJceCrypt0.createCipher(secretKey0, algorithmParameterSpec0, 1);
      assertNotNull(cipher0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      sunJceCrypt0.setKey("{>pU840yX>~6DeT");
      try { 
        sunJceCrypt0.generateSecretKey();
        fail("Expecting exception: InvalidKeySpecException");
      
      } catch(InvalidKeySpecException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt("");
      try { 
        sunJceCrypt0.generateSecretKey();
        fail("Expecting exception: NoSuchAlgorithmException");
      
      } catch(NoSuchAlgorithmException e) {
         //
         //  SecretKeyFactory not available
         //
         verifyException("javax.crypto.SecretKeyFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      sunJceCrypt0.setKey((String) null);
      // Undeclared exception!
      try { 
        sunJceCrypt0.generateSecretKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.crypt.SunJceCrypt", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      byte[] byteArray0 = new byte[3];
      try { 
        sunJceCrypt0.crypt(byteArray0, (byte)2);
        fail("Expecting exception: IllegalBlockSizeException");
      
      } catch(IllegalBlockSizeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      try { 
        sunJceCrypt0.crypt(sunJceCrypt0.SALT, (byte)2);
        fail("Expecting exception: BadPaddingException");
      
      } catch(BadPaddingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      sunJceCrypt0.setKey("g0'z57Sr");
      try { 
        sunJceCrypt0.crypt(sunJceCrypt0.SALT, (byte)0);
        fail("Expecting exception: InvalidKeySpecException");
      
      } catch(InvalidKeySpecException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt("");
      try { 
        sunJceCrypt0.crypt(sunJceCrypt0.SALT, 714);
        fail("Expecting exception: NoSuchAlgorithmException");
      
      } catch(NoSuchAlgorithmException e) {
         //
         //  SecretKeyFactory not available
         //
         verifyException("javax.crypto.SecretKeyFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      // Undeclared exception!
      try { 
        sunJceCrypt0.crypt(sunJceCrypt0.SALT, (byte) (-37));
        fail("Expecting exception: InvalidParameterException");
      
      } catch(InvalidParameterException e) {
         //
         // Invalid operation mode
         //
         verifyException("javax.crypto.Cipher", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      sunJceCrypt0.setKey((String) null);
      // Undeclared exception!
      try { 
        sunJceCrypt0.crypt(sunJceCrypt0.SALT, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.crypt.SunJceCrypt", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      // Undeclared exception!
      try { 
        sunJceCrypt0.crypt((byte[]) null, 3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cipher not initialized for encryption/decryption
         //
         verifyException("javax.crypto.Cipher", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      sunJceCrypt0.setKey((String) null);
      // Undeclared exception!
      try { 
        sunJceCrypt0.createKeySpec();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.crypt.SunJceCrypt", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt("|`)@5jx!!");
      AlgorithmParameterSpec algorithmParameterSpec0 = sunJceCrypt0.createParameterSpec();
      try { 
        sunJceCrypt0.createCipher((SecretKey) null, algorithmParameterSpec0, 3);
        fail("Expecting exception: NoSuchAlgorithmException");
      
      } catch(NoSuchAlgorithmException e) {
         //
         // Cannot find any provider supporting |`)@5jx!!
         //
         verifyException("javax.crypto.Cipher", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      SecretKey secretKey0 = sunJceCrypt0.generateSecretKey();
      AlgorithmParameterSpec algorithmParameterSpec0 = sunJceCrypt0.createParameterSpec();
      // Undeclared exception!
      try { 
        sunJceCrypt0.createCipher(secretKey0, algorithmParameterSpec0, 1249);
        fail("Expecting exception: InvalidParameterException");
      
      } catch(InvalidParameterException e) {
         //
         // Invalid operation mode
         //
         verifyException("javax.crypto.Cipher", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      AlgorithmParameterSpec algorithmParameterSpec0 = sunJceCrypt0.createParameterSpec();
      try { 
        sunJceCrypt0.createCipher((SecretKey) null, algorithmParameterSpec0, 4);
        fail("Expecting exception: InvalidKeyException");
      
      } catch(InvalidKeyException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      SecretKey secretKey0 = sunJceCrypt0.generateSecretKey();
      try { 
        sunJceCrypt0.createCipher(secretKey0, (AlgorithmParameterSpec) null, 4);
        fail("Expecting exception: InvalidAlgorithmParameterException");
      
      } catch(InvalidAlgorithmParameterException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = null;
      try {
        sunJceCrypt0 = new SunJceCrypt((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'Crypt method' may not be null.
         //
         verifyException("org.apache.wicket.util.lang.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SunJceCrypt sunJceCrypt0 = new SunJceCrypt();
      // Undeclared exception!
      try { 
        sunJceCrypt0.crypt((byte[]) null, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null input buffer
         //
         verifyException("javax.crypto.Cipher", e);
      }
  }
}
