/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:58:12 GMT 2022
 */

package org.apache.wicket.util.resource;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.wicket.util.resource.ResourceUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ResourceUtils_ESTest extends ResourceUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResourceUtils.PathLocale resourceUtils_PathLocale0 = ResourceUtils.getLocaleFromFilename("c/+{(gq>^!?axvlQ/");
      assertNotNull(resourceUtils_PathLocale0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = ResourceUtils.getMinifiedName("_([a-z]{2})(_([A-Z]{2})(_([^_.]+))?)?(.min)?$", ".Boolean value \".");
      assertEquals("_([a-z]{2})(_([A-Z]{2})(_([^_.]+))?)?(..Boolean value \"..min)?$", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtils.getMinifiedName((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.resource.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtils.getLocaleFromFilename((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.resource.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      ResourceUtils.PathLocale resourceUtils_PathLocale0 = new ResourceUtils.PathLocale("akEnQ?$N=ksM(*-lU&", locale0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResourceUtils.PathLocale resourceUtils_PathLocale0 = ResourceUtils.getLocaleFromFilename("<:M_vd");
      assertNotNull(resourceUtils_PathLocale0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResourceUtils.PathLocale resourceUtils_PathLocale0 = ResourceUtils.getLocaleFromFilename("rvC)&+@3\"r[nP~.Tzq_en.");
      assertNotNull(resourceUtils_PathLocale0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ResourceUtils.getMinifiedName(">.>.6,V*v.6,V*v", ">.6,V*v");
      assertEquals(">.>.6,V*v.6,V*v", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = ResourceUtils.getMinifiedName(" 0SPG..min.", "");
      assertEquals(" 0SPG..min.", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = ResourceUtils.getMinifiedName("rvC)&+@3\"r[nP~", "Tzq_en.");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResourceUtils resourceUtils0 = new ResourceUtils();
  }
}
