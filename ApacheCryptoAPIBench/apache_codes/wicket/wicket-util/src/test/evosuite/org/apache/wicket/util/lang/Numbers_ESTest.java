/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 01:53:38 GMT 2022
 */

package org.apache.wicket.util.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.wicket.util.lang.Numbers;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Numbers_ESTest extends Numbers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Number number0 = Numbers.getMaxValue((Class<? extends Number>) null);
      assertEquals(1.7976931348623157E308, number0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Byte> class0 = Byte.class;
      Number number0 = Numbers.getMaxValue(class0);
      assertEquals((byte)127, number0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Byte> class0 = Byte.TYPE;
      Number number0 = Numbers.getMaxValue(class0);
      assertEquals((byte)127, number0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Byte> class0 = Byte.TYPE;
      Number number0 = Numbers.getMinValue(class0);
      assertEquals((byte) (-128), number0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Byte> class0 = Byte.class;
      Number number0 = Numbers.getMinValue(class0);
      assertEquals((byte) (-128), number0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Number number0 = Numbers.getMinValue((Class<? extends Number>) null);
      assertEquals((-1.7976931348623157E308), number0);
  }
}
