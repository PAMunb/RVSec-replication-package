/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 02:08:01 GMT 2022
 */

package org.apache.wicket.util.resource;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.Charset;
import org.apache.wicket.util.lang.Bytes;
import org.apache.wicket.util.resource.StringBufferResourceStream;
import org.apache.wicket.util.resource.StringResourceStream;
import org.apache.wicket.util.time.Time;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractStringResourceStream_ESTest extends AbstractStringResourceStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream("o..d=");
      stringBufferResourceStream0.prepend("text");
      Bytes bytes0 = stringBufferResourceStream0.length();
      assertEquals("o..d=", stringBufferResourceStream0.getContentType());
      assertEquals(3.637978807091713E-12, bytes0.terabytes(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream();
      stringBufferResourceStream0.setLastModified((Time) null);
      Time time0 = stringBufferResourceStream0.lastModifiedTime();
      assertNull(time0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream("o..d=");
      stringBufferResourceStream0.lastModifiedTime();
      assertEquals("o..d=", stringBufferResourceStream0.getContentType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream("text");
      System.setCurrentTimeMillis((-1248L));
      stringBufferResourceStream0.prepend("text");
      Time time0 = stringBufferResourceStream0.lastModifiedTime();
      assertEquals((-1248L), time0.getMilliseconds());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringResourceStream stringResourceStream0 = new StringResourceStream("text");
      String string0 = stringResourceStream0.getContentType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream("Y");
      String string0 = stringBufferResourceStream0.getContentType();
      assertEquals("Y", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringResourceStream stringResourceStream0 = new StringResourceStream("text");
      Charset charset0 = stringResourceStream0.getCharset();
      assertNull(charset0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringResourceStream stringResourceStream0 = new StringResourceStream((CharSequence) null, "Z");
      // Undeclared exception!
      try { 
        stringResourceStream0.length();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.resource.StringResourceStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringResourceStream stringResourceStream0 = new StringResourceStream((CharSequence) null, "OUoUk6!mWWN");
      // Undeclared exception!
      try { 
        stringResourceStream0.getInputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.resource.StringResourceStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringResourceStream stringResourceStream0 = new StringResourceStream((CharSequence) null);
      // Undeclared exception!
      try { 
        stringResourceStream0.asString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.wicket.util.resource.StringResourceStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream("");
      stringBufferResourceStream0.getInputStream();
      assertEquals("", stringBufferResourceStream0.getContentType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream("o..d=");
      stringBufferResourceStream0.setCharset((Charset) null);
      assertEquals("o..d=", stringBufferResourceStream0.getContentType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream("o..d=");
      stringBufferResourceStream0.lastModifiedTime();
      assertEquals("o..d=", stringBufferResourceStream0.getContentType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream("o..d=");
      StringBufferResourceStream stringBufferResourceStream1 = stringBufferResourceStream0.prepend("text");
      stringBufferResourceStream1.asString();
      assertEquals("o..d=", stringBufferResourceStream1.getContentType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream("o..d=");
      Bytes bytes0 = stringBufferResourceStream0.length();
      assertEquals("o..d=", stringBufferResourceStream0.getContentType());
      assertEquals(0.0, bytes0.gigabytes(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream("o..d=");
      stringBufferResourceStream0.asString();
      assertEquals("o..d=", stringBufferResourceStream0.getContentType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream("");
      String string0 = stringBufferResourceStream0.getContentType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringBufferResourceStream stringBufferResourceStream0 = new StringBufferResourceStream();
      stringBufferResourceStream0.close();
      assertEquals("text", stringBufferResourceStream0.getContentType());
  }
}
