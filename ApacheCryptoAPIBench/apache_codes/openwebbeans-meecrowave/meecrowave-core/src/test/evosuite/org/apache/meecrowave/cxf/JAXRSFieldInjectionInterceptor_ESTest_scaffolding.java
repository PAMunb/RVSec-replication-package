/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Apr 21 21:12:52 GMT 2022
 */

package org.apache.meecrowave.cxf;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class JAXRSFieldInjectionInterceptor_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.meecrowave.cxf.JAXRSFieldInjectionInterceptor"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/openwebbeans-meecrowave/meecrowave-core"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JAXRSFieldInjectionInterceptor_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.cxf.continuations.SuspendedInvocationException",
      "org.apache.cxf.common.util.PackageUtils",
      "org.apache.cxf.interceptor.InterceptorChain",
      "org.apache.cxf.common.util.StringUtils",
      "org.apache.webbeans.annotation.EmptyAnnotationLiteral",
      "org.apache.cxf.common.logging.LogUtils$4",
      "org.apache.cxf.jaxrs.utils.JAXRSUtils",
      "org.apache.cxf.io.ReaderInputStream",
      "org.apache.cxf.jaxrs.provider.ProviderFactory",
      "org.apache.cxf.common.logging.LogUtils$1",
      "org.apache.cxf.common.logging.LogUtils$3",
      "org.apache.cxf.common.logging.LogUtils$2",
      "org.apache.meecrowave.cxf.JAXRSFieldInjectionInterceptor$Binding",
      "org.apache.cxf.jaxrs.model.ProviderInfo",
      "org.apache.cxf.common.logging.JDKBugHacks",
      "org.apache.cxf.jaxrs.provider.ServerProviderFactory",
      "org.apache.cxf.common.logging.AbstractDelegatingLogger",
      "org.apache.cxf.interceptor.Fault",
      "org.apache.cxf.jaxrs.ext.MessageContext",
      "org.apache.cxf.common.i18n.BundleUtils$1",
      "org.apache.cxf.common.logging.LogUtils",
      "org.apache.cxf.common.i18n.BundleUtils$2",
      "org.apache.cxf.jaxrs.model.OperationResourceInfoStack",
      "org.apache.meecrowave.cxf.JAXRSFieldInjectionInterceptor",
      "org.apache.cxf.jaxrs.model.BeanParamInfo",
      "org.apache.meecrowave.cxf.JAXRSFieldInjectionInterceptor$Binding$1",
      "org.apache.cxf.interceptor.Interceptor",
      "org.apache.cxf.message.Message",
      "org.apache.cxf.common.logging.Slf4jLogger",
      "org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder",
      "org.apache.cxf.message.StringMap",
      "org.apache.cxf.common.classloader.ClassLoaderUtils",
      "org.apache.cxf.jaxrs.model.BeanResourceInfo",
      "org.apache.cxf.jaxrs.model.AbstractResourceInfo",
      "org.apache.cxf.common.i18n.UncheckedException",
      "org.apache.cxf.common.i18n.BundleUtils",
      "org.apache.cxf.common.logging.JDKBugHacks$2",
      "org.apache.cxf.common.logging.JDKBugHacks$1",
      "org.apache.cxf.common.classloader.ClassLoaderUtils$1",
      "org.apache.cxf.jaxrs.model.ClassResourceInfo",
      "org.apache.cxf.phase.PhaseInterceptorChain"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("javax.interceptor.InvocationContext", false, JAXRSFieldInjectionInterceptor_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JAXRSFieldInjectionInterceptor_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.meecrowave.cxf.JAXRSFieldInjectionInterceptor",
      "org.apache.webbeans.annotation.EmptyAnnotationLiteral",
      "org.apache.meecrowave.cxf.JAXRSFieldInjectionInterceptor$Binding$1",
      "org.apache.meecrowave.cxf.JAXRSFieldInjectionInterceptor$Binding",
      "org.apache.cxf.common.util.StringUtils",
      "org.apache.cxf.common.logging.JDKBugHacks",
      "org.apache.cxf.common.logging.JDKBugHacks$1",
      "org.apache.cxf.common.classloader.ClassLoaderUtils",
      "org.apache.cxf.common.classloader.ClassLoaderUtils$1",
      "org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder",
      "org.apache.cxf.common.logging.JDKBugHacks$2",
      "org.apache.cxf.common.logging.LogUtils$1",
      "org.apache.cxf.common.logging.LogUtils$3",
      "org.apache.cxf.common.logging.LogUtils$4",
      "org.apache.cxf.common.logging.LogUtils$2",
      "org.apache.cxf.common.i18n.BundleUtils",
      "org.apache.cxf.common.util.PackageUtils",
      "org.apache.cxf.common.i18n.BundleUtils$2",
      "org.apache.cxf.common.i18n.BundleUtils$1",
      "org.apache.cxf.common.logging.LogUtils",
      "org.apache.cxf.phase.PhaseInterceptorChain",
      "org.apache.cxf.jaxrs.utils.InjectionUtils",
      "org.apache.cxf.jaxrs.utils.SpecExceptions",
      "org.apache.cxf.jaxrs.utils.JAXRSUtils",
      "org.apache.cxf.common.logging.AbstractDelegatingLogger",
      "org.apache.cxf.common.logging.Slf4jLogger"
    );
  }
}
