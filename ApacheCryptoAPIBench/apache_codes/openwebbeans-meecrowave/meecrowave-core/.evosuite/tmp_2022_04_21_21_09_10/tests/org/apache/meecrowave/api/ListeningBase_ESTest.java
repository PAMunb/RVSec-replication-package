/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:14:09 GMT 2022
 */

package org.apache.meecrowave.api;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.catalina.Context;
import org.apache.catalina.Host;
import org.apache.catalina.connector.Connector;
import org.apache.meecrowave.api.StartListening;
import org.apache.meecrowave.api.StopListening;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ListeningBase_ESTest extends ListeningBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Connector connector0 = mock(Connector.class, new ViolatedAssumptionAnswer());
      doReturn(0, (-59)).when(connector0).getPort();
      doReturn(true, true).when(connector0).getSecure();
      Host host0 = mock(Host.class, new ViolatedAssumptionAnswer());
      doReturn("", "'B6z{'5#p3d").when(host0).getName();
      Context context0 = mock(Context.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, "appBase").when(context0).getPath();
      StartListening startListening0 = new StartListening(connector0, host0, context0);
      String string0 = startListening0.getFirstBase();
      assertEquals("https://null", string0);
      
      String string1 = startListening0.getFirstBase();
      assertEquals("https://'B6z{'5#p3dappBase", string1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Host host0 = mock(Host.class, new ViolatedAssumptionAnswer());
      StopListening stopListening0 = new StopListening((Connector) null, host0, (Context) null);
      Connector connector0 = stopListening0.getConnector();
      assertNull(connector0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Connector connector0 = mock(Connector.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(connector0).getSecure();
      Context context0 = mock(Context.class, new ViolatedAssumptionAnswer());
      StopListening stopListening0 = new StopListening(connector0, (Host) null, context0);
      // Undeclared exception!
      try { 
        stopListening0.getFirstBase();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.api.ListeningBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Connector connector0 = mock(Connector.class, new ViolatedAssumptionAnswer());
      doReturn(58, 58).when(connector0).getPort();
      doReturn(true).when(connector0).getSecure();
      Host host0 = mock(Host.class, new ViolatedAssumptionAnswer());
      doReturn("Internal").when(host0).getName();
      Context context0 = mock(Context.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(context0).getPath();
      StopListening stopListening0 = new StopListening(connector0, host0, context0);
      String string0 = stopListening0.getFirstBase();
      assertEquals("https://Internal:58null", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Connector connector0 = mock(Connector.class, new ViolatedAssumptionAnswer());
      StartListening startListening0 = new StartListening(connector0, (Host) null, (Context) null);
      Host host0 = startListening0.getHost();
      assertNull(host0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Connector connector0 = mock(Connector.class, new ViolatedAssumptionAnswer());
      StartListening startListening0 = new StartListening(connector0, (Host) null, (Context) null);
      Context context0 = startListening0.getContext();
      assertNull(context0);
  }
}
