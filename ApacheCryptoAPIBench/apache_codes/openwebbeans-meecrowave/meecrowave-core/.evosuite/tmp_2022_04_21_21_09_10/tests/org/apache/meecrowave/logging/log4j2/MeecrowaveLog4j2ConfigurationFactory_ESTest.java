/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:15:46 GMT 2022
 */

package org.apache.meecrowave.logging.log4j2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileDescriptor;
import java.io.InputStream;
import org.apache.logging.log4j.core.LoggerContext;
import org.apache.logging.log4j.core.config.Configuration;
import org.apache.logging.log4j.core.config.ConfigurationFactory;
import org.apache.logging.log4j.core.config.ConfigurationSource;
import org.apache.meecrowave.logging.log4j2.MeecrowaveLog4j2ConfigurationFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MeecrowaveLog4j2ConfigurationFactory_ESTest extends MeecrowaveLog4j2ConfigurationFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MeecrowaveLog4j2ConfigurationFactory meecrowaveLog4j2ConfigurationFactory0 = (MeecrowaveLog4j2ConfigurationFactory)ConfigurationFactory.getInstance();
      // Undeclared exception!
      try { 
        meecrowaveLog4j2ConfigurationFactory0.getSupportedTypes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MeecrowaveLog4j2ConfigurationFactory meecrowaveLog4j2ConfigurationFactory0 = new MeecrowaveLog4j2ConfigurationFactory();
      LoggerContext loggerContext0 = new LoggerContext("AsyncRoot");
      // Undeclared exception!
      try { 
        meecrowaveLog4j2ConfigurationFactory0.getConfiguration(loggerContext0, (ConfigurationSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // configurationSource is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MeecrowaveLog4j2ConfigurationFactory meecrowaveLog4j2ConfigurationFactory0 = new MeecrowaveLog4j2ConfigurationFactory();
      LoggerContext loggerContext0 = mock(LoggerContext.class, new ViolatedAssumptionAnswer());
      ConfigurationSource configurationSource0 = mock(ConfigurationSource.class, new ViolatedAssumptionAnswer());
      doReturn((File) null).when(configurationSource0).getFile();
      doReturn((InputStream) null).when(configurationSource0).getInputStream();
      // Undeclared exception!
      try { 
        meecrowaveLog4j2ConfigurationFactory0.getConfiguration(loggerContext0, configurationSource0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.logging.log4j.core.config.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MeecrowaveLog4j2ConfigurationFactory meecrowaveLog4j2ConfigurationFactory0 = new MeecrowaveLog4j2ConfigurationFactory();
      LoggerContext loggerContext0 = new LoggerContext("^)GP\"#{{CcAxH#UPhP", meecrowaveLog4j2ConfigurationFactory0, "ncQ>@q5]4");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      MockFile mockFile0 = new MockFile((File) null, "ConfigurationFactory");
      ConfigurationSource configurationSource0 = new ConfigurationSource(mockFileInputStream0, mockFile0);
      Configuration configuration0 = meecrowaveLog4j2ConfigurationFactory0.getConfiguration(loggerContext0, configurationSource0);
      assertFalse(configuration0.isStopped());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MeecrowaveLog4j2ConfigurationFactory meecrowaveLog4j2ConfigurationFactory0 = new MeecrowaveLog4j2ConfigurationFactory();
      String[] stringArray0 = meecrowaveLog4j2ConfigurationFactory0.getSupportedTypes();
      assertEquals(3, stringArray0.length);
  }
}
