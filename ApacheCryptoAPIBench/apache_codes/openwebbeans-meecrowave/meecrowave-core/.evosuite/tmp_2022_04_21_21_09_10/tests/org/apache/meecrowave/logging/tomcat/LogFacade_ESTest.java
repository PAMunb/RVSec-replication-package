/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:14:37 GMT 2022
 */

package org.apache.meecrowave.logging.tomcat;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.meecrowave.logging.tomcat.LogFacade;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LogFacade_ESTest extends LogFacade_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade();
      // Undeclared exception!
      try { 
        logFacade0.isWarnEnabled();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.logging.tomcat.LogFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade();
      // Undeclared exception!
      try { 
        logFacade0.isTraceEnabled();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.logging.tomcat.LogFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade();
      // Undeclared exception!
      try { 
        logFacade0.isInfoEnabled();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.logging.tomcat.LogFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade();
      // Undeclared exception!
      try { 
        logFacade0.isFatalEnabled();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.logging.tomcat.LogFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade();
      // Undeclared exception!
      try { 
        logFacade0.isErrorEnabled();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.logging.tomcat.LogFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade();
      // Undeclared exception!
      try { 
        logFacade0.isDebugEnabled();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.logging.tomcat.LogFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade();
      // Undeclared exception!
      try { 
        logFacade0.info((Object) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.logging.tomcat.LogFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade();
      Throwable throwable0 = mock(Throwable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        logFacade0.fatal((Object) null, throwable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.logging.tomcat.LogFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade();
      // Undeclared exception!
      try { 
        logFacade0.fatal((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.logging.tomcat.LogFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade();
      // Undeclared exception!
      try { 
        logFacade0.error((Object) "[''hD[**8 8;[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.logging.tomcat.LogFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("7u\"O<b|xNG");
      LogFacade logFacade1 = new LogFacade();
      // Undeclared exception!
      try { 
        logFacade1.debug((Object) logFacade0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.logging.tomcat.LogFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LogFacade logFacade0 = null;
      try {
        logFacade0 = new LogFacade((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.isErrorEnabled();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("DT!X=u=");
      logFacade0.fatal((Object) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.debug((Object) null);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.isWarnEnabled();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.error((Object) null, (Throwable) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.isDebugEnabled();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade();
      Throwable throwable0 = mock(Throwable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        logFacade0.debug((Object) "\"Xa4", throwable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.logging.tomcat.LogFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.isFatalEnabled();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.warn((Object) "");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.info((Object) "", (Throwable) null);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.trace((Object) "");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.isTraceEnabled();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.error((Object) null);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.isInfoEnabled();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.warn((Object) null, (Throwable) null);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.trace((Object) null, (Throwable) null);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.fatal((Object) null, (Throwable) null);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("");
      logFacade0.debug((Object) null, (Throwable) null);
      assertFalse(logFacade0.isTraceEnabled());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LogFacade logFacade0 = new LogFacade("z6\".0]^jO1D4^7}R>");
      logFacade0.info((Object) "z6\".0]^jO1D4^7}R>");
      assertFalse(logFacade0.isDebugEnabled());
  }
}
