/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:15:26 GMT 2022
 */

package org.apache.meecrowave.logging.openwebbeans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.logging.Logger;
import org.apache.meecrowave.logging.openwebbeans.Log4j2LoggerFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Log4j2LoggerFactory_ESTest extends Log4j2LoggerFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Log4j2LoggerFactory log4j2LoggerFactory0 = new Log4j2LoggerFactory();
      Class<Integer> class0 = Integer.class;
      Locale locale0 = Locale.US;
      // Undeclared exception!
      try { 
        log4j2LoggerFactory0.getLogger(class0, locale0);
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find java.util.PropertyResourceBundle@0000000002 bundle
         //
         verifyException("java.util.logging.Logger", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Log4j2LoggerFactory log4j2LoggerFactory0 = new Log4j2LoggerFactory();
      Class<Integer> class0 = Integer.class;
      Logger logger0 = log4j2LoggerFactory0.getLogger(class0);
      assertEquals("java.lang.Integer", logger0.getName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Log4j2LoggerFactory log4j2LoggerFactory0 = new Log4j2LoggerFactory();
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        log4j2LoggerFactory0.getLogger(class0, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }
}
