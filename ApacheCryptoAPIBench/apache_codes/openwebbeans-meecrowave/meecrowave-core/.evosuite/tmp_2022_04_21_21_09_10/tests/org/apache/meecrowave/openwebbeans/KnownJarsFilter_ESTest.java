/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:12:54 GMT 2022
 */

package org.apache.meecrowave.openwebbeans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.meecrowave.Meecrowave;
import org.apache.meecrowave.openwebbeans.KnownJarsFilter;
import org.apache.tomcat.JarScanType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KnownJarsFilter_ESTest extends KnownJarsFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Meecrowave.Builder meecrowave_Builder0 = mock(Meecrowave.Builder.class, new ViolatedAssumptionAnswer());
      doReturn("agwFl").when(meecrowave_Builder0).getScanningExcludes();
      doReturn("agwFl").when(meecrowave_Builder0).getScanningIncludes();
      KnownJarsFilter knownJarsFilter0 = new KnownJarsFilter(meecrowave_Builder0);
      JarScanType jarScanType0 = JarScanType.TLD;
      // Undeclared exception!
      try { 
        knownJarsFilter0.check(jarScanType0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.openwebbeans.KnownJarsFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KnownJarsFilter knownJarsFilter0 = null;
      try {
        knownJarsFilter0 = new KnownJarsFilter((Meecrowave.Builder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.openwebbeans.KnownJarsFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Meecrowave.Builder meecrowave_Builder0 = mock(Meecrowave.Builder.class, new ViolatedAssumptionAnswer());
      doReturn("agwFl").when(meecrowave_Builder0).getScanningExcludes();
      doReturn("agwFl").when(meecrowave_Builder0).getScanningIncludes();
      KnownJarsFilter knownJarsFilter0 = new KnownJarsFilter(meecrowave_Builder0);
      JarScanType jarScanType0 = JarScanType.TLD;
      boolean boolean0 = knownJarsFilter0.check(jarScanType0, "bcprov-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Meecrowave.Builder meecrowave_Builder0 = mock(Meecrowave.Builder.class, new ViolatedAssumptionAnswer());
      doReturn("agwFl").when(meecrowave_Builder0).getScanningExcludes();
      doReturn("agwFl").when(meecrowave_Builder0).getScanningIncludes();
      KnownJarsFilter knownJarsFilter0 = new KnownJarsFilter(meecrowave_Builder0);
      JarScanType jarScanType0 = JarScanType.TLD;
      boolean boolean0 = knownJarsFilter0.check(jarScanType0, " *, *");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Meecrowave.Builder meecrowave_Builder0 = mock(Meecrowave.Builder.class, new ViolatedAssumptionAnswer());
      doReturn("").when(meecrowave_Builder0).getScanningExcludes();
      doReturn("").when(meecrowave_Builder0).getScanningIncludes();
      KnownJarsFilter knownJarsFilter0 = new KnownJarsFilter(meecrowave_Builder0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Meecrowave.Builder meecrowave_Builder0 = mock(Meecrowave.Builder.class, new ViolatedAssumptionAnswer());
      doReturn("agwFl").when(meecrowave_Builder0).getScanningExcludes();
      doReturn("agwFl").when(meecrowave_Builder0).getScanningIncludes();
      KnownJarsFilter knownJarsFilter0 = new KnownJarsFilter(meecrowave_Builder0);
      JarScanType jarScanType0 = JarScanType.TLD;
      boolean boolean0 = knownJarsFilter0.check(jarScanType0, "agwFl");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      KnownJarsFilter knownJarsFilter0 = new KnownJarsFilter();
  }
}
