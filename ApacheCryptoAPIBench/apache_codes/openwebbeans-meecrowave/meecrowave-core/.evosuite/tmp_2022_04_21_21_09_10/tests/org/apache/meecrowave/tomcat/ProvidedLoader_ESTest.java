/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:14:10 GMT 2022
 */

package org.apache.meecrowave.tomcat;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.swing.plaf.synth.SynthScrollPaneUI;
import javax.swing.plaf.synth.SynthViewportUI;
import org.apache.catalina.Context;
import org.apache.catalina.LifecycleState;
import org.apache.catalina.core.StandardContext;
import org.apache.catalina.core.StandardEngine;
import org.apache.catalina.core.StandardService;
import org.apache.catalina.loader.ParallelWebappClassLoader;
import org.apache.catalina.startup.FailedContext;
import org.apache.meecrowave.tomcat.ProvidedLoader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProvidedLoader_ESTest extends ProvidedLoader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProvidedLoader providedLoader0 = new ProvidedLoader((ClassLoader) null, true);
      assertTrue(providedLoader0.getThrowOnFailure());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FailedContext failedContext0 = new FailedContext();
      ProvidedLoader providedLoader0 = new ProvidedLoader((ClassLoader) null, false);
      providedLoader0.setContext(failedContext0);
      Context context0 = providedLoader0.getContext();
      assertNull(context0.getPublicId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardService standardService0 = new StandardService();
      ClassLoader classLoader0 = standardService0.getParentClassLoader();
      ProvidedLoader providedLoader0 = new ProvidedLoader(classLoader0, true);
      ProvidedLoader.TomcatSettersClassLoader providedLoader_TomcatSettersClassLoader0 = (ProvidedLoader.TomcatSettersClassLoader)providedLoader0.getClassLoader();
      providedLoader_TomcatSettersClassLoader0.setClearReferencesStopThreads(false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardEngine standardEngine0 = new StandardEngine();
      ClassLoader classLoader0 = standardEngine0.getParentClassLoader();
      ProvidedLoader providedLoader0 = new ProvidedLoader(classLoader0, false);
      providedLoader0.destroyInternal();
      assertFalse(providedLoader0.modified());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardEngine standardEngine0 = new StandardEngine();
      ClassLoader classLoader0 = standardEngine0.getParentClassLoader();
      ProvidedLoader providedLoader0 = new ProvidedLoader(classLoader0, true);
      try { 
        providedLoader0.stopInternal();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // An invalid Lifecycle transition was attempted ([STOPPING]) for component [org.apache.meecrowave.tomcat.ProvidedLoader@0000000004] in state [NEW]
         //
         verifyException("org.apache.catalina.util.LifecycleBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParallelWebappClassLoader parallelWebappClassLoader0 = new ParallelWebappClassLoader();
      ProvidedLoader providedLoader0 = new ProvidedLoader(parallelWebappClassLoader0, false);
      providedLoader0.setReloadable(true);
      assertFalse(providedLoader0.getDelegate());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProvidedLoader providedLoader0 = new ProvidedLoader((ClassLoader) null, false);
      SynthScrollPaneUI synthScrollPaneUI0 = new SynthScrollPaneUI();
      providedLoader0.removePropertyChangeListener(synthScrollPaneUI0);
      assertFalse(providedLoader0.getReloadable());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardEngine standardEngine0 = new StandardEngine();
      ClassLoader classLoader0 = standardEngine0.getParentClassLoader();
      ProvidedLoader providedLoader0 = new ProvidedLoader(classLoader0, true);
      boolean boolean0 = providedLoader0.modified();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProvidedLoader providedLoader0 = new ProvidedLoader((ClassLoader) null, false);
      providedLoader0.initInternal();
      assertTrue(providedLoader0.getThrowOnFailure());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParallelWebappClassLoader parallelWebappClassLoader0 = new ParallelWebappClassLoader();
      ProvidedLoader providedLoader0 = new ProvidedLoader(parallelWebappClassLoader0, false);
      SynthViewportUI synthViewportUI0 = new SynthViewportUI();
      providedLoader0.addPropertyChangeListener(synthViewportUI0);
      assertFalse(providedLoader0.modified());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardEngine standardEngine0 = new StandardEngine();
      ClassLoader classLoader0 = standardEngine0.getParentClassLoader();
      ProvidedLoader providedLoader0 = new ProvidedLoader(classLoader0, true);
      providedLoader0.backgroundProcess();
      assertEquals(LifecycleState.NEW, providedLoader0.getState());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParallelWebappClassLoader parallelWebappClassLoader0 = new ParallelWebappClassLoader();
      ProvidedLoader providedLoader0 = new ProvidedLoader(parallelWebappClassLoader0, false);
      boolean boolean0 = providedLoader0.getDelegate();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardService standardService0 = new StandardService();
      ClassLoader classLoader0 = standardService0.getParentClassLoader();
      ProvidedLoader providedLoader0 = new ProvidedLoader(classLoader0, true);
      boolean boolean0 = providedLoader0.getReloadable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardContext standardContext0 = new StandardContext();
      ClassLoader classLoader0 = standardContext0.getParentClassLoader();
      ProvidedLoader providedLoader0 = new ProvidedLoader(classLoader0, false);
      providedLoader0.setDelegate(false);
      assertFalse(providedLoader0.getDelegate());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProvidedLoader providedLoader0 = new ProvidedLoader((ClassLoader) null, false);
      Context context0 = providedLoader0.getContext();
      assertNull(context0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParallelWebappClassLoader parallelWebappClassLoader0 = new ParallelWebappClassLoader();
      ProvidedLoader providedLoader0 = new ProvidedLoader(parallelWebappClassLoader0, false);
      try { 
        providedLoader0.startInternal();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // An invalid Lifecycle transition was attempted ([STARTING]) for component [org.apache.meecrowave.tomcat.ProvidedLoader@0000000002] in state [NEW]
         //
         verifyException("org.apache.catalina.util.LifecycleBase", e);
      }
  }
}
