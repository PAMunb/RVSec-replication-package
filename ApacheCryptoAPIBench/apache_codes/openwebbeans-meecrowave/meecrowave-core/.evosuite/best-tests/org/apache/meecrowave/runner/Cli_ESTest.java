/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:13:22 GMT 2022
 */

package org.apache.meecrowave.runner;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.cli.CommandLine;
import org.apache.meecrowave.Meecrowave;
import org.apache.meecrowave.runner.Cli;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Cli_ESTest extends Cli_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        Cli.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        Cli.create(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Cli cli0 = new Cli((String[]) null);
      assertNotNull(cli0);
      
      cli0.run();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Cli cli0 = new Cli((String[]) null);
      assertNotNull(cli0);
      
      Meecrowave.Builder meecrowave_Builder0 = Cli.create((String[]) null);
      assertNull(meecrowave_Builder0.getScanningPackageExcludes());
      assertEquals("/*", meecrowave_Builder0.getJaxrsMapping());
      assertTrue(meecrowave_Builder0.isQuickSession());
      assertTrue(meecrowave_Builder0.isUseTomcatDefaults());
      assertTrue(meecrowave_Builder0.isJaxrsProviderSetup());
      assertEquals("http", meecrowave_Builder0.getActiveProtocol());
      assertTrue(meecrowave_Builder0.isTomcatNoJmx());
      assertTrue(meecrowave_Builder0.isLoggingGlobalSetup());
      assertEquals("UTF-8", meecrowave_Builder0.getJsonbEncoding());
      assertNull(meecrowave_Builder0.getTomcatFilter());
      assertTrue(meecrowave_Builder0.isWebResourceCached());
      assertEquals((-1), meecrowave_Builder0.getStopPort());
      assertTrue(meecrowave_Builder0.isJaxrsAutoActivateBeanValidation());
      assertNull(meecrowave_Builder0.getKeystorePass());
      assertNull(meecrowave_Builder0.getScanningPackageIncludes());
      assertNull(meecrowave_Builder0.getScanningIncludes());
      assertNull(meecrowave_Builder0.getConf());
      assertEquals(500, meecrowave_Builder0.getWatcherBouncing());
      assertNull(meecrowave_Builder0.getSharedLibraries());
      assertNull(meecrowave_Builder0.getKeyAlias());
      assertFalse(meecrowave_Builder0.isTomcatWrapLoader());
      assertEquals("localhost", meecrowave_Builder0.getHost());
      assertFalse(meecrowave_Builder0.isJsonbPrettify());
      assertEquals(8080, meecrowave_Builder0.getActivePort());
      assertTrue(meecrowave_Builder0.isDeleteBaseOnStartup());
      assertEquals(65536, meecrowave_Builder0.getJsonpMaxWriteBufferLen());
      assertNull(meecrowave_Builder0.getScanningExcludes());
      assertFalse(meecrowave_Builder0.isJsonpSupportsComment());
      assertTrue(meecrowave_Builder0.isTomcatAutoSetup());
      assertNull(meecrowave_Builder0.getTomcatAccessLogPattern());
      assertFalse(meecrowave_Builder0.isSkipHttp());
      assertNull(meecrowave_Builder0.getWebXml());
      assertNull(meecrowave_Builder0.getJsonbOrderStrategy());
      assertFalse(meecrowave_Builder0.isJsonbIJson());
      assertTrue(meecrowave_Builder0.isInjectServletContainerInitializer());
      assertNull(meecrowave_Builder0.getJsonbNamingStrategy());
      assertTrue(meecrowave_Builder0.isTomcatScanning());
      assertNull(meecrowave_Builder0.getSslProtocol());
      assertFalse(meecrowave_Builder0.isCdiConversation());
      assertTrue(meecrowave_Builder0.isJaxwsSupportIfAvailable());
      assertFalse(meecrowave_Builder0.isJaxrsLogProviders());
      assertTrue(meecrowave_Builder0.isUseShutdownHook());
      assertEquals("meecrowave.properties", meecrowave_Builder0.getMeecrowaveProperties());
      assertEquals(65536, meecrowave_Builder0.getJsonpMaxStringLen());
      assertNull(meecrowave_Builder0.getJaxrsDefaultProviders());
      assertFalse(meecrowave_Builder0.isJsonpPrettify());
      assertFalse(meecrowave_Builder0.isHttp2());
      assertEquals(8443, meecrowave_Builder0.getHttpsPort());
      assertNull(meecrowave_Builder0.getClientAuth());
      assertFalse(meecrowave_Builder0.isSsl());
      assertEquals(8080, meecrowave_Builder0.getHttpPort());
      assertEquals("QUEUE", meecrowave_Builder0.getJsonpBufferStrategy());
      assertFalse(meecrowave_Builder0.isKeepServerXmlAsThis());
      assertNull(meecrowave_Builder0.getDir());
      assertNull(meecrowave_Builder0.getJsonbBinaryStrategy());
      assertFalse(meecrowave_Builder0.isJsonbNulls());
      assertEquals(65536, meecrowave_Builder0.getJsonpMaxReadBufferLen());
      assertEquals("/tmp", meecrowave_Builder0.getTempDir());
      assertNull(meecrowave_Builder0.getKeystoreFile());
      assertTrue(meecrowave_Builder0.isUseLog4j2JulLogManager());
      assertEquals("JKS", meecrowave_Builder0.getKeystoreType());
      assertNotNull(meecrowave_Builder0);
      
      Meecrowave meecrowave0 = new Meecrowave(meecrowave_Builder0);
      assertNull(meecrowave_Builder0.getScanningPackageExcludes());
      assertEquals("/*", meecrowave_Builder0.getJaxrsMapping());
      assertTrue(meecrowave_Builder0.isQuickSession());
      assertTrue(meecrowave_Builder0.isUseTomcatDefaults());
      assertTrue(meecrowave_Builder0.isJaxrsProviderSetup());
      assertEquals("http", meecrowave_Builder0.getActiveProtocol());
      assertTrue(meecrowave_Builder0.isTomcatNoJmx());
      assertTrue(meecrowave_Builder0.isLoggingGlobalSetup());
      assertEquals("UTF-8", meecrowave_Builder0.getJsonbEncoding());
      assertNull(meecrowave_Builder0.getTomcatFilter());
      assertTrue(meecrowave_Builder0.isWebResourceCached());
      assertEquals((-1), meecrowave_Builder0.getStopPort());
      assertTrue(meecrowave_Builder0.isJaxrsAutoActivateBeanValidation());
      assertNull(meecrowave_Builder0.getKeystorePass());
      assertNull(meecrowave_Builder0.getScanningPackageIncludes());
      assertNull(meecrowave_Builder0.getScanningIncludes());
      assertNull(meecrowave_Builder0.getConf());
      assertEquals(500, meecrowave_Builder0.getWatcherBouncing());
      assertNull(meecrowave_Builder0.getSharedLibraries());
      assertNull(meecrowave_Builder0.getKeyAlias());
      assertFalse(meecrowave_Builder0.isTomcatWrapLoader());
      assertEquals("localhost", meecrowave_Builder0.getHost());
      assertFalse(meecrowave_Builder0.isJsonbPrettify());
      assertEquals(8080, meecrowave_Builder0.getActivePort());
      assertTrue(meecrowave_Builder0.isDeleteBaseOnStartup());
      assertEquals(65536, meecrowave_Builder0.getJsonpMaxWriteBufferLen());
      assertNull(meecrowave_Builder0.getScanningExcludes());
      assertFalse(meecrowave_Builder0.isJsonpSupportsComment());
      assertTrue(meecrowave_Builder0.isTomcatAutoSetup());
      assertNull(meecrowave_Builder0.getTomcatAccessLogPattern());
      assertFalse(meecrowave_Builder0.isSkipHttp());
      assertNull(meecrowave_Builder0.getWebXml());
      assertNull(meecrowave_Builder0.getJsonbOrderStrategy());
      assertFalse(meecrowave_Builder0.isJsonbIJson());
      assertTrue(meecrowave_Builder0.isInjectServletContainerInitializer());
      assertNull(meecrowave_Builder0.getJsonbNamingStrategy());
      assertTrue(meecrowave_Builder0.isTomcatScanning());
      assertNull(meecrowave_Builder0.getSslProtocol());
      assertFalse(meecrowave_Builder0.isCdiConversation());
      assertTrue(meecrowave_Builder0.isJaxwsSupportIfAvailable());
      assertFalse(meecrowave_Builder0.isJaxrsLogProviders());
      assertTrue(meecrowave_Builder0.isUseShutdownHook());
      assertEquals("meecrowave.properties", meecrowave_Builder0.getMeecrowaveProperties());
      assertEquals(65536, meecrowave_Builder0.getJsonpMaxStringLen());
      assertNull(meecrowave_Builder0.getJaxrsDefaultProviders());
      assertFalse(meecrowave_Builder0.isJsonpPrettify());
      assertFalse(meecrowave_Builder0.isHttp2());
      assertEquals(8443, meecrowave_Builder0.getHttpsPort());
      assertNull(meecrowave_Builder0.getClientAuth());
      assertFalse(meecrowave_Builder0.isSsl());
      assertEquals(8080, meecrowave_Builder0.getHttpPort());
      assertEquals("QUEUE", meecrowave_Builder0.getJsonpBufferStrategy());
      assertFalse(meecrowave_Builder0.isKeepServerXmlAsThis());
      assertNull(meecrowave_Builder0.getDir());
      assertNull(meecrowave_Builder0.getJsonbBinaryStrategy());
      assertFalse(meecrowave_Builder0.isJsonbNulls());
      assertEquals(65536, meecrowave_Builder0.getJsonpMaxReadBufferLen());
      assertEquals("/tmp", meecrowave_Builder0.getTempDir());
      assertNull(meecrowave_Builder0.getKeystoreFile());
      assertTrue(meecrowave_Builder0.isUseLog4j2JulLogManager());
      assertEquals("JKS", meecrowave_Builder0.getKeystoreType());
      assertNotNull(meecrowave0);
      
      // Undeclared exception!
      try { 
        cli0.doWait(meecrowave0, (CommandLine) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.meecrowave.runner.Cli", e);
      }
  }
}
