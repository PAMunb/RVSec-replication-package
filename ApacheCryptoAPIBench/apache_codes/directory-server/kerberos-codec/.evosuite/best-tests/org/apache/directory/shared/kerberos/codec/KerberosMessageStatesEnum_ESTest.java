/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:59:37 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.KerberosMessageContainer;
import org.apache.directory.shared.kerberos.codec.KerberosMessageGrammar;
import org.apache.directory.shared.kerberos.codec.KerberosMessageStatesEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KerberosMessageStatesEnum_ESTest extends KerberosMessageStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KerberosMessageStatesEnum kerberosMessageStatesEnum0 = KerberosMessageStatesEnum.TGS_REP_TAG_STATE;
      String string0 = kerberosMessageStatesEnum0.getState(48);
      assertEquals("TGS_REP_TAG_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KerberosMessageStatesEnum[] kerberosMessageStatesEnumArray0 = KerberosMessageStatesEnum.values();
      assertEquals(12, kerberosMessageStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KerberosMessageStatesEnum kerberosMessageStatesEnum0 = KerberosMessageStatesEnum.valueOf("LAST_KERBEROS_MESSAGE_STATE");
      assertTrue(kerberosMessageStatesEnum0.isEndState());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KerberosMessageStatesEnum kerberosMessageStatesEnum0 = KerberosMessageStatesEnum.valueOf("KRB_ERROR_STATE");
      assertEquals(KerberosMessageStatesEnum.KRB_ERROR_STATE, kerberosMessageStatesEnum0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KerberosMessageStatesEnum kerberosMessageStatesEnum0 = KerberosMessageStatesEnum.LAST_KERBEROS_MESSAGE_STATE;
      boolean boolean0 = kerberosMessageStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KerberosMessageStatesEnum kerberosMessageStatesEnum0 = KerberosMessageStatesEnum.START_STATE;
      boolean boolean0 = kerberosMessageStatesEnum0.isEndState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KerberosMessageStatesEnum kerberosMessageStatesEnum0 = KerberosMessageStatesEnum.TGS_REP_TAG_STATE;
      String string0 = kerberosMessageStatesEnum0.getState(11);
      assertEquals("KERBEROS_MESSAGE_END_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KerberosMessageStatesEnum kerberosMessageStatesEnum0 = KerberosMessageStatesEnum.START_STATE;
      String string0 = kerberosMessageStatesEnum0.getState(0);
      assertEquals("START_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KerberosMessageStatesEnum kerberosMessageStatesEnum0 = KerberosMessageStatesEnum.AP_REP_TAG_STATE;
      Grammar<KerberosMessageContainer> grammar0 = KerberosMessageGrammar.getInstance();
      String string0 = kerberosMessageStatesEnum0.getGrammarName(grammar0);
      assertEquals("KERBEROS_MESSAGE_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KerberosMessageStatesEnum kerberosMessageStatesEnum0 = KerberosMessageStatesEnum.AS_REQ_STATE;
      String string0 = kerberosMessageStatesEnum0.getGrammarName((Grammar<KerberosMessageContainer>) null);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KerberosMessageStatesEnum kerberosMessageStatesEnum0 = KerberosMessageStatesEnum.TGS_REP_TAG_STATE;
      KerberosMessageStatesEnum kerberosMessageStatesEnum1 = kerberosMessageStatesEnum0.getStartState();
      assertEquals(KerberosMessageStatesEnum.START_STATE, kerberosMessageStatesEnum1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KerberosMessageStatesEnum kerberosMessageStatesEnum0 = KerberosMessageStatesEnum.AP_REP_TAG_STATE;
      String string0 = kerberosMessageStatesEnum0.getGrammarName(128);
      assertEquals("KERBEROS_MESSAGE_GRAMMAR", string0);
  }
}
