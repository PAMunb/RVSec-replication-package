/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:32:06 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.types;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.shared.kerberos.codec.types.PaDataType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PaDataType_ESTest extends PaDataType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PaDataType[] paDataTypeArray0 = PaDataType.values();
      assertEquals(19, paDataTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.valueOf("NULL");
      assertEquals(PaDataType.NULL, paDataType0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(10);
      int int0 = paDataType0.getValue();
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(428);
      String string0 = paDataType0.toString();
      assertEquals("null(0)", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.PA_GET_FROM_TYPED_DATA;
      String string0 = paDataType0.toString();
      assertEquals("Get from typed data(22)", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.SAM_REDIRECT;
      String string0 = paDataType0.toString();
      assertEquals("SAM redirect.(21)", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.PA_PK_AS_REP;
      String string0 = paDataType0.toString();
      assertEquals("PK as response(15)", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.valueOf("PA_ENCTYPE_INFO2");
      String string0 = paDataType0.toString();
      assertEquals("Encryption info.(19)", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.PA_PK_AS_REQ;
      String string0 = paDataType0.toString();
      assertEquals("PK as request(14)", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.SAM_RESPONSE;
      String string0 = paDataType0.toString();
      assertEquals("SAM response.(13)", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.SAM_CHALLENGE;
      String string0 = paDataType0.toString();
      assertEquals("SAM challenge.(12)", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.PA_CYBERSAFE_SECUREID;
      String string0 = paDataType0.toString();
      assertEquals("cybersafe secureid(9)", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.PA_OSF_DCE;
      String string0 = paDataType0.toString();
      assertEquals("OSF DCE(8)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.PA_SESAME;
      String string0 = paDataType0.toString();
      assertEquals("sesame(7)", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.PA_SANDIA_SECUREID;
      String string0 = paDataType0.toString();
      assertEquals("sandia secureid(6)", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.PA_ENC_UNIX_TIME;
      String string0 = paDataType0.toString();
      assertEquals("enc unix time(5)", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.PA_PW_SALT;
      String string0 = paDataType0.toString();
      assertEquals("password salt(3)", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.PA_ENC_TIMESTAMP;
      String string0 = paDataType0.toString();
      assertEquals("Encrypted timestamp.(2)", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.PA_ENCTYPE_INFO;
      String string0 = paDataType0.toString();
      assertEquals("Encryption info.(11)", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.PA_TGS_REQ;
      String string0 = paDataType0.toString();
      assertEquals("TGS request.(1)", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(22);
      assertEquals(PaDataType.PA_GET_FROM_TYPED_DATA, paDataType0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(21);
      assertEquals(PaDataType.SAM_REDIRECT, paDataType0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(20);
      String string0 = paDataType0.toString();
      assertEquals("use specified key version(20)", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(19);
      assertEquals(PaDataType.PA_ENCTYPE_INFO2, paDataType0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(18);
      assertEquals(PaDataType.NULL, paDataType0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(17);
      assertEquals(PaDataType.NULL, paDataType0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(15);
      assertEquals(PaDataType.PA_PK_AS_REQ, paDataType0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(14);
      assertEquals(PaDataType.PA_PK_AS_REQ, paDataType0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(13);
      assertEquals(PaDataType.SAM_RESPONSE, paDataType0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(12);
      assertEquals(PaDataType.SAM_CHALLENGE, paDataType0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(11);
      assertEquals(PaDataType.PA_ENCTYPE_INFO, paDataType0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(10);
      String string0 = paDataType0.toString();
      assertEquals("ASF3 salt(10)", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(9);
      assertEquals(PaDataType.PA_CYBERSAFE_SECUREID, paDataType0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(8);
      assertEquals(PaDataType.PA_OSF_DCE, paDataType0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(7);
      assertEquals(PaDataType.PA_SESAME, paDataType0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(6);
      assertEquals(PaDataType.PA_SANDIA_SECUREID, paDataType0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(5);
      assertEquals(PaDataType.PA_ENC_UNIX_TIME, paDataType0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(4);
      assertEquals(PaDataType.NULL, paDataType0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(3);
      assertEquals(PaDataType.PA_PW_SALT, paDataType0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(2);
      assertEquals(PaDataType.PA_ENC_TIMESTAMP, paDataType0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(1);
      assertEquals(PaDataType.PA_TGS_REQ, paDataType0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PaDataType paDataType0 = PaDataType.getTypeByValue(16);
      int int0 = paDataType0.getValue();
      assertEquals(0, int0);
  }
}
