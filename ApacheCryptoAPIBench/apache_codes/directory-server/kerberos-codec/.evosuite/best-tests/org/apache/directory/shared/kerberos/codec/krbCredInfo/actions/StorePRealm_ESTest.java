/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:30:17 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.krbCredInfo.actions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.directory.shared.kerberos.codec.krbCredInfo.KrbCredInfoContainer;
import org.apache.directory.shared.kerberos.codec.krbCredInfo.actions.StorePRealm;
import org.apache.directory.shared.kerberos.components.KrbCredInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StorePRealm_ESTest extends StorePRealm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StorePRealm storePRealm0 = new StorePRealm();
      KrbCredInfoContainer krbCredInfoContainer0 = mock(KrbCredInfoContainer.class, new ViolatedAssumptionAnswer());
      doReturn((KrbCredInfo) null).when(krbCredInfoContainer0).getKrbCredInfo();
      // Undeclared exception!
      try { 
        storePRealm0.setRealm("Du[%Z(", krbCredInfoContainer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.krbCredInfo.actions.StorePRealm", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StorePRealm storePRealm0 = new StorePRealm();
      KrbCredInfo krbCredInfo0 = mock(KrbCredInfo.class, new ViolatedAssumptionAnswer());
      KrbCredInfoContainer krbCredInfoContainer0 = mock(KrbCredInfoContainer.class, new ViolatedAssumptionAnswer());
      doReturn(krbCredInfo0).when(krbCredInfoContainer0).getKrbCredInfo();
      storePRealm0.setRealm((String) null, krbCredInfoContainer0);
      assertEquals("KrbCredInfo prealm value", storePRealm0.toString());
  }
}
