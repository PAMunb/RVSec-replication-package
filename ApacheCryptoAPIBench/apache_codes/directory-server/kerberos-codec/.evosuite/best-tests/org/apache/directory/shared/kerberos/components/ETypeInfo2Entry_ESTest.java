/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:49:47 GMT 2022
 */

package org.apache.directory.shared.kerberos.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.ReadOnlyBufferException;
import org.apache.directory.shared.kerberos.codec.types.EncryptionType;
import org.apache.directory.shared.kerberos.components.ETypeInfo2Entry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ETypeInfo2Entry_ESTest extends ETypeInfo2Entry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EncryptionType encryptionType0 = EncryptionType.SUBKEY_KEYMATERIAL;
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry(encryptionType0);
      byte[] byteArray0 = new byte[6];
      eTypeInfo2Entry0.setS2kparams(byteArray0);
      int int0 = eTypeInfo2Entry0.computeLength();
      assertEquals(17, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      try { 
        eTypeInfo2Entry0.encode(byteBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_138 The PDU buffer size is too small !
         //
         verifyException("org.apache.directory.shared.kerberos.components.ETypeInfo2Entry", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EncryptionType encryptionType0 = EncryptionType.RSAENCRYPTION_ENVOID;
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      eTypeInfo2Entry0.setEType(encryptionType0);
      eTypeInfo2Entry0.setSalt("<;C!]!<|qE");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1749);
      eTypeInfo2Entry0.computeLength();
      eTypeInfo2Entry0.encode(byteBuffer0);
      assertEquals("java.nio.DirectByteBuffer[pos=21 lim=1749 cap=1749]", byteBuffer0.toString());
      assertEquals(1728, byteBuffer0.remaining());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      eTypeInfo2Entry0.setSalt("<;C!]!<|qE");
      String string0 = eTypeInfo2Entry0.getSalt();
      assertEquals("<;C!]!<|qE", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EncryptionType encryptionType0 = EncryptionType.RESERVED6;
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry(encryptionType0);
      eTypeInfo2Entry0.setSalt("");
      String string0 = eTypeInfo2Entry0.getSalt();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      byte[] byteArray0 = new byte[2];
      eTypeInfo2Entry0.setS2kparams(byteArray0);
      byte[] byteArray1 = eTypeInfo2Entry0.getS2kparams();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      byte[] byteArray0 = new byte[0];
      eTypeInfo2Entry0.setS2kparams(byteArray0);
      byte[] byteArray1 = eTypeInfo2Entry0.getS2kparams();
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      EncryptionType encryptionType0 = EncryptionType.NULL;
      eTypeInfo2Entry0.setEType(encryptionType0);
      EncryptionType encryptionType1 = eTypeInfo2Entry0.getEType();
      assertEquals(EncryptionType.NULL, encryptionType1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EncryptionType encryptionType0 = EncryptionType.RSAENCRYPTION_ENVOID;
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      eTypeInfo2Entry0.setEType(encryptionType0);
      EncryptionType encryptionType1 = eTypeInfo2Entry0.getEType();
      assertEquals("rsaEncryption-EnvOID", encryptionType1.getName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EncryptionType encryptionType0 = EncryptionType.RC4_MD4;
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry(encryptionType0);
      EncryptionType encryptionType1 = eTypeInfo2Entry0.getEType();
      assertSame(encryptionType1, encryptionType0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EncryptionType encryptionType0 = EncryptionType.RSAES_OAEP_ENV_OID;
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry(encryptionType0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(7);
      ByteBuffer byteBuffer1 = byteBuffer0.asReadOnlyBuffer();
      // Undeclared exception!
      try { 
        eTypeInfo2Entry0.encode(byteBuffer1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBufferR", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      // Undeclared exception!
      try { 
        eTypeInfo2Entry0.computeLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.ETypeInfo2Entry", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      eTypeInfo2Entry0.setSalt("<;C!]!<|qE");
      String string0 = eTypeInfo2Entry0.toString();
      assertEquals("ETYPE-INFO2-ENTRY : {\n    etype: null\n    salt: <;C!]!<|qE\n    s2kparams: \n}\n", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      String string0 = eTypeInfo2Entry0.toString();
      assertEquals("ETYPE-INFO2-ENTRY : {\n    etype: null\n}\n", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EncryptionType encryptionType0 = EncryptionType.AES128_CTS_HMAC_SHA1_96;
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry(encryptionType0);
      byte[] byteArray0 = new byte[0];
      eTypeInfo2Entry0.setS2kparams(byteArray0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(11);
      eTypeInfo2Entry0.encode(byteBuffer0);
      assertEquals(11, byteBuffer0.position());
      assertEquals("java.nio.DirectByteBuffer[pos=11 lim=11 cap=11]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EncryptionType encryptionType0 = EncryptionType.RSAENCRYPTION_ENVOID;
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      eTypeInfo2Entry0.setEType(encryptionType0);
      eTypeInfo2Entry0.setSalt("<;C!]!<|qE");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1749);
      // Undeclared exception!
      try { 
        eTypeInfo2Entry0.encode(byteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.ETypeInfo2Entry", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EncryptionType encryptionType0 = EncryptionType.SUBKEY_KEYMATERIAL;
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry(encryptionType0);
      try { 
        eTypeInfo2Entry0.encode((ByteBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_148 Cannot put a PDU in a null buffer !
         //
         verifyException("org.apache.directory.shared.kerberos.components.ETypeInfo2Entry", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      byte[] byteArray0 = eTypeInfo2Entry0.getS2kparams();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      eTypeInfo2Entry0.getEType();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ETypeInfo2Entry eTypeInfo2Entry0 = new ETypeInfo2Entry();
      String string0 = eTypeInfo2Entry0.getSalt();
      assertNull(string0);
  }
}
