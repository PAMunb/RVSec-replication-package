/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:57:00 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.asRep;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.asRep.AsRepContainer;
import org.apache.directory.shared.kerberos.codec.asRep.AsRepStatesEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AsRepStatesEnum_ESTest extends AsRepStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AsRepStatesEnum asRepStatesEnum0 = AsRepStatesEnum.LAST_AS_REP_STATE;
      String string0 = asRepStatesEnum0.getState(0);
      assertEquals("LAST_AS_REP_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AsRepStatesEnum[] asRepStatesEnumArray0 = AsRepStatesEnum.values();
      assertEquals(3, asRepStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AsRepStatesEnum asRepStatesEnum0 = AsRepStatesEnum.valueOf("LAST_AS_REP_STATE");
      assertEquals(AsRepStatesEnum.LAST_AS_REP_STATE, asRepStatesEnum0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AsRepStatesEnum asRepStatesEnum0 = AsRepStatesEnum.valueOf("START_STATE");
      assertEquals(AsRepStatesEnum.START_STATE, asRepStatesEnum0.getStartState());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AsRepStatesEnum asRepStatesEnum0 = AsRepStatesEnum.LAST_AS_REP_STATE;
      boolean boolean0 = asRepStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AsRepStatesEnum asRepStatesEnum0 = AsRepStatesEnum.AS_REP_STATE;
      boolean boolean0 = asRepStatesEnum0.isEndState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AsRepStatesEnum asRepStatesEnum0 = AsRepStatesEnum.LAST_AS_REP_STATE;
      String string0 = asRepStatesEnum0.getState(2);
      assertEquals("AS_REP_END_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AsRepStatesEnum asRepStatesEnum0 = AsRepStatesEnum.LAST_AS_REP_STATE;
      String string0 = asRepStatesEnum0.getState(517);
      assertEquals("LAST_AS_REP_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AsRepStatesEnum asRepStatesEnum0 = AsRepStatesEnum.LAST_AS_REP_STATE;
      Grammar<AsRepContainer> grammar0 = (Grammar<AsRepContainer>) mock(Grammar.class, new ViolatedAssumptionAnswer());
      String string0 = asRepStatesEnum0.getGrammarName(grammar0);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AsRepStatesEnum asRepStatesEnum0 = AsRepStatesEnum.LAST_AS_REP_STATE;
      String string0 = asRepStatesEnum0.getGrammarName(118);
      assertEquals("AS_REP_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AsRepStatesEnum asRepStatesEnum0 = AsRepStatesEnum.LAST_AS_REP_STATE;
      AsRepStatesEnum asRepStatesEnum1 = asRepStatesEnum0.getStartState();
      assertEquals(AsRepStatesEnum.START_STATE, asRepStatesEnum1);
  }
}
