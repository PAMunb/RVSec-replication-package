/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:57:45 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.krbSafeBody;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.krbSafeBody.KrbSafeBodyContainer;
import org.apache.directory.shared.kerberos.codec.krbSafeBody.KrbSafeBodyGrammar;
import org.apache.directory.shared.kerberos.codec.krbSafeBody.KrbSafeBodyStatesEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KrbSafeBodyStatesEnum_ESTest extends KrbSafeBodyStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KrbSafeBodyStatesEnum krbSafeBodyStatesEnum0 = KrbSafeBodyStatesEnum.KRB_SAFE_BODY_SEQ_NUMBER_STATE;
      String string0 = krbSafeBodyStatesEnum0.getState(5);
      assertEquals("KRB_SAFE_BODY_SEQ_NUMBER_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KrbSafeBodyStatesEnum[] krbSafeBodyStatesEnumArray0 = KrbSafeBodyStatesEnum.values();
      assertEquals(13, krbSafeBodyStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KrbSafeBodyStatesEnum krbSafeBodyStatesEnum0 = KrbSafeBodyStatesEnum.valueOf("LAST_KRB_SAFE_BODY_STATE");
      assertEquals(KrbSafeBodyStatesEnum.START_STATE, krbSafeBodyStatesEnum0.getStartState());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KrbSafeBodyStatesEnum krbSafeBodyStatesEnum0 = KrbSafeBodyStatesEnum.valueOf("KRB_SAFE_BODY_TIMESTAMP_TAG_STATE");
      assertEquals(KrbSafeBodyStatesEnum.KRB_SAFE_BODY_TIMESTAMP_TAG_STATE, krbSafeBodyStatesEnum0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KrbSafeBodyStatesEnum krbSafeBodyStatesEnum0 = KrbSafeBodyStatesEnum.LAST_KRB_SAFE_BODY_STATE;
      boolean boolean0 = krbSafeBodyStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KrbSafeBodyStatesEnum krbSafeBodyStatesEnum0 = KrbSafeBodyStatesEnum.KRB_SAFE_BODY_TIMESTAMP_TAG_STATE;
      boolean boolean0 = krbSafeBodyStatesEnum0.isEndState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KrbSafeBodyStatesEnum krbSafeBodyStatesEnum0 = KrbSafeBodyStatesEnum.KRB_SAFE_BODY_SEQ_TAG_STATE;
      String string0 = krbSafeBodyStatesEnum0.getState(12);
      assertEquals("LAST_KRB_SAFE_BODY_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KrbSafeBodyStatesEnum krbSafeBodyStatesEnum0 = KrbSafeBodyStatesEnum.LAST_KRB_SAFE_BODY_STATE;
      String string0 = krbSafeBodyStatesEnum0.getState(616);
      assertEquals("LAST_KRB_SAFE_BODY_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Grammar<KrbSafeBodyContainer> grammar0 = KrbSafeBodyGrammar.getInstance();
      KrbSafeBodyStatesEnum krbSafeBodyStatesEnum0 = KrbSafeBodyStatesEnum.KRB_SAFE_BODY_SEQ_NUMBER_STATE;
      String string0 = krbSafeBodyStatesEnum0.getGrammarName(grammar0);
      assertEquals("KRB_SAFE_BODY_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KrbSafeBodyStatesEnum krbSafeBodyStatesEnum0 = KrbSafeBodyStatesEnum.KRB_SAFE_BODY_USEC_STATE;
      String string0 = krbSafeBodyStatesEnum0.getGrammarName((Grammar<KrbSafeBodyContainer>) null);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KrbSafeBodyStatesEnum krbSafeBodyStatesEnum0 = KrbSafeBodyStatesEnum.KRB_SAFE_BODY_USEC_STATE;
      KrbSafeBodyStatesEnum krbSafeBodyStatesEnum1 = krbSafeBodyStatesEnum0.getStartState();
      assertEquals(KrbSafeBodyStatesEnum.START_STATE, krbSafeBodyStatesEnum1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KrbSafeBodyStatesEnum krbSafeBodyStatesEnum0 = KrbSafeBodyStatesEnum.KRB_SAFE_BODY_USEC_TAG_STATE;
      String string0 = krbSafeBodyStatesEnum0.getGrammarName((-496));
      assertEquals("KRB_SAFE_BODY_GRAMMAR", string0);
  }
}
