/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:35:42 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.ticket.actions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.directory.shared.kerberos.codec.ticket.TicketContainer;
import org.apache.directory.shared.kerberos.codec.ticket.actions.StoreSName;
import org.apache.directory.shared.kerberos.components.PrincipalName;
import org.apache.directory.shared.kerberos.messages.Ticket;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StoreSName_ESTest extends StoreSName_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StoreSName storeSName0 = new StoreSName();
      PrincipalName principalName0 = mock(PrincipalName.class, new ViolatedAssumptionAnswer());
      TicketContainer ticketContainer0 = mock(TicketContainer.class, new ViolatedAssumptionAnswer());
      doReturn((Ticket) null).when(ticketContainer0).getTicket();
      // Undeclared exception!
      try { 
        storeSName0.setPrincipalName(principalName0, ticketContainer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.ticket.actions.StoreSName", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StoreSName storeSName0 = new StoreSName();
      PrincipalName principalName0 = mock(PrincipalName.class, new ViolatedAssumptionAnswer());
      Ticket ticket0 = mock(Ticket.class, new ViolatedAssumptionAnswer());
      TicketContainer ticketContainer0 = mock(TicketContainer.class, new ViolatedAssumptionAnswer());
      doReturn(ticket0).when(ticketContainer0).getTicket();
      storeSName0.setPrincipalName(principalName0, ticketContainer0);
      assertEquals("Kerberos Ticket principalName", storeSName0.toString());
  }
}
