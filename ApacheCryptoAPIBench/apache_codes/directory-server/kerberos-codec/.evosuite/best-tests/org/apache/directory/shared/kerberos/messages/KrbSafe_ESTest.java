/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:54:33 GMT 2022
 */

package org.apache.directory.shared.kerberos.messages;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import org.apache.directory.shared.kerberos.KerberosMessageType;
import org.apache.directory.shared.kerberos.components.Checksum;
import org.apache.directory.shared.kerberos.components.KrbSafeBody;
import org.apache.directory.shared.kerberos.messages.KrbSafe;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KrbSafe_ESTest extends KrbSafe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KrbSafe krbSafe0 = new KrbSafe();
      String string0 = krbSafe0.toString();
      assertEquals("KRB-SAFE : {\n    pvno: 5\n    msgType: KRB_SAFE\n}\n", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KrbSafe krbSafe0 = new KrbSafe();
      try { 
        krbSafe0.encode((ByteBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_148 Cannot put a PDU in a null buffer !
         //
         verifyException("org.apache.directory.shared.kerberos.messages.KrbSafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KrbSafe krbSafe0 = new KrbSafe();
      ByteBuffer byteBuffer0 = mock(ByteBuffer.class, new ViolatedAssumptionAnswer());
      doReturn((ByteBuffer) null, (ByteBuffer) null, (ByteBuffer) null, (ByteBuffer) null, (ByteBuffer) null).when(byteBuffer0).put(any(byte.class));
      doReturn((ByteBuffer) null, (ByteBuffer) null, (ByteBuffer) null, (ByteBuffer) null, (ByteBuffer) null).when(byteBuffer0).put(any(byte[].class) , anyInt() , anyInt());
      // Undeclared exception!
      try { 
        krbSafe0.encode(byteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.messages.KrbSafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KrbSafe krbSafe0 = new KrbSafe();
      krbSafe0.setSafeBody((KrbSafeBody) null);
      assertEquals(KerberosMessageType.KRB_SAFE, krbSafe0.getMessageType());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KrbSafe krbSafe0 = new KrbSafe();
      krbSafe0.setChecksum((Checksum) null);
      assertEquals(KerberosMessageType.KRB_SAFE, krbSafe0.getMessageType());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      KrbSafe krbSafe0 = new KrbSafe();
      Checksum checksum0 = krbSafe0.getChecksum();
      assertNull(checksum0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      KrbSafe krbSafe0 = new KrbSafe();
      // Undeclared exception!
      try { 
        krbSafe0.computeLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.messages.KrbSafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      KrbSafe krbSafe0 = new KrbSafe();
      KrbSafeBody krbSafeBody0 = krbSafe0.getSafeBody();
      assertNull(krbSafeBody0);
  }
}
