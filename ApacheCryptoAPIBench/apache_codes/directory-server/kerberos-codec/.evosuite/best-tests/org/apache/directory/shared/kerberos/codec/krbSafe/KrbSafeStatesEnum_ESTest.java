/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:00:31 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.krbSafe;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.krbSafe.KrbSafeContainer;
import org.apache.directory.shared.kerberos.codec.krbSafe.KrbSafeStatesEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KrbSafeStatesEnum_ESTest extends KrbSafeStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KrbSafeStatesEnum krbSafeStatesEnum0 = KrbSafeStatesEnum.KRB_SAFE_PVNO_STATE;
      String string0 = krbSafeStatesEnum0.getState(5459);
      assertEquals("KRB_SAFE_PVNO_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KrbSafeStatesEnum[] krbSafeStatesEnumArray0 = KrbSafeStatesEnum.values();
      assertEquals(10, krbSafeStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KrbSafeStatesEnum krbSafeStatesEnum0 = KrbSafeStatesEnum.valueOf("LAST_KRB_SAFE_STATE");
      assertEquals(KrbSafeStatesEnum.START_STATE, krbSafeStatesEnum0.getStartState());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KrbSafeStatesEnum krbSafeStatesEnum0 = KrbSafeStatesEnum.valueOf("START_STATE");
      assertFalse(krbSafeStatesEnum0.isEndState());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KrbSafeStatesEnum krbSafeStatesEnum0 = KrbSafeStatesEnum.LAST_KRB_SAFE_STATE;
      boolean boolean0 = krbSafeStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      KrbSafeStatesEnum krbSafeStatesEnum0 = KrbSafeStatesEnum.START_STATE;
      String string0 = krbSafeStatesEnum0.getState(9);
      assertEquals("LAST_KRB_SAFE_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      KrbSafeStatesEnum krbSafeStatesEnum0 = KrbSafeStatesEnum.START_STATE;
      String string0 = krbSafeStatesEnum0.getState(0);
      assertEquals("START_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      KrbSafeStatesEnum krbSafeStatesEnum0 = KrbSafeStatesEnum.KRB_SAFE_SAFE_BODY_TAG_STATE;
      String string0 = krbSafeStatesEnum0.getGrammarName((Grammar<KrbSafeContainer>) null);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      KrbSafeStatesEnum krbSafeStatesEnum0 = KrbSafeStatesEnum.START_STATE;
      String string0 = krbSafeStatesEnum0.getGrammarName(0);
      assertEquals("KRB_SAFE_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      KrbSafeStatesEnum krbSafeStatesEnum0 = KrbSafeStatesEnum.KRB_SAFE_SEQ_STATE;
      KrbSafeStatesEnum krbSafeStatesEnum1 = krbSafeStatesEnum0.getStartState();
      assertEquals(KrbSafeStatesEnum.START_STATE, krbSafeStatesEnum1);
      
      boolean boolean0 = krbSafeStatesEnum1.isEndState();
      assertFalse(boolean0);
  }
}
