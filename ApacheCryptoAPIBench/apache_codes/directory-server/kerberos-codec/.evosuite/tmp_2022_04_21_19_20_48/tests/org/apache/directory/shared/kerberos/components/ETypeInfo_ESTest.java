/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:37:58 GMT 2022
 */

package org.apache.directory.shared.kerberos.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.ReadOnlyBufferException;
import org.apache.directory.shared.kerberos.codec.types.EncryptionType;
import org.apache.directory.shared.kerberos.components.ETypeInfo;
import org.apache.directory.shared.kerberos.components.ETypeInfoEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ETypeInfo_ESTest extends ETypeInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      EncryptionType encryptionType0 = EncryptionType.DSAWITHSHA1_CMSOID;
      byte[] byteArray0 = new byte[5];
      ETypeInfoEntry eTypeInfoEntry0 = new ETypeInfoEntry(encryptionType0, byteArray0);
      eTypeInfo0.addETypeInfoEntry(eTypeInfoEntry0);
      eTypeInfo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      try { 
        eTypeInfo0.encode(byteBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_138 The PDU buffer size is too small !
         //
         verifyException("org.apache.directory.shared.kerberos.components.ETypeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      String string0 = eTypeInfo0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      EncryptionType encryptionType0 = EncryptionType.DSAWITHSHA1_CMSOID;
      byte[] byteArray0 = new byte[5];
      ETypeInfoEntry eTypeInfoEntry0 = new ETypeInfoEntry(encryptionType0, byteArray0);
      eTypeInfo0.addETypeInfoEntry(eTypeInfoEntry0);
      ETypeInfoEntry[] eTypeInfoEntryArray0 = eTypeInfo0.getETypeInfoEntries();
      assertEquals(1, eTypeInfoEntryArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      eTypeInfo0.addETypeInfoEntry((ETypeInfoEntry) null);
      // Undeclared exception!
      try { 
        eTypeInfo0.equals(eTypeInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.ETypeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(865);
      ByteBuffer byteBuffer1 = byteBuffer0.asReadOnlyBuffer();
      // Undeclared exception!
      try { 
        eTypeInfo0.encode(byteBuffer1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBufferR", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      eTypeInfo0.addETypeInfoEntry((ETypeInfoEntry) null);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1106);
      // Undeclared exception!
      try { 
        eTypeInfo0.encode(byteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.ETypeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ETypeInfoEntry[] eTypeInfoEntryArray0 = new ETypeInfoEntry[0];
      ETypeInfo eTypeInfo0 = new ETypeInfo(eTypeInfoEntryArray0);
      ETypeInfoEntry eTypeInfoEntry0 = new ETypeInfoEntry();
      // Undeclared exception!
      try { 
        eTypeInfo0.addETypeInfoEntry(eTypeInfoEntry0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ETypeInfoEntry[] eTypeInfoEntryArray0 = new ETypeInfoEntry[2];
      ETypeInfoEntry eTypeInfoEntry0 = new ETypeInfoEntry();
      eTypeInfoEntryArray0[0] = eTypeInfoEntry0;
      eTypeInfoEntryArray0[1] = eTypeInfoEntryArray0[0];
      ETypeInfo eTypeInfo0 = new ETypeInfo(eTypeInfoEntryArray0);
      String string0 = eTypeInfo0.toString();
      assertEquals("ETYPE-INFO-ENTRY : {\n    etype: null\n}\n, ETYPE-INFO-ENTRY : {\n    etype: null\n}\n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      EncryptionType encryptionType0 = EncryptionType.RC4_HMAC_EXP;
      byte[] byteArray0 = new byte[0];
      ETypeInfoEntry eTypeInfoEntry0 = new ETypeInfoEntry(encryptionType0, byteArray0);
      eTypeInfo0.addETypeInfoEntry(eTypeInfoEntry0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2756);
      eTypeInfo0.encode(byteBuffer0);
      assertEquals(13, byteBuffer0.position());
      assertEquals("java.nio.HeapByteBuffer[pos=13 lim=2756 cap=2756]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      try { 
        eTypeInfo0.encode((ByteBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_148 Cannot put a PDU in a null buffer !
         //
         verifyException("org.apache.directory.shared.kerberos.components.ETypeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      byte[] byteArray0 = new byte[7];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      eTypeInfo0.encode(byteBuffer0);
      assertEquals("java.nio.HeapByteBuffer[pos=2 lim=7 cap=7]", byteBuffer0.toString());
      assertArrayEquals(new byte[] {(byte)48, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      ETypeInfoEntry eTypeInfoEntry0 = new ETypeInfoEntry();
      EncryptionType encryptionType0 = EncryptionType.DES3_CBC_SHA1;
      eTypeInfoEntry0.setEType(encryptionType0);
      eTypeInfo0.addETypeInfoEntry(eTypeInfoEntry0);
      eTypeInfo0.computeLength();
      byte[] byteArray0 = new byte[7];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      ByteBuffer byteBuffer1 = eTypeInfoEntry0.encode(byteBuffer0);
      try { 
        eTypeInfo0.encode(byteBuffer1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_138 The PDU buffer size is too small !
         //
         verifyException("org.apache.directory.shared.kerberos.components.ETypeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      ETypeInfoEntry eTypeInfoEntry0 = new ETypeInfoEntry();
      eTypeInfo0.addETypeInfoEntry(eTypeInfoEntry0);
      // Undeclared exception!
      try { 
        eTypeInfo0.computeLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.ETypeInfoEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      int int0 = eTypeInfo0.computeLength();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      ETypeInfoEntry[] eTypeInfoEntryArray0 = new ETypeInfoEntry[1];
      EncryptionType encryptionType0 = EncryptionType.UNKNOWN;
      byte[] byteArray0 = new byte[0];
      ETypeInfoEntry eTypeInfoEntry0 = new ETypeInfoEntry(encryptionType0, byteArray0);
      eTypeInfo0.addETypeInfoEntry(eTypeInfoEntry0);
      ETypeInfo eTypeInfo1 = new ETypeInfo(eTypeInfoEntryArray0);
      boolean boolean0 = eTypeInfo0.equals(eTypeInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      EncryptionType encryptionType0 = EncryptionType.UNKNOWN;
      byte[] byteArray0 = new byte[0];
      ETypeInfoEntry eTypeInfoEntry0 = new ETypeInfoEntry(encryptionType0, byteArray0);
      eTypeInfo0.addETypeInfoEntry(eTypeInfoEntry0);
      boolean boolean0 = eTypeInfo0.equals(eTypeInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      ETypeInfoEntry[] eTypeInfoEntryArray0 = new ETypeInfoEntry[1];
      ETypeInfo eTypeInfo1 = new ETypeInfo(eTypeInfoEntryArray0);
      boolean boolean0 = eTypeInfo0.equals(eTypeInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      boolean boolean0 = eTypeInfo0.equals((ETypeInfo) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      ETypeInfoEntry eTypeInfoEntry0 = new ETypeInfoEntry();
      boolean boolean0 = eTypeInfo0.contains(eTypeInfoEntry0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo((ETypeInfoEntry[]) null);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ETypeInfoEntry[] eTypeInfoEntryArray0 = new ETypeInfoEntry[1];
      ETypeInfo eTypeInfo0 = new ETypeInfo(eTypeInfoEntryArray0);
      // Undeclared exception!
      try { 
        eTypeInfo0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.ETypeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      ETypeInfoEntry eTypeInfoEntry0 = new ETypeInfoEntry();
      eTypeInfo0.addETypeInfoEntry(eTypeInfoEntry0);
      boolean boolean0 = eTypeInfo0.contains(eTypeInfoEntry0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ETypeInfo eTypeInfo0 = new ETypeInfo();
      ETypeInfoEntry[] eTypeInfoEntryArray0 = eTypeInfo0.getETypeInfoEntries();
      eTypeInfo0.addETypeInfoEntry((ETypeInfoEntry) null);
      ETypeInfo eTypeInfo1 = new ETypeInfo(eTypeInfoEntryArray0);
      assertEquals(0, eTypeInfoEntryArray0.length);
      
      boolean boolean0 = eTypeInfo0.equals(eTypeInfo1);
      assertFalse(boolean0);
  }
}
