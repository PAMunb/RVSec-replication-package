/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:33:21 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.shared.kerberos.codec.KerberosMessageContainer;
import org.apache.directory.shared.kerberos.components.PrincipalName;
import org.apache.directory.shared.kerberos.messages.KerberosMessage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KerberosMessageContainer_ESTest extends KerberosMessageContainer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      assertEquals((-1), kerberosMessageContainer0.getTcpLength());
      
      kerberosMessageContainer0.setTcpLength(0);
      int int0 = kerberosMessageContainer0.getTcpLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.setMessage((KerberosMessage) null);
      assertEquals((-1), kerberosMessageContainer0.getTcpLength());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.setTcpLength(2646);
      int int0 = kerberosMessageContainer0.getTcpLength();
      assertEquals(2646, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.setTCP(true);
      boolean boolean0 = kerberosMessageContainer0.isTCP();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.getPrincipalName();
      assertEquals((-1), kerberosMessageContainer0.getTcpLength());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.getTicket();
      assertEquals((-1), kerberosMessageContainer0.getTcpLength());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.setPrincipalName((PrincipalName) null);
      assertEquals((-1), kerberosMessageContainer0.getTcpLength());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.getMessage();
      assertEquals((-1), kerberosMessageContainer0.getTcpLength());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.isTCP();
      assertEquals((-1), kerberosMessageContainer0.getTcpLength());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      int int0 = kerberosMessageContainer0.getTcpLength();
      assertEquals((-1), int0);
  }
}
