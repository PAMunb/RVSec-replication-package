/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:04:24 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.kdcRep;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.kdcRep.KdcRepContainer;
import org.apache.directory.shared.kerberos.codec.kdcRep.KdcRepGrammar;
import org.apache.directory.shared.kerberos.codec.kdcRep.KdcRepStatesEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KdcRepStatesEnum_ESTest extends KdcRepStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KdcRepStatesEnum kdcRepStatesEnum0 = KdcRepStatesEnum.KDC_REP_ENC_PART_STATE;
      String string0 = kdcRepStatesEnum0.getState(57);
      assertEquals("KDC_REP_ENC_PART_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KdcRepStatesEnum[] kdcRepStatesEnumArray0 = KdcRepStatesEnum.values();
      assertEquals(14, kdcRepStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KdcRepStatesEnum kdcRepStatesEnum0 = KdcRepStatesEnum.valueOf("LAST_KDC_REP_STATE");
      assertEquals(KdcRepStatesEnum.LAST_KDC_REP_STATE, kdcRepStatesEnum0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KdcRepStatesEnum kdcRepStatesEnum0 = KdcRepStatesEnum.valueOf("KDC_REP_ENC_PART_STATE");
      assertEquals(KdcRepStatesEnum.KDC_REP_ENC_PART_STATE, kdcRepStatesEnum0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KdcRepStatesEnum kdcRepStatesEnum0 = KdcRepStatesEnum.LAST_KDC_REP_STATE;
      boolean boolean0 = kdcRepStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KdcRepStatesEnum kdcRepStatesEnum0 = KdcRepStatesEnum.KDC_REP_ENC_PART_STATE;
      boolean boolean0 = kdcRepStatesEnum0.isEndState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KdcRepStatesEnum kdcRepStatesEnum0 = KdcRepStatesEnum.KDC_REP_CREALM_STATE;
      String string0 = kdcRepStatesEnum0.getState(13);
      assertEquals("KDC_REP_END_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KdcRepStatesEnum kdcRepStatesEnum0 = KdcRepStatesEnum.LAST_KDC_REP_STATE;
      String string0 = kdcRepStatesEnum0.getState((-2694));
      assertEquals("LAST_KDC_REP_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KdcRepStatesEnum kdcRepStatesEnum0 = KdcRepStatesEnum.LAST_KDC_REP_STATE;
      Grammar<KdcRepContainer> grammar0 = KdcRepGrammar.getInstance();
      String string0 = kdcRepStatesEnum0.getGrammarName(grammar0);
      assertEquals("KDC_REP_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KdcRepStatesEnum kdcRepStatesEnum0 = KdcRepStatesEnum.KDC_REP_PA_DATA_TAG_STATE;
      String string0 = kdcRepStatesEnum0.getGrammarName((Grammar<KdcRepContainer>) null);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KdcRepStatesEnum kdcRepStatesEnum0 = KdcRepStatesEnum.KDC_REP_PVNO_STATE;
      String string0 = kdcRepStatesEnum0.getGrammarName(57);
      assertEquals("KDC_REP_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KdcRepStatesEnum kdcRepStatesEnum0 = KdcRepStatesEnum.KDC_REP_ENC_PART_STATE;
      KdcRepStatesEnum kdcRepStatesEnum1 = kdcRepStatesEnum0.getStartState();
      assertEquals(KdcRepStatesEnum.START_STATE, kdcRepStatesEnum1);
  }
}
