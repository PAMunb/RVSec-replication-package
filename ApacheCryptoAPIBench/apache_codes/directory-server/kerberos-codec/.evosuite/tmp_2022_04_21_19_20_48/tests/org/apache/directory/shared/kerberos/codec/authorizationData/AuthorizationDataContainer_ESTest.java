/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:34:25 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.authorizationData;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.api.asn1.ber.tlv.TLVStateEnum;
import org.apache.directory.shared.kerberos.codec.authorizationData.AuthorizationDataContainer;
import org.apache.directory.shared.kerberos.components.AuthorizationData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AuthorizationDataContainer_ESTest extends AuthorizationDataContainer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AuthorizationDataContainer authorizationDataContainer0 = new AuthorizationDataContainer();
      authorizationDataContainer0.setAuthorizationData((AuthorizationData) null);
      assertEquals(TLVStateEnum.TAG_STATE_START, authorizationDataContainer0.getState());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AuthorizationDataContainer authorizationDataContainer0 = new AuthorizationDataContainer();
      AuthorizationData authorizationData0 = authorizationDataContainer0.getAuthorizationData();
      assertNull(authorizationData0);
  }
}
