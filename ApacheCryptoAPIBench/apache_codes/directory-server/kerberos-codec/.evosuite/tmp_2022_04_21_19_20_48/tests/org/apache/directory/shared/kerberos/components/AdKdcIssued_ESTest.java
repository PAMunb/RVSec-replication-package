/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:48:05 GMT 2022
 */

package org.apache.directory.shared.kerberos.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import javax.security.auth.kerberos.KerberosPrincipal;
import org.apache.directory.shared.kerberos.codec.types.AuthorizationType;
import org.apache.directory.shared.kerberos.components.AdKdcIssued;
import org.apache.directory.shared.kerberos.components.AuthorizationData;
import org.apache.directory.shared.kerberos.components.AuthorizationDataEntry;
import org.apache.directory.shared.kerberos.components.Checksum;
import org.apache.directory.shared.kerberos.components.PrincipalName;
import org.apache.directory.shared.kerberos.crypto.checksum.ChecksumType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AdKdcIssued_ESTest extends AdKdcIssued_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      Checksum checksum0 = new Checksum();
      AuthorizationData authorizationData0 = new AuthorizationData();
      AuthorizationType authorizationType0 = AuthorizationType.AD_ETYPE_NEGOTIATION;
      byte[] byteArray0 = new byte[3];
      AuthorizationDataEntry authorizationDataEntry0 = new AuthorizationDataEntry(authorizationType0, byteArray0);
      authorizationData0.addEntry(authorizationDataEntry0);
      adKdcIssued0.setElements(authorizationData0);
      ChecksumType checksumType0 = ChecksumType.RSA_MD5_DES3;
      checksum0.setChecksumType(checksumType0);
      adKdcIssued0.setAdChecksum(checksum0);
      int int0 = adKdcIssued0.computeLength();
      assertEquals(34, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      try { 
        adKdcIssued0.encode(byteBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_138 The PDU buffer size is too small !
         //
         verifyException("org.apache.directory.shared.kerberos.components.AdKdcIssued", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      Checksum checksum0 = new Checksum();
      adKdcIssued0.setIRealm("ERR_10010");
      AuthorizationData authorizationData0 = new AuthorizationData();
      adKdcIssued0.setElements(authorizationData0);
      ChecksumType checksumType0 = ChecksumType.HMAC_MD5;
      checksum0.setChecksumType(checksumType0);
      adKdcIssued0.setAdChecksum(checksum0);
      adKdcIssued0.computeLength();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(33);
      ByteBuffer byteBuffer1 = adKdcIssued0.encode(byteBuffer0);
      assertFalse(byteBuffer1.hasRemaining());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      Checksum checksum0 = new Checksum();
      AuthorizationData authorizationData0 = new AuthorizationData();
      adKdcIssued0.setElements(authorizationData0);
      adKdcIssued0.setAdChecksum(checksum0);
      String string0 = adKdcIssued0.toString((String) null);
      assertEquals("nullAD-KDCIssued : {\nnull    ad-cheksum: null    Checksum : {\nnull        cksumtype: null\nnull    }\n\nnull    elements:null    AuthorizationData : \n\nnull}\n", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      Checksum checksum0 = new Checksum();
      AuthorizationData authorizationData0 = new AuthorizationData();
      adKdcIssued0.setElements(authorizationData0);
      adKdcIssued0.setAdChecksum(checksum0);
      String string0 = adKdcIssued0.toString();
      assertEquals("AD-KDCIssued : {\n    ad-cheksum:     Checksum : {\n        cksumtype: null\n    }\n\n    elements:    AuthorizationData : \n\n}\n", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      adKdcIssued0.setIRealm("f:>h!}'q3!1W");
      String string0 = adKdcIssued0.getIRealm();
      assertEquals("f:>h!}'q3!1W", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      adKdcIssued0.setIRealm("");
      String string0 = adKdcIssued0.getIRealm();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      ChecksumType checksumType0 = ChecksumType.CRC32;
      byte[] byteArray0 = new byte[5];
      Checksum checksum0 = new Checksum(checksumType0, byteArray0);
      adKdcIssued0.setAdChecksum(checksum0);
      Checksum checksum1 = adKdcIssued0.getAdChecksum();
      assertEquals(ChecksumType.CRC32, checksum1.getChecksumType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      KerberosPrincipal kerberosPrincipal0 = new KerberosPrincipal("ck,@YAG{Rkh'5eimS");
      PrincipalName principalName0 = new PrincipalName(kerberosPrincipal0);
      adKdcIssued0.setISName(principalName0);
      Checksum checksum0 = new Checksum();
      adKdcIssued0.setAdChecksum(checksum0);
      // Undeclared exception!
      try { 
        adKdcIssued0.toString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.AdKdcIssued", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      adKdcIssued0.setIRealm("");
      Checksum checksum0 = new Checksum();
      adKdcIssued0.setAdChecksum(checksum0);
      // Undeclared exception!
      try { 
        adKdcIssued0.toString("i]Mi@\"d#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.AdKdcIssued", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      Checksum checksum0 = new Checksum();
      AuthorizationData authorizationData0 = new AuthorizationData();
      adKdcIssued0.setElements(authorizationData0);
      ChecksumType checksumType0 = ChecksumType.RSA_MD5_DES3;
      checksum0.setChecksumType(checksumType0);
      adKdcIssued0.setAdChecksum(checksum0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(34);
      adKdcIssued0.encode(byteBuffer0);
      assertEquals(15, byteBuffer0.remaining());
      assertEquals(19, byteBuffer0.position());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      Checksum checksum0 = new Checksum();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1387);
      String[] stringArray0 = new String[4];
      PrincipalName principalName0 = new PrincipalName(stringArray0, (-1068));
      adKdcIssued0.setISName(principalName0);
      ChecksumType checksumType0 = ChecksumType.DES_MAC;
      checksum0.setChecksumType(checksumType0);
      adKdcIssued0.setAdChecksum(checksum0);
      // Undeclared exception!
      try { 
        adKdcIssued0.encode(byteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.PrincipalName", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      try { 
        adKdcIssued0.encode((ByteBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_148 Cannot put a PDU in a null buffer !
         //
         verifyException("org.apache.directory.shared.kerberos.components.AdKdcIssued", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      Checksum checksum0 = new Checksum();
      String[] stringArray0 = new String[4];
      PrincipalName principalName0 = new PrincipalName(stringArray0, (-1068));
      adKdcIssued0.setISName(principalName0);
      ChecksumType checksumType0 = ChecksumType.DES_MAC;
      checksum0.setChecksumType(checksumType0);
      adKdcIssued0.setAdChecksum(checksum0);
      // Undeclared exception!
      try { 
        adKdcIssued0.computeLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.AdKdcIssued", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      AuthorizationData authorizationData0 = adKdcIssued0.getElements();
      assertNull(authorizationData0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      String string0 = adKdcIssued0.getIRealm();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      AuthorizationData authorizationData0 = new AuthorizationData();
      adKdcIssued0.setElements(authorizationData0);
      AuthorizationData authorizationData1 = adKdcIssued0.getElements();
      assertSame(authorizationData1, authorizationData0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      // Undeclared exception!
      try { 
        adKdcIssued0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.AdKdcIssued", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      Checksum checksum0 = adKdcIssued0.getAdChecksum();
      assertNull(checksum0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      PrincipalName principalName0 = adKdcIssued0.getISName();
      assertNull(principalName0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AdKdcIssued adKdcIssued0 = new AdKdcIssued();
      PrincipalName principalName0 = new PrincipalName();
      adKdcIssued0.setISName(principalName0);
      PrincipalName principalName1 = adKdcIssued0.getISName();
      assertSame(principalName1, principalName0);
  }
}
