/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:04:50 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.apRep;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.apRep.ApRepContainer;
import org.apache.directory.shared.kerberos.codec.apRep.ApRepStatesEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ApRepStatesEnum_ESTest extends ApRepStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ApRepStatesEnum apRepStatesEnum0 = ApRepStatesEnum.AP_REP_SEQ_STATE;
      String string0 = apRepStatesEnum0.getState((-875));
      assertEquals("AP_REP_SEQ_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ApRepStatesEnum[] apRepStatesEnumArray0 = ApRepStatesEnum.values();
      assertEquals(9, apRepStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ApRepStatesEnum apRepStatesEnum0 = ApRepStatesEnum.valueOf("LAST_AP_REP_STATE");
      assertTrue(apRepStatesEnum0.isEndState());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ApRepStatesEnum apRepStatesEnum0 = ApRepStatesEnum.valueOf("AP_REP_SEQ_STATE");
      assertEquals(ApRepStatesEnum.AP_REP_SEQ_STATE, apRepStatesEnum0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ApRepStatesEnum apRepStatesEnum0 = ApRepStatesEnum.LAST_AP_REP_STATE;
      boolean boolean0 = apRepStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ApRepStatesEnum apRepStatesEnum0 = ApRepStatesEnum.AP_REP_SEQ_STATE;
      boolean boolean0 = apRepStatesEnum0.isEndState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ApRepStatesEnum apRepStatesEnum0 = ApRepStatesEnum.START_STATE;
      String string0 = apRepStatesEnum0.getState(8);
      assertEquals("AP_REP_END_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ApRepStatesEnum apRepStatesEnum0 = ApRepStatesEnum.AP_REP_SEQ_STATE;
      String string0 = apRepStatesEnum0.getState(5199);
      assertEquals("AP_REP_SEQ_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ApRepStatesEnum apRepStatesEnum0 = ApRepStatesEnum.AP_REP_MSG_TYPE_TAG_STATE;
      String string0 = apRepStatesEnum0.getGrammarName((Grammar<ApRepContainer>) null);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ApRepStatesEnum apRepStatesEnum0 = ApRepStatesEnum.START_STATE;
      ApRepStatesEnum apRepStatesEnum1 = apRepStatesEnum0.getStartState();
      assertEquals(ApRepStatesEnum.START_STATE, apRepStatesEnum1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ApRepStatesEnum apRepStatesEnum0 = ApRepStatesEnum.START_STATE;
      String string0 = apRepStatesEnum0.getGrammarName(1453);
      assertEquals("AP_REP_GRAMMAR", string0);
  }
}
