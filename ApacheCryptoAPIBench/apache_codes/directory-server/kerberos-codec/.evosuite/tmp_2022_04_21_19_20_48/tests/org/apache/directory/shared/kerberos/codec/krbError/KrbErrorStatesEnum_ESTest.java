/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:58:03 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.krbError;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.krbError.KrbErrorContainer;
import org.apache.directory.shared.kerberos.codec.krbError.KrbErrorGrammar;
import org.apache.directory.shared.kerberos.codec.krbError.KrbErrorStatesEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KrbErrorStatesEnum_ESTest extends KrbErrorStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KrbErrorStatesEnum krbErrorStatesEnum0 = KrbErrorStatesEnum.LAST_KRB_ERR_STATE;
      String string0 = krbErrorStatesEnum0.getState(277);
      assertEquals("LAST_KRB_ERR_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KrbErrorStatesEnum[] krbErrorStatesEnumArray0 = KrbErrorStatesEnum.values();
      assertEquals(28, krbErrorStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KrbErrorStatesEnum krbErrorStatesEnum0 = KrbErrorStatesEnum.valueOf("LAST_KRB_ERR_STATE");
      assertEquals(KrbErrorStatesEnum.LAST_KRB_ERR_STATE, krbErrorStatesEnum0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KrbErrorStatesEnum krbErrorStatesEnum0 = KrbErrorStatesEnum.valueOf("KRB_ERR_ERROR_CODE_STATE");
      assertEquals(KrbErrorStatesEnum.START_STATE, krbErrorStatesEnum0.getStartState());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KrbErrorStatesEnum krbErrorStatesEnum0 = KrbErrorStatesEnum.LAST_KRB_ERR_STATE;
      boolean boolean0 = krbErrorStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KrbErrorStatesEnum krbErrorStatesEnum0 = KrbErrorStatesEnum.KRB_ERR_ERROR_CODE_TAG_STATE;
      boolean boolean0 = krbErrorStatesEnum0.isEndState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KrbErrorStatesEnum krbErrorStatesEnum0 = KrbErrorStatesEnum.KRB_ERR_EDATA_STATE;
      String string0 = krbErrorStatesEnum0.getState(27);
      assertEquals("LAST_KRB_ERR_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KrbErrorStatesEnum krbErrorStatesEnum0 = KrbErrorStatesEnum.LAST_KRB_ERR_STATE;
      String string0 = krbErrorStatesEnum0.getState((-502));
      assertEquals("LAST_KRB_ERR_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KrbErrorStatesEnum krbErrorStatesEnum0 = KrbErrorStatesEnum.KRB_ERR_EDATA_STATE;
      Grammar<KrbErrorContainer> grammar0 = KrbErrorGrammar.getInstance();
      String string0 = krbErrorStatesEnum0.getGrammarName(grammar0);
      assertEquals("KRB_ERR_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KrbErrorStatesEnum krbErrorStatesEnum0 = KrbErrorStatesEnum.LAST_KRB_ERR_STATE;
      String string0 = krbErrorStatesEnum0.getGrammarName((Grammar<KrbErrorContainer>) null);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KrbErrorStatesEnum krbErrorStatesEnum0 = KrbErrorStatesEnum.KRB_ERR_MSG_TYPE_TAG_STATE;
      KrbErrorStatesEnum krbErrorStatesEnum1 = krbErrorStatesEnum0.getStartState();
      assertEquals(KrbErrorStatesEnum.START_STATE, krbErrorStatesEnum1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KrbErrorStatesEnum krbErrorStatesEnum0 = KrbErrorStatesEnum.LAST_KRB_ERR_STATE;
      String string0 = krbErrorStatesEnum0.getGrammarName(98);
      assertEquals("KRB_ERR_GRAMMAR", string0);
  }
}
