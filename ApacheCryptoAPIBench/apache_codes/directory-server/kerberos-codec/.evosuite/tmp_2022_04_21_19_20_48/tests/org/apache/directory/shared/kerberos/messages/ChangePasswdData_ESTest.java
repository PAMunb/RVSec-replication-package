/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:52:41 GMT 2022
 */

package org.apache.directory.shared.kerberos.messages;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.ReadOnlyBufferException;
import org.apache.directory.shared.kerberos.components.PrincipalName;
import org.apache.directory.shared.kerberos.messages.ChangePasswdData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ChangePasswdData_ESTest extends ChangePasswdData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      byte[] byteArray0 = new byte[0];
      changePasswdData0.setNewPasswd(byteArray0);
      changePasswdData0.setTargRealm("ChangePasswdData : \n    newPasswd : \n    targName : null\n    targRealm : \n");
      ByteBuffer byteBuffer0 = changePasswdData0.encode((ByteBuffer) null);
      assertFalse(byteBuffer0.hasRemaining());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      byte[] byteArray0 = new byte[0];
      changePasswdData0.setNewPasswd(byteArray0);
      changePasswdData0.setTargRealm("ChangePasswdData : \n    newPasswd : \n    targName : null\n    targRealm : \n");
      int int0 = changePasswdData0.computeLength();
      assertEquals(84, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      byte[] byteArray0 = new byte[7];
      changePasswdData0.setNewPasswd(byteArray0);
      int int0 = changePasswdData0.computeLength();
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      changePasswdData0.setTargRealm(",M|Qo@o");
      String string0 = changePasswdData0.getTargRealm();
      assertEquals(",M|Qo@o", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      String[] stringArray0 = new String[3];
      PrincipalName principalName0 = new PrincipalName(stringArray0, 298);
      changePasswdData0.setTargName(principalName0);
      PrincipalName principalName1 = changePasswdData0.getTargName();
      assertNull(principalName1.getRealm());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      byte[] byteArray0 = new byte[2];
      changePasswdData0.setNewPasswd(byteArray0);
      byte[] byteArray1 = changePasswdData0.getNewPasswd();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      byte[] byteArray0 = new byte[0];
      changePasswdData0.setNewPasswd(byteArray0);
      byte[] byteArray1 = changePasswdData0.getNewPasswd();
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      PrincipalName principalName0 = new PrincipalName();
      changePasswdData0.setTargName(principalName0);
      // Undeclared exception!
      try { 
        changePasswdData0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.PrincipalName", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(5);
      try { 
        changePasswdData0.encode(byteBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_00004_PDU_BUFFER_SIZE_TOO_SMALL The PDU buffer size is too small !
         //
         verifyException("org.apache.directory.api.asn1.ber.tlv.BerValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2346);
      ByteBuffer byteBuffer1 = byteBuffer0.asReadOnlyBuffer();
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      // Undeclared exception!
      try { 
        changePasswdData0.encode(byteBuffer1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.DirectByteBufferR", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      // Undeclared exception!
      try { 
        changePasswdData0.encode((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.messages.ChangePasswdData", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      // Undeclared exception!
      try { 
        changePasswdData0.computeLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.messages.ChangePasswdData", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      byte[] byteArray0 = new byte[0];
      changePasswdData0.setNewPasswd(byteArray0);
      String[] stringArray0 = new String[3];
      PrincipalName principalName0 = new PrincipalName(stringArray0, 298);
      changePasswdData0.setTargName(principalName0);
      ByteBuffer byteBuffer0 = changePasswdData0.encode((ByteBuffer) null);
      assertEquals("java.nio.HeapByteBuffer[pos=25 lim=25 cap=25]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      byte[] byteArray0 = new byte[0];
      changePasswdData0.setNewPasswd(byteArray0);
      String[] stringArray0 = new String[3];
      PrincipalName principalName0 = new PrincipalName(stringArray0, 298);
      changePasswdData0.setTargName(principalName0);
      int int0 = changePasswdData0.computeLength();
      assertEquals(25, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      String string0 = changePasswdData0.toString();
      assertEquals("ChangePasswdData : \n    newPasswd : \n    targName : null\n    targRealm : null\n", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      byte[] byteArray0 = new byte[0];
      changePasswdData0.setNewPasswd(byteArray0);
      ByteBuffer byteBuffer0 = changePasswdData0.encode((ByteBuffer) null);
      // Undeclared exception!
      try { 
        changePasswdData0.encode(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      String string0 = changePasswdData0.getTargRealm();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      changePasswdData0.setTargRealm("");
      String string0 = changePasswdData0.getTargRealm();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      byte[] byteArray0 = changePasswdData0.getNewPasswd();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ChangePasswdData changePasswdData0 = new ChangePasswdData();
      PrincipalName principalName0 = changePasswdData0.getTargName();
      assertNull(principalName0);
  }
}
