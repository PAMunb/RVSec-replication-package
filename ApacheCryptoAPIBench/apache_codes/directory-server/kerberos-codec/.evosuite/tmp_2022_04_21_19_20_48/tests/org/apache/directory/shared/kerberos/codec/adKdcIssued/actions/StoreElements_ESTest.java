/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:27:17 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.adKdcIssued.actions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.directory.shared.kerberos.codec.adKdcIssued.AdKdcIssuedContainer;
import org.apache.directory.shared.kerberos.codec.adKdcIssued.actions.StoreElements;
import org.apache.directory.shared.kerberos.components.AdKdcIssued;
import org.apache.directory.shared.kerberos.components.AuthorizationData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StoreElements_ESTest extends StoreElements_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StoreElements storeElements0 = new StoreElements();
      AdKdcIssuedContainer adKdcIssuedContainer0 = mock(AdKdcIssuedContainer.class, new ViolatedAssumptionAnswer());
      doReturn((AdKdcIssued) null).when(adKdcIssuedContainer0).getAdKdcIssued();
      // Undeclared exception!
      try { 
        storeElements0.setAuthorizationData((AuthorizationData) null, adKdcIssuedContainer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.adKdcIssued.actions.StoreElements", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StoreElements storeElements0 = new StoreElements();
      AdKdcIssued adKdcIssued0 = mock(AdKdcIssued.class, new ViolatedAssumptionAnswer());
      AdKdcIssuedContainer adKdcIssuedContainer0 = mock(AdKdcIssuedContainer.class, new ViolatedAssumptionAnswer());
      doReturn(adKdcIssued0).when(adKdcIssuedContainer0).getAdKdcIssued();
      storeElements0.setAuthorizationData((AuthorizationData) null, adKdcIssuedContainer0);
      assertEquals("AdKdcIssued 'elements' value", storeElements0.toString());
  }
}
