/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:15:01 GMT 2022
 */

package org.apache.directory.server.kerberos.shared.crypto.encryption;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KeyUsage_ESTest extends KeyUsage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KeyUsage keyUsage0 = KeyUsage.getTypeByOrdinal((-1646));
      KeyUsage keyUsage1 = KeyUsage.AS_REP_ENC_PART_WITH_CKEY;
      int int0 = keyUsage1.compareTo(keyUsage0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KeyUsage keyUsage0 = KeyUsage.getTypeByOrdinal((-1646));
      KeyUsage keyUsage1 = KeyUsage.AS_REP_ENC_PART_WITH_CKEY;
      int int0 = keyUsage0.compareTo(keyUsage1);
      assertEquals((-2), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KeyUsage keyUsage0 = KeyUsage.AP_REQ_AUTHNT_SESS_KEY;
      // Undeclared exception!
      try { 
        keyUsage0.compareTo((KeyUsage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KeyUsage keyUsage0 = KeyUsage.getTypeByOrdinal(6);
      assertEquals(6, keyUsage0.getOrdinal());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KeyUsage keyUsage0 = KeyUsage.getTypeByOrdinal((-1646));
      String string0 = keyUsage0.toString();
      assertEquals("ERR_603 AS-REQ PA-ENC-TIMESTAMP padata timestamp, encrypted with the client key (1)", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      KeyUsage keyUsage0 = KeyUsage.getTypeByOrdinal((-1646));
      int int0 = keyUsage0.compareTo(keyUsage0);
      assertEquals(0, int0);
      assertEquals(1, keyUsage0.getOrdinal());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      KeyUsage keyUsage0 = KeyUsage.getTypeByOrdinal((-1646));
      int int0 = keyUsage0.getOrdinal();
      assertEquals(1, int0);
  }
}
