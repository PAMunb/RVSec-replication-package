/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:23:26 GMT 2022
 */

package org.apache.directory.server.kerberos.shared.store;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.security.auth.kerberos.KerberosPrincipal;
import org.apache.directory.server.kerberos.shared.store.TicketFactory;
import org.apache.directory.shared.kerberos.codec.types.EncryptionType;
import org.apache.directory.shared.kerberos.components.EncryptionKey;
import org.apache.directory.shared.kerberos.messages.Ticket;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TicketFactory_ESTest extends TicketFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TicketFactory ticketFactory0 = new TicketFactory();
      KerberosPrincipal kerberosPrincipal0 = new KerberosPrincipal("hB^@La=6");
      EncryptionType encryptionType0 = EncryptionType.RESERVED4;
      byte[] byteArray0 = new byte[8];
      EncryptionKey encryptionKey0 = new EncryptionKey(encryptionType0, byteArray0);
      try { 
        ticketFactory0.getTicket(kerberosPrincipal0, (KerberosPrincipal) null, encryptionKey0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // KDC has no support for encryption type
         //
         verifyException("org.apache.directory.server.kerberos.shared.crypto.encryption.CipherTextHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TicketFactory ticketFactory0 = new TicketFactory();
      KerberosPrincipal kerberosPrincipal0 = new KerberosPrincipal("W6(<D@Mw?S8");
      byte[] byteArray0 = new byte[9];
      EncryptionType encryptionType0 = EncryptionType.DES_CBC_MD5;
      EncryptionKey encryptionKey0 = new EncryptionKey(encryptionType0, byteArray0, 233);
      Ticket ticket0 = ticketFactory0.getTicket(kerberosPrincipal0, kerberosPrincipal0, encryptionKey0);
      assertEquals(5, ticket0.getProtocolVersionNumber());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TicketFactory ticketFactory0 = new TicketFactory();
      // Undeclared exception!
      try { 
        ticketFactory0.getTicket((KerberosPrincipal) null, (KerberosPrincipal) null, (EncryptionKey) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.server.kerberos.shared.store.TicketFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TicketFactory ticketFactory0 = new TicketFactory();
      // Undeclared exception!
      try { 
        ticketFactory0.getServerKey((KerberosPrincipal) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.security.auth.kerberos.KeyImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TicketFactory ticketFactory0 = new TicketFactory();
      KerberosPrincipal kerberosPrincipal0 = new KerberosPrincipal("W6(<D@Mw?S8");
      EncryptionKey encryptionKey0 = ticketFactory0.getServerKey(kerberosPrincipal0, "W6(<D@Mw?S8");
      assertEquals(0, encryptionKey0.getKeyVersion());
  }
}
