/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:20:21 GMT 2022
 */

package org.apache.directory.server.kerberos.shared.crypto.checksum;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.directory.server.kerberos.shared.crypto.checksum.Crc32Checksum;
import org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage;
import org.apache.directory.shared.kerberos.crypto.checksum.ChecksumType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Crc32Checksum_ESTest extends Crc32Checksum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Crc32Checksum crc32Checksum0 = new Crc32Checksum();
      byte[] byteArray0 = new byte[1];
      KeyUsage keyUsage0 = mock(KeyUsage.class, new ViolatedAssumptionAnswer());
      byte[] byteArray1 = crc32Checksum0.calculateChecksum(byteArray0, byteArray0, keyUsage0);
      KeyUsage keyUsage1 = mock(KeyUsage.class, new ViolatedAssumptionAnswer());
      byte[] byteArray2 = crc32Checksum0.calculateChecksum(byteArray0, byteArray1, keyUsage1);
      assertArrayEquals(new byte[] {(byte) (-46), (byte)2, (byte) (-17), (byte) (-115)}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Crc32Checksum crc32Checksum0 = new Crc32Checksum();
      KeyUsage keyUsage0 = mock(KeyUsage.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        crc32Checksum0.calculateChecksum((byte[]) null, (byte[]) null, keyUsage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.CRC32", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Crc32Checksum crc32Checksum0 = new Crc32Checksum();
      ChecksumType checksumType0 = crc32Checksum0.checksumType();
      assertEquals(ChecksumType.CRC32, checksumType0);
  }
}
