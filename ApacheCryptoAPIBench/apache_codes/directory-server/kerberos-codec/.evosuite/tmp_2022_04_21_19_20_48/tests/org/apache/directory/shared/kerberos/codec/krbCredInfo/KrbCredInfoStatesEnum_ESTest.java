/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:02:44 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.krbCredInfo;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.krbCredInfo.KrbCredInfoContainer;
import org.apache.directory.shared.kerberos.codec.krbCredInfo.KrbCredInfoGrammar;
import org.apache.directory.shared.kerberos.codec.krbCredInfo.KrbCredInfoStatesEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KrbCredInfoStatesEnum_ESTest extends KrbCredInfoStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KrbCredInfoStatesEnum krbCredInfoStatesEnum0 = KrbCredInfoStatesEnum.KRB_CRED_INFO_PREALM_TAG_STATE;
      String string0 = krbCredInfoStatesEnum0.getState(645);
      assertEquals("KRB_CRED_INFO_PREALM_TAG_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KrbCredInfoStatesEnum[] krbCredInfoStatesEnumArray0 = KrbCredInfoStatesEnum.values();
      assertEquals(21, krbCredInfoStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KrbCredInfoStatesEnum krbCredInfoStatesEnum0 = KrbCredInfoStatesEnum.valueOf("LAST_KRB_CRED_INFO_STATE");
      assertEquals(KrbCredInfoStatesEnum.START_STATE, krbCredInfoStatesEnum0.getStartState());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KrbCredInfoStatesEnum krbCredInfoStatesEnum0 = KrbCredInfoStatesEnum.valueOf("KRB_CRED_INFO_SREALM_STATE");
      assertEquals(KrbCredInfoStatesEnum.KRB_CRED_INFO_SREALM_STATE, krbCredInfoStatesEnum0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KrbCredInfoStatesEnum krbCredInfoStatesEnum0 = KrbCredInfoStatesEnum.LAST_KRB_CRED_INFO_STATE;
      boolean boolean0 = krbCredInfoStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KrbCredInfoStatesEnum krbCredInfoStatesEnum0 = KrbCredInfoStatesEnum.KRB_CRED_INFO_SREALM_STATE;
      boolean boolean0 = krbCredInfoStatesEnum0.isEndState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KrbCredInfoStatesEnum krbCredInfoStatesEnum0 = KrbCredInfoStatesEnum.LAST_KRB_CRED_INFO_STATE;
      String string0 = krbCredInfoStatesEnum0.getState(20);
      assertEquals("LAST_KRB_CRED_INFO_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KrbCredInfoStatesEnum krbCredInfoStatesEnum0 = KrbCredInfoStatesEnum.KRB_CRED_INFO_SREALM_STATE;
      String string0 = krbCredInfoStatesEnum0.getState((-1285));
      assertEquals("KRB_CRED_INFO_SREALM_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KrbCredInfoStatesEnum krbCredInfoStatesEnum0 = KrbCredInfoStatesEnum.KRB_CRED_INFO_STARTTIME_STATE;
      Grammar<KrbCredInfoContainer> grammar0 = KrbCredInfoGrammar.getInstance();
      String string0 = krbCredInfoStatesEnum0.getGrammarName(grammar0);
      assertEquals("KRB_CRED_INFO_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KrbCredInfoStatesEnum krbCredInfoStatesEnum0 = KrbCredInfoStatesEnum.START_STATE;
      String string0 = krbCredInfoStatesEnum0.getGrammarName((Grammar<KrbCredInfoContainer>) null);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KrbCredInfoStatesEnum krbCredInfoStatesEnum0 = KrbCredInfoStatesEnum.KRB_CRED_INFO_PREALM_STATE;
      String string0 = krbCredInfoStatesEnum0.getGrammarName((-110));
      assertEquals("KRB_CRED_INFO_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KrbCredInfoStatesEnum krbCredInfoStatesEnum0 = KrbCredInfoStatesEnum.KRB_CRED_INFO_AUTHTIME_TAG_STATE;
      KrbCredInfoStatesEnum krbCredInfoStatesEnum1 = krbCredInfoStatesEnum0.getStartState();
      assertEquals(KrbCredInfoStatesEnum.START_STATE, krbCredInfoStatesEnum1);
  }
}
