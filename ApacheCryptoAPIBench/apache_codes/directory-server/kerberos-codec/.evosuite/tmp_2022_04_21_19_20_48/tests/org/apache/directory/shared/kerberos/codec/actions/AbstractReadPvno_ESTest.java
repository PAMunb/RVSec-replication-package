/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:01:38 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.actions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import org.apache.directory.api.asn1.ber.tlv.TLV;
import org.apache.directory.shared.kerberos.codec.kdcReq.KdcReqContainer;
import org.apache.directory.shared.kerberos.codec.kdcReq.actions.StorePvno;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractReadPvno_ESTest extends AbstractReadPvno_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StorePvno storePvno0 = new StorePvno();
      // Undeclared exception!
      try { 
        storePvno0.action((KdcReqContainer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.actions.AbstractReadPvno", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StorePvno storePvno0 = new StorePvno();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1619);
      KdcReqContainer kdcReqContainer0 = new KdcReqContainer(byteBuffer0);
      TLV tLV0 = new TLV(1619);
      kdcReqContainer0.setCurrentTLV(tLV0);
      try { 
        storePvno0.action(kdcReqContainer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_04067 The LdapMessage should not be empty
         //
         verifyException("org.apache.directory.shared.kerberos.codec.actions.AbstractReadPvno", e);
      }
  }
}
