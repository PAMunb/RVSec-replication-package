/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:48:44 GMT 2022
 */

package org.apache.directory.shared.kerberos.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.util.List;
import org.apache.directory.shared.kerberos.components.TypedData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypedData_ESTest extends TypedData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      try { 
        typedData0.encode(byteBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_138 The PDU buffer size is too small !
         //
         verifyException("org.apache.directory.shared.kerberos.components.TypedData", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      List<TypedData.TD> list0 = typedData0.getTypedData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      typedData0.setCurrentDataType(86);
      TypedData.TD typedData_TD0 = typedData0.getCurrentTD();
      assertEquals(86, typedData_TD0.getDataType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      typedData0.setCurrentDataType((-2838));
      TypedData.TD typedData_TD0 = typedData0.getCurrentTD();
      assertEquals((-2838), typedData_TD0.getDataType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      byte[] byteArray0 = typedData0.getCurrentDataValue();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      byte[] byteArray0 = new byte[3];
      typedData0.setCurrentDataValue(byteArray0);
      byte[] byteArray1 = typedData0.getCurrentDataValue();
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      byte[] byteArray0 = new byte[0];
      typedData0.setCurrentDataValue(byteArray0);
      byte[] byteArray1 = typedData0.getCurrentDataValue();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      int int0 = typedData0.getCurrentDataType();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      typedData0.setCurrentDataType((byte)29);
      int int0 = typedData0.getCurrentDataType();
      assertEquals(29, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      typedData0.setCurrentDataType((-1064));
      int int0 = typedData0.getCurrentDataType();
      assertEquals((-1064), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      byte[] byteArray0 = new byte[0];
      typedData0.createNewTD();
      typedData0.setCurrentDataValue(byteArray0);
      String string0 = typedData0.toString("6bg/J=$(.},|UyM?.Z.");
      assertEquals("6bg/J=$(.},|UyM?.Z.TypedData : \n6bg/J=$(.},|UyM?.Z.    {\n6bg/J=$(.},|UyM?.Z.        tdType: 0\n6bg/J=$(.},|UyM?.Z.        tdData: \n6bg/J=$(.},|UyM?.Z.    }\n", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      String string0 = typedData0.toString("6bg/J=$(.},|UyM?.Z.");
      assertEquals("6bg/J=$(.},|UyM?.Z.TypedData : \n6bg/J=$(.},|UyM?.Z.    {\n6bg/J=$(.},|UyM?.Z.        tdType: 0\n6bg/J=$(.},|UyM?.Z.    }\n", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      byte[] byteArray0 = new byte[5];
      typedData0.setCurrentDataValue(byteArray0);
      String string0 = typedData0.toString();
      assertEquals("TypedData : \n    {\n        tdType: 0\n        tdData: 0x00 0x00 0x00 0x00 0x00 \n    }\n", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      byte[] byteArray0 = new byte[1];
      typedData0.setCurrentDataValue(byteArray0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(304);
      typedData0.computeLength();
      typedData0.encode(byteBuffer0);
      assertEquals("java.nio.HeapByteBuffer[pos=14 lim=304 cap=304]", byteBuffer0.toString());
      assertEquals(14, byteBuffer0.position());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(86);
      typedData0.computeLength();
      typedData0.encode(byteBuffer0);
      assertEquals(9, byteBuffer0.position());
      assertEquals(77, byteBuffer0.remaining());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(304);
      // Undeclared exception!
      try { 
        typedData0.encode(byteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.TypedData", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      try { 
        typedData0.encode((ByteBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_148 Cannot put a PDU in a null buffer !
         //
         verifyException("org.apache.directory.shared.kerberos.components.TypedData", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.computeLength();
      typedData0.createNewTD();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1238);
      // Undeclared exception!
      try { 
        typedData0.encode(byteBuffer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.directory.shared.kerberos.components.TypedData", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      TypedData.TD typedData_TD0 = typedData0.new TD();
      byte[] byteArray0 = typedData_TD0.getDataValue();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        typedData0.setCurrentDataValue(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.TypedData$TD", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      TypedData.TD typedData_TD0 = typedData0.getCurrentTD();
      assertNull(typedData_TD0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      // Undeclared exception!
      try { 
        typedData0.getCurrentDataValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.TypedData$TD", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      // Undeclared exception!
      try { 
        typedData0.setCurrentDataType(86);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.TypedData$TD", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      List<TypedData.TD> list0 = typedData0.getTypedData();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      // Undeclared exception!
      try { 
        typedData0.getCurrentDataType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.components.TypedData$TD", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TypedData typedData0 = new TypedData();
      typedData0.createNewTD();
      TypedData.TD typedData_TD0 = typedData0.getCurrentTD();
      int int0 = typedData_TD0.getDataType();
      assertEquals(0, int0);
  }
}
