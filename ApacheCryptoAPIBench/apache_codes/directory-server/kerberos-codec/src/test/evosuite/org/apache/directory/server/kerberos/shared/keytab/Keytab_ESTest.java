/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:45:38 GMT 2022
 */

package org.apache.directory.server.kerberos.shared.keytab;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.file.NoSuchFileException;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.directory.server.kerberos.shared.keytab.Keytab;
import org.apache.directory.server.kerberos.shared.keytab.KeytabEntry;
import org.apache.directory.shared.kerberos.KerberosTime;
import org.apache.directory.shared.kerberos.codec.types.EncryptionType;
import org.apache.directory.shared.kerberos.components.EncryptionKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Keytab_ESTest extends Keytab_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Keytab keytab0 = Keytab.getInstance();
      keytab0.setKeytabVersion((byte[]) null);
      // Undeclared exception!
      try { 
        keytab0.write();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.server.kerberos.shared.keytab.KeytabEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Keytab keytab0 = Keytab.getInstance();
      keytab0.setKeytabVersion((byte[]) null);
      MockFile mockFile0 = new MockFile((String) null, "ERR_441");
      // Undeclared exception!
      try { 
        keytab0.write(mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.server.kerberos.shared.keytab.KeytabEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Keytab keytab0 = Keytab.getInstance();
      keytab0.setKeytabVersion((byte[]) null);
      byte[] byteArray0 = keytab0.getKeytabVersion();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Keytab keytab0 = new Keytab();
      // Undeclared exception!
      try { 
        keytab0.writeFile((ByteBuffer) null, (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.server.kerberos.shared.keytab.Keytab", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Keytab keytab0 = new Keytab();
      // Undeclared exception!
      try { 
        keytab0.write((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.server.kerberos.shared.keytab.Keytab", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Keytab keytab0 = new Keytab();
      LinkedList<KeytabEntry> linkedList0 = new LinkedList<KeytabEntry>();
      KerberosTime kerberosTime0 = new KerberosTime((-594L));
      KeytabEntry keytabEntry0 = new KeytabEntry("5t`R\"EJ", (-3401), kerberosTime0, (byte)2, (EncryptionKey) null);
      linkedList0.offerLast(keytabEntry0);
      keytab0.setEntries(linkedList0);
      // Undeclared exception!
      try { 
        keytab0.write((File) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.directory.server.kerberos.shared.keytab.KeytabEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Keytab.read(byteArray0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Keytab.read((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte)2;
      try { 
        Keytab.read(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid size for the keytab entry
         //
         verifyException("org.apache.directory.server.kerberos.shared.keytab.KeytabDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      try { 
        Keytab.read(mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        Keytab.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.server.kerberos.shared.keytab.Keytab", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Keytab keytab0 = Keytab.getInstance();
      keytab0.setEntries((List<KeytabEntry>) null);
      // Undeclared exception!
      try { 
        keytab0.getEntries();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("F");
      try { 
        Keytab.getBytesFromFile(mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Keytab.getBytesFromFile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.server.kerberos.shared.keytab.Keytab", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Keytab keytab0 = new Keytab();
      LinkedList<KeytabEntry> linkedList0 = new LinkedList<KeytabEntry>();
      EncryptionType encryptionType0 = EncryptionType.RESERVED6;
      EncryptionKey encryptionKey0 = new EncryptionKey(encryptionType0, keytab0.VERSION_0X502_BYTES, (short)1281);
      KeytabEntry keytabEntry0 = new KeytabEntry(":hQI:7IZs0RP1G.V$\"", (-1245), (KerberosTime) null, (byte) (-1), encryptionKey0);
      linkedList0.addLast(keytabEntry0);
      keytab0.setEntries(linkedList0);
      // Undeclared exception!
      try { 
        keytab0.write();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.directory.server.kerberos.shared.keytab.KeytabEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          MockFile mockFile0 = new MockFile("");
          Keytab keytab0 = Keytab.getInstance();
          // Undeclared exception!
          try { 
            keytab0.write(mockFile0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
             // sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
             // sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
             // sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
             // java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:434)
             // java.nio.file.Files.newOutputStream(Files.java:216)
             // org.apache.directory.server.kerberos.shared.keytab.Keytab.writeFile(Keytab.java:271)
             // org.apache.directory.server.kerberos.shared.keytab.Keytab.write(Keytab.java:134)
             // sun.reflect.GeneratedMethodAccessor114.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Keytab keytab0 = Keytab.getInstance();
      Keytab keytab1 = Keytab.read(keytab0.VERSION_0X501_BYTES);
      assertNotSame(keytab0, keytab1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Keytab keytab0 = Keytab.getInstance();
      List<KeytabEntry> list0 = keytab0.getEntries();
      keytab0.setEntries(list0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Keytab keytab0 = Keytab.getInstance();
      byte[] byteArray0 = keytab0.getKeytabVersion();
      assertArrayEquals(new byte[] {(byte)5, (byte)2}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      byte[] byteArray0 = Keytab.getBytesFromFile(mockFile0);
      Keytab keytab0 = Keytab.getInstance();
      keytab0.setKeytabVersion(byteArray0);
      byte[] byteArray1 = keytab0.getKeytabVersion();
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Keytab keytab0 = Keytab.getInstance();
      ByteBuffer byteBuffer0 = keytab0.write();
      assertEquals(0, byteBuffer0.arrayOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      // Undeclared exception!
      try { 
        Keytab.read(mockFile0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }
}
