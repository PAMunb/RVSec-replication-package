/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:28:21 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.options;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.directory.shared.kerberos.codec.options.KdcOptions;
import org.apache.directory.shared.kerberos.flags.KerberosFlag;
import org.apache.directory.shared.kerberos.flags.TicketFlag;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KdcOptions_ESTest extends KdcOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KdcOptions kdcOptions0 = new KdcOptions();
      kdcOptions0.setData((int) (byte)0);
      String string0 = kdcOptions0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KdcOptions kdcOptions0 = new KdcOptions();
      kdcOptions0.setData((-531));
      String string0 = kdcOptions0.toString();
      assertEquals("RESERVED_0 FORWARDABLE FORWARDED PROXIABLE PROXY ALLOW_POSTDATE POSTDATED RESERVED_7 RESERVED_16 RESERVED_17 RESERVED_18 RESERVED_19 RESERVED_20 RESERVED_21 RESERVED_23 RESERVED_24 RESERVED_25 DISABLE_TRANSISTED_CHECKED ENC_TKT_IN_SKEY RESERVED_29 VALIDATE", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KdcOptions kdcOptions0 = new KdcOptions();
      kdcOptions0.setFlag(15);
      String string0 = kdcOptions0.toString();
      assertEquals("RESERVED_15 DISABLE_TRANSISTED_CHECKED", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KdcOptions kdcOptions0 = new KdcOptions();
      kdcOptions0.setBit(14);
      String string0 = kdcOptions0.toString();
      assertEquals("RESERVED_14 DISABLE_TRANSISTED_CHECKED", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KdcOptions kdcOptions0 = new KdcOptions();
      TicketFlag ticketFlag0 = TicketFlag.OK_AS_DELEGATE;
      kdcOptions0.setFlag((KerberosFlag) ticketFlag0);
      String string0 = kdcOptions0.toString();
      assertEquals("RESERVED_13 DISABLE_TRANSISTED_CHECKED", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KdcOptions kdcOptions0 = new KdcOptions();
      kdcOptions0.setBit(12);
      String string0 = kdcOptions0.toString();
      assertEquals("RESERVED_12 DISABLE_TRANSISTED_CHECKED", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KdcOptions kdcOptions0 = new KdcOptions();
      TicketFlag ticketFlag0 = TicketFlag.HW_AUTHENT;
      kdcOptions0.setFlag((KerberosFlag) ticketFlag0);
      String string0 = kdcOptions0.toString();
      assertEquals("RESERVED_11 DISABLE_TRANSISTED_CHECKED", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KdcOptions kdcOptions0 = new KdcOptions();
      kdcOptions0.setFlag(10);
      String string0 = kdcOptions0.toString();
      assertEquals("RESERVED_10 DISABLE_TRANSISTED_CHECKED", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KdcOptions kdcOptions0 = new KdcOptions();
      kdcOptions0.setBit(9);
      String string0 = kdcOptions0.toString();
      assertEquals("RESERVED_9 DISABLE_TRANSISTED_CHECKED", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KdcOptions kdcOptions0 = new KdcOptions();
      kdcOptions0.setFlag(8);
      String string0 = kdcOptions0.toString();
      assertEquals("RENEWABLE DISABLE_TRANSISTED_CHECKED", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KdcOptions kdcOptions0 = new KdcOptions();
      kdcOptions0.setData((-1446));
      String string0 = kdcOptions0.toString();
      assertEquals("RESERVED_0 FORWARDABLE FORWARDED PROXIABLE PROXY ALLOW_POSTDATE POSTDATED RESERVED_7 RESERVED_16 RESERVED_17 RESERVED_18 RESERVED_19 RESERVED_20 RESERVED_22 RESERVED_25 RENEWABLE_OK ENC_TKT_IN_SKEY RENEW", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      KdcOptions kdcOptions0 = new KdcOptions(byteArray0);
      // Undeclared exception!
      try { 
        kdcOptions0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.options.Options", e);
      }
  }
}
