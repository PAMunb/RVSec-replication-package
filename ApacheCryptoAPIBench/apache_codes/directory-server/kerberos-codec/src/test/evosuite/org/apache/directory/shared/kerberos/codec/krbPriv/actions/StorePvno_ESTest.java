/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:33:50 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.krbPriv.actions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.directory.shared.kerberos.codec.krbPriv.KrbPrivContainer;
import org.apache.directory.shared.kerberos.codec.krbPriv.actions.StorePvno;
import org.apache.directory.shared.kerberos.messages.KrbPriv;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StorePvno_ESTest extends StorePvno_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StorePvno storePvno0 = new StorePvno();
      KrbPrivContainer krbPrivContainer0 = mock(KrbPrivContainer.class, new ViolatedAssumptionAnswer());
      doReturn((KrbPriv) null).when(krbPrivContainer0).getKrbPriv();
      // Undeclared exception!
      try { 
        storePvno0.setPvno((-1204), krbPrivContainer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.krbPriv.actions.StorePvno", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StorePvno storePvno0 = new StorePvno();
      KrbPriv krbPriv0 = mock(KrbPriv.class, new ViolatedAssumptionAnswer());
      KrbPrivContainer krbPrivContainer0 = mock(KrbPrivContainer.class, new ViolatedAssumptionAnswer());
      doReturn(krbPriv0).when(krbPrivContainer0).getKrbPriv();
      storePvno0.setPvno((-1204), krbPrivContainer0);
      assertEquals("KRB-PRIV pvno", storePvno0.toString());
  }
}
