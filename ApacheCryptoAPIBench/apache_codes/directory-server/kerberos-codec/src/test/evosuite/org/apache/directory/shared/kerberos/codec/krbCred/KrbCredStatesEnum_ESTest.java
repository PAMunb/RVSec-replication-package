/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:01:12 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.krbCred;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.krbCred.KrbCredContainer;
import org.apache.directory.shared.kerberos.codec.krbCred.KrbCredGrammar;
import org.apache.directory.shared.kerberos.codec.krbCred.KrbCredStatesEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KrbCredStatesEnum_ESTest extends KrbCredStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KrbCredStatesEnum krbCredStatesEnum0 = KrbCredStatesEnum.START_STATE;
      String string0 = krbCredStatesEnum0.getState(24);
      assertEquals("START_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KrbCredStatesEnum[] krbCredStatesEnumArray0 = KrbCredStatesEnum.values();
      assertEquals(11, krbCredStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KrbCredStatesEnum krbCredStatesEnum0 = KrbCredStatesEnum.valueOf("LAST_KRB_CRED_STATE");
      assertEquals(KrbCredStatesEnum.LAST_KRB_CRED_STATE, krbCredStatesEnum0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KrbCredStatesEnum krbCredStatesEnum0 = KrbCredStatesEnum.LAST_KRB_CRED_STATE;
      boolean boolean0 = krbCredStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KrbCredStatesEnum krbCredStatesEnum0 = KrbCredStatesEnum.KRB_CRED_TICKETS_TAG_STATE;
      boolean boolean0 = krbCredStatesEnum0.isEndState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KrbCredStatesEnum krbCredStatesEnum0 = KrbCredStatesEnum.LAST_KRB_CRED_STATE;
      String string0 = krbCredStatesEnum0.getState(10);
      assertEquals("LAST_KRB_CRED_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KrbCredStatesEnum krbCredStatesEnum0 = KrbCredStatesEnum.LAST_KRB_CRED_STATE;
      String string0 = krbCredStatesEnum0.getState(9);
      assertEquals("LAST_KRB_CRED_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KrbCredStatesEnum krbCredStatesEnum0 = KrbCredStatesEnum.LAST_KRB_CRED_STATE;
      Grammar<KrbCredContainer> grammar0 = KrbCredGrammar.getInstance();
      String string0 = krbCredStatesEnum0.getGrammarName(grammar0);
      assertEquals("KRB_CRED_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KrbCredStatesEnum krbCredStatesEnum0 = KrbCredStatesEnum.valueOf("START_STATE");
      String string0 = krbCredStatesEnum0.getGrammarName((Grammar<KrbCredContainer>) null);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KrbCredStatesEnum krbCredStatesEnum0 = KrbCredStatesEnum.LAST_KRB_CRED_STATE;
      String string0 = krbCredStatesEnum0.getGrammarName(9);
      assertEquals("KRB_CRED_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KrbCredStatesEnum krbCredStatesEnum0 = KrbCredStatesEnum.LAST_KRB_CRED_STATE;
      KrbCredStatesEnum krbCredStatesEnum1 = krbCredStatesEnum0.getStartState();
      assertEquals(KrbCredStatesEnum.START_STATE, krbCredStatesEnum1);
  }
}
