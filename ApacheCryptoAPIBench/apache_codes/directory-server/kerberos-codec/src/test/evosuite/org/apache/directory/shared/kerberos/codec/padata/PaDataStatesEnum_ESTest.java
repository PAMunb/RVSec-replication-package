/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:58:36 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.padata;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.padata.PaDataContainer;
import org.apache.directory.shared.kerberos.codec.padata.PaDataStatesEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PaDataStatesEnum_ESTest extends PaDataStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PaDataStatesEnum paDataStatesEnum0 = PaDataStatesEnum.PADATA_SEQ_STATE;
      String string0 = paDataStatesEnum0.getState((-56));
      assertEquals("PADATA_SEQ_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PaDataStatesEnum[] paDataStatesEnumArray0 = PaDataStatesEnum.values();
      assertEquals(7, paDataStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PaDataStatesEnum paDataStatesEnum0 = PaDataStatesEnum.valueOf("PADATA_TYPE_STATE");
      assertEquals(PaDataStatesEnum.PADATA_TYPE_STATE, paDataStatesEnum0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PaDataStatesEnum paDataStatesEnum0 = PaDataStatesEnum.LAST_PADATA_STATE;
      boolean boolean0 = paDataStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PaDataStatesEnum paDataStatesEnum0 = PaDataStatesEnum.PADATA_VALUE_TAG_STATE;
      boolean boolean0 = paDataStatesEnum0.isEndState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PaDataStatesEnum paDataStatesEnum0 = PaDataStatesEnum.PADATA_VALUE_STATE;
      String string0 = paDataStatesEnum0.getState(6);
      assertEquals("LAST_PADATA_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PaDataStatesEnum paDataStatesEnum0 = PaDataStatesEnum.LAST_PADATA_STATE;
      String string0 = paDataStatesEnum0.getState(7);
      assertEquals("LAST_PADATA_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PaDataStatesEnum paDataStatesEnum0 = PaDataStatesEnum.LAST_PADATA_STATE;
      Grammar<PaDataContainer> grammar0 = (Grammar<PaDataContainer>) mock(Grammar.class, new ViolatedAssumptionAnswer());
      String string0 = paDataStatesEnum0.getGrammarName(grammar0);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PaDataStatesEnum paDataStatesEnum0 = PaDataStatesEnum.PADATA_VALUE_STATE;
      String string0 = paDataStatesEnum0.getGrammarName(0);
      assertEquals("PADATA_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PaDataStatesEnum paDataStatesEnum0 = PaDataStatesEnum.valueOf("LAST_PADATA_STATE");
      PaDataStatesEnum paDataStatesEnum1 = paDataStatesEnum0.getStartState();
      assertEquals(PaDataStatesEnum.START_STATE, paDataStatesEnum1);
  }
}
