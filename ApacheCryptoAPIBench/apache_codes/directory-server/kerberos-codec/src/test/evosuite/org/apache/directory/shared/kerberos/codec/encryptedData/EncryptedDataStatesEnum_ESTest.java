/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:05:44 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.encryptedData;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.encryptedData.EncryptedDataContainer;
import org.apache.directory.shared.kerberos.codec.encryptedData.EncryptedDataStatesEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EncryptedDataStatesEnum_ESTest extends EncryptedDataStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EncryptedDataStatesEnum encryptedDataStatesEnum0 = EncryptedDataStatesEnum.ENCRYPTED_DATA_CIPHER_TAG_STATE;
      String string0 = encryptedDataStatesEnum0.getState(2564);
      assertEquals("ENCRYPTED_DATA_CIPHER_TAG_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EncryptedDataStatesEnum[] encryptedDataStatesEnumArray0 = EncryptedDataStatesEnum.values();
      assertEquals(9, encryptedDataStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EncryptedDataStatesEnum encryptedDataStatesEnum0 = EncryptedDataStatesEnum.valueOf("LAST_ENCRYPTED_DATA_STATE");
      assertTrue(encryptedDataStatesEnum0.isEndState());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EncryptedDataStatesEnum encryptedDataStatesEnum0 = EncryptedDataStatesEnum.valueOf("ENCRYPTED_DATA_CIPHER_TAG_STATE");
      assertEquals(EncryptedDataStatesEnum.START_STATE, encryptedDataStatesEnum0.getStartState());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EncryptedDataStatesEnum encryptedDataStatesEnum0 = EncryptedDataStatesEnum.LAST_ENCRYPTED_DATA_STATE;
      boolean boolean0 = encryptedDataStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EncryptedDataStatesEnum encryptedDataStatesEnum0 = EncryptedDataStatesEnum.ENCRYPTED_DATA_CIPHER_TAG_STATE;
      boolean boolean0 = encryptedDataStatesEnum0.isEndState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EncryptedDataStatesEnum encryptedDataStatesEnum0 = EncryptedDataStatesEnum.ENCRYPTED_DATA_CIPHER_TAG_STATE;
      String string0 = encryptedDataStatesEnum0.getState(8);
      assertEquals("ENCRYPTED_DATA_END_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EncryptedDataStatesEnum encryptedDataStatesEnum0 = EncryptedDataStatesEnum.ENCRYPTED_DATA_CIPHER_TAG_STATE;
      String string0 = encryptedDataStatesEnum0.getState(2);
      assertEquals("ENCRYPTED_DATA_CIPHER_TAG_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EncryptedDataStatesEnum encryptedDataStatesEnum0 = EncryptedDataStatesEnum.ENCRYPTED_DATA_CIPHER_TAG_STATE;
      Grammar<EncryptedDataContainer> grammar0 = (Grammar<EncryptedDataContainer>) mock(Grammar.class, new ViolatedAssumptionAnswer());
      String string0 = encryptedDataStatesEnum0.getGrammarName(grammar0);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EncryptedDataStatesEnum encryptedDataStatesEnum0 = EncryptedDataStatesEnum.ENCRYPTED_DATA_CIPHER_TAG_STATE;
      EncryptedDataStatesEnum encryptedDataStatesEnum1 = encryptedDataStatesEnum0.getStartState();
      assertEquals(EncryptedDataStatesEnum.START_STATE, encryptedDataStatesEnum1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EncryptedDataStatesEnum encryptedDataStatesEnum0 = EncryptedDataStatesEnum.ENCRYPTED_DATA_CIPHER_TAG_STATE;
      String string0 = encryptedDataStatesEnum0.getGrammarName(2564);
      assertEquals("ENCRYPTED_DATA_GRAMMAR", string0);
  }
}
