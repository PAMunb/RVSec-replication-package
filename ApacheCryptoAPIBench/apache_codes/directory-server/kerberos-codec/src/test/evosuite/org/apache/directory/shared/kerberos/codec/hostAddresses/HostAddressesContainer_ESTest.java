/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:21:44 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.hostAddresses;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.directory.api.asn1.ber.tlv.TLVStateEnum;
import org.apache.directory.shared.kerberos.codec.hostAddresses.HostAddressesContainer;
import org.apache.directory.shared.kerberos.components.HostAddress;
import org.apache.directory.shared.kerberos.components.HostAddresses;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HostAddressesContainer_ESTest extends HostAddressesContainer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HostAddressesContainer hostAddressesContainer0 = new HostAddressesContainer();
      HostAddress hostAddress0 = mock(HostAddress.class, new ViolatedAssumptionAnswer());
      hostAddressesContainer0.addHostAddress(hostAddress0);
      assertEquals(TLVStateEnum.TAG_STATE_START, hostAddressesContainer0.getState());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HostAddressesContainer hostAddressesContainer0 = new HostAddressesContainer();
      HostAddresses hostAddresses0 = hostAddressesContainer0.getHostAddresses();
      assertNotNull(hostAddresses0);
  }
}
