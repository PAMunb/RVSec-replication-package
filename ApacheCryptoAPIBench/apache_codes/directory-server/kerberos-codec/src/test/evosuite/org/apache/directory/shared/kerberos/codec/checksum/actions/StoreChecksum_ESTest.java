/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:35:17 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.checksum.actions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.directory.shared.kerberos.codec.checksum.ChecksumContainer;
import org.apache.directory.shared.kerberos.codec.checksum.actions.StoreChecksum;
import org.apache.directory.shared.kerberos.components.Checksum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StoreChecksum_ESTest extends StoreChecksum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StoreChecksum storeChecksum0 = new StoreChecksum();
      byte[] byteArray0 = new byte[6];
      Checksum checksum0 = mock(Checksum.class, new ViolatedAssumptionAnswer());
      ChecksumContainer checksumContainer0 = mock(ChecksumContainer.class, new ViolatedAssumptionAnswer());
      doReturn(checksum0).when(checksumContainer0).getChecksum();
      storeChecksum0.setOctetString(byteArray0, checksumContainer0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StoreChecksum storeChecksum0 = new StoreChecksum();
      // Undeclared exception!
      try { 
        storeChecksum0.setOctetString((byte[]) null, (ChecksumContainer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.checksum.actions.StoreChecksum", e);
      }
  }
}
