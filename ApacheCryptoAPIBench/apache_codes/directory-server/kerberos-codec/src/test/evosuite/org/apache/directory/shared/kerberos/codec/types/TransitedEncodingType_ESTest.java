/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:53:39 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.types;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.shared.kerberos.codec.types.TransitedEncodingType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TransitedEncodingType_ESTest extends TransitedEncodingType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TransitedEncodingType[] transitedEncodingTypeArray0 = TransitedEncodingType.values();
      assertEquals(2, transitedEncodingTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TransitedEncodingType transitedEncodingType0 = TransitedEncodingType.valueOf("NULL");
      assertEquals(0, transitedEncodingType0.getValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TransitedEncodingType transitedEncodingType0 = TransitedEncodingType.valueOf("DOMAIN_X500_COMPRESS");
      assertEquals(TransitedEncodingType.DOMAIN_X500_COMPRESS, transitedEncodingType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TransitedEncodingType transitedEncodingType0 = TransitedEncodingType.getTypeByOrdinal(0);
      int int0 = transitedEncodingType0.getValue();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TransitedEncodingType transitedEncodingType0 = TransitedEncodingType.DOMAIN_X500_COMPRESS;
      String string0 = transitedEncodingType0.toString();
      assertEquals("Domain X500 compress (1)", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TransitedEncodingType transitedEncodingType0 = TransitedEncodingType.getTypeByOrdinal(0);
      String string0 = transitedEncodingType0.toString();
      assertEquals("null (0)", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TransitedEncodingType transitedEncodingType0 = TransitedEncodingType.getTypeByOrdinal(1);
      assertEquals(TransitedEncodingType.DOMAIN_X500_COMPRESS, transitedEncodingType0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TransitedEncodingType transitedEncodingType0 = TransitedEncodingType.DOMAIN_X500_COMPRESS;
      int int0 = transitedEncodingType0.getValue();
      assertEquals(1, int0);
  }
}
