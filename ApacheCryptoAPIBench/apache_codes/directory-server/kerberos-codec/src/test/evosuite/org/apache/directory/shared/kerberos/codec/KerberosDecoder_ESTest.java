/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 19:53:47 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import org.apache.directory.api.asn1.ber.Asn1Decoder;
import org.apache.directory.api.asn1.ber.tlv.TLV;
import org.apache.directory.api.asn1.ber.tlv.TLVStateEnum;
import org.apache.directory.shared.kerberos.codec.KerberosDecoder;
import org.apache.directory.shared.kerberos.codec.KerberosMessageContainer;
import org.apache.directory.shared.kerberos.components.AuthorizationData;
import org.apache.directory.shared.kerberos.components.EncKdcRepPart;
import org.apache.directory.shared.kerberos.components.EncTicketPart;
import org.apache.directory.shared.kerberos.components.KdcReqBody;
import org.apache.directory.shared.kerberos.components.LastReq;
import org.apache.directory.shared.kerberos.components.PaEncTsEnc;
import org.apache.directory.shared.kerberos.components.PrincipalName;
import org.apache.directory.shared.kerberos.components.TransitedEncoding;
import org.apache.directory.shared.kerberos.messages.ApRep;
import org.apache.directory.shared.kerberos.messages.ApReq;
import org.apache.directory.shared.kerberos.messages.Authenticator;
import org.apache.directory.shared.kerberos.messages.EncTgsRepPart;
import org.apache.directory.shared.kerberos.messages.KrbPriv;
import org.apache.directory.shared.kerberos.messages.Ticket;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KerberosDecoder_ESTest extends KerberosDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KerberosDecoder kerberosDecoder0 = new KerberosDecoder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte) (-60);
      byteArray0[4] = (byte)108;
      byteArray0[5] = (byte) (-1);
      byteArray0[7] = (byte)3;
      byteArray0[8] = (byte)76;
      // Undeclared exception!
      KerberosDecoder.decodeEncTicketPart(byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KerberosDecoder kerberosDecoder0 = new KerberosDecoder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)43;
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)4;
      KerberosDecoder.decodeAuthorizationData(byteArray0);
      try { 
        KerberosDecoder.decodeTicket(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)117;
      byteArray0[0] = (byte)117;
      byte byte1 = (byte)125;
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte) (-53);
      byte byte2 = (byte)9;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)16;
      byteArray0[5] = (byte)108;
      KerberosDecoder.decodeKrbPriv(byteArray0);
      try { 
        KerberosDecoder.decodeEncKrbPrivPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      ApReq apReq0 = new ApReq();
      kerberosMessageContainer0.setMessage(apReq0);
      byte[] byteArray0 = new byte[5];
      TLVStateEnum tLVStateEnum0 = TLVStateEnum.PDU_DECODED;
      kerberosMessageContainer0.setState(tLVStateEnum0);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      kerberosMessageContainer0.setStream(byteBuffer0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
      EncTgsRepPart encTgsRepPart0 = new EncTgsRepPart();
      try { 
        KerberosDecoder.decodeAuthenticator(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.setTCP(true);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      TLVStateEnum tLVStateEnum0 = TLVStateEnum.PDU_DECODED;
      kerberosMessageContainer0.setState(tLVStateEnum0);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)1;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      kerberosMessageContainer0.setStream(byteBuffer0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
      try { 
        KerberosDecoder.decodeEncTgsRepPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Request failed due to being malformed.
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      byte[] byteArray0 = new byte[5];
      TLVStateEnum tLVStateEnum0 = TLVStateEnum.PDU_DECODED;
      kerberosMessageContainer0.setState(tLVStateEnum0);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      kerberosMessageContainer0.setStream(byteBuffer0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
      assertEquals(5, kerberosMessageContainer0.getDecodedBytes());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      byte[] byteArray0 = new byte[5];
      TLVStateEnum tLVStateEnum0 = TLVStateEnum.VALUE_STATE_END;
      kerberosMessageContainer0.setState(tLVStateEnum0);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      kerberosMessageContainer0.setStream(byteBuffer0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      // Undeclared exception!
      KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.setTCP(true);
      byte[] byteArray0 = new byte[5];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      byteBuffer0.put((byte) (-39));
      kerberosMessageContainer0.setStream(byteBuffer0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
      try { 
        KerberosDecoder.decodeEncTgsRepPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Request failed due to being malformed.
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.setTCP(true);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      LastReq lastReq0 = new LastReq();
      ByteBuffer byteBuffer1 = lastReq0.encode(byteBuffer0);
      kerberosMessageContainer0.setStream(byteBuffer1);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
      try { 
        KerberosDecoder.decodeEncTgsRepPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Request failed due to being malformed.
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.setTCP(true);
      byte[] byteArray0 = new byte[3];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      kerberosMessageContainer0.setStream(byteBuffer0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      Object object0 = KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.setTCP(true);
      byte[] byteArray0 = new byte[5];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      kerberosMessageContainer0.setStream(byteBuffer0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
      assertEquals(0, kerberosMessageContainer0.getTcpLength());
      assertEquals(TLVStateEnum.LENGTH_STATE_START, kerberosMessageContainer0.getState());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      kerberosMessageContainer0.setStream(byteBuffer0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
      assertEquals(1, kerberosMessageContainer0.getDecodedBytes());
      assertEquals(TLVStateEnum.LENGTH_STATE_START, kerberosMessageContainer0.getState());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-44);
      byteArray0[3] = (byte)22;
      byteArray0[4] = (byte)1;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      kerberosMessageContainer0.setStream(byteBuffer0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      try { 
        KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_00001_BAD_TRANSITION_FROM_STATE Bad transition from state START_STATE, tag 0x01
         //
         verifyException("org.apache.directory.api.asn1.ber.grammar.AbstractGrammar", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.setTCP(true);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)1;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      kerberosMessageContainer0.setStream(byteBuffer0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
      try { 
        KerberosDecoder.decodeEncTgsRepPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Request failed due to being malformed.
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      byte[] byteArray0 = new byte[5];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      kerberosMessageContainer0.setStream(byteBuffer0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      try { 
        KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_00001_BAD_TRANSITION_FROM_STATE Bad transition from state START_STATE, tag 0x00
         //
         verifyException("org.apache.directory.api.asn1.ber.grammar.AbstractGrammar", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeAuthorizationData((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodePrincipalName((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeEncTicketPart((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeApRep((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeKrbPriv((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeAuthenticator((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      PaEncTsEnc paEncTsEnc0 = new PaEncTsEnc();
      try { 
        KerberosDecoder.decodeEncryptionKey(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      KerberosDecoder kerberosDecoder0 = new KerberosDecoder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)126;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-69);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)88;
      byteArray0[7] = (byte)0;
      try { 
        KerberosDecoder.decodeEncryptionKey(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      KerberosDecoder.decodeEncryptionKey(byteArray0);
      KerberosDecoder.decodeEncryptionKey(byteArray0);
      KerberosDecoder.decodeAuthenticator(byteArray0);
      KerberosDecoder.decodeApReq(byteArray0);
      KerberosDecoder.decodeApRep(byteArray0);
      KerberosDecoder.decodeApRep(byteArray0);
      KerberosDecoder.decodeEncryptionKey(byteArray0);
      TLV tLV0 = new TLV(1487);
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      kerberosMessageContainer0.setParentTLV(tLV0);
      kerberosMessageContainer0.setTCP(true);
      // Undeclared exception!
      try { 
        KerberosDecoder.decode(kerberosMessageContainer0, (Asn1Decoder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      kerberosMessageContainer0.setTCP(true);
      // Undeclared exception!
      try { 
        KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeApReq((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteBuffer.wrap(byteArray0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      try { 
        KerberosDecoder.decodeEncAsRepPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      KerberosDecoder kerberosDecoder0 = new KerberosDecoder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-71);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-81);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-22);
      byteArray0[6] = (byte) (-85);
      byteArray0[7] = (byte) (-10);
      byteArray0[8] = (byte) (-44);
      try { 
        KerberosDecoder.decodeEncAsRepPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      try { 
        KerberosDecoder.decodeEncKrbPrivPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-69);
      KerberosDecoder.decodeApReq(byteArray0);
      KerberosDecoder.decodePaEncTsEnc(byteArray0);
      KerberosDecoder.decodeEncTicketPart(byteArray0);
      KerberosDecoder.decodeEncryptedData(byteArray0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-69);
      byteArray1[1] = (byte) (-69);
      byteArray1[2] = (byte) (-69);
      byteArray1[3] = (byte) (-69);
      try { 
        KerberosDecoder.decodeEncKrbPrivPart(byteArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      byte[] byteArray0 = new byte[5];
      try { 
        KerberosDecoder.decodeAuthorizationData(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-119);
      byteArray0[0] = (byte) (-119);
      byte byte1 = (byte) (-50);
      byteArray0[1] = (byte) (-50);
      byte byte2 = (byte)1;
      byteArray0[2] = (byte)1;
      byte byte3 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-115);
      try { 
        KerberosDecoder.decodeAuthorizationData(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-31);
      try { 
        KerberosDecoder.decodeEncApRepPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte) (-4);
      byteArray0[2] = (byte) (-31);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-4);
      byteArray0[5] = (byte) (-127);
      byteArray0[6] = (byte)71;
      try { 
        KerberosDecoder.decodeEncApRepPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteBuffer.wrap(byteArray0);
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      try { 
        KerberosDecoder.decodeEncTgsRepPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Request failed due to being malformed.
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-78);
      byteArray0[7] = (byte)0;
      try { 
        KerberosDecoder.decodeEncTgsRepPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Request failed due to being malformed.
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      AuthorizationData authorizationData0 = KerberosDecoder.decodeAuthorizationData(byteArray0);
      assertNull(authorizationData0);
      
      KerberosDecoder.decodeEncAsRepPart(byteArray0);
      KerberosDecoder.decodeEncKrbPrivPart(byteArray0);
      KerberosDecoder.decodeEncApRepPart(byteArray0);
      KerberosDecoder.decodeEncTicketPart(byteArray0);
      KerberosDecoder.decodeEncryptionKey(byteArray0);
      KerberosDecoder.decodeApReq(byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)1;
      KerberosDecoder.decodeAuthenticator(byteArray1);
      KerberosDecoder.decodeEncryptedData(byteArray0);
      KerberosDecoder.decodePaEncTsEnc(byteArray0);
      KerberosDecoder.decodeEncKdcRepPart(byteArray1);
      byte[] byteArray2 = new byte[0];
      KerberosDecoder.decodeAuthorizationData(byteArray2);
      KerberosDecoder.decodeApRep(byteArray2);
      KerberosDecoder.decodeEncKrbPrivPart(byteArray1);
      KerberosDecoder.decodeEncTgsRepPart(byteArray1);
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte)0;
      KerberosDecoder.decodeApRep(byteArray3);
      KerberosDecoder.decodeApRep(byteArray0);
      KerberosDecoder.decodeEncryptedData(byteArray2);
      KerberosDecoder kerberosDecoder0 = new KerberosDecoder();
      KerberosDecoder.decodeAuthenticator(byteArray1);
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      KdcReqBody kdcReqBody0 = new KdcReqBody();
      TransitedEncoding transitedEncoding0 = new TransitedEncoding();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      try { 
        transitedEncoding0.encode(byteBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ERR_138 The PDU buffer size is too small !
         //
         verifyException("org.apache.directory.shared.kerberos.components.TransitedEncoding", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeEncApRepPart((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeEncryptionKey((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      try { 
        KerberosDecoder.decodeApRep(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)8;
      byteArray0[2] = (byte)8;
      try { 
        KerberosDecoder.decodeApRep(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ApRep apRep0 = KerberosDecoder.decodeApRep(byteArray0);
      assertNull(apRep0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      try { 
        KerberosDecoder.decodeTicket(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte)28;
      byteArray0[6] = (byte)47;
      try { 
        KerberosDecoder.decodeTicket(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      try { 
        KerberosDecoder.decodeKrbPriv(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      KerberosDecoder kerberosDecoder0 = new KerberosDecoder();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      KerberosDecoder.decodeEncryptedData(byteArray0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)119;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte) (-52);
      byteArray1[3] = (byte)31;
      try { 
        KerberosDecoder.decodeKrbPriv(byteArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-69);
      KerberosDecoder.decodeApReq(byteArray0);
      KerberosDecoder.decodePaEncTsEnc(byteArray0);
      KerberosDecoder.decodeEncTicketPart(byteArray0);
      KerberosDecoder.decodeEncryptedData(byteArray0);
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      // Undeclared exception!
      try { 
        KerberosDecoder.decode(kerberosMessageContainer0, (Asn1Decoder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      try { 
        KerberosDecoder.decodeAuthenticator(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)113;
      KerberosDecoder.decodePaEncTsEnc(byteArray0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)113;
      byteArray1[1] = (byte)113;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)4;
      try { 
        KerberosDecoder.decodeAuthenticator(byteArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeEncAsRepPart((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      KrbPriv krbPriv0 = KerberosDecoder.decodeKrbPriv(byteArray0);
      assertNull(krbPriv0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)1;
      KerberosDecoder.decodeApReq(byteArray0);
      KerberosDecoder.decodePrincipalName(byteArray0);
      KerberosDecoder.decodeKrbPriv(byteArray0);
      KerberosDecoder.decodeEncKdcRepPart(byteArray0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-127);
      byteArray1[1] = (byte)53;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)53;
      byteArray1[5] = (byte)1;
      byteArray1[6] = (byte)1;
      KerberosDecoder.decodeTicket(byteArray1);
      KerberosDecoder.decodeEncAsRepPart(byteArray0);
      KerberosDecoder.decodeTicket(byteArray1);
      KerberosDecoder.decodePaEncTsEnc(byteArray0);
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)53;
      byteArray2[1] = (byte) (-127);
      EncTicketPart encTicketPart0 = KerberosDecoder.decodeEncTicketPart(byteArray2);
      assertNull(encTicketPart0.getCRealm());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeEncKdcRepPart((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      KerberosDecoder kerberosDecoder0 = new KerberosDecoder();
      byte[] byteArray0 = new byte[6];
      try { 
        KerberosDecoder.decodePaEncTsEnc(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      KerberosDecoder kerberosDecoder0 = new KerberosDecoder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-45);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)127;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-80);
      byteArray0[6] = (byte)92;
      try { 
        KerberosDecoder.decodePaEncTsEnc(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodePaEncTsEnc((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      try { 
        KerberosDecoder.decodeEncTicketPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)127;
      byteArray0[1] = (byte)110;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-44);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-119);
      byteArray0[7] = (byte)4;
      byteArray0[8] = (byte) (-64);
      try { 
        KerberosDecoder.decodeEncTicketPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      EncTicketPart encTicketPart0 = KerberosDecoder.decodeEncTicketPart(byteArray0);
      assertNull(encTicketPart0.getCRealm());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      try { 
        KerberosDecoder.decodeEncryptedData(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-107);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-105);
      try { 
        KerberosDecoder.decodeEncryptedData(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeEncryptedData((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      try { 
        KerberosDecoder.decodeApReq(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-125);
      byteArray0[1] = (byte) (-19);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)19;
      try { 
        KerberosDecoder.decodeApReq(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-83);
      try { 
        KerberosDecoder.decodePrincipalName(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)0;
      try { 
        KerberosDecoder.decodePrincipalName(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PrincipalName principalName0 = KerberosDecoder.decodePrincipalName(byteArray0);
      assertNull(principalName0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteBuffer.wrap(byteArray0);
      try { 
        KerberosDecoder.decodeEncKdcRepPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)27;
      byteArray0[4] = (byte)1;
      try { 
        KerberosDecoder.decodeEncKdcRepPart(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Integrity check on decrypted field failed
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeTicket((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ApReq apReq0 = KerberosDecoder.decodeApReq(byteArray0);
      assertNull(apReq0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      KerberosDecoder kerberosDecoder0 = new KerberosDecoder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte)82;
      byteArray0[4] = (byte)48;
      KerberosDecoder.decodeApReq(byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)37;
      KerberosDecoder.decodeAuthenticator(byteArray1);
      Ticket ticket0 = KerberosDecoder.decodeTicket(byteArray1);
      assertNull(ticket0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Authenticator authenticator0 = KerberosDecoder.decodeAuthenticator(byteArray0);
      assertNull(authenticator0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      EncKdcRepPart encKdcRepPart0 = KerberosDecoder.decodeEncKdcRepPart(byteArray0);
      assertNull(encKdcRepPart0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      // Undeclared exception!
      try { 
        KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeEncTgsRepPart((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      // Undeclared exception!
      try { 
        KerberosDecoder.decodeEncKrbPrivPart((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-125);
      byteArray0[1] = (byte)56;
      KerberosDecoder.decodeEncKdcRepPart(byteArray0);
      KerberosDecoder.decodeEncKrbPrivPart(byteArray0);
      KerberosDecoder.decodeEncTgsRepPart(byteArray0);
      KerberosDecoder.decodeAuthenticator(byteArray0);
      byte[] byteArray1 = new byte[0];
      KerberosDecoder.decodeEncKrbPrivPart(byteArray1);
      KerberosMessageContainer kerberosMessageContainer0 = new KerberosMessageContainer();
      Asn1Decoder asn1Decoder0 = new Asn1Decoder();
      // Undeclared exception!
      try { 
        KerberosDecoder.decode(kerberosMessageContainer0, asn1Decoder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.codec.KerberosDecoder", e);
      }
  }
}
