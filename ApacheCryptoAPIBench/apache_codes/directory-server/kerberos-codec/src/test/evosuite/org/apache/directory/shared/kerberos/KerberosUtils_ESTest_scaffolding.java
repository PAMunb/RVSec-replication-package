/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Apr 21 19:37:30 GMT 2022
 */

package org.apache.directory.shared.kerberos;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class KerberosUtils_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.directory.shared.kerberos.KerberosUtils"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.dir", "/home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/directory-server/kerberos-codec"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(KerberosUtils_ESTest_scaffolding.class.getClassLoader() ,
      "net.sf.ehcache.util.concurrent.Striped64",
      "org.apache.directory.shared.kerberos.components.EncryptionKey",
      "org.apache.directory.api.util.Strings",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$TreeBin",
      "org.apache.directory.shared.kerberos.KerberosMessageType",
      "org.apache.directory.shared.kerberos.exceptions.KerberosException",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption",
      "org.apache.directory.shared.kerberos.codec.types.SamType",
      "org.apache.directory.api.asn1.Asn1Object",
      "org.apache.directory.shared.kerberos.components.PaEncTimestamp",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$EntrySetView",
      "org.apache.directory.shared.kerberos.flags.AbstractKerberosFlags",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$ValuesView",
      "net.sf.ehcache.util.concurrent.Striped64$ThreadHashCode",
      "org.apache.directory.shared.kerberos.KerberosUtils",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.Aes128CtsSha1Encryption",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$Spliterator",
      "org.apache.directory.shared.kerberos.components.PrincipalName",
      "net.sf.ehcache.util.concurrent.Striped64$Cell",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$KeySetView",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$Segment",
      "org.apache.directory.server.kerberos.changepwd.exceptions.ChangePasswordException",
      "org.apache.directory.shared.kerberos.messages.KerberosMessage",
      "org.apache.directory.shared.kerberos.messages.Authenticator",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.NFold",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.Aes256CtsSha1Encryption",
      "org.apache.directory.shared.kerberos.components.EncTicketPart",
      "org.apache.directory.shared.kerberos.codec.types.PrincipalNameType$1",
      "net.sf.ehcache.util.concurrent.LongAdder",
      "org.apache.directory.api.asn1.util.BitString",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.CipherTextHandler",
      "org.apache.directory.api.asn1.EncoderException",
      "org.apache.directory.shared.kerberos.components.EncryptedData",
      "org.apache.directory.shared.kerberos.codec.types.EncryptionType",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$KeyIterator",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap",
      "org.apache.directory.shared.kerberos.codec.options.ApOptions",
      "org.apache.directory.shared.kerberos.exceptions.ErrorType",
      "org.apache.directory.server.kerberos.shared.store.PrincipalStore",
      "org.apache.directory.shared.kerberos.exceptions.InvalidTicketException",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption",
      "org.apache.directory.shared.kerberos.codec.types.PrincipalNameType",
      "org.apache.directory.server.kerberos.shared.store.PrincipalStoreEntry",
      "net.sf.ehcache.pool.impl.UnboundedPool",
      "org.apache.directory.shared.kerberos.codec.options.Options",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$TreeNode",
      "net.sf.ehcache.pool.Pool",
      "org.apache.directory.shared.kerberos.flags.KerberosFlag",
      "org.apache.directory.shared.kerberos.messages.Ticket",
      "org.apache.directory.api.ldap.model.constants.Loggers",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.EncryptionEngine",
      "org.apache.directory.server.kerberos.shared.crypto.checksum.ChecksumEngine",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$RemovalCallback",
      "org.apache.directory.server.i18n.I18n",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$CHMView",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$Traverser",
      "org.apache.directory.server.kerberos.shared.replay.ReplayCache",
      "org.apache.directory.shared.kerberos.KerberosTime",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage",
      "net.sf.ehcache.pool.PoolAccessor",
      "net.sf.ehcache.store.cachingtier.HeapCacheBackEnd",
      "org.apache.directory.shared.kerberos.messages.ApReq",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption",
      "net.sf.ehcache.pool.impl.UnboundedPool$UnboundedPoolAccessor",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$Node",
      "net.sf.ehcache.store.cachingtier.PooledBasedBackEnd"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.apache.directory.server.kerberos.shared.store.PrincipalStore", false, KerberosUtils_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.apache.directory.server.kerberos.shared.store.PrincipalStoreEntry", false, KerberosUtils_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(KerberosUtils_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.directory.api.util.Strings",
      "org.apache.directory.shared.kerberos.codec.types.EncryptionType",
      "org.apache.directory.shared.kerberos.KerberosUtils",
      "org.apache.directory.server.i18n.I18n",
      "org.apache.directory.shared.kerberos.exceptions.ErrorType",
      "org.apache.directory.shared.kerberos.KerberosMessageType",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.KeyUsage",
      "org.apache.directory.shared.kerberos.codec.KerberosDecoder",
      "org.apache.directory.shared.kerberos.components.PrincipalName",
      "org.apache.directory.shared.kerberos.components.KdcReqBody",
      "org.apache.directory.shared.kerberos.components.EncTicketPart",
      "org.apache.directory.api.asn1.util.BitString",
      "org.apache.directory.shared.kerberos.flags.AbstractKerberosFlags",
      "org.apache.directory.shared.kerberos.flags.TicketFlags",
      "org.apache.directory.shared.kerberos.messages.KerberosMessage",
      "org.apache.directory.shared.kerberos.messages.ApReq",
      "org.apache.directory.shared.kerberos.messages.KrbError",
      "org.apache.directory.shared.kerberos.messages.ApRep",
      "org.apache.directory.shared.kerberos.messages.Ticket",
      "org.apache.directory.shared.kerberos.components.EncryptionKey",
      "org.apache.directory.shared.kerberos.components.EncryptedData",
      "net.sf.ehcache.Cache",
      "net.sf.ehcache.store.MemoryStoreEvictionPolicy",
      "net.sf.ehcache.config.CacheWriterConfiguration$WriteMode",
      "net.sf.ehcache.config.CacheWriterConfiguration",
      "net.sf.ehcache.config.CacheConfiguration$TransactionalMode",
      "net.sf.ehcache.config.CopyStrategyConfiguration",
      "net.sf.ehcache.config.CacheConfiguration",
      "net.sf.ehcache.config.ElementValueComparatorConfiguration",
      "net.sf.ehcache.EhcacheDefaultClassLoader",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$Node",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$TreeNode",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$CHMView",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$KeySetView",
      "org.apache.directory.shared.kerberos.messages.Authenticator",
      "org.apache.directory.shared.kerberos.components.KrbCredInfo",
      "org.apache.directory.shared.kerberos.components.KdcRep",
      "org.apache.directory.shared.kerberos.messages.TgsRep",
      "net.sf.ehcache.util.concurrent.Striped64$ThreadHashCode",
      "net.sf.ehcache.util.concurrent.Striped64",
      "net.sf.ehcache.util.concurrent.LongAdder",
      "net.sf.ehcache.pool.impl.UnboundedPool$UnboundedPoolAccessor",
      "net.sf.ehcache.pool.impl.UnboundedPool",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$Traverser",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$KeyIterator",
      "org.apache.directory.shared.kerberos.components.KdcReq",
      "org.apache.directory.shared.kerberos.messages.AsReq",
      "org.apache.directory.shared.kerberos.messages.AsRep",
      "org.apache.directory.api.asn1.ber.tlv.TLV",
      "net.sf.ehcache.config.FactoryConfiguration",
      "net.sf.ehcache.config.CacheConfiguration$BootstrapCacheLoaderFactoryConfiguration",
      "org.apache.directory.api.ldap.model.constants.Loggers",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.CipherTextHandler",
      "org.apache.directory.shared.kerberos.messages.EncAsRepPart",
      "org.apache.directory.shared.kerberos.exceptions.KerberosException",
      "org.apache.directory.shared.kerberos.components.Checksum",
      "org.apache.directory.api.asn1.EncoderException",
      "org.apache.directory.shared.kerberos.messages.ChangePasswdData",
      "org.apache.directory.server.kerberos.shared.store.PrincipalStoreEntry",
      "net.sf.ehcache.Cache$CacheStatus",
      "net.sf.ehcache.Status",
      "net.sf.ehcache.statistics.StatisticBuilder",
      "net.sf.ehcache.statistics.StatisticBuilder$AbstractStatisticBuilder",
      "net.sf.ehcache.statistics.StatisticBuilder$OperationStatisticBuilder",
      "org.terracotta.context.WeakIdentityHashMap",
      "org.terracotta.context.ContextManager",
      "org.terracotta.statistics.StatisticsManager$1",
      "org.terracotta.statistics.StatisticsManager",
      "org.terracotta.statistics.AbstractSourceStatistic",
      "org.terracotta.statistics.AbstractOperationStatistic",
      "org.terracotta.statistics.GeneralOperationStatistic",
      "net.sf.ehcache.CacheOperationOutcomes$GetOutcome",
      "org.terracotta.statistics.util.VicariousThreadLocal",
      "org.terracotta.statistics.jsr166e.Striped64$ThreadHashCode",
      "org.terracotta.statistics.jsr166e.Striped64",
      "org.terracotta.statistics.jsr166e.LongAdder",
      "org.terracotta.context.ContextManager$1",
      "org.terracotta.context.WeakIdentityHashMap$IdentityWeakReference",
      "org.terracotta.context.extractor.ObjectContextExtractor",
      "org.terracotta.context.extractor.MethodAttributeGetter",
      "org.terracotta.context.extractor.WeakMethodAttributeGetter",
      "org.terracotta.context.extractor.LazyContextElement",
      "org.terracotta.context.AbstractTreeNode",
      "org.terracotta.context.MutableTreeNode",
      "org.terracotta.statistics.StatisticsManager$MethodCallable",
      "org.terracotta.statistics.PassThroughStatistic",
      "org.terracotta.context.extractor.WeakAttributeGetter",
      "org.terracotta.context.extractor.FieldAttributeGetter",
      "org.terracotta.context.extractor.WeakFieldAttributeGetter",
      "net.sf.ehcache.CacheOperationOutcomes$PutOutcome",
      "net.sf.ehcache.CacheOperationOutcomes$RemoveOutcome",
      "net.sf.ehcache.CacheOperationOutcomes$GetAllOutcome",
      "net.sf.ehcache.CacheOperationOutcomes$PutAllOutcome",
      "net.sf.ehcache.CacheOperationOutcomes$RemoveAllOutcome",
      "net.sf.ehcache.CacheOperationOutcomes$SearchOutcome",
      "net.sf.ehcache.CacheOperationOutcomes$ReplaceOneArgOutcome",
      "net.sf.ehcache.CacheOperationOutcomes$ReplaceTwoArgOutcome",
      "net.sf.ehcache.CacheOperationOutcomes$PutIfAbsentOutcome",
      "net.sf.ehcache.CacheOperationOutcomes$RemoveElementOutcome",
      "net.sf.ehcache.CacheException",
      "net.sf.ehcache.config.InvalidConfigurationException",
      "net.sf.ehcache.store.cachingtier.CountBasedBackEnd",
      "net.sf.ehcache.store.AbstractPolicy",
      "net.sf.ehcache.store.LruPolicy",
      "org.apache.directory.server.kerberos.shared.replay.ReplayCacheImpl",
      "org.apache.directory.server.kerberos.shared.replay.ReplayCacheImpl$ClockskewExpirationPolicy",
      "org.apache.directory.shared.kerberos.messages.EncTgsRepPart",
      "org.apache.directory.shared.kerberos.messages.EncApRepPart",
      "net.sf.ehcache.store.MemoryLimitedCacheLoader",
      "net.sf.ehcache.terracotta.TerracottaBootstrapCacheLoader",
      "net.sf.ehcache.DiskStorePathManager",
      "net.sf.ehcache.event.RegisteredEventListeners",
      "net.sf.ehcache.CacheStoreHelper",
      "net.sf.ehcache.CacheOperationOutcomes$ExpiredOutcome",
      "net.sf.ehcache.store.cachingtier.PooledBasedBackEnd",
      "net.sf.ehcache.store.StoreOperationOutcomes$GetOutcome",
      "org.apache.directory.shared.kerberos.components.EncKdcRepPart",
      "net.sf.ehcache.config.DiskStoreConfiguration",
      "net.sf.ehcache.config.DiskStoreConfiguration$Env",
      "org.apache.directory.shared.kerberos.components.AdKdcIssued",
      "org.apache.directory.shared.kerberos.components.ETypeInfoEntry",
      "org.apache.directory.shared.kerberos.components.EncKrbCredPart",
      "org.apache.directory.api.asn1.ber.tlv.UniversalTag",
      "org.apache.directory.api.asn1.ber.tlv.BerValue",
      "net.sf.ehcache.store.cachingtier.OnHeapCachingTier",
      "net.sf.ehcache.store.StoreOperationOutcomes$PutOutcome",
      "net.sf.ehcache.store.StoreOperationOutcomes$RemoveOutcome",
      "net.sf.ehcache.store.cachingtier.OnHeapCachingTier$1",
      "org.apache.directory.shared.kerberos.messages.KrbSafe",
      "org.apache.directory.shared.kerberos.components.PaEncTimestamp",
      "org.apache.directory.shared.kerberos.components.AdAndOr",
      "org.apache.directory.shared.kerberos.components.PaData",
      "net.sf.ehcache.store.FifoPolicy",
      "org.apache.directory.shared.kerberos.messages.TgsReq",
      "org.apache.directory.shared.kerberos.KerberosTime",
      "net.sf.ehcache.store.LfuPolicy",
      "net.sf.ehcache.store.cachingtier.CountBasedBackEnd$1",
      "org.apache.directory.shared.kerberos.components.AuthorizationData",
      "org.apache.directory.shared.kerberos.components.AdIfRelevant",
      "net.sf.ehcache.management.provider.MBeanRegistrationProviderFactoryImpl",
      "net.sf.ehcache.CacheManager",
      "org.apache.directory.shared.kerberos.components.KrbSafeBody",
      "org.apache.directory.shared.kerberos.messages.KrbCred",
      "net.sf.ehcache.distribution.RMIBootstrapCacheLoader",
      "net.sf.ehcache.store.AbstractStore",
      "net.sf.ehcache.store.disk.DiskStore",
      "net.sf.ehcache.store.DiskStoreBootstrapCacheLoader",
      "org.apache.directory.api.i18n.I18n",
      "org.apache.directory.shared.kerberos.components.EncKrbPrivPart",
      "net.sf.ehcache.config.ConfigurationFactory",
      "net.sf.ehcache.config.SizeOfPolicyConfiguration$MaxDepthExceededBehavior",
      "net.sf.ehcache.config.SizeOfPolicyConfiguration",
      "net.sf.ehcache.config.Configuration",
      "net.sf.ehcache.config.BeanHandler",
      "net.sf.ehcache.util.ClassLoaderUtil",
      "net.sf.ehcache.store.DefaultElementValueComparator",
      "org.apache.directory.shared.kerberos.messages.KrbPriv",
      "net.sf.ehcache.event.CacheManagerEventListenerRegistry",
      "net.sf.ehcache.config.Configuration$RuntimeCfg",
      "net.sf.ehcache.util.PropertyUtil",
      "net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup",
      "net.sf.ehcache.transaction.manager.selector.Selector",
      "net.sf.ehcache.transaction.manager.selector.JndiSelector",
      "net.sf.ehcache.transaction.manager.selector.GenericJndiSelector",
      "net.sf.ehcache.transaction.manager.selector.GlassfishSelector",
      "net.sf.ehcache.transaction.manager.selector.FactorySelector",
      "net.sf.ehcache.transaction.manager.selector.WeblogicSelector",
      "net.sf.ehcache.transaction.manager.selector.BitronixSelector",
      "net.sf.ehcache.transaction.manager.selector.ClassSelector",
      "net.sf.ehcache.transaction.manager.selector.AtomikosSelector",
      "net.sf.ehcache.CacheManager$1",
      "net.sf.ehcache.terracotta.TerracottaClient",
      "net.sf.ehcache.terracotta.TerracottaCacheCluster",
      "net.sf.ehcache.config.ConfigurationHelper",
      "net.sf.ehcache.TransactionController",
      "net.sf.ehcache.transaction.DelegatingTransactionIDFactory",
      "net.sf.ehcache.util.lang.VicariousThreadLocal",
      "net.sf.ehcache.TransactionController$TransactionControllerStatistics",
      "net.sf.ehcache.transaction.local.LocalRecoveryManager",
      "net.sf.ehcache.util.FailSafeTimer",
      "net.sf.ehcache.management.provider.MBeanRegistrationProviderImpl",
      "net.sf.ehcache.management.provider.MBeanRegistrationProviderImpl$1",
      "net.sf.ehcache.CacheManager$2",
      "org.apache.directory.shared.kerberos.codec.options.Options",
      "org.apache.directory.shared.kerberos.codec.options.ApOptions",
      "net.sf.ehcache.store.ElementIdAssigningStore",
      "net.sf.ehcache.store.compound.SerializationCopyStrategy",
      "net.sf.ehcache.store.compound.ReadWriteSerializationCopyStrategy",
      "net.sf.ehcache.store.AbstractCopyingCacheStore",
      "net.sf.ehcache.store.TxCopyingCacheStore",
      "net.sf.ehcache.store.CopyStrategyHandler",
      "org.apache.directory.shared.kerberos.components.TypedData",
      "org.apache.directory.shared.kerberos.components.LastReq",
      "org.apache.directory.shared.kerberos.components.TransitedEncoding",
      "org.apache.directory.shared.kerberos.codec.types.TransitedEncodingType",
      "net.sf.ehcache.store.MemoryStore",
      "net.sf.ehcache.store.CopyingCacheStore",
      "net.sf.ehcache.config.CacheConfiguration$CacheExceptionHandlerFactoryConfiguration",
      "net.sf.ehcache.config.TimeoutBehaviorConfiguration$TimeoutBehaviorType",
      "net.sf.ehcache.config.TimeoutBehaviorConfiguration",
      "net.sf.ehcache.config.NonstopConfiguration",
      "net.sf.ehcache.config.TerracottaConfiguration$Consistency",
      "net.sf.ehcache.config.TerracottaConfiguration",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.EncryptionEngine",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.AesCtsSha1Encryption",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.Aes256CtsSha1Encryption",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.NFold",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$ValuesView",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$ValueIterator",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.Aes128CtsSha1Encryption",
      "org.apache.directory.shared.kerberos.codec.options.KdcOptions",
      "org.apache.directory.shared.kerberos.components.HostAddresses",
      "net.sf.ehcache.store.compound.LegacyCopyStrategyAdapter",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$EntrySetView",
      "net.sf.ehcache.util.concurrent.ConcurrentHashMap$EntryIterator",
      "org.apache.directory.shared.kerberos.components.ETypeInfo2Entry",
      "net.sf.ehcache.config.PinningConfiguration",
      "org.apache.directory.shared.kerberos.components.ETypeInfo",
      "org.apache.directory.shared.kerberos.components.PaEncTsEnc",
      "net.sf.ehcache.util.AtomicLongSequence",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.ArcFourHmacMd5Encryption",
      "net.sf.ehcache.transaction.ReadCommittedSoftLockFactory",
      "net.sf.ehcache.transaction.AbstractSoftLockManager",
      "net.sf.ehcache.transaction.SoftLockManagerImpl",
      "net.sf.ehcache.config.PersistenceConfiguration",
      "net.sf.ehcache.util.concurrent.ThreadLocalRandom$1",
      "net.sf.ehcache.util.concurrent.ThreadLocalRandom",
      "net.sf.ehcache.util.lang.VicariousThreadLocal$Holder",
      "net.sf.ehcache.config.CacheConfiguration$CacheLoaderFactoryConfiguration",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.Des3CbcSha1KdEncryption",
      "net.sf.ehcache.config.CacheConfiguration$CacheEventListenerFactoryConfiguration",
      "net.sf.ehcache.config.AbstractCacheConfigurationListener",
      "net.sf.ehcache.store.cachingtier.OnHeapCachingTier$2",
      "net.sf.ehcache.config.ManagementRESTServiceConfiguration",
      "org.apache.directory.shared.kerberos.components.ETypeInfo2",
      "org.apache.directory.shared.kerberos.components.AdMandatoryForKdc",
      "net.sf.ehcache.config.TerracottaClientConfiguration",
      "net.sf.ehcache.store.LruMemoryStore",
      "net.sf.ehcache.store.LruMemoryStore$SpoolingLinkedHashMap",
      "net.sf.ehcache.store.CacheStore",
      "org.apache.directory.shared.kerberos.components.MethodData",
      "org.apache.directory.shared.kerberos.components.HostAddress",
      "net.sf.ehcache.Element",
      "net.sf.ehcache.store.compound.ImmutableValueElementCopyStrategy",
      "org.apache.directory.shared.kerberos.components.TypedData$TD",
      "net.sf.ehcache.store.compound.NullReadWriteCopyStrategy",
      "net.sf.ehcache.store.TerracottaTransactionalCopyingCacheStore",
      "net.sf.ehcache.config.CacheConfiguration$CacheExtensionFactoryConfiguration",
      "net.sf.ehcache.store.LegacyStoreWrapper",
      "net.sf.ehcache.concurrent.StripedReadWriteLockSync",
      "net.sf.ehcache.concurrent.ReadWriteLockSync",
      "org.apache.directory.server.kerberos.shared.crypto.encryption.DesCbcMd5Encryption",
      "org.apache.directory.api.ldap.model.constants.LdapSecurityConstants",
      "net.sf.ehcache.config.generator.ConfigurationSource",
      "net.sf.ehcache.config.generator.ConfigurationSource$InputStreamConfigurationSource",
      "net.sf.ehcache.store.cachingtier.PooledBasedBackEnd$1",
      "net.sf.ehcache.transaction.AbstractTransactionIDFactory",
      "net.sf.ehcache.transaction.TransactionIDFactoryImpl",
      "net.sf.ehcache.transaction.local.LocalTransactionContext",
      "net.sf.ehcache.transaction.TransactionIDImpl",
      "net.sf.ehcache.transaction.Decision",
      "net.sf.ehcache.config.generator.ConfigurationSource$FileNameSource",
      "net.sf.ehcache.CacheOperationOutcomes$EvictionOutcome",
      "net.sf.ehcache.config.Searchable",
      "net.sf.ehcache.search.Attribute",
      "net.sf.ehcache.search.Query",
      "net.sf.ehcache.config.SearchAttribute",
      "net.sf.ehcache.config.generator.ConfigurationSource$URLConfigurationSource",
      "net.sf.ehcache.config.generator.ConfigurationSource$DefaultConfigurationSource",
      "org.apache.directory.shared.kerberos.components.AuthorizationDataEntry",
      "org.apache.directory.shared.kerberos.codec.types.PrincipalNameType$1"
    );
  }
}
