/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:01:51 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.EncKdcRepPart;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.EncKdcRepPart.EncKdcRepPartContainer;
import org.apache.directory.shared.kerberos.codec.EncKdcRepPart.EncKdcRepPartStatesEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EncKdcRepPartStatesEnum_ESTest extends EncKdcRepPartStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EncKdcRepPartStatesEnum encKdcRepPartStatesEnum0 = EncKdcRepPartStatesEnum.ENC_KDC_REP_PART_FLAGS_STATE;
      String string0 = encKdcRepPartStatesEnum0.getState(3396);
      assertEquals("ENC_KDC_REP_PART_FLAGS_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EncKdcRepPartStatesEnum[] encKdcRepPartStatesEnumArray0 = EncKdcRepPartStatesEnum.values();
      assertEquals(23, encKdcRepPartStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EncKdcRepPartStatesEnum encKdcRepPartStatesEnum0 = EncKdcRepPartStatesEnum.valueOf("LAST_ENC_KDC_REP_PART_STATE");
      assertTrue(encKdcRepPartStatesEnum0.isEndState());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EncKdcRepPartStatesEnum encKdcRepPartStatesEnum0 = EncKdcRepPartStatesEnum.valueOf("ENC_KDC_REP_PART_FLAGS_STATE");
      assertFalse(encKdcRepPartStatesEnum0.isEndState());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EncKdcRepPartStatesEnum encKdcRepPartStatesEnum0 = EncKdcRepPartStatesEnum.LAST_ENC_KDC_REP_PART_STATE;
      boolean boolean0 = encKdcRepPartStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EncKdcRepPartStatesEnum encKdcRepPartStatesEnum0 = EncKdcRepPartStatesEnum.ENC_KDC_REP_PART_NONCE_STATE;
      boolean boolean0 = encKdcRepPartStatesEnum0.isEndState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EncKdcRepPartStatesEnum encKdcRepPartStatesEnum0 = EncKdcRepPartStatesEnum.ENC_KDC_REP_PART_FLAGS_STATE;
      String string0 = encKdcRepPartStatesEnum0.getState(22);
      assertEquals("LAST_ENC_KDC_REP_PART_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EncKdcRepPartStatesEnum encKdcRepPartStatesEnum0 = EncKdcRepPartStatesEnum.ENC_KDC_REP_PART_FLAGS_STATE;
      String string0 = encKdcRepPartStatesEnum0.getState(17);
      assertEquals("ENC_KDC_REP_PART_FLAGS_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EncKdcRepPartStatesEnum encKdcRepPartStatesEnum0 = EncKdcRepPartStatesEnum.ENC_KDC_REP_PART_END_TIME_TAG_STATE;
      String string0 = encKdcRepPartStatesEnum0.getGrammarName((Grammar<EncKdcRepPartContainer>) null);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EncKdcRepPartStatesEnum encKdcRepPartStatesEnum0 = EncKdcRepPartStatesEnum.ENC_KDC_REP_PART_END_TIME_TAG_STATE;
      String string0 = encKdcRepPartStatesEnum0.getGrammarName(1);
      assertEquals("ENC_KDC_REP_PART_GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EncKdcRepPartStatesEnum encKdcRepPartStatesEnum0 = EncKdcRepPartStatesEnum.ENC_KDC_REP_PART_END_TIME_TAG_STATE;
      EncKdcRepPartStatesEnum encKdcRepPartStatesEnum1 = encKdcRepPartStatesEnum0.getStartState();
      assertEquals(EncKdcRepPartStatesEnum.START_STATE, encKdcRepPartStatesEnum1);
  }
}
