/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:07:23 GMT 2022
 */

package org.apache.directory.shared.kerberos.messages;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import org.apache.directory.shared.kerberos.KerberosMessageType;
import org.apache.directory.shared.kerberos.codec.options.ApOptions;
import org.apache.directory.shared.kerberos.components.EncryptedData;
import org.apache.directory.shared.kerberos.messages.ApReq;
import org.apache.directory.shared.kerberos.messages.Ticket;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ApReq_ESTest extends ApReq_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      // Undeclared exception!
      try { 
        apReq0.computeLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.messages.ApReq", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      ByteBuffer byteBuffer0 = mock(ByteBuffer.class, new ViolatedAssumptionAnswer());
      doReturn((ByteBuffer) null, (ByteBuffer) null, (ByteBuffer) null, (ByteBuffer) null, (ByteBuffer) null).when(byteBuffer0).put(any(byte.class));
      doReturn((ByteBuffer) null, (ByteBuffer) null, (ByteBuffer) null, (ByteBuffer) null, (ByteBuffer) null).when(byteBuffer0).put(any(byte[].class) , anyInt() , anyInt());
      // Undeclared exception!
      try { 
        apReq0.encode(byteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.api.asn1.ber.tlv.BerValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      // Undeclared exception!
      try { 
        apReq0.getOption((-2914));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.messages.ApReq", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      ApOptions apOptions0 = apReq0.getApOptions();
      assertNull(apOptions0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      EncryptedData encryptedData0 = apReq0.getAuthenticator();
      assertNull(encryptedData0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      apReq0.setOption((ApOptions) null);
      assertEquals(5, apReq0.getProtocolVersionNumber());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      // Undeclared exception!
      try { 
        apReq0.encode((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.messages.ApReq", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      Ticket ticket0 = apReq0.getTicket();
      assertNull(ticket0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      apReq0.setApOptions((ApOptions) null);
      assertEquals(KerberosMessageType.AP_REQ, apReq0.getMessageType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      apReq0.setAuthenticator((EncryptedData) null);
      assertEquals(KerberosMessageType.AP_REQ, apReq0.getMessageType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      // Undeclared exception!
      try { 
        apReq0.clearOption((-3133));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.directory.shared.kerberos.messages.ApReq", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      String string0 = apReq0.toString();
      assertEquals("AP-REQ :\n  pvno : 5\n  msg-type : AP_REQ\n  ap-options : null\n  ticket : null\n  authenticator : null\n", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ApReq apReq0 = new ApReq();
      apReq0.setTicket((Ticket) null);
      assertEquals(KerberosMessageType.AP_REQ, apReq0.getMessageType());
  }
}
