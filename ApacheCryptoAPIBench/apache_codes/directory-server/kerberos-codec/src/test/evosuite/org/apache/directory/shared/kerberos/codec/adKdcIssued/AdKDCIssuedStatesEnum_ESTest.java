/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:02:09 GMT 2022
 */

package org.apache.directory.shared.kerberos.codec.adKdcIssued;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.directory.api.asn1.ber.grammar.Grammar;
import org.apache.directory.shared.kerberos.codec.adKdcIssued.AdKDCIssuedStatesEnum;
import org.apache.directory.shared.kerberos.codec.adKdcIssued.AdKdcIssuedContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AdKDCIssuedStatesEnum_ESTest extends AdKDCIssuedStatesEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AdKDCIssuedStatesEnum adKDCIssuedStatesEnum0 = AdKDCIssuedStatesEnum.AD_KDC_ISSUED_I_REALM_STATE;
      AdKDCIssuedStatesEnum adKDCIssuedStatesEnum1 = adKDCIssuedStatesEnum0.getStartState();
      String string0 = adKDCIssuedStatesEnum1.getState(1935);
      assertEquals("START_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AdKDCIssuedStatesEnum[] adKDCIssuedStatesEnumArray0 = AdKDCIssuedStatesEnum.values();
      assertEquals(8, adKDCIssuedStatesEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AdKDCIssuedStatesEnum adKDCIssuedStatesEnum0 = AdKDCIssuedStatesEnum.valueOf("LAST_AD_KDC_ISSUED_STATE");
      assertEquals(AdKDCIssuedStatesEnum.START_STATE, adKDCIssuedStatesEnum0.getStartState());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AdKDCIssuedStatesEnum adKDCIssuedStatesEnum0 = AdKDCIssuedStatesEnum.valueOf("AD_KDC_ISSUED_I_REALM_TAG_STATE");
      assertFalse(adKDCIssuedStatesEnum0.isEndState());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AdKDCIssuedStatesEnum adKDCIssuedStatesEnum0 = AdKDCIssuedStatesEnum.LAST_AD_KDC_ISSUED_STATE;
      boolean boolean0 = adKDCIssuedStatesEnum0.isEndState();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AdKDCIssuedStatesEnum adKDCIssuedStatesEnum0 = AdKDCIssuedStatesEnum.AD_KDC_ISSUED_I_REALM_STATE;
      AdKDCIssuedStatesEnum adKDCIssuedStatesEnum1 = adKDCIssuedStatesEnum0.getStartState();
      assertEquals(AdKDCIssuedStatesEnum.START_STATE, adKDCIssuedStatesEnum1);
      
      boolean boolean0 = adKDCIssuedStatesEnum1.isEndState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AdKDCIssuedStatesEnum adKDCIssuedStatesEnum0 = AdKDCIssuedStatesEnum.AD_KDC_ISSUED_AD_CHECKSUM_TAG_STATE;
      String string0 = adKDCIssuedStatesEnum0.getState(7);
      assertEquals("AD_KDC_ISSUED_END_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AdKDCIssuedStatesEnum adKDCIssuedStatesEnum0 = AdKDCIssuedStatesEnum.AD_KDC_ISSUED_I_REALM_STATE;
      String string0 = adKDCIssuedStatesEnum0.getState(4);
      assertEquals("AD_KDC_ISSUED_I_REALM_STATE", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AdKDCIssuedStatesEnum adKDCIssuedStatesEnum0 = AdKDCIssuedStatesEnum.AD_KDC_ISSUED_I_REALM_STATE;
      Grammar<AdKdcIssuedContainer> grammar0 = (Grammar<AdKdcIssuedContainer>) mock(Grammar.class, new ViolatedAssumptionAnswer());
      String string0 = adKDCIssuedStatesEnum0.getGrammarName(grammar0);
      assertEquals("UNKNOWN GRAMMAR", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AdKDCIssuedStatesEnum adKDCIssuedStatesEnum0 = AdKDCIssuedStatesEnum.AD_KDC_ISSUED_AD_CHECKSUM_TAG_STATE;
      String string0 = adKDCIssuedStatesEnum0.getGrammarName(0);
      assertEquals("AD_KDC_ISSUED_GRAMMAR", string0);
  }
}
