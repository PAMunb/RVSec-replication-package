/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:28:16 GMT 2022
 */

package org.apache.spark.memory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.spark.SparkConf;
import org.apache.spark.memory.UnifiedMemoryManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnifiedMemoryManager_ESTest extends UnifiedMemoryManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SparkConf sparkConf0 = mock(SparkConf.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(sparkConf0).contains(anyString());
      doReturn((-1L), 2147483647L).when(sparkConf0).getLong(anyString() , anyLong());
      // Undeclared exception!
      try { 
        UnifiedMemoryManager.apply(sparkConf0, (-1882));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // System memory -1 must be at least 3221225471. Please increase heap size using the --driver-memory option or spark.driver.memory in Spark configuration.
         //
         verifyException("org.apache.spark.memory.UnifiedMemoryManager$", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnifiedMemoryManager.apply((SparkConf) null, 314572817);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.memory.UnifiedMemoryManager$", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SparkConf sparkConf0 = mock(SparkConf.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(sparkConf0).contains(anyString());
      doReturn(0.0, 0.0).when(sparkConf0).getDouble(anyString() , anyDouble());
      doReturn((-87L), (-87L)).when(sparkConf0).getLong(anyString() , anyLong());
      // Undeclared exception!
      try { 
        UnifiedMemoryManager.apply(sparkConf0, (-303));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.spark.internal.config.package$
         //
         verifyException("org.apache.spark.memory.MemoryManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SparkConf sparkConf0 = mock(SparkConf.class, new ViolatedAssumptionAnswer());
      doReturn(true, true).when(sparkConf0).contains(anyString());
      doReturn((long)2140533862, 6312L).when(sparkConf0).getLong(anyString() , anyLong());
      doReturn(0L).when(sparkConf0).getSizeAsBytes(anyString());
      // Undeclared exception!
      try { 
        UnifiedMemoryManager.apply(sparkConf0, 2140533862);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Executor memory 0 must be at least 9468. Please increase executor memory using the --executor-memory option or spark.executor.memory in Spark configuration.
         //
         verifyException("org.apache.spark.memory.UnifiedMemoryManager$", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SparkConf sparkConf0 = mock(SparkConf.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(sparkConf0).contains(anyString());
      doReturn(0.0, 0.0).when(sparkConf0).getDouble(anyString() , anyDouble());
      doReturn(0L, 0L).when(sparkConf0).getLong(anyString() , anyLong());
      // Undeclared exception!
      try { 
        UnifiedMemoryManager.apply(sparkConf0, (-303));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.spark.internal.config.package$
         //
         verifyException("org.apache.spark.memory.MemoryManager", e);
      }
  }
}
