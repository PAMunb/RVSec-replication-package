/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 23:32:26 GMT 2022
 */

package org.apache.spark.storage;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.channels.ReadableByteChannel;
import java.nio.channels.WritableByteChannel;
import org.apache.spark.storage.ReadableChannelFileRegion;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReadableChannelFileRegion_ESTest extends ReadableChannelFileRegion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ReadableByteChannel readableByteChannel0 = mock(ReadableByteChannel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(readableByteChannel0).read(any(java.nio.ByteBuffer.class));
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion(readableByteChannel0, 1L);
      readableChannelFileRegion0.transfered();
      WritableByteChannel writableByteChannel0 = mock(WritableByteChannel.class, new ViolatedAssumptionAnswer());
      readableChannelFileRegion0.transferTo(writableByteChannel0, 0L);
      readableChannelFileRegion0.transfered();
      readableChannelFileRegion0.count();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ReadableByteChannel readableByteChannel0 = mock(ReadableByteChannel.class, new ViolatedAssumptionAnswer());
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion(readableByteChannel0, (-2914L));
      readableChannelFileRegion0.count();
      readableChannelFileRegion0.count();
      readableChannelFileRegion0.position();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long long0 = 2147483647L;
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion((ReadableByteChannel) null, 2147483647L);
      WritableByteChannel writableByteChannel0 = mock(WritableByteChannel.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        readableChannelFileRegion0.transferTo(writableByteChannel0, 2147483647L);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // assertion failed: Invalid position.
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion((ReadableByteChannel) null, 0L);
      // Undeclared exception!
      try { 
        readableChannelFileRegion0.transferTo((WritableByteChannel) null, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.storage.ReadableChannelFileRegion", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ReadableByteChannel readableByteChannel0 = mock(ReadableByteChannel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(readableByteChannel0).read(any(java.nio.ByteBuffer.class));
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion(readableByteChannel0, 0L);
      WritableByteChannel writableByteChannel0 = mock(WritableByteChannel.class, new ViolatedAssumptionAnswer());
      readableChannelFileRegion0.transferTo(writableByteChannel0, 0L);
      readableChannelFileRegion0.transferred();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion((ReadableByteChannel) null, 1545L);
      readableChannelFileRegion0.position();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ReadableByteChannel readableByteChannel0 = mock(ReadableByteChannel.class, new ViolatedAssumptionAnswer());
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion(readableByteChannel0, 1273L);
      readableChannelFileRegion0.retain();
      readableChannelFileRegion0.transferred();
      readableChannelFileRegion0.position();
      // Undeclared exception!
      try { 
        readableChannelFileRegion0.retain(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // increment: 0 (expected: > 0)
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ReadableByteChannel readableByteChannel0 = mock(ReadableByteChannel.class, new ViolatedAssumptionAnswer());
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion(readableByteChannel0, (-1L));
      readableChannelFileRegion0.deallocate();
      readableChannelFileRegion0.retain();
      readableChannelFileRegion0.touch();
      // Undeclared exception!
      try { 
        readableChannelFileRegion0.transferTo((WritableByteChannel) null, (-1L));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // assertion failed: Invalid position.
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion((ReadableByteChannel) null, (-3375L));
      // Undeclared exception!
      try { 
        readableChannelFileRegion0.deallocate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.storage.ReadableChannelFileRegion", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ReadableByteChannel readableByteChannel0 = mock(ReadableByteChannel.class, new ViolatedAssumptionAnswer());
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion(readableByteChannel0, 0L);
      readableChannelFileRegion0.count();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReadableByteChannel readableByteChannel0 = null;
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion((ReadableByteChannel) null, 898L);
      readableChannelFileRegion0.count();
      readableChannelFileRegion0.transfered();
      // Undeclared exception!
      try { 
        readableChannelFileRegion0.release(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // decrement: 0 (expected: > 0)
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion((ReadableByteChannel) null, 242L);
      readableChannelFileRegion0.transferred();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReadableByteChannel readableByteChannel0 = mock(ReadableByteChannel.class, new ViolatedAssumptionAnswer());
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion(readableByteChannel0, 0L);
      int int0 = 764;
      WritableByteChannel writableByteChannel0 = mock(WritableByteChannel.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        readableChannelFileRegion0.transferTo(writableByteChannel0, (-781L));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // assertion failed: Invalid position.
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion((ReadableByteChannel) null, (-523L));
      // Undeclared exception!
      try { 
        readableChannelFileRegion0.transferTo((WritableByteChannel) null, (-523L));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // assertion failed: Invalid position.
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ReadableByteChannel readableByteChannel0 = mock(ReadableByteChannel.class, new ViolatedAssumptionAnswer());
      long long0 = 0L;
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion(readableByteChannel0, 0L);
      readableChannelFileRegion0.release();
      int int0 = 512;
      // Undeclared exception!
      try { 
        readableChannelFileRegion0.release(512);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // refCnt: 0, increment: 512
         //
         verifyException("io.netty.util.AbstractReferenceCounted", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion((ReadableByteChannel) null, (-1L));
      // Undeclared exception!
      try { 
        readableChannelFileRegion0.deallocate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.storage.ReadableChannelFileRegion", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ReadableByteChannel readableByteChannel0 = mock(ReadableByteChannel.class, new ViolatedAssumptionAnswer());
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion(readableByteChannel0, 1L);
      int int0 = 1382;
      readableChannelFileRegion0.retain(1382);
      readableChannelFileRegion0.touch();
      // Undeclared exception!
      try { 
        readableChannelFileRegion0.release(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // decrement: 0 (expected: > 0)
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ReadableChannelFileRegion readableChannelFileRegion0 = new ReadableChannelFileRegion((ReadableByteChannel) null, 24L);
  }
}
