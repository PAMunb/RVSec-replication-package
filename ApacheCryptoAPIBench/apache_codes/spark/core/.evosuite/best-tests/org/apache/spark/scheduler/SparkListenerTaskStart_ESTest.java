/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:28:41 GMT 2022
 */

package org.apache.spark.scheduler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.spark.scheduler.SparkListenerTaskStart;
import org.apache.spark.scheduler.TaskInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import scala.Function1;
import scala.Option;
import scala.Tuple3;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SparkListenerTaskStart_ESTest extends SparkListenerTaskStart_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(taskInfo0).toString();
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply(0, 1742, taskInfo0);
      TaskInfo taskInfo1 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      SparkListenerTaskStart sparkListenerTaskStart1 = new SparkListenerTaskStart((-847), 0, taskInfo1);
      boolean boolean0 = sparkListenerTaskStart1.equals(sparkListenerTaskStart0);
      assertFalse(boolean0);
      assertEquals((-847), sparkListenerTaskStart1.stageId());
      assertEquals(1742, sparkListenerTaskStart0.copy$default$2());
      assertEquals(0, sparkListenerTaskStart0.copy$default$1());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(taskInfo0).toString();
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply(538, 1, taskInfo0);
      TaskInfo taskInfo1 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(taskInfo1).toString();
      SparkListenerTaskStart sparkListenerTaskStart1 = sparkListenerTaskStart0.copy((-2416), 0, taskInfo1);
      int int0 = sparkListenerTaskStart1.stageId();
      assertEquals((-2416), int0);
      assertEquals(0, sparkListenerTaskStart1.copy$default$2());
      assertEquals(538, sparkListenerTaskStart0.copy$default$1());
      assertEquals(1, sparkListenerTaskStart0.stageAttemptId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart((-1), 0, taskInfo0);
      int int0 = sparkListenerTaskStart0.stageAttemptId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply(0, 1895, (TaskInfo) null);
      int int0 = sparkListenerTaskStart0.stageAttemptId();
      assertEquals(1895, int0);
      assertEquals(0, sparkListenerTaskStart0.stageId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(taskInfo0).toString();
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(916, (-889275714), taskInfo0);
      Object object0 = sparkListenerTaskStart0.productElement(2);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(817, 46, taskInfo0);
      TaskInfo taskInfo1 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(taskInfo1).toString();
      SparkListenerTaskStart sparkListenerTaskStart1 = sparkListenerTaskStart0.copy(46, (-1762), taskInfo1);
      assertEquals((-1762), sparkListenerTaskStart1.stageAttemptId());
      assertEquals(46, sparkListenerTaskStart1.stageId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(taskInfo0).toString();
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply(25, 4, taskInfo0);
      TaskInfo taskInfo1 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(taskInfo1).toString();
      SparkListenerTaskStart sparkListenerTaskStart1 = sparkListenerTaskStart0.copy(0, 0, taskInfo1);
      int int0 = sparkListenerTaskStart1.stageId();
      assertEquals(4, sparkListenerTaskStart0.stageAttemptId());
      assertEquals(0, sparkListenerTaskStart1.copy$default$2());
      assertEquals(0, int0);
      assertEquals(25, sparkListenerTaskStart0.stageId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(0, 0, taskInfo0);
      int int0 = sparkListenerTaskStart0.copy$default$2();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn("%h/Jy?zNd'+FFt!", "]Uv`()SlNEL>").when(taskInfo0).toString();
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply((-889275714), (-2983), taskInfo0);
      int int0 = sparkListenerTaskStart0.copy$default$2();
      assertEquals((-2983), int0);
      assertEquals((-889275714), sparkListenerTaskStart0.copy$default$1());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply(0, 0, (TaskInfo) null);
      int int0 = sparkListenerTaskStart0.copy$default$1();
      assertEquals(0, int0);
      assertEquals(0, sparkListenerTaskStart0.copy$default$2());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(taskInfo0).toString();
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply((-2287), (-2287), taskInfo0);
      int int0 = sparkListenerTaskStart0.copy$default$1();
      assertEquals((-2287), int0);
      assertEquals((-2287), sparkListenerTaskStart0.copy$default$2());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(taskInfo0).toString();
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply(25, 4, taskInfo0);
      Object object0 = sparkListenerTaskStart0.productElement(0);
      assertEquals(25, object0);
      
      sparkListenerTaskStart0.canEqual(object0);
      assertEquals(4, sparkListenerTaskStart0.stageAttemptId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(taskInfo0).toString();
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply(1, 1, taskInfo0);
      Object object0 = sparkListenerTaskStart0.productElement(1);
      assertEquals(1, object0);
      assertEquals(1, sparkListenerTaskStart0.stageId());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(2, 477, (TaskInfo) null);
      Object object0 = sparkListenerTaskStart0.productElement(2);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(taskInfo0).toString();
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply(4124, 2433880, taskInfo0);
      int int0 = sparkListenerTaskStart0.stageId();
      assertEquals(2433880, sparkListenerTaskStart0.copy$default$2());
      assertEquals(4124, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(334, 334, (TaskInfo) null);
      int int0 = sparkListenerTaskStart0.productArity();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart((-1872), (-1872), (TaskInfo) null);
      int int0 = sparkListenerTaskStart0.stageAttemptId();
      assertEquals((-1872), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart((-2048144789), (-2048144789), (TaskInfo) null);
      sparkListenerTaskStart0.productIterator();
      assertEquals(3, sparkListenerTaskStart0.productArity());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply(0, 0, (TaskInfo) null);
      sparkListenerTaskStart0.taskInfo();
      assertEquals(0, sparkListenerTaskStart0.copy$default$2());
      assertEquals(0, sparkListenerTaskStart0.copy$default$1());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TaskInfo taskInfo0 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      doReturn("", "").when(taskInfo0).toString();
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply(0, 1742, taskInfo0);
      TaskInfo taskInfo1 = mock(TaskInfo.class, new ViolatedAssumptionAnswer());
      SparkListenerTaskStart sparkListenerTaskStart1 = new SparkListenerTaskStart(820, 0, taskInfo1);
      boolean boolean0 = sparkListenerTaskStart1.equals(sparkListenerTaskStart0);
      assertFalse(boolean0);
      assertEquals(0, sparkListenerTaskStart0.stageId());
      assertEquals(1742, sparkListenerTaskStart0.stageAttemptId());
      assertEquals(820, sparkListenerTaskStart1.stageId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(1746, 1746, (TaskInfo) null);
      boolean boolean0 = sparkListenerTaskStart0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(622, 622, (TaskInfo) null);
      boolean boolean0 = sparkListenerTaskStart0.equals(sparkListenerTaskStart0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply((-942), (-942), (TaskInfo) null);
      // Undeclared exception!
      try { 
        sparkListenerTaskStart0.productElement((-942));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // java.lang.Integer@0000000012
         //
         verifyException("org.apache.spark.scheduler.SparkListenerTaskStart", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply((-4), (-4), (TaskInfo) null);
      SparkListenerTaskStart.unapply(sparkListenerTaskStart0);
      assertEquals((-4), sparkListenerTaskStart0.stageAttemptId());
      assertEquals((-4), sparkListenerTaskStart0.stageId());
      assertEquals((-4), sparkListenerTaskStart0.copy$default$2());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply(2433880, 683, (TaskInfo) null);
      int int0 = sparkListenerTaskStart0.copy$default$1();
      assertEquals(2433880, int0);
      assertEquals(683, sparkListenerTaskStart0.copy$default$2());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(1746, 1746, (TaskInfo) null);
      boolean boolean0 = sparkListenerTaskStart0.logEvent();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(1755, 1755, (TaskInfo) null);
      boolean boolean0 = sparkListenerTaskStart0.canEqual(sparkListenerTaskStart0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(1746, 1746, (TaskInfo) null);
      sparkListenerTaskStart0.hashCode();
      assertEquals(1746, sparkListenerTaskStart0.copy$default$1());
      assertEquals(1746, sparkListenerTaskStart0.copy$default$2());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Option<Tuple3<Object, Object, TaskInfo>> option0 = SparkListenerTaskStart.unapply((SparkListenerTaskStart) null);
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(0, 0, (TaskInfo) null);
      TaskInfo taskInfo0 = sparkListenerTaskStart0.copy$default$3();
      assertNull(taskInfo0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(11, 11, (TaskInfo) null);
      String string0 = sparkListenerTaskStart0.toString();
      assertEquals("SparkListenerTaskStart(11,11,null)", string0);
      assertEquals(3, sparkListenerTaskStart0.productArity());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Function1<Object, Function1<Object, Function1<TaskInfo, SparkListenerTaskStart>>> function1_0 = SparkListenerTaskStart.curried();
      assertNotNull(function1_0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(1411, 1411, (TaskInfo) null);
      SparkListenerTaskStart sparkListenerTaskStart1 = sparkListenerTaskStart0.copy(1411, 1411, (TaskInfo) null);
      assertTrue(sparkListenerTaskStart1.equals((Object)sparkListenerTaskStart0));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = SparkListenerTaskStart.apply((-788), (-788), (TaskInfo) null);
      String string0 = sparkListenerTaskStart0.productPrefix();
      assertEquals((-788), sparkListenerTaskStart0.stageAttemptId());
      assertEquals("SparkListenerTaskStart", string0);
      assertEquals((-788), sparkListenerTaskStart0.copy$default$1());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Function1<Tuple3<Object, Object, TaskInfo>, SparkListenerTaskStart> function1_0 = SparkListenerTaskStart.tupled();
      assertNotNull(function1_0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SparkListenerTaskStart sparkListenerTaskStart0 = new SparkListenerTaskStart(1746, 1746, (TaskInfo) null);
      int int0 = sparkListenerTaskStart0.copy$default$2();
      assertEquals(1746, int0);
  }
}
