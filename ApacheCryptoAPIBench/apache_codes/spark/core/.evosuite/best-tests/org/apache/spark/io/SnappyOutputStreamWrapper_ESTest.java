/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 23:26:54 GMT 2022
 */

package org.apache.spark.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.apache.spark.io.SnappyOutputStreamWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xerial.snappy.SnappyOutputStream;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SnappyOutputStreamWrapper_ESTest extends SnappyOutputStreamWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SnappyOutputStream snappyOutputStream0 = mock(SnappyOutputStream.class, new ViolatedAssumptionAnswer());
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper(snappyOutputStream0);
      byte[] byteArray0 = new byte[6];
      snappyOutputStreamWrapper0.write(byteArray0, 0, (int) (byte)75);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper((SnappyOutputStream) null);
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        snappyOutputStreamWrapper0.write(byteArray0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.io.SnappyOutputStreamWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper((SnappyOutputStream) null);
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        snappyOutputStreamWrapper0.write(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.io.SnappyOutputStreamWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper((SnappyOutputStream) null);
      // Undeclared exception!
      try { 
        snappyOutputStreamWrapper0.write((int) (byte) (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.io.SnappyOutputStreamWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper((SnappyOutputStream) null);
      // Undeclared exception!
      try { 
        snappyOutputStreamWrapper0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.io.SnappyOutputStreamWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper((SnappyOutputStream) null);
      // Undeclared exception!
      try { 
        snappyOutputStreamWrapper0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.io.SnappyOutputStreamWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SnappyOutputStream snappyOutputStream0 = mock(SnappyOutputStream.class, new ViolatedAssumptionAnswer());
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper(snappyOutputStream0);
      snappyOutputStreamWrapper0.close();
      snappyOutputStreamWrapper0.close();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SnappyOutputStream snappyOutputStream0 = mock(SnappyOutputStream.class, new ViolatedAssumptionAnswer());
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper(snappyOutputStream0);
      snappyOutputStreamWrapper0.close();
      // Undeclared exception!
      try { 
        snappyOutputStreamWrapper0.flush();
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Stream is closed
         //
         verifyException("org.apache.spark.io.SnappyOutputStreamWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SnappyOutputStream snappyOutputStream0 = mock(SnappyOutputStream.class, new ViolatedAssumptionAnswer());
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper(snappyOutputStream0);
      snappyOutputStreamWrapper0.flush();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SnappyOutputStream snappyOutputStream0 = mock(SnappyOutputStream.class, new ViolatedAssumptionAnswer());
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper(snappyOutputStream0);
      snappyOutputStreamWrapper0.close();
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        snappyOutputStreamWrapper0.write(byteArray0, (int) (byte)0, (int) (byte)0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Stream is closed
         //
         verifyException("org.apache.spark.io.SnappyOutputStreamWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SnappyOutputStream snappyOutputStream0 = mock(SnappyOutputStream.class, new ViolatedAssumptionAnswer());
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper(snappyOutputStream0);
      byte[] byteArray0 = new byte[1];
      snappyOutputStreamWrapper0.close();
      // Undeclared exception!
      try { 
        snappyOutputStreamWrapper0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Stream is closed
         //
         verifyException("org.apache.spark.io.SnappyOutputStreamWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SnappyOutputStream snappyOutputStream0 = mock(SnappyOutputStream.class, new ViolatedAssumptionAnswer());
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper(snappyOutputStream0);
      snappyOutputStreamWrapper0.write((byte[]) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SnappyOutputStream snappyOutputStream0 = mock(SnappyOutputStream.class, new ViolatedAssumptionAnswer());
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper(snappyOutputStream0);
      snappyOutputStreamWrapper0.close();
      // Undeclared exception!
      try { 
        snappyOutputStreamWrapper0.write(27);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Stream is closed
         //
         verifyException("org.apache.spark.io.SnappyOutputStreamWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SnappyOutputStream snappyOutputStream0 = mock(SnappyOutputStream.class, new ViolatedAssumptionAnswer());
      SnappyOutputStreamWrapper snappyOutputStreamWrapper0 = new SnappyOutputStreamWrapper(snappyOutputStream0);
      snappyOutputStreamWrapper0.write(1);
  }
}
