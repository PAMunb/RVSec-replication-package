/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 00:30:59 GMT 2022
 */

package org.apache.spark.status.api.v1;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.spark.status.api.v1.InputMetrics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InputMetrics_ESTest extends InputMetrics_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InputMetrics inputMetrics0 = new InputMetrics(0L, 0L);
      assertEquals(0L, inputMetrics0.recordsRead());
      assertEquals(0L, inputMetrics0.bytesRead());
      assertNotNull(inputMetrics0);
      
      long long0 = inputMetrics0.recordsRead();
      assertEquals(0L, inputMetrics0.recordsRead());
      assertEquals(0L, inputMetrics0.bytesRead());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InputMetrics inputMetrics0 = new InputMetrics((-531L), (-531L));
      assertEquals((-531L), inputMetrics0.bytesRead());
      assertEquals((-531L), inputMetrics0.recordsRead());
      assertNotNull(inputMetrics0);
      
      long long0 = inputMetrics0.recordsRead();
      assertEquals((-531L), inputMetrics0.bytesRead());
      assertEquals((-531L), inputMetrics0.recordsRead());
      assertEquals((-531L), long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InputMetrics inputMetrics0 = new InputMetrics(0L, 0L);
      assertEquals(0L, inputMetrics0.bytesRead());
      assertEquals(0L, inputMetrics0.recordsRead());
      assertNotNull(inputMetrics0);
      
      long long0 = inputMetrics0.bytesRead();
      assertEquals(0L, inputMetrics0.bytesRead());
      assertEquals(0L, inputMetrics0.recordsRead());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InputMetrics inputMetrics0 = new InputMetrics((-965L), 0L);
      assertEquals((-965L), inputMetrics0.bytesRead());
      assertEquals(0L, inputMetrics0.recordsRead());
      assertNotNull(inputMetrics0);
      
      long long0 = inputMetrics0.bytesRead();
      assertEquals((-965L), inputMetrics0.bytesRead());
      assertEquals(0L, inputMetrics0.recordsRead());
      assertEquals((-965L), long0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InputMetrics inputMetrics0 = new InputMetrics(1687L, 1687L);
      assertEquals(1687L, inputMetrics0.bytesRead());
      assertEquals(1687L, inputMetrics0.recordsRead());
      assertNotNull(inputMetrics0);
      
      long long0 = inputMetrics0.bytesRead();
      assertEquals(1687L, inputMetrics0.bytesRead());
      assertEquals(1687L, inputMetrics0.recordsRead());
      assertEquals(1687L, long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InputMetrics inputMetrics0 = new InputMetrics(2549L, 2549L);
      assertEquals(2549L, inputMetrics0.recordsRead());
      assertEquals(2549L, inputMetrics0.bytesRead());
      assertNotNull(inputMetrics0);
      
      long long0 = inputMetrics0.recordsRead();
      assertEquals(2549L, inputMetrics0.recordsRead());
      assertEquals(2549L, inputMetrics0.bytesRead());
      assertEquals(2549L, long0);
  }
}
