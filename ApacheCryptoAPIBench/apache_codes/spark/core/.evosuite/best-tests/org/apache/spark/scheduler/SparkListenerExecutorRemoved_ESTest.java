/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:21:34 GMT 2022
 */

package org.apache.spark.scheduler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.spark.scheduler.SparkListenerExecutorRemoved;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import scala.Function1;
import scala.Option;
import scala.Tuple3;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SparkListenerExecutorRemoved_ESTest extends SparkListenerExecutorRemoved_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved(2235L, "uninitialized value", "uninitialized value");
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved1 = new SparkListenerExecutorRemoved(1L, "uninitialized value", "poDb*L>bchu");
      boolean boolean0 = sparkListenerExecutorRemoved1.equals(sparkListenerExecutorRemoved0);
      assertEquals(1L, sparkListenerExecutorRemoved1.copy$default$1());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved(0L, "J9g5zaDkVg+>H^)", "J9g5zaDkVg+>H^)");
      long long0 = sparkListenerExecutorRemoved0.time();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(1729L, (String) null, "SparkListenerExecutorRemoved");
      long long0 = sparkListenerExecutorRemoved0.time();
      assertEquals(1729L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply((-497L), "", "mrn?FDDsOb!O|vZAPT<");
      String string0 = sparkListenerExecutorRemoved0.reason();
      assertEquals("mrn?FDDsOb!O|vZAPT<", string0);
      assertEquals((-497L), sparkListenerExecutorRemoved0.time());
      assertEquals("", sparkListenerExecutorRemoved0.copy$default$2());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(0L, "", "");
      String string0 = sparkListenerExecutorRemoved0.reason();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved((-127L), (String) null, "");
      Object object0 = sparkListenerExecutorRemoved0.productElement(1);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved((-1638L), "5RR><h^69Emd9i", "5Ap=G4%X.n6&-Fk)a");
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved1 = sparkListenerExecutorRemoved0.copy(0L, (String) null, "{'Jp(#PX(LW7RA)VR");
      String string0 = sparkListenerExecutorRemoved1.executorId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(0L, "", "I");
      String string0 = sparkListenerExecutorRemoved0.executorId();
      assertEquals("I", sparkListenerExecutorRemoved0.copy$default$3());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(892L, "", "");
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved1 = sparkListenerExecutorRemoved0.copy(1, "", "Rq/H1");
      assertEquals(1L, sparkListenerExecutorRemoved1.copy$default$1());
      assertEquals(892L, sparkListenerExecutorRemoved0.time());
      assertEquals("", sparkListenerExecutorRemoved1.copy$default$2());
      assertEquals("Rq/H1", sparkListenerExecutorRemoved1.reason());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved((-1524L), "", (String) null);
      String string0 = sparkListenerExecutorRemoved0.copy$default$3();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved(0L, (String) null, (String) null);
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved1 = sparkListenerExecutorRemoved0.copy((-1438L), "p;ziCiqZcwdo`dGEA", "");
      String string0 = sparkListenerExecutorRemoved1.copy$default$3();
      assertEquals("p;ziCiqZcwdo`dGEA", sparkListenerExecutorRemoved1.executorId());
      assertEquals((-1438L), sparkListenerExecutorRemoved1.time());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved(0L, (String) null, (String) null);
      String string0 = sparkListenerExecutorRemoved0.copy$default$2();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved((-1524L), "", (String) null);
      String string0 = sparkListenerExecutorRemoved0.copy$default$2();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(0L, "", "");
      long long0 = sparkListenerExecutorRemoved0.copy$default$1();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(892L, "", "");
      long long0 = sparkListenerExecutorRemoved0.copy$default$1();
      assertEquals(892L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved((-1L), "=(I`)5T`<JDL(kC\"O2", "=(I`)5T`<JDL(kC\"O2");
      boolean boolean0 = sparkListenerExecutorRemoved0.canEqual("=(I`)5T`<JDL(kC\"O2");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved(2, "cZ#iZfgTseajVf'?4I", "cZ#iZfgTseajVf'?4I");
      Object object0 = sparkListenerExecutorRemoved0.productElement(2);
      assertEquals("cZ#iZfgTseajVf'?4I", object0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved((-1L), "=(I`)5T`<JDL(kC\"O2", "=(I`)5T`<JDL(kC\"O2");
      Object object0 = sparkListenerExecutorRemoved0.productElement(0);
      assertEquals((-1L), object0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply((-463L), "2lG", "2lG");
      long long0 = sparkListenerExecutorRemoved0.time();
      assertEquals((-463L), long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(0L, "l$.vRd~W:XV(AW", "scala.collection.immutable.List");
      sparkListenerExecutorRemoved0.canEqual(sparkListenerExecutorRemoved0);
      assertEquals("scala.collection.immutable.List", sparkListenerExecutorRemoved0.copy$default$3());
      assertEquals("l$.vRd~W:XV(AW", sparkListenerExecutorRemoved0.executorId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved((-1638L), "5RR><h^69Emd9i", "5Ap=G4%X.n6&-Fk)a");
      String string0 = sparkListenerExecutorRemoved0.executorId();
      assertEquals("5RR><h^69Emd9i", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply((-481L), (String) null, (String) null);
      int int0 = sparkListenerExecutorRemoved0.productArity();
      assertEquals(3, int0);
      assertEquals((-481L), sparkListenerExecutorRemoved0.time());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(824L, "assertion failed: ", "assertion failed: ");
      sparkListenerExecutorRemoved0.productIterator();
      assertEquals(3, sparkListenerExecutorRemoved0.productArity());
      assertEquals(824L, sparkListenerExecutorRemoved0.time());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved(0L, "J9g5zaDkVg+>H^)", "J9g5zaDkVg+>H^)");
      String string0 = sparkListenerExecutorRemoved0.productPrefix();
      assertEquals("SparkListenerExecutorRemoved", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved((-1524L), "", (String) null);
      String string0 = sparkListenerExecutorRemoved0.reason();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply((-127L), "[", "[");
      SparkListenerExecutorRemoved.unapply(sparkListenerExecutorRemoved0);
      assertEquals((-127L), sparkListenerExecutorRemoved0.time());
      assertEquals((-127L), sparkListenerExecutorRemoved0.copy$default$1());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved(1, "cv#iZfgTseatVf'?4I", "cv#iZfgTseatVf'?4I");
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved1 = SparkListenerExecutorRemoved.apply(1, "cv#iZfgTseatVf'?4I", "cv#iZfgTseatVf'?4I");
      boolean boolean0 = sparkListenerExecutorRemoved0.equals(sparkListenerExecutorRemoved1);
      assertTrue(boolean0);
      assertEquals(1L, sparkListenerExecutorRemoved1.time());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved((-668L), (String) null, "P43+@N;C?pp5cV#h6V");
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved1 = SparkListenerExecutorRemoved.apply((-668L), (String) null, (String) null);
      boolean boolean0 = sparkListenerExecutorRemoved1.equals(sparkListenerExecutorRemoved0);
      assertEquals((-668L), sparkListenerExecutorRemoved1.time());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(3925L, ",inv1", ",inv1");
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved1 = new SparkListenerExecutorRemoved(3925L, "", ",inv1");
      boolean boolean0 = sparkListenerExecutorRemoved0.equals(sparkListenerExecutorRemoved1);
      assertEquals(3925L, sparkListenerExecutorRemoved0.time());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(938L, (String) null, (String) null);
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved1 = SparkListenerExecutorRemoved.apply(938L, "UzJCwJ8XUqAj", "UzJCwJ8XUqAj");
      boolean boolean0 = sparkListenerExecutorRemoved0.equals(sparkListenerExecutorRemoved1);
      assertFalse(boolean0);
      assertEquals(938L, sparkListenerExecutorRemoved1.time());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(1491L, "<L#v(k", "<L#v(k");
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved1 = new SparkListenerExecutorRemoved(1491L, "<L#v(k", "");
      boolean boolean0 = sparkListenerExecutorRemoved0.equals(sparkListenerExecutorRemoved1);
      assertFalse(boolean0);
      assertEquals(1491L, sparkListenerExecutorRemoved0.copy$default$1());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply((-127L), "Rq/H1", "Rq/H1");
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved1 = SparkListenerExecutorRemoved.apply((-3955L), "Rq/H1", "Rq/H1");
      boolean boolean0 = sparkListenerExecutorRemoved0.equals(sparkListenerExecutorRemoved1);
      assertEquals((-3955L), sparkListenerExecutorRemoved1.copy$default$1());
      assertFalse(boolean0);
      assertFalse(sparkListenerExecutorRemoved1.equals((Object)sparkListenerExecutorRemoved0));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved(1, "cv#iZfgTseatVf'?4I", "cv#iZfgTseatVf'?4I");
      boolean boolean0 = sparkListenerExecutorRemoved0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved(1, "cv#iZfgTseatVf]?tI", "cv#iZfgTseatVf]?tI");
      boolean boolean0 = sparkListenerExecutorRemoved0.equals(sparkListenerExecutorRemoved0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved(3, "SparkListenerExecutorRemoved", "SparkListenerExecutorRemoved");
      // Undeclared exception!
      try { 
        sparkListenerExecutorRemoved0.productElement(3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // java.lang.Integer@0000000002
         //
         verifyException("org.apache.spark.scheduler.SparkListenerExecutorRemoved", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Option<Tuple3<Object, String, String>> option0 = SparkListenerExecutorRemoved.unapply((SparkListenerExecutorRemoved) null);
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved(0L, "fokjAytC=}", "fokjAytC=}");
      String string0 = sparkListenerExecutorRemoved0.copy$default$2();
      assertEquals("fokjAytC=}", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(1387L, "U(X", "U(X");
      String string0 = sparkListenerExecutorRemoved0.toString();
      assertEquals("SparkListenerExecutorRemoved(1387,U(X,U(X)", string0);
      assertEquals(3, sparkListenerExecutorRemoved0.productArity());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply(1951L, "(i~XSz9a;", "(i~XSz9a;");
      sparkListenerExecutorRemoved0.hashCode();
      assertEquals(1951L, sparkListenerExecutorRemoved0.copy$default$1());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved((-27L), "|", "Rq/H1");
      String string0 = sparkListenerExecutorRemoved0.copy$default$3();
      assertEquals("Rq/H1", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = SparkListenerExecutorRemoved.apply((-442L), (String) null, (String) null);
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved1 = new SparkListenerExecutorRemoved((-442L), (String) null, (String) null);
      boolean boolean0 = sparkListenerExecutorRemoved0.equals(sparkListenerExecutorRemoved1);
      assertTrue(boolean0);
      assertEquals((-442L), sparkListenerExecutorRemoved1.time());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Function1<Tuple3<Object, String, String>, SparkListenerExecutorRemoved> function1_0 = SparkListenerExecutorRemoved.tupled();
      assertNotNull(function1_0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved((-127L), "MrYG;/", "MrYG;/");
      long long0 = sparkListenerExecutorRemoved0.copy$default$1();
      assertEquals((-127L), long0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SparkListenerExecutorRemoved sparkListenerExecutorRemoved0 = new SparkListenerExecutorRemoved((-127L), "", "");
      boolean boolean0 = sparkListenerExecutorRemoved0.logEvent();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Function1<Object, Function1<String, Function1<String, SparkListenerExecutorRemoved>>> function1_0 = SparkListenerExecutorRemoved.curried();
      assertNotNull(function1_0);
  }
}
