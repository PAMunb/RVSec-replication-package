/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:55:21 GMT 2022
 */

package org.apache.spark.deploy.master.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import javax.servlet.http.HttpServletRequest;
import org.apache.spark.deploy.ApplicationDescription;
import org.apache.spark.deploy.DeployMessages;
import org.apache.spark.deploy.DriverDescription;
import org.apache.spark.deploy.master.ApplicationInfo;
import org.apache.spark.deploy.master.DriverInfo;
import org.apache.spark.deploy.master.Master;
import org.apache.spark.deploy.master.WorkerInfo;
import org.apache.spark.deploy.master.ui.MasterPage;
import org.apache.spark.deploy.master.ui.MasterWebUI;
import org.apache.spark.rpc.RpcEndpointRef;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import scala.Enumeration;
import scala.Option;
import scala.collection.Seq;
import scala.collection.mutable.Queue;
import scala.xml.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MasterPage_ESTest extends MasterPage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(masterWebUI0).killEnabled();
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      masterPage0.handleDriverKillRequest(httpServletRequest0);
      assertEquals("", masterPage0.prefix());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RpcEndpointRef rpcEndpointRef0 = mock(RpcEndpointRef.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(rpcEndpointRef0).toString();
      doReturn((Object) null).when(rpcEndpointRef0).askSync(any() , any(scala.reflect.ClassTag.class));
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(rpcEndpointRef0).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        masterPage0.render(httpServletRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RpcEndpointRef rpcEndpointRef0 = mock(RpcEndpointRef.class, new ViolatedAssumptionAnswer());
      Master master0 = mock(Master.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(master0).reverseProxy();
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(master0).when(masterWebUI0).master();
      doReturn(rpcEndpointRef0).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(workerInfo0).cores();
      doReturn(0).when(workerInfo0).coresUsed();
      doReturn((String) null).when(workerInfo0).host();
      doReturn((String) null, (String) null).when(workerInfo0).id();
      doReturn(true).when(workerInfo0).isAlive();
      doReturn(0, 0).when(workerInfo0).memory();
      doReturn(0, 0).when(workerInfo0).memoryUsed();
      doReturn(0).when(workerInfo0).port();
      doReturn((Enumeration.Value) null).when(workerInfo0).state();
      doReturn((String) null).when(workerInfo0).webUiAddress();
      Seq<Node> seq0 = masterPage0.org$apache$spark$deploy$master$ui$MasterPage$$workerRow(workerInfo0);
      assertTrue(seq0.isTraversableAgain());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      masterPage0.org$apache$spark$deploy$master$ui$MasterPage$$master();
      MasterWebUI masterWebUI1 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(masterWebUI1).killEnabled();
      doReturn((RpcEndpointRef) null).when(masterWebUI1).masterEndpointRef();
      MasterPage masterPage1 = new MasterPage(masterWebUI1);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn((-22L)).when(date0).getTime();
      Enumeration.Value enumeration_Value0 = mock(Enumeration.Value.class, new ViolatedAssumptionAnswer());
      Enumeration.Value enumeration_Value1 = mock(Enumeration.Value.class, new ViolatedAssumptionAnswer());
      Option<DriverInfo> option0 = (Option<DriverInfo>) mock(Option.class, new ViolatedAssumptionAnswer());
      doReturn((Queue<DriverInfo>) null).when(option0).getOrElse(any(scala.Function0.class));
      Option<WorkerInfo> option1 = (Option<WorkerInfo>) mock(Option.class, new ViolatedAssumptionAnswer());
      doReturn(option0).when(option1).map(any(scala.Function1.class));
      DriverDescription driverDescription0 = mock(DriverDescription.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(driverDescription0).cores();
      Enumeration.Value enumeration_Value2 = mock(Enumeration.Value.class, new ViolatedAssumptionAnswer());
      DriverInfo driverInfo0 = mock(DriverInfo.class, new ViolatedAssumptionAnswer());
      doReturn(driverDescription0, (DriverDescription) null).when(driverInfo0).desc();
      doReturn("1c[>G\"").when(driverInfo0).id();
      doReturn(enumeration_Value0, (Enumeration.Value) null, (Enumeration.Value) null, (Enumeration.Value) null).when(driverInfo0).state();
      doReturn(date0).when(driverInfo0).submitDate();
      doReturn(option1).when(driverInfo0).worker();
      // Undeclared exception!
      try { 
        masterPage1.org$apache$spark$deploy$master$ui$MasterPage$$driverRow(driverInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(masterWebUI0).killEnabled();
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn((-22L)).when(date0).getTime();
      Enumeration.Value enumeration_Value0 = mock(Enumeration.Value.class, new ViolatedAssumptionAnswer());
      Option<DriverInfo> option0 = (Option<DriverInfo>) mock(Option.class, new ViolatedAssumptionAnswer());
      doReturn((Queue<DriverInfo>) null).when(option0).getOrElse(any(scala.Function0.class));
      Option<WorkerInfo> option1 = (Option<WorkerInfo>) mock(Option.class, new ViolatedAssumptionAnswer());
      doReturn(option0).when(option1).map(any(scala.Function1.class));
      DriverDescription driverDescription0 = mock(DriverDescription.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(driverDescription0).cores();
      DriverInfo driverInfo0 = mock(DriverInfo.class, new ViolatedAssumptionAnswer());
      doReturn(driverDescription0, (DriverDescription) null).when(driverInfo0).desc();
      doReturn("1c[>G\"").when(driverInfo0).id();
      doReturn(enumeration_Value0).when(driverInfo0).state();
      doReturn(date0).when(driverInfo0).submitDate();
      doReturn(option1).when(driverInfo0).worker();
      // Undeclared exception!
      try { 
        masterPage0.org$apache$spark$deploy$master$ui$MasterPage$$driverRow(driverInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Master master0 = mock(Master.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(master0).reverseProxy();
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(masterWebUI0).killEnabled();
      doReturn(master0).when(masterWebUI0).master();
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ApplicationDescription) null).when(applicationInfo0).desc();
      doReturn("spark.ui.enabled", "scala.sys.SystemProperties$$anonfun$contains$1", (String) null).when(applicationInfo0).id();
      doReturn(false).when(applicationInfo0).isFinished();
      // Undeclared exception!
      try { 
        masterPage0.org$apache$spark$deploy$master$ui$MasterPage$$appRow(applicationInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RpcEndpointRef rpcEndpointRef0 = mock(RpcEndpointRef.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(rpcEndpointRef0).toString();
      doReturn((Object) null).when(rpcEndpointRef0).askSync(any() , any(scala.reflect.ClassTag.class));
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(rpcEndpointRef0).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      DeployMessages.MasterStateResponse deployMessages_MasterStateResponse0 = masterPage0.getMasterState();
      assertNull(deployMessages_MasterStateResponse0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Queue<DriverInfo> queue0 = (Queue<DriverInfo>) mock(Queue.class, new ViolatedAssumptionAnswer());
      RpcEndpointRef rpcEndpointRef0 = mock(RpcEndpointRef.class, new ViolatedAssumptionAnswer());
      doReturn("3|(;aZ:I+[-uK:q:").when(rpcEndpointRef0).toString();
      doReturn(queue0).when(rpcEndpointRef0).askSync(any() , any(scala.reflect.ClassTag.class));
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(rpcEndpointRef0).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        masterPage0.render(httpServletRequest0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // scala.collection.mutable.Queue$MockitoMock$1064117492 cannot be cast to org.apache.spark.deploy.DeployMessages$MasterStateResponse
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(masterWebUI0).killEnabled();
      doReturn((Master) null).when(masterWebUI0).master();
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      // Undeclared exception!
      try { 
        masterPage0.handleAppKillRequest((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DriverInfo driverInfo0 = mock(DriverInfo.class, new ViolatedAssumptionAnswer());
      RpcEndpointRef rpcEndpointRef0 = mock(RpcEndpointRef.class, new ViolatedAssumptionAnswer());
      doReturn("N'q7P.J!%y").when(rpcEndpointRef0).toString();
      doReturn(driverInfo0).when(rpcEndpointRef0).askSync(any() , any(scala.reflect.ClassTag.class));
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(rpcEndpointRef0).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      // Undeclared exception!
      try { 
        masterPage0.getMasterState();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.spark.deploy.master.DriverInfo$MockitoMock$1523585536 cannot be cast to org.apache.spark.deploy.DeployMessages$MasterStateResponse
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MasterPage masterPage0 = null;
      try {
        masterPage0 = new MasterPage((MasterWebUI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      masterPage0.org$apache$spark$deploy$master$ui$MasterPage$$master();
      MasterWebUI masterWebUI1 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn((RpcEndpointRef) null).when(masterWebUI1).masterEndpointRef();
      MasterPage masterPage1 = new MasterPage(masterWebUI1);
      masterPage1.org$apache$spark$deploy$master$ui$MasterPage$$master();
      MasterWebUI masterWebUI2 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn((RpcEndpointRef) null).when(masterWebUI2).masterEndpointRef();
      MasterPage masterPage2 = new MasterPage(masterWebUI2);
      masterPage2.org$apache$spark$deploy$master$ui$MasterPage$$master();
      MasterWebUI masterWebUI3 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn((RpcEndpointRef) null).when(masterWebUI3).masterEndpointRef();
      MasterPage masterPage3 = new MasterPage(masterWebUI3);
      masterPage3.org$apache$spark$deploy$master$ui$MasterPage$$master();
      Master master0 = mock(Master.class, new ViolatedAssumptionAnswer());
      MasterWebUI masterWebUI4 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(masterWebUI4).killEnabled();
      doReturn((RpcEndpointRef) null).when(masterWebUI4).masterEndpointRef();
      MasterPage masterPage4 = new MasterPage(masterWebUI4);
      masterPage4.prefix_$eq("t8{bYD'<orbrzf");
      Enumeration.Value enumeration_Value0 = mock(Enumeration.Value.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = mock(ApplicationDescription.class, new ViolatedAssumptionAnswer());
      doReturn("").when(applicationDescription0).name();
      ApplicationDescription applicationDescription1 = mock(ApplicationDescription.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(applicationDescription1).memoryPerExecutorMB();
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(date0).getTime();
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(applicationInfo0).coresGranted();
      doReturn(applicationDescription0, applicationDescription1, applicationDescription1, (ApplicationDescription) null).when(applicationInfo0).desc();
      doReturn("t8{bYD'<orbrzf", "t8{bYD'<orbrzf").when(applicationInfo0).id();
      doReturn(true).when(applicationInfo0).isFinished();
      doReturn(enumeration_Value0, enumeration_Value0).when(applicationInfo0).state();
      doReturn(date0).when(applicationInfo0).submitDate();
      // Undeclared exception!
      try { 
        masterPage4.org$apache$spark$deploy$master$ui$MasterPage$$appRow(applicationInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(masterWebUI0).killEnabled();
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      DriverInfo driverInfo0 = mock(DriverInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(driverInfo0).id();
      doReturn((Enumeration.Value) null, (Enumeration.Value) null, (Enumeration.Value) null).when(driverInfo0).state();
      doReturn((Date) null).when(driverInfo0).submitDate();
      // Undeclared exception!
      try { 
        masterPage0.org$apache$spark$deploy$master$ui$MasterPage$$driverRow(driverInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(masterWebUI0).killEnabled();
      doReturn((Master) null).when(masterWebUI0).master();
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(applicationInfo0).id();
      doReturn(false).when(applicationInfo0).isFinished();
      doReturn((Enumeration.Value) null, (Enumeration.Value) null).when(applicationInfo0).state();
      // Undeclared exception!
      try { 
        masterPage0.org$apache$spark$deploy$master$ui$MasterPage$$appRow(applicationInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RpcEndpointRef rpcEndpointRef0 = mock(RpcEndpointRef.class, new ViolatedAssumptionAnswer());
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn((Master) null).when(masterWebUI0).master();
      doReturn(rpcEndpointRef0).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(workerInfo0).isAlive();
      // Undeclared exception!
      try { 
        masterPage0.org$apache$spark$deploy$master$ui$MasterPage$$workerRow(workerInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(workerInfo0).cores();
      doReturn(0).when(workerInfo0).coresUsed();
      doReturn((String) null).when(workerInfo0).host();
      doReturn((String) null).when(workerInfo0).id();
      doReturn(false).when(workerInfo0).isAlive();
      doReturn(0, 0).when(workerInfo0).memory();
      doReturn(0, 0).when(workerInfo0).memoryUsed();
      doReturn(0).when(workerInfo0).port();
      doReturn((Enumeration.Value) null).when(workerInfo0).state();
      Seq<Node> seq0 = masterPage0.org$apache$spark$deploy$master$ui$MasterPage$$workerRow(workerInfo0);
      assertTrue(seq0.isTraversableAgain());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(masterWebUI0).killEnabled();
      doReturn((Master) null).when(masterWebUI0).master();
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      // Undeclared exception!
      try { 
        masterPage0.handleDriverKillRequest((HttpServletRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        masterPage0.renderJson(httpServletRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(masterWebUI0).killEnabled();
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      masterPage0.handleAppKillRequest((HttpServletRequest) null);
      assertEquals("", masterPage0.prefix());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MasterWebUI masterWebUI0 = mock(MasterWebUI.class, new ViolatedAssumptionAnswer());
      doReturn((RpcEndpointRef) null).when(masterWebUI0).masterEndpointRef();
      MasterPage masterPage0 = new MasterPage(masterWebUI0);
      // Undeclared exception!
      try { 
        masterPage0.getMasterState();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ui.MasterPage", e);
      }
  }
}
