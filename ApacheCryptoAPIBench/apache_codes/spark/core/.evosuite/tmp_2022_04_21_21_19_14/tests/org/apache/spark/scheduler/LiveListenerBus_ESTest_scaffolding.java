/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Apr 21 22:49:35 GMT 2022
 */

package org.apache.spark.scheduler;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class LiveListenerBus_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.spark.scheduler.LiveListenerBus"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/spark/core"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(LiveListenerBus_ESTest_scaffolding.class.getClassLoader() ,
      "scala.collection.Seq$",
      "scala.runtime.BooleanRef",
      "org.apache.spark.scheduler.SparkListenerExecutorMetricsUpdate",
      "scala.math.Equiv",
      "scala.collection.mutable.Iterable$class",
      "org.eclipse.jetty.server.handler.AbstractHandlerContainer",
      "org.apache.spark.rpc.RpcEndpointRef",
      "com.codahale.metrics.MetricSet",
      "scala.Function1$class",
      "scala.Function0$mcZ$sp$class",
      "scala.Enumeration$Value",
      "scala.sys.SystemProperties$",
      "scala.reflect.Manifest$class",
      "org.apache.hadoop.conf.Configuration",
      "scala.math.BigInt$",
      "scala.collection.mutable.ArrayOps",
      "scala.collection.AbstractMap",
      "org.apache.spark.scheduler.SparkListenerApplicationEnd",
      "org.apache.spark.internal.config.ConfigBuilder$$anonfun$stringConf$1",
      "scala.util.Either$",
      "org.apache.avro.Schema",
      "org.apache.spark.SparkContext",
      "org.apache.spark.internal.config.ConfigEntry$$anonfun$registerEntry$1",
      "scala.reflect.Manifest",
      "scala.StringContext",
      "org.apache.spark.SparkContext$$anon$2",
      "scala.collection.convert.Wrappers",
      "scala.reflect.ManifestFactory$$anon$2",
      "scala.reflect.ManifestFactory$$anon$3",
      "scala.reflect.ManifestFactory$$anon$4",
      "scala.collection.mutable.SetLike",
      "scala.collection.mutable.WrappedArray$ofChar",
      "scala.reflect.ManifestFactory$$anon$5",
      "scala.collection.mutable.Buffer",
      "scala.reflect.ManifestFactory$$anon$1",
      "scala.collection.convert.WrapAsJava$",
      "scala.Enumeration",
      "scala.runtime.ScalaRunTime$",
      "org.eclipse.jetty.util.component.Destroyable",
      "scala.collection.SeqViewLike",
      "org.apache.spark.util.ListenerBus",
      "scala.collection.GenIterable$class",
      "scala.collection.LinearSeqLike$class",
      "org.apache.spark.metrics.sink.MetricsServlet",
      "scala.reflect.ManifestFactory$$anon$6",
      "scala.reflect.ManifestFactory$$anon$7",
      "scala.reflect.ManifestFactory$$anon$8",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$listeners$1",
      "scala.reflect.ManifestFactory$$anon$9",
      "org.apache.spark.status.AppStatusStore",
      "org.apache.spark.AccumulatorParam",
      "scala.collection.generic.GenericTraversableTemplate",
      "scala.collection.CustomParallelizable$class",
      "scala.math.Ordering",
      "scala.collection.MapLike$class",
      "scala.collection.convert.Wrappers$ToIteratorWrapper",
      "scala.collection.generic.GenSetFactory",
      "scala.collection.GenSet$",
      "org.apache.spark.ui.ConsoleProgressBar",
      "scala.collection.generic.Subtractable$class",
      "scala.collection.GenSeqLike",
      "org.apache.spark.MapOutputStatistics",
      "scala.math.package$",
      "org.apache.spark.scheduler.SparkListenerStageSubmitted",
      "scala.collection.generic.Shrinkable$class",
      "org.apache.spark.scheduler.SparkListenerEvent",
      "scala.collection.mutable.Set",
      "org.apache.spark.rpc.RpcEndpoint",
      "scala.collection.immutable.Vector",
      "org.apache.spark.util.LongAccumulator",
      "scala.collection.convert.Decorators$AsScala",
      "scala.collection.mutable.Seq",
      "scala.collection.LinearSeq",
      "org.apache.spark.scheduler.EventLoggingListener",
      "scala.collection.convert.WrapAsScala$class",
      "scala.collection.generic.TraversableForwarder",
      "scala.collection.convert.Wrappers$MutableSeqWrapper$",
      "scala.collection.TraversableView",
      "scala.collection.immutable.Map$",
      "scala.collection.GenSeq$",
      "scala.util.DynamicVariable$$anon$1",
      "scala.collection.LinearSeqLike",
      "scala.util.control.Breaks$TryBlock",
      "com.codahale.metrics.Counting",
      "scala.collection.generic.SetFactory",
      "scala.Enumeration$Val",
      "org.apache.spark.metrics.MetricsSystem",
      "org.apache.spark.internal.config.ConfigReader",
      "scala.collection.convert.DecorateAsJava",
      "scala.math.Fractional$",
      "scala.collection.mutable.HashTable$HashUtils$class",
      "scala.util.Left",
      "org.apache.spark.scheduler.DAGScheduler",
      "scala.collection.GenSet$class",
      "scala.collection.script.Message",
      "scala.collection.convert.Wrappers$JPropertiesWrapper",
      "org.apache.spark.ShuffleDependency",
      "scala.collection.convert.Wrappers$JListWrapper$",
      "org.apache.spark.internal.config.ConfigEntryWithDefault",
      "scala.collection.mutable.ArrayLike$class",
      "scala.Predef$$less$colon$less",
      "scala.collection.convert.Wrappers$MutableSeqWrapper",
      "scala.collection.generic.GenericTraversableTemplate$class",
      "org.eclipse.jetty.util.component.Graceful",
      "scala.collection.TraversableLike$$anonfun$filterImpl$1",
      "scala.collection.Set$",
      "scala.collection.Seq$class",
      "scala.collection.IndexedSeqLike$class",
      "scala.collection.TraversableOnce",
      "com.codahale.metrics.LongAdderProxy$JdkProvider",
      "scala.runtime.TraitSetter",
      "scala.collection.convert.DecorateAsScala$class",
      "scala.runtime.AbstractFunction0",
      "org.apache.spark.scheduler.BasicJobCounter",
      "scala.runtime.AbstractFunction1",
      "scala.collection.mutable.Iterable",
      "org.apache.spark.rdd.RDD",
      "scala.math.Integral",
      "org.apache.spark.scheduler.SparkListenerApplicationStart",
      "org.apache.spark.internal.config.FallbackConfigEntry",
      "scala.StringContext$",
      "org.apache.spark.partial.PartialResult",
      "scala.collection.mutable.IndexedSeqOptimized",
      "scala.collection.mutable.MapLike",
      "scala.collection.convert.Wrappers$JEnumerationWrapper$",
      "scala.Predef$ArrayCharSequence",
      "scala.Option$",
      "org.apache.spark.scheduler.TaskLocation",
      "org.apache.spark.internal.config.OptionalConfigEntry$$anonfun$$lessinit$greater$2",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$stop$1",
      "scala.collection.convert.Decorators",
      "scala.collection.convert.Wrappers$MutableSetWrapper$",
      "org.apache.spark.internal.config.OptionalConfigEntry$$anonfun$$lessinit$greater$1",
      "scala.collection.JavaConverters$",
      "scala.math.Numeric",
      "scala.collection.convert.Wrappers$SeqWrapper$",
      "scala.sys.BooleanProp$BooleanPropImpl",
      "org.apache.spark.SparkEnv",
      "scala.collection.GenIterable$",
      "scala.util.control.NoStackTrace",
      "scala.PartialFunction$class",
      "scala.collection.mutable.ArrayBuilder$ofShort",
      "scala.collection.Parallel",
      "scala.collection.SeqLike$$anon$1",
      "scala.collection.generic.Subtractable",
      "scala.collection.generic.IterableForwarder",
      "scala.collection.convert.Decorators$AsJavaCollection",
      "scala.collection.TraversableOnce$BufferedCanBuildFrom",
      "org.apache.spark.internal.config.package$",
      "scala.collection.mutable.ArrayBuilder$ofLong",
      "org.apache.spark.internal.config.TypedConfigBuilder$$anonfun$$lessinit$greater$1$$anonfun$apply$1",
      "scala.collection.immutable.Stream$ConsWrapper",
      "org.eclipse.jetty.servlet.ServletContextHandler",
      "scala.sys.BooleanProp$$anonfun$keyExists$1",
      "scala.collection.Parallelizable",
      "com.codahale.metrics.MetricRegistry$MetricBuilder",
      "org.apache.spark.internal.config.TypedConfigBuilder",
      "scala.Serializable",
      "scala.collection.mutable.HashTable$",
      "scala.collection.immutable.IndexedSeq$",
      "org.apache.spark.scheduler.SparkListenerNodeBlacklistedForStage",
      "scala.collection.immutable.Stream$cons$",
      "org.apache.spark.SparkStatusTracker",
      "scala.collection.convert.DecorateAsJava$$anonfun$bufferAsJavaListConverter$1",
      "com.codahale.metrics.Reservoir",
      "org.apache.spark.internal.Logging$class",
      "scala.collection.TraversableLike$$anonfun$flatMap$1",
      "scala.concurrent.Awaitable",
      "scala.collection.immutable.Stream$Cons",
      "scala.util.Random",
      "scala.collection.mutable.BufferLike",
      "scala.math.Numeric$",
      "scala.collection.generic.GenericSetTemplate$class",
      "scala.collection.Iterable$",
      "scala.collection.immutable.LinearSeq$",
      "org.apache.spark.broadcast.Broadcast",
      "scala.collection.convert.Wrappers$IterableWrapperTrait",
      "scala.collection.mutable.LazyBuilder",
      "scala.collection.immutable.List",
      "scala.collection.TraversableLike$class",
      "scala.collection.generic.GenericCompanion",
      "scala.collection.mutable.SeqLike$class",
      "org.apache.spark.util.ThreadStackTrace",
      "org.apache.spark.scheduler.SparkListenerInterface",
      "scala.collection.generic.GenTraversableFactory$$anon$1",
      "scala.collection.generic.ImmutableMapFactory",
      "scala.collection.mutable.HashEntry$class",
      "scala.math.PartialOrdering",
      "scala.reflect.ClassTag$class",
      "scala.collection.convert.Wrappers$DictionaryWrapper",
      "scala.collection.MapLike",
      "scala.collection.GenTraversable$",
      "scala.collection.mutable.Builder",
      "scala.collection.immutable.Stream$Empty$",
      "scala.collection.Traversable$class",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$1",
      "scala.math.ScalaNumericConversions",
      "scala.collection.immutable.StringOps",
      "scala.math.ScalaNumber",
      "scala.reflect.ClassTag",
      "scala.collection.mutable.Iterable$",
      "scala.collection.immutable.Range$",
      "scala.collection.immutable.IndexedSeq$class",
      "scala.collection.mutable.WrappedArray$ofFloat",
      "scala.reflect.ManifestFactory$PhantomManifest",
      "scala.collection.convert.WrapAsJava",
      "scala.collection.convert.Wrappers$MutableBufferWrapper$",
      "scala.math.BigInt",
      "org.apache.spark.internal.config.ConfigEntryWithDefaultFunction",
      "scala.collection.mutable.Buffer$",
      "scala.collection.GenMapLike",
      "scala.collection.ViewMkString",
      "scala.collection.GenMap",
      "org.apache.spark.network.sasl.SecretKeyHolder",
      "org.apache.avro.JsonProperties",
      "scala.collection.SeqView",
      "com.codahale.metrics.MetricRegistry",
      "scala.collection.mutable.ArrayBuilder$ofRef",
      "org.apache.spark.FutureAction",
      "org.apache.hadoop.mapreduce.InputFormat",
      "scala.collection.mutable.Builder$class",
      "scala.LowPriorityImplicits",
      "scala.sys.BooleanProp",
      "scala.collection.mutable.WrappedArray$ofLong",
      "scala.collection.immutable.Stream",
      "scala.collection.immutable.Stream$",
      "org.apache.spark.scheduler.SparkListenerTaskStart",
      "scala.Product",
      "scala.collection.GenTraversable$class",
      "scala.collection.convert.Wrappers$JIteratorWrapper$",
      "scala.runtime.AbstractFunction0$mcZ$sp",
      "org.apache.spark.Accumulator",
      "scala.Specializable",
      "scala.collection.concurrent.Map",
      "scala.collection.convert.Wrappers$JIteratorWrapper",
      "scala.package$$anon$1",
      "org.eclipse.jetty.util.component.LifeCycle",
      "scala.collection.immutable.Iterable",
      "scala.collection.generic.MapFactory",
      "org.apache.spark.internal.config.ConfigEntry",
      "scala.collection.mutable.HashTable$HashUtils",
      "scala.collection.SetLike$class",
      "org.apache.spark.ui.SparkUI",
      "scala.collection.GenIterable",
      "org.apache.spark.internal.config.TypedConfigBuilder$$anonfun$createOptional$1",
      "org.apache.hadoop.mapred.InputFormat",
      "scala.collection.GenSeqLike$class",
      "scala.collection.mutable.WrappedArray$ofDouble",
      "org.apache.spark.scheduler.SparkListenerTaskEnd",
      "scala.collection.mutable.BufferLike$class",
      "scala.collection.mutable.Cloneable$class",
      "scala.collection.mutable.DefaultEntry",
      "scala.util.Left$",
      "scala.util.DynamicVariable",
      "scala.math.BigDecimal",
      "scala.Some",
      "scala.MatchError",
      "scala.collection.mutable.ArrayBuilder$ofDouble",
      "scala.collection.generic.GenSeqFactory",
      "scala.collection.immutable.Traversable$",
      "scala.collection.mutable.ArrayBuilder$ofChar",
      "scala.runtime.Null$",
      "scala.StringContext$$anonfun$s$1",
      "scala.collection.convert.Wrappers$IteratorWrapper",
      "scala.sys.Prop",
      "scala.reflect.ClassManifestDeprecatedApis$class",
      "org.apache.spark.ContextCleaner",
      "scala.math.LowPriorityOrderingImplicits",
      "scala.collection.SetLike",
      "scala.collection.immutable.Range$Inclusive",
      "org.apache.spark.internal.config.ConfigEntryWithDefaultString",
      "scala.collection.generic.SeqForwarder$class",
      "org.apache.spark.util.AccumulatorV2",
      "scala.reflect.NoManifest$",
      "com.codahale.metrics.LongAdderAdapter",
      "scala.collection.GenSetLike",
      "scala.collection.IndexedSeq",
      "scala.collection.mutable.Traversable$",
      "scala.math.ScalaNumericAnyConversions",
      "com.fasterxml.jackson.annotation.JsonTypeInfo$As",
      "scala.collection.mutable.ArrayBuilder$ofInt",
      "scala.collection.mutable.WrappedArray$",
      "scala.collection.immutable.MapLike",
      "scala.Immutable",
      "scala.sys.package$",
      "scala.math.Ordered$",
      "scala.Predef$",
      "scala.collection.immutable.Range",
      "scala.sys.ShutdownHookThread",
      "scala.collection.Traversable",
      "scala.util.control.NoStackTrace$class",
      "scala.collection.TraversableOnce$$anonfun$addString$1",
      "scala.collection.IndexedSeqOptimized",
      "scala.collection.mutable.Seq$",
      "scala.collection.Traversable$",
      "scala.collection.convert.Decorators$",
      "org.eclipse.jetty.server.handler.HandlerWrapper",
      "scala.collection.immutable.LinearSeq$class",
      "scala.collection.TraversableLike$WithFilter",
      "scala.collection.generic.GenSetFactory$$anon$1",
      "scala.collection.mutable.ResizableArray$",
      "scala.collection.mutable.Traversable$class",
      "scala.collection.generic.Growable",
      "scala.collection.immutable.StringOps$",
      "scala.collection.CustomParallelizable",
      "scala.math.BigDecimal$",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$activeQueues$1",
      "org.apache.spark.scheduler.SparkListenerUnpersistRDD",
      "scala.collection.Iterator$$anon$2",
      "scala.collection.convert.Wrappers$MapWrapper",
      "scala.collection.Iterator$$anon$24",
      "scala.collection.convert.Wrappers$class",
      "org.apache.hadoop.io.Writable",
      "org.apache.spark.internal.config.TypedConfigBuilder$$anonfun$$lessinit$greater$1",
      "scala.collection.mutable.WrappedArray$ofInt",
      "scala.Function0$mcZ$sp",
      "scala.collection.GenSetLike$class",
      "scala.NotImplementedError",
      "scala.reflect.ManifestFactory$ClassTypeManifest",
      "scala.collection.generic.Shrinkable",
      "scala.collection.mutable.Seq$class",
      "scala.collection.LinearSeqOptimized",
      "scala.collection.immutable.Stream$StreamBuilder",
      "scala.collection.Iterator$class",
      "org.apache.spark.scheduler.SparkListenerNodeUnblacklisted",
      "scala.collection.generic.IndexedSeqFactory",
      "com.codahale.metrics.MetricFilter",
      "scala.collection.immutable.IndexedSeq",
      "scala.reflect.ManifestFactory$$anon$11",
      "scala.collection.LinearSeqLike$$anon$1",
      "scala.reflect.ManifestFactory$$anon$12",
      "org.apache.spark.scheduler.SparkListenerTaskGettingResult",
      "scala.collection.immutable.Seq$",
      "scala.reflect.ManifestFactory$$anon$10",
      "scala.collection.immutable.StringLike",
      "scala.collection.Map",
      "org.apache.spark.scheduler.SparkListenerBlockManagerAdded",
      "com.codahale.metrics.Metric",
      "scala.collection.mutable.HashTable",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$findListenersByClass$1",
      "scala.reflect.ManifestFactory$$anon$13",
      "scala.reflect.ManifestFactory$$anon$14",
      "scala.collection.IndexedSeqLike$Elements",
      "scala.collection.mutable.IndexedSeqLike",
      "org.apache.spark.SecurityManager",
      "org.apache.spark.scheduler.LiveListenerBus$",
      "scala.Product$class",
      "scala.math.LowPriorityOrderingImplicits$class",
      "scala.collection.convert.Wrappers$SetWrapper",
      "scala.reflect.ManifestFactory$",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$start$1",
      "scala.collection.generic.FilterMonadic",
      "org.eclipse.jetty.server.Handler",
      "org.apache.spark.scheduler.SparkListenerExecutorUnblacklisted",
      "scala.runtime.NonLocalReturnControl",
      "scala.collection.mutable.Cloneable",
      "scala.collection.generic.GenTraversableFactory",
      "scala.sys.SystemProperties$$anonfun$contains$1",
      "scala.collection.convert.Wrappers$JCollectionWrapper",
      "scala.collection.GenIterableLike",
      "scala.collection.LinearSeq$",
      "scala.Equals",
      "scala.collection.generic.GenericSetTemplate",
      "com.codahale.metrics.LongAdderProxy$JdkProvider$1",
      "scala.collection.generic.MutableMapFactory",
      "scala.reflect.ClassManifestFactory$",
      "scala.collection.convert.Wrappers$JListWrapper",
      "scala.collection.mutable.StringBuilder",
      "scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1",
      "scala.Mutable",
      "scala.collection.immutable.Set$class",
      "scala.collection.GenSet",
      "scala.collection.immutable.Vector$",
      "scala.collection.convert.Wrappers$JPropertiesWrapper$",
      "org.apache.spark.internal.config.ConfigBuilder$$anonfun$booleanConf$1",
      "scala.collection.GenTraversable",
      "scala.collection.GenSeq",
      "org.apache.spark.WritableConverter",
      "scala.collection.convert.Wrappers$JCollectionWrapper$",
      "org.apache.spark.ExecutorAllocationManager",
      "scala.collection.generic.IterableForwarder$class",
      "scala.collection.immutable.Iterable$",
      "scala.collection.immutable.WrappedString",
      "scala.collection.convert.Wrappers$MutableSetWrapper",
      "org.apache.spark.internal.Logging",
      "com.codahale.metrics.LongAdderProxy",
      "scala.collection.mutable.ArrayBuilder$ofByte",
      "scala.collection.generic.Sizing",
      "org.eclipse.jetty.util.component.Dumpable",
      "scala.util.control.Breaks",
      "scala.collection.mutable.SetBuilder",
      "org.apache.spark.scheduler.SchedulerBackend",
      "org.apache.spark.internal.config.ConfigProvider",
      "scala.collection.SeqLike",
      "org.apache.spark.scheduler.LiveListenerBusMetrics",
      "scala.collection.mutable.ListBuffer$",
      "scala.Predef$$anon$2",
      "scala.Predef$$anon$3",
      "scala.collection.immutable.Set$EmptySet$",
      "org.apache.spark.scheduler.SparkListenerStageCompleted",
      "scala.collection.mutable.WrappedArray$ofUnit",
      "scala.Predef$$anon$1",
      "scala.sys.PropImpl",
      "org.apache.spark.Accumulable",
      "scala.collection.convert.Wrappers$IterableWrapper",
      "scala.sys.SystemProperties$$anonfun$get$1",
      "scala.collection.convert.Wrappers$JEnumerationWrapper",
      "com.fasterxml.jackson.annotation.JacksonAnnotation",
      "org.eclipse.jetty.util.component.Container",
      "scala.collection.Iterator$",
      "scala.collection.mutable.SeqLike",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$removeListener$1",
      "scala.sys.BooleanProp$",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$removeListener$2",
      "scala.util.hashing.package$",
      "scala.collection.immutable.Iterable$class",
      "scala.collection.immutable.Seq$class",
      "scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom",
      "scala.collection.immutable.Nil$",
      "scala.Predef$$eq$colon$eq",
      "scala.PartialFunction",
      "scala.Function0$class",
      "scala.collection.convert.DecorateAsScala",
      "scala.collection.mutable.WrappedArray$ofRef",
      "scala.Tuple2",
      "scala.collection.convert.Wrappers$",
      "scala.collection.mutable.IndexedSeqLike$class",
      "scala.Tuple3",
      "org.apache.spark.AccumulableParam",
      "scala.collection.convert.Wrappers$JSetWrapper",
      "scala.util.control.BreakControl",
      "com.fasterxml.jackson.annotation.JsonTypeInfo$Id",
      "scala.util.control.NoStackTrace$",
      "scala.collection.IterableView",
      "org.apache.spark.storage.StorageStatus",
      "scala.collection.parallel.Combiner",
      "scala.collection.BufferedIterator",
      "scala.collection.immutable.Seq",
      "scala.collection.mutable.ResizableArray$class",
      "scala.Predef$SeqCharSequence",
      "scala.collection.immutable.Set",
      "scala.package$",
      "scala.collection.convert.WrapAsJava$class",
      "scala.collection.convert.Wrappers$JIterableWrapper$",
      "scala.collection.mutable.IndexedSeq$class",
      "scala.collection.convert.Wrappers$JMapWrapper",
      "org.eclipse.jetty.server.handler.AbstractHandler",
      "scala.collection.mutable.IndexedSeqView",
      "scala.collection.IndexedSeq$",
      "scala.collection.IndexedSeqLike",
      "org.apache.spark.internal.config.OptionalConfigEntry",
      "scala.collection.immutable.Set$",
      "org.apache.spark.scheduler.LiveListenerBus",
      "scala.collection.GenTraversableLike",
      "scala.collection.mutable.WrappedArray$ofBoolean",
      "scala.sys.SystemProperties",
      "scala.collection.immutable.Set$Set4",
      "org.apache.spark.scheduler.SparkListenerExecutorBlacklisted",
      "scala.collection.LinearSeq$class",
      "scala.collection.mutable.WrappedArray$ofShort",
      "scala.Product3",
      "scala.Product2",
      "scala.collection.convert.WrapAsScala$",
      "scala.collection.$plus$colon$",
      "scala.collection.Set$class",
      "scala.collection.immutable.Set$Set1",
      "scala.collection.mutable.HashMap",
      "scala.collection.immutable.Set$Set3",
      "scala.collection.$colon$plus$",
      "scala.collection.immutable.Set$Set2",
      "org.apache.spark.scheduler.SparkListenerJobEnd",
      "scala.collection.convert.Wrappers$JIterableWrapper",
      "scala.util.Right",
      "org.apache.spark.scheduler.AsyncEventQueue$$anon$1",
      "scala.collection.convert.Wrappers$JDictionaryWrapper",
      "scala.collection.generic.TraversableFactory",
      "scala.concurrent.Future",
      "scala.collection.mutable.IndexedSeq",
      "org.apache.spark.scheduler.SparkListenerJobStart",
      "scala.runtime.BoxedUnit",
      "scala.collection.TraversableLike$$anonfun$map$1",
      "org.apache.spark.util.CollectionAccumulator",
      "scala.Option",
      "org.apache.spark.scheduler.SparkListenerExecutorBlacklistedForStage",
      "org.apache.spark.status.api.v1.UIRoot",
      "org.apache.hadoop.mapred.JobConf",
      "scala.collection.convert.Wrappers$MutableMapWrapper",
      "scala.collection.IndexedSeq$class",
      "org.apache.spark.Dependency",
      "scala.collection.mutable.Traversable",
      "org.eclipse.jetty.server.handler.ScopedHandler",
      "scala.collection.mutable.AbstractMap",
      "org.apache.spark.SimpleFutureAction",
      "org.apache.spark.metrics.sink.Sink",
      "scala.collection.immutable.$colon$colon$",
      "scala.collection.mutable.Map$",
      "scala.reflect.ScalaSignature",
      "org.apache.spark.scheduler.SparkListenerBus",
      "scala.collection.convert.Wrappers$DictionaryWrapper$",
      "org.eclipse.jetty.util.component.ContainerLifeCycle",
      "org.apache.spark.internal.config.ConfigHelpers$",
      "scala.util.matching.Regex",
      "scala.math.LowPriorityEquiv",
      "scala.collection.Map$class",
      "scala.collection.AbstractSet",
      "scala.reflect.package$",
      "org.apache.spark.scheduler.Schedulable",
      "scala.collection.AbstractSeq",
      "scala.collection.convert.DecorateAsScala$$anonfun$asScalaBufferConverter$1",
      "scala.runtime.BoxesRunTime",
      "org.eclipse.jetty.server.HandlerContainer",
      "scala.collection.mutable.StringBuilder$",
      "scala.collection.convert.Wrappers$JDictionaryWrapper$",
      "org.apache.spark.storage.RDDInfo",
      "org.eclipse.jetty.util.component.AbstractLifeCycle",
      "scala.collection.Seq",
      "scala.collection.mutable.Buffer$class",
      "scala.collection.Set",
      "scala.collection.immutable.VectorPointer",
      "org.apache.spark.util.ListenerBus$class",
      "org.apache.spark.scheduler.SparkListenerNodeBlacklisted",
      "scala.collection.immutable.LinearSeq",
      "scala.util.control.ControlThrowable",
      "scala.collection.convert.Decorators$class",
      "scala.collection.mutable.ArrayBuilder$ofFloat",
      "scala.collection.mutable.ArrayLike",
      "org.apache.spark.network.util.ByteUnit",
      "scala.collection.IndexedSeqOptimized$class",
      "scala.collection.immutable.VectorPointer$class",
      "scala.collection.generic.ImmutableSetFactory",
      "scala.collection.BufferedIterator$class",
      "org.apache.spark.scheduler.SparkListenerExecutorRemoved",
      "org.apache.spark.scheduler.SparkListenerBus$class",
      "scala.collection.immutable.Stream$$hash$colon$colon$",
      "scala.collection.immutable.Stream$StreamWithFilter",
      "scala.Function0",
      "scala.Function1",
      "scala.Function2",
      "org.apache.spark.scheduler.SparkListenerSpeculativeTaskSubmitted",
      "scala.Function3",
      "scala.collection.convert.Decorators$AsJavaEnumeration",
      "scala.Function4",
      "scala.collection.convert.Wrappers$MutableMapWrapper$",
      "scala.Function5",
      "scala.collection.convert.Decorators$AsJavaDictionary",
      "scala.StringContext$InvalidEscapeException",
      "scala.collection.convert.Wrappers$JSetWrapper$",
      "scala.collection.mutable.HashEntry",
      "org.apache.spark.partial.ApproximateEvaluator",
      "org.apache.spark.metrics.source.Source",
      "org.apache.spark.internal.config.ConfigEntry$",
      "scala.util.Either",
      "scala.collection.Parallelizable$class",
      "scala.collection.generic.GenericSeqCompanion",
      "scala.collection.mutable.WrappedArray",
      "org.apache.spark.util.DoubleAccumulator",
      "scala.math.Ordered$class",
      "scala.collection.convert.Wrappers$JMapWrapperLike",
      "scala.collection.SeqLike$class",
      "org.apache.spark.TaskContext",
      "org.apache.spark.SparkConf",
      "scala.collection.mutable.ResizableArray",
      "scala.None$",
      "scala.collection.convert.Wrappers$IterableWrapper$",
      "scala.collection.TraversableViewLike",
      "scala.collection.mutable.Map",
      "scala.collection.convert.Wrappers$SeqWrapper",
      "scala.util.Right$",
      "scala.Option$$anonfun$orNull$1",
      "com.fasterxml.jackson.annotation.JsonTypeInfo$None",
      "scala.math.LowPriorityEquiv$class",
      "scala.collection.IndexedSeq$$anon$1",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$2",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$1",
      "scala.collection.immutable.List$$anon$1",
      "scala.collection.mutable.WrappedArray$ofByte",
      "org.eclipse.jetty.util.Attributes",
      "scala.collection.generic.SeqForwarder",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$4",
      "scala.collection.mutable.AbstractIterable",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$3",
      "org.apache.spark.internal.config.ConfigBuilder",
      "scala.collection.mutable.ArrayBuilder$ofUnit",
      "org.apache.spark.input.PortableDataStream",
      "org.apache.spark.scheduler.SparkListenerEnvironmentUpdate",
      "scala.reflect.ClassManifestDeprecatedApis",
      "scala.collection.immutable.List$",
      "scala.collection.script.Scriptable",
      "scala.collection.mutable.AbstractBuffer",
      "com.codahale.metrics.Counter",
      "scala.collection.immutable.StringLike$class",
      "scala.collection.generic.IsTraversableLike",
      "scala.collection.generic.SeqFactory",
      "scala.Cloneable",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$waitUntilEmpty$1",
      "scala.collection.mutable.MapLike$class",
      "scala.math.Integral$",
      "scala.reflect.OptManifest",
      "scala.collection.TraversableOnce$class",
      "scala.collection.convert.Wrappers$MutableBufferWrapper",
      "org.apache.spark.scheduler.SparkListener",
      "com.codahale.metrics.LongAdderProxy$Provider",
      "scala.DeprecatedPredef$class",
      "scala.collection.GenSeq$class",
      "scala.collection.mutable.HashTable$class",
      "scala.math.Ordered",
      "scala.collection.mutable.ArrayBuilder$ofBoolean",
      "scala.UninitializedError",
      "org.apache.spark.ui.WebUI",
      "com.fasterxml.jackson.annotation.JsonTypeInfo",
      "scala.collection.TraversableLike",
      "org.apache.spark.scheduler.SparkListenerExecutorAdded",
      "scala.collection.IterableLike",
      "scala.collection.convert.WrapAsScala",
      "scala.collection.immutable.Map",
      "org.apache.spark.scheduler.AsyncEventQueue",
      "scala.collection.generic.CanBuildFrom",
      "org.apache.spark.scheduler.SparkListenerBlockUpdated",
      "org.apache.spark.annotation.DeveloperApi",
      "scala.collection.convert.Decorators$AsJava",
      "scala.collection.convert.Wrappers$JMapWrapper$",
      "scala.reflect.AnyValManifest",
      "scala.collection.IterableViewLike",
      "scala.collection.convert.Wrappers$JConcurrentMapWrapper$",
      "scala.collection.mutable.ListBuffer",
      "org.apache.spark.util.CallSite",
      "scala.collection.generic.HasNewBuilder",
      "scala.collection.GenTraversableOnce",
      "scala.collection.mutable.Map$class",
      "scala.collection.mutable.ArrayBuffer$",
      "scala.collection.AbstractTraversable",
      "scala.collection.mutable.ArrayBuilder",
      "scala.collection.AbstractIterator",
      "scala.collection.generic.TraversableForwarder$class",
      "scala.collection.convert.Wrappers$IteratorWrapper$",
      "scala.runtime.VolatileByteRef",
      "scala.collection.AbstractIterable",
      "org.apache.spark.scheduler.TaskScheduler",
      "scala.collection.immutable.Traversable$class",
      "scala.DeprecatedPredef",
      "org.apache.spark.scheduler.SparkListenerBlockManagerRemoved",
      "org.apache.spark.SparkException",
      "scala.collection.convert.DecorateAsJava$class",
      "scala.collection.mutable.ArrayBuffer",
      "scala.collection.immutable.$colon$colon",
      "scala.collection.immutable.Traversable",
      "scala.collection.GenMapLike$class",
      "scala.collection.generic.Growable$class",
      "scala.runtime.Nothing$",
      "scala.collection.Iterator",
      "org.apache.spark.rdd.EmptyRDD",
      "scala.collection.Iterable",
      "org.eclipse.jetty.server.handler.ContextHandler",
      "scala.collection.mutable.AbstractSet",
      "scala.collection.mutable.AbstractSeq",
      "scala.collection.mutable.IndexedSeq$",
      "scala.collection.generic.Clearable",
      "scala.collection.convert.Wrappers$IterableWrapperTrait$class",
      "scala.collection.generic.GenMapFactory",
      "scala.math.Equiv$",
      "scala.collection.IterableLike$class",
      "scala.collection.LinearSeqOptimized$class",
      "scala.collection.Iterable$class",
      "scala.runtime.ObjectRef",
      "scala.math.Ordering$"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.apache.spark.SparkConf", false, LiveListenerBus_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.apache.spark.SparkContext", false, LiveListenerBus_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.apache.spark.metrics.MetricsSystem", false, LiveListenerBus_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.apache.spark.scheduler.SparkListenerEvent", false, LiveListenerBus_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.apache.spark.scheduler.SparkListenerInterface", false, LiveListenerBus_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(LiveListenerBus_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.spark.scheduler.LiveListenerBus",
      "scala.util.DynamicVariable",
      "scala.runtime.BoxesRunTime",
      "scala.util.DynamicVariable$$anon$1",
      "org.apache.spark.scheduler.LiveListenerBus$",
      "scala.runtime.AbstractFunction1",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$1",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$removeListener$1",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$removeListener$2",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$start$1",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$waitUntilEmpty$1",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$stop$1",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$findListenersByClass$1",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$listeners$1",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$activeQueues$1",
      "org.apache.spark.scheduler.LiveListenerBus$$anonfun$start$1$$anonfun$apply$1",
      "com.fasterxml.jackson.annotation.JsonTypeInfo$As",
      "com.fasterxml.jackson.annotation.JsonTypeInfo$Id",
      "scala.collection.convert.DecorateAsJava$class",
      "scala.collection.convert.DecorateAsScala$class",
      "scala.collection.JavaConverters$",
      "scala.runtime.BoxedUnit",
      "scala.Option",
      "scala.Product$class",
      "scala.None$",
      "scala.LowPriorityImplicits",
      "scala.DeprecatedPredef$class",
      "scala.package$$anon$1",
      "scala.collection.generic.GenericCompanion",
      "scala.collection.generic.GenTraversableFactory",
      "scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom",
      "scala.collection.generic.GenTraversableFactory$$anon$1",
      "scala.util.control.Breaks",
      "scala.util.control.BreakControl",
      "scala.util.control.NoStackTrace$class",
      "scala.sys.SystemProperties$",
      "scala.sys.BooleanProp$",
      "scala.sys.PropImpl",
      "scala.sys.BooleanProp$BooleanPropImpl",
      "scala.sys.BooleanProp$$anonfun$keyExists$1",
      "scala.Function1$class",
      "scala.collection.generic.GenMapFactory",
      "scala.collection.generic.MapFactory",
      "scala.collection.generic.MutableMapFactory",
      "scala.collection.mutable.Map$",
      "scala.collection.AbstractTraversable",
      "scala.collection.AbstractIterable",
      "scala.collection.AbstractSeq",
      "scala.collection.immutable.List",
      "scala.collection.TraversableOnce$class",
      "scala.collection.Parallelizable$class",
      "scala.collection.TraversableLike$class",
      "scala.collection.generic.GenericTraversableTemplate$class",
      "scala.collection.GenTraversable$class",
      "scala.collection.Traversable$class",
      "scala.collection.GenIterable$class",
      "scala.collection.IterableLike$class",
      "scala.collection.Iterable$class",
      "scala.PartialFunction$class",
      "scala.collection.GenSeqLike$class",
      "scala.collection.GenSeq$class",
      "scala.collection.SeqLike$class",
      "scala.collection.Seq$class",
      "scala.collection.immutable.Traversable$class",
      "scala.collection.immutable.Iterable$class",
      "scala.collection.immutable.Seq$class",
      "scala.collection.LinearSeqLike$class",
      "scala.collection.LinearSeq$class",
      "scala.collection.immutable.LinearSeq$class",
      "scala.collection.LinearSeqOptimized$class",
      "scala.collection.immutable.Nil$",
      "scala.collection.AbstractMap",
      "scala.collection.mutable.AbstractMap",
      "scala.collection.mutable.HashMap",
      "scala.collection.GenMapLike$class",
      "scala.collection.generic.Subtractable$class",
      "scala.collection.MapLike$class",
      "scala.collection.Map$class",
      "scala.collection.mutable.Traversable$class",
      "scala.collection.mutable.Iterable$class",
      "scala.collection.generic.Growable$class",
      "scala.collection.mutable.Builder$class",
      "scala.collection.generic.Shrinkable$class",
      "scala.collection.mutable.Cloneable$class",
      "scala.collection.mutable.MapLike$class",
      "scala.collection.mutable.Map$class",
      "scala.collection.mutable.HashTable$HashUtils$class",
      "scala.collection.mutable.HashTable$class",
      "scala.collection.mutable.HashTable$",
      "scala.collection.CustomParallelizable$class",
      "scala.runtime.ScalaRunTime$",
      "scala.util.hashing.package$",
      "scala.collection.mutable.DefaultEntry",
      "scala.collection.mutable.HashEntry$class",
      "scala.sys.package$",
      "scala.sys.SystemProperties",
      "scala.runtime.AbstractFunction0",
      "scala.runtime.AbstractFunction0$mcZ$sp",
      "scala.sys.SystemProperties$$anonfun$contains$1",
      "scala.Function0$class",
      "scala.Function0$mcZ$sp$class",
      "scala.Some",
      "scala.sys.SystemProperties$$anonfun$get$1",
      "scala.Option$",
      "scala.util.control.NoStackTrace$",
      "scala.collection.Traversable$",
      "scala.collection.Iterable$",
      "scala.collection.generic.GenSeqFactory",
      "scala.collection.generic.SeqFactory",
      "scala.collection.Seq$",
      "scala.collection.generic.IndexedSeqFactory",
      "scala.collection.IndexedSeq$$anon$1",
      "scala.collection.IndexedSeq$",
      "scala.collection.AbstractIterator",
      "scala.collection.Iterator$$anon$2",
      "scala.collection.Iterator$class",
      "scala.collection.Iterator$",
      "scala.collection.immutable.List$$anon$1",
      "scala.collection.immutable.List$",
      "scala.collection.immutable.$colon$colon$",
      "scala.collection.$plus$colon$",
      "scala.collection.$colon$plus$",
      "scala.collection.immutable.Stream$",
      "scala.collection.immutable.Stream$$hash$colon$colon$",
      "scala.collection.immutable.Vector",
      "scala.collection.IndexedSeqLike$class",
      "scala.collection.IndexedSeq$class",
      "scala.collection.immutable.IndexedSeq$class",
      "scala.collection.immutable.VectorPointer$class",
      "scala.collection.immutable.Vector$",
      "scala.collection.mutable.StringBuilder$",
      "scala.collection.immutable.Range$",
      "scala.math.BigDecimal$",
      "scala.math.BigInt$",
      "scala.math.LowPriorityEquiv$class",
      "scala.math.Equiv$",
      "scala.math.Fractional$",
      "scala.math.Integral$",
      "scala.math.Numeric$",
      "scala.math.Ordered$",
      "scala.math.LowPriorityOrderingImplicits$class",
      "scala.math.Ordering$",
      "scala.util.Either$",
      "scala.util.Left$",
      "scala.util.Right$",
      "scala.package$",
      "scala.collection.generic.ImmutableMapFactory",
      "scala.collection.immutable.Map$",
      "scala.collection.generic.GenSetFactory",
      "scala.collection.generic.SetFactory",
      "scala.collection.generic.ImmutableSetFactory",
      "scala.collection.immutable.Set$",
      "scala.reflect.AnyValManifest",
      "scala.reflect.ManifestFactory$$anon$6",
      "scala.reflect.ClassManifestDeprecatedApis$class",
      "scala.reflect.ClassTag$class",
      "scala.reflect.Manifest$class",
      "scala.reflect.ManifestFactory$$anon$7",
      "scala.reflect.ManifestFactory$$anon$8",
      "scala.reflect.ManifestFactory$$anon$9",
      "scala.reflect.ManifestFactory$$anon$10",
      "scala.reflect.ManifestFactory$$anon$11",
      "scala.reflect.ManifestFactory$$anon$12",
      "scala.reflect.ManifestFactory$$anon$13",
      "scala.reflect.ManifestFactory$$anon$14",
      "scala.reflect.ManifestFactory$ClassTypeManifest",
      "scala.reflect.ManifestFactory$PhantomManifest",
      "scala.reflect.ManifestFactory$$anon$1",
      "scala.reflect.ManifestFactory$$anon$2",
      "scala.reflect.ManifestFactory$$anon$3",
      "scala.reflect.ManifestFactory$$anon$4",
      "scala.reflect.ManifestFactory$$anon$5",
      "scala.reflect.ManifestFactory$",
      "scala.reflect.ClassManifestFactory$",
      "scala.reflect.package$",
      "scala.reflect.NoManifest$",
      "scala.Predef$$anon$3",
      "scala.Predef$$less$colon$less",
      "scala.Predef$$anon$1",
      "scala.Predef$$eq$colon$eq",
      "scala.Predef$$anon$2",
      "scala.Predef$",
      "scala.collection.mutable.Buffer$",
      "org.apache.spark.SparkConf",
      "org.apache.spark.scheduler.LiveListenerBusMetrics",
      "org.apache.spark.internal.Logging$class",
      "com.codahale.metrics.MetricRegistry",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$1",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$2",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$3",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$4",
      "com.codahale.metrics.MetricRegistry$MetricBuilder",
      "com.codahale.metrics.Counter",
      "com.codahale.metrics.LongAdderProxy$JdkProvider",
      "com.codahale.metrics.LongAdderProxy$JdkProvider$1",
      "com.codahale.metrics.LongAdderProxy",
      "scala.collection.mutable.AbstractSeq",
      "scala.collection.mutable.AbstractBuffer",
      "scala.collection.mutable.ListBuffer",
      "scala.collection.mutable.SeqLike$class",
      "scala.collection.mutable.Seq$class",
      "scala.collection.mutable.BufferLike$class",
      "scala.collection.mutable.Buffer$class",
      "scala.collection.generic.TraversableForwarder$class",
      "scala.collection.generic.IterableForwarder$class",
      "scala.collection.generic.SeqForwarder$class",
      "scala.collection.convert.Decorators$AsScala",
      "scala.collection.convert.Decorators$class",
      "scala.collection.convert.Decorators$",
      "scala.collection.convert.DecorateAsScala$$anonfun$asScalaBufferConverter$1",
      "scala.collection.convert.WrapAsScala$class",
      "scala.collection.convert.WrapAsScala$",
      "scala.collection.convert.Wrappers$JListWrapper",
      "scala.collection.convert.Wrappers$class",
      "scala.collection.convert.Wrappers$",
      "scala.collection.convert.Wrappers$JIteratorWrapper",
      "org.apache.spark.scheduler.AsyncEventQueue",
      "org.apache.spark.util.ListenerBus$class",
      "org.apache.spark.scheduler.SparkListenerBus$class",
      "org.apache.spark.internal.config.ConfigBuilder",
      "org.apache.spark.internal.config.TypedConfigBuilder",
      "org.apache.spark.internal.config.ConfigBuilder$$anonfun$stringConf$1",
      "org.apache.spark.internal.config.TypedConfigBuilder$$anonfun$$lessinit$greater$1",
      "org.apache.spark.internal.config.ConfigEntry",
      "org.apache.spark.internal.config.OptionalConfigEntry",
      "org.apache.spark.internal.config.OptionalConfigEntry$$anonfun$$lessinit$greater$1",
      "org.apache.spark.internal.config.OptionalConfigEntry$$anonfun$$lessinit$greater$2",
      "org.apache.spark.internal.config.ConfigEntry$",
      "org.apache.spark.internal.config.ConfigEntry$$anonfun$registerEntry$1",
      "org.apache.spark.internal.config.TypedConfigBuilder$$anonfun$createOptional$1",
      "org.apache.spark.internal.config.ConfigBuilder$$anonfun$booleanConf$1",
      "org.apache.spark.internal.config.TypedConfigBuilder$$anonfun$$lessinit$greater$1$$anonfun$apply$1",
      "scala.Option$$anonfun$orNull$1",
      "org.apache.spark.internal.config.ConfigHelpers$",
      "scala.collection.immutable.StringOps",
      "scala.collection.IndexedSeqOptimized$class",
      "scala.math.Ordered$class",
      "scala.collection.immutable.StringLike$class",
      "scala.collection.immutable.StringOps$",
      "scala.collection.mutable.StringBuilder",
      "scala.collection.mutable.IndexedSeqLike$class",
      "scala.collection.mutable.IndexedSeq$class",
      "scala.StringContext",
      "scala.collection.mutable.WrappedArray",
      "scala.collection.mutable.WrappedArray$ofRef",
      "scala.collection.mutable.ArrayLike$class",
      "scala.collection.mutable.WrappedArray$",
      "scala.StringContext$$anonfun$s$1",
      "scala.collection.IndexedSeqLike$Elements",
      "scala.collection.BufferedIterator$class",
      "scala.StringContext$",
      "org.apache.spark.internal.config.package$",
      "scala.collection.mutable.ArrayBuffer",
      "scala.collection.mutable.ResizableArray$class",
      "scala.math.package$",
      "scala.collection.TraversableLike$$anonfun$map$1",
      "scala.collection.generic.GenSetFactory$$anon$1",
      "scala.collection.mutable.SetBuilder",
      "scala.collection.AbstractSet",
      "scala.collection.GenSetLike$class",
      "scala.collection.generic.GenericSetTemplate$class",
      "scala.collection.GenSet$class",
      "scala.collection.SetLike$class",
      "scala.collection.Set$class",
      "scala.collection.immutable.Set$class",
      "scala.collection.immutable.Set$EmptySet$",
      "scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1",
      "scala.runtime.BooleanRef",
      "scala.collection.TraversableOnce$$anonfun$addString$1",
      "scala.collection.TraversableLike$$anonfun$flatMap$1",
      "scala.collection.convert.Decorators$AsJava",
      "scala.collection.convert.DecorateAsJava$$anonfun$bufferAsJavaListConverter$1",
      "scala.collection.convert.WrapAsJava$class",
      "scala.collection.convert.WrapAsJava$",
      "scala.collection.convert.Wrappers$MutableBufferWrapper",
      "scala.collection.convert.Wrappers$IterableWrapperTrait$class",
      "scala.collection.convert.Wrappers$IteratorWrapper",
      "scala.collection.TraversableLike$$anonfun$filterImpl$1",
      "scala.collection.LinearSeqLike$$anon$1",
      "scala.collection.immutable.$colon$colon",
      "org.apache.spark.SparkContext",
      "org.apache.spark.metrics.MetricsSystem",
      "scala.MatchError"
    );
  }
}
