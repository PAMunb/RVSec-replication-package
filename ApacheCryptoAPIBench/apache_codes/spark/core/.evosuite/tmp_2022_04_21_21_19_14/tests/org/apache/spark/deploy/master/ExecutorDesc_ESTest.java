/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 23:05:34 GMT 2022
 */

package org.apache.spark.deploy.master;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.spark.deploy.ExecutorDescription;
import org.apache.spark.deploy.master.ApplicationInfo;
import org.apache.spark.deploy.master.ExecutorDesc;
import org.apache.spark.deploy.master.WorkerInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import scala.Enumeration;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExecutorDesc_ESTest extends ExecutorDesc_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(applicationInfo0).toString();
      doReturn((String) null).when(applicationInfo0).id();
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(workerInfo0).toString();
      doReturn((String) null).when(workerInfo0).id();
      ExecutorDesc executorDesc0 = new ExecutorDesc(0, applicationInfo0, workerInfo0, 0, (-321));
      ApplicationInfo applicationInfo1 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(applicationInfo1).toString();
      doReturn((String) null).when(applicationInfo1).id();
      WorkerInfo workerInfo1 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(workerInfo1).toString();
      doReturn((String) null).when(workerInfo1).id();
      ExecutorDesc executorDesc1 = new ExecutorDesc(0, applicationInfo1, workerInfo1, 0, (-2708));
      boolean boolean0 = executorDesc0.equals(executorDesc1);
      assertFalse(executorDesc1.equals((Object)executorDesc0));
      assertEquals(0, executorDesc1.id());
      assertEquals((-2708), executorDesc1.memory());
      assertFalse(boolean0);
      assertEquals(0, executorDesc1.cores());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(applicationInfo0).toString();
      doReturn((String) null).when(applicationInfo0).id();
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(workerInfo0).toString();
      doReturn((String) null).when(workerInfo0).id();
      ExecutorDesc executorDesc0 = new ExecutorDesc(1240, applicationInfo0, workerInfo0, 0, 0);
      ApplicationInfo applicationInfo1 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(applicationInfo1).toString();
      doReturn((String) null).when(applicationInfo1).id();
      WorkerInfo workerInfo1 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(workerInfo1).toString();
      doReturn((String) null).when(workerInfo1).id();
      ExecutorDesc executorDesc1 = new ExecutorDesc(1240, applicationInfo1, workerInfo1, 1669, (-395));
      boolean boolean0 = executorDesc0.equals(executorDesc1);
      assertFalse(boolean0);
      assertEquals(1240, executorDesc1.id());
      assertEquals(1669, executorDesc1.cores());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExecutorDesc executorDesc0 = new ExecutorDesc((-5), (ApplicationInfo) null, (WorkerInfo) null, (-5), 1417);
      WorkerInfo workerInfo0 = executorDesc0.worker();
      assertNull(workerInfo0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc(2945, applicationInfo0, workerInfo0, 0, 0);
      ExecutorDescription executorDescription0 = mock(ExecutorDescription.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration.Value) null).when(executorDescription0).state();
      executorDesc0.copyState(executorDescription0);
      Enumeration.Value enumeration_Value0 = executorDesc0.state();
      assertNull(enumeration_Value0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc(4531, applicationInfo0, workerInfo0, 4531, 1);
      int int0 = executorDesc0.memory();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc(119, applicationInfo0, workerInfo0, (-2010), (-2010));
      int int0 = executorDesc0.memory();
      assertEquals((-2010), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc(0, applicationInfo0, workerInfo0, 0, 3874);
      int int0 = executorDesc0.id();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc((-699), applicationInfo0, workerInfo0, 0, (-699));
      int int0 = executorDesc0.id();
      assertEquals((-699), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc((-699), applicationInfo0, workerInfo0, 0, (-699));
      int int0 = executorDesc0.cores();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc((-1), (ApplicationInfo) null, workerInfo0, 1, 1455);
      ApplicationInfo applicationInfo0 = executorDesc0.application();
      assertNull(applicationInfo0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExecutorDesc executorDesc0 = new ExecutorDesc((-2630), (ApplicationInfo) null, (WorkerInfo) null, (-2630), (-2630));
      // Undeclared exception!
      try { 
        executorDesc0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ExecutorDesc", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc(0, (ApplicationInfo) null, workerInfo0, 128, 0);
      // Undeclared exception!
      try { 
        executorDesc0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ExecutorDesc", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExecutorDesc executorDesc0 = new ExecutorDesc((-2630), (ApplicationInfo) null, (WorkerInfo) null, (-2630), (-2630));
      // Undeclared exception!
      try { 
        executorDesc0.fullId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ExecutorDesc", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc(0, applicationInfo0, workerInfo0, 0, 0);
      // Undeclared exception!
      try { 
        executorDesc0.copyState((ExecutorDescription) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ExecutorDesc", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(workerInfo0).toString();
      ExecutorDesc executorDesc0 = new ExecutorDesc(2525, applicationInfo0, workerInfo0, 1540, 0);
      WorkerInfo workerInfo1 = executorDesc0.worker();
      ApplicationInfo applicationInfo1 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc1 = new ExecutorDesc(0, applicationInfo1, workerInfo1, (-2525), 0);
      int int0 = executorDesc1.cores();
      assertEquals((-2525), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(applicationInfo0).toString();
      doReturn((String) null).when(applicationInfo0).id();
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc(2525, applicationInfo0, workerInfo0, 1540, 0);
      String string0 = executorDesc0.fullId();
      assertEquals("null/2525", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(applicationInfo0).toString();
      doReturn((String) null).when(applicationInfo0).id();
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc(2525, applicationInfo0, workerInfo0, 1540, 0);
      String string0 = executorDesc0.toString();
      assertEquals("null/2525", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc(2525, applicationInfo0, workerInfo0, 1540, 0);
      int int0 = executorDesc0.id();
      assertEquals(2525, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc(2525, applicationInfo0, workerInfo0, 1540, 0);
      int int0 = executorDesc0.memory();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc(2525, applicationInfo0, workerInfo0, 1540, 0);
      int int0 = executorDesc0.cores();
      assertEquals(1540, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc(388, applicationInfo0, workerInfo0, 0, 0);
      Enumeration.Value enumeration_Value0 = executorDesc0.state();
      executorDesc0.state_$eq(enumeration_Value0);
      assertEquals(0, executorDesc0.cores());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn("org.apache.spark.deploy.master.ExecutorDesc").when(applicationInfo0).toString();
      doReturn((String) null).when(applicationInfo0).id();
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(workerInfo0).toString();
      doReturn((String) null).when(workerInfo0).id();
      ExecutorDesc executorDesc0 = new ExecutorDesc((-280), applicationInfo0, workerInfo0, 0, (-280));
      ApplicationInfo applicationInfo1 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(applicationInfo1).toString();
      doReturn((String) null).when(applicationInfo1).id();
      WorkerInfo workerInfo1 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(workerInfo1).toString();
      doReturn((String) null).when(workerInfo1).id();
      ExecutorDesc executorDesc1 = new ExecutorDesc((-280), applicationInfo1, workerInfo1, 0, 0);
      boolean boolean0 = executorDesc0.equals(executorDesc1);
      assertFalse(executorDesc1.equals((Object)executorDesc0));
      assertEquals(0, executorDesc1.cores());
      assertEquals((-280), executorDesc0.memory());
      assertEquals((-280), executorDesc1.id());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(applicationInfo0).toString();
      doReturn((String) null).when(applicationInfo0).id();
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(workerInfo0).toString();
      doReturn((String) null).when(workerInfo0).id();
      ExecutorDesc executorDesc0 = new ExecutorDesc(0, applicationInfo0, workerInfo0, 31, 0);
      ApplicationInfo applicationInfo1 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(applicationInfo1).toString();
      doReturn((String) null).when(applicationInfo1).id();
      WorkerInfo workerInfo1 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(workerInfo1).toString();
      doReturn((String) null).when(workerInfo1).id();
      ExecutorDesc executorDesc1 = new ExecutorDesc(0, applicationInfo1, workerInfo1, 0, 0);
      boolean boolean0 = executorDesc0.equals(executorDesc1);
      assertFalse(boolean0);
      assertFalse(executorDesc1.equals((Object)executorDesc0));
      assertEquals(0, executorDesc1.id());
      assertEquals(31, executorDesc0.cores());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn("\"1IwoNi", "\"1IwoNi").when(applicationInfo0).toString();
      doReturn("\"1IwoNi", "\"1IwoNi").when(applicationInfo0).id();
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn("e@`M`K#9U", "\"1IwoNi").when(workerInfo0).toString();
      doReturn("e@`M`K#9U", "n").when(workerInfo0).id();
      ExecutorDesc executorDesc0 = new ExecutorDesc((-417), applicationInfo0, workerInfo0, (-417), (-417));
      boolean boolean0 = executorDesc0.equals(executorDesc0);
      assertEquals((-417), executorDesc0.id());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn("1&8f").when(applicationInfo0).toString();
      doReturn((String) null).when(applicationInfo0).id();
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn("").when(workerInfo0).toString();
      doReturn((String) null).when(workerInfo0).id();
      ExecutorDesc executorDesc0 = new ExecutorDesc((-3522), applicationInfo0, workerInfo0, 0, 0);
      ApplicationInfo applicationInfo1 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn("{Z>tdtoNz").when(applicationInfo1).toString();
      doReturn((String) null).when(applicationInfo1).id();
      WorkerInfo workerInfo1 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn("scala.reflect.ManifestFactory$ClassTypeManifest").when(workerInfo1).toString();
      doReturn("").when(workerInfo1).id();
      ExecutorDesc executorDesc1 = new ExecutorDesc((-3522), applicationInfo1, workerInfo1, (-796), (-3522));
      boolean boolean0 = executorDesc0.equals(executorDesc1);
      assertFalse(boolean0);
      assertEquals((-3522), executorDesc1.id());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn("\"1IwoNi", "\"1IwoNi").when(applicationInfo0).toString();
      doReturn("\"1IwoNi", "\"1IwoNi").when(applicationInfo0).id();
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      doReturn("\"1IwoNi", "\"1IwoNi").when(workerInfo0).toString();
      doReturn("\"1IwoNi", "\"1IwoNi").when(workerInfo0).id();
      ExecutorDesc executorDesc0 = new ExecutorDesc((-417), applicationInfo0, workerInfo0, (-417), (-417));
      boolean boolean0 = executorDesc0.equals(executorDesc0);
      assertTrue(boolean0);
      assertEquals((-417), executorDesc0.cores());
      assertEquals((-417), executorDesc0.memory());
      assertEquals((-417), executorDesc0.id());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn("\"1IwoNi", (String) null).when(applicationInfo0).toString();
      doReturn("\"1IwoNi", (String) null).when(applicationInfo0).id();
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc((-417), applicationInfo0, workerInfo0, (-417), (-417));
      boolean boolean0 = executorDesc0.equals(executorDesc0);
      assertEquals((-417), executorDesc0.id());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ExecutorDesc executorDesc0 = new ExecutorDesc((-2630), (ApplicationInfo) null, (WorkerInfo) null, (-2630), (-2630));
      boolean boolean0 = executorDesc0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(applicationInfo0).toString();
      doReturn((String) null).when(applicationInfo0).id();
      WorkerInfo workerInfo0 = mock(WorkerInfo.class, new ViolatedAssumptionAnswer());
      ExecutorDesc executorDesc0 = new ExecutorDesc((-1834), applicationInfo0, workerInfo0, 0, (-3522));
      executorDesc0.hashCode();
      assertEquals((-1834), executorDesc0.id());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ApplicationInfo applicationInfo0 = mock(ApplicationInfo.class, new ViolatedAssumptionAnswer());
      doReturn("", "").when(applicationInfo0).toString();
      doReturn("", "").when(applicationInfo0).id();
      ExecutorDesc executorDesc0 = new ExecutorDesc(0, applicationInfo0, (WorkerInfo) null, 0, (-1));
      // Undeclared exception!
      try { 
        executorDesc0.equals(executorDesc0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.master.ExecutorDesc", e);
      }
  }
}
