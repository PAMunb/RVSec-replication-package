/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:00:46 GMT 2022
 */

package org.apache.spark.deploy.worker.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.spark.deploy.worker.Worker;
import org.apache.spark.deploy.worker.ui.LogPage;
import org.apache.spark.deploy.worker.ui.WorkerWebUI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LogPage_ESTest extends LogPage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WorkerWebUI workerWebUI0 = mock(WorkerWebUI.class, new ViolatedAssumptionAnswer());
      doReturn((File) null).when(workerWebUI0).workDir();
      doReturn((Worker) null).when(workerWebUI0).worker();
      LogPage logPage0 = null;
      try {
        logPage0 = new LogPage(workerWebUI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.deploy.worker.ui.LogPage", e);
      }
  }
}
