/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 00:46:00 GMT 2022
 */

package org.apache.spark;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.spark.SparkStageInfoImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SparkStageInfoImpl_ESTest extends SparkStageInfoImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl((-350), 0, 0L, "L", (-350), (-350), (-51), (-350));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      
      long long0 = sparkStageInfoImpl0.submissionTime();
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(0, (-2643), (-2455L), "", 0, 1788, 2825, 1);
      assertNotNull(sparkStageInfoImpl0);
      assertEquals(2825, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals((-2455L), sparkStageInfoImpl0.submissionTime());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(1, sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-2643), sparkStageInfoImpl0.currentAttemptId());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals(0, sparkStageInfoImpl0.numTasks());
      assertEquals(1788, sparkStageInfoImpl0.numActiveTasks());
      
      long long0 = sparkStageInfoImpl0.submissionTime();
      assertEquals(2825, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals((-2455L), sparkStageInfoImpl0.submissionTime());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(1, sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-2643), sparkStageInfoImpl0.currentAttemptId());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals(0, sparkStageInfoImpl0.numTasks());
      assertEquals(1788, sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-2455L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(1, 1, 499L, "j|ONz:LTD", 1, 1, 0, 0);
      assertNotNull(sparkStageInfoImpl0);
      assertEquals(499L, sparkStageInfoImpl0.submissionTime());
      assertEquals(1, sparkStageInfoImpl0.numTasks());
      assertEquals(1, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(0, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0, sparkStageInfoImpl0.numFailedTasks());
      assertEquals(1, sparkStageInfoImpl0.stageId());
      assertEquals(1, sparkStageInfoImpl0.currentAttemptId());
      assertEquals("j|ONz:LTD", sparkStageInfoImpl0.name());
      
      int int0 = sparkStageInfoImpl0.stageId();
      assertEquals(499L, sparkStageInfoImpl0.submissionTime());
      assertEquals(1, sparkStageInfoImpl0.numTasks());
      assertEquals(1, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(0, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0, sparkStageInfoImpl0.numFailedTasks());
      assertEquals(1, sparkStageInfoImpl0.stageId());
      assertEquals(1, sparkStageInfoImpl0.currentAttemptId());
      assertEquals("j|ONz:LTD", sparkStageInfoImpl0.name());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl((-350), 0, 0L, "L", (-350), (-350), (-51), (-350));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      
      int int0 = sparkStageInfoImpl0.stageId();
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals((-350), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(0, 0, 3742L, "", 0, 0, 0, (-1298));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals((-1298), sparkStageInfoImpl0.numFailedTasks());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(0, sparkStageInfoImpl0.numTasks());
      assertEquals(0, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals(3742L, sparkStageInfoImpl0.submissionTime());
      assertEquals(0, sparkStageInfoImpl0.numCompletedTasks());
      
      int int0 = sparkStageInfoImpl0.numTasks();
      assertEquals((-1298), sparkStageInfoImpl0.numFailedTasks());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(0, sparkStageInfoImpl0.numTasks());
      assertEquals(0, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals(3742L, sparkStageInfoImpl0.submissionTime());
      assertEquals(0, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl((-350), 0, 0L, "L", (-350), (-350), (-51), (-350));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      
      int int0 = sparkStageInfoImpl0.numTasks();
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals((-350), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(1, 1, 499L, "j|ONz:LTD", 1, 1, 0, 0);
      assertNotNull(sparkStageInfoImpl0);
      assertEquals("j|ONz:LTD", sparkStageInfoImpl0.name());
      assertEquals(0, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(1, sparkStageInfoImpl0.numTasks());
      assertEquals(0, sparkStageInfoImpl0.numFailedTasks());
      assertEquals(1, sparkStageInfoImpl0.stageId());
      assertEquals(1, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(499L, sparkStageInfoImpl0.submissionTime());
      assertEquals(1, sparkStageInfoImpl0.numActiveTasks());
      
      int int0 = sparkStageInfoImpl0.numFailedTasks();
      assertEquals("j|ONz:LTD", sparkStageInfoImpl0.name());
      assertEquals(0, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(1, sparkStageInfoImpl0.numTasks());
      assertEquals(0, sparkStageInfoImpl0.numFailedTasks());
      assertEquals(1, sparkStageInfoImpl0.stageId());
      assertEquals(1, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(499L, sparkStageInfoImpl0.submissionTime());
      assertEquals(1, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(0, (-2643), (-2455L), "", 0, 1788, 2825, 1);
      assertNotNull(sparkStageInfoImpl0);
      assertEquals(0, sparkStageInfoImpl0.numTasks());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals((-2455L), sparkStageInfoImpl0.submissionTime());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(1, sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-2643), sparkStageInfoImpl0.currentAttemptId());
      assertEquals(2825, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(1788, sparkStageInfoImpl0.numActiveTasks());
      
      int int0 = sparkStageInfoImpl0.numFailedTasks();
      assertEquals(0, sparkStageInfoImpl0.numTasks());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals((-2455L), sparkStageInfoImpl0.submissionTime());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(1, sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-2643), sparkStageInfoImpl0.currentAttemptId());
      assertEquals(2825, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(1788, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(0, 0, 3742L, "", 0, 0, 0, (-1298));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(0, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(3742L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-1298), sparkStageInfoImpl0.numFailedTasks());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals(0, sparkStageInfoImpl0.numTasks());
      assertEquals(0, sparkStageInfoImpl0.numCompletedTasks());
      
      int int0 = sparkStageInfoImpl0.numCompletedTasks();
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(0, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(3742L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-1298), sparkStageInfoImpl0.numFailedTasks());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals(0, sparkStageInfoImpl0.numTasks());
      assertEquals(0, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl((-350), 0, 0L, "L", (-350), (-350), (-51), (-350));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      
      int int0 = sparkStageInfoImpl0.numCompletedTasks();
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-51), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(0, 0, 3742L, "", 0, 0, 0, (-1298));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(0, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0, sparkStageInfoImpl0.numTasks());
      assertEquals((-1298), sparkStageInfoImpl0.numFailedTasks());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(3742L, sparkStageInfoImpl0.submissionTime());
      assertEquals(0, sparkStageInfoImpl0.numActiveTasks());
      
      int int0 = sparkStageInfoImpl0.numActiveTasks();
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(0, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0, sparkStageInfoImpl0.numTasks());
      assertEquals((-1298), sparkStageInfoImpl0.numFailedTasks());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(3742L, sparkStageInfoImpl0.submissionTime());
      assertEquals(0, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl((-350), 0, 0L, "L", (-350), (-350), (-51), (-350));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      
      int int0 = sparkStageInfoImpl0.numActiveTasks();
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-350), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(0, 0, 0, (String) null, 214, (-464), (-464), 214);
      assertNotNull(sparkStageInfoImpl0);
      assertEquals(214, sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-464), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(214, sparkStageInfoImpl0.numTasks());
      assertNull(sparkStageInfoImpl0.name());
      assertEquals((-464), sparkStageInfoImpl0.numActiveTasks());
      
      String string0 = sparkStageInfoImpl0.name();
      assertNull(string0);
      assertEquals(214, sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-464), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(214, sparkStageInfoImpl0.numTasks());
      assertNull(sparkStageInfoImpl0.name());
      assertEquals((-464), sparkStageInfoImpl0.numActiveTasks());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(2948, 2948, 2948, "", 2948, 2948, 2948, 2948);
      assertNotNull(sparkStageInfoImpl0);
      assertEquals(2948L, sparkStageInfoImpl0.submissionTime());
      assertEquals(2948, sparkStageInfoImpl0.stageId());
      assertEquals(2948, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(2948, sparkStageInfoImpl0.numFailedTasks());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(2948, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(2948, sparkStageInfoImpl0.numTasks());
      assertEquals(2948, sparkStageInfoImpl0.numCompletedTasks());
      
      String string0 = sparkStageInfoImpl0.name();
      assertNotNull(string0);
      assertEquals(2948L, sparkStageInfoImpl0.submissionTime());
      assertEquals(2948, sparkStageInfoImpl0.stageId());
      assertEquals(2948, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(2948, sparkStageInfoImpl0.numFailedTasks());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(2948, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(2948, sparkStageInfoImpl0.numTasks());
      assertEquals(2948, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(1, 1, 2949L, "", (-1554), (-1554), (-1554), (-1554));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals((-1554), sparkStageInfoImpl0.numFailedTasks());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals((-1554), sparkStageInfoImpl0.numTasks());
      assertEquals((-1554), sparkStageInfoImpl0.numActiveTasks());
      assertEquals(1, sparkStageInfoImpl0.stageId());
      assertEquals(2949L, sparkStageInfoImpl0.submissionTime());
      assertEquals(1, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-1554), sparkStageInfoImpl0.numCompletedTasks());
      
      int int0 = sparkStageInfoImpl0.currentAttemptId();
      assertEquals((-1554), sparkStageInfoImpl0.numFailedTasks());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals((-1554), sparkStageInfoImpl0.numTasks());
      assertEquals((-1554), sparkStageInfoImpl0.numActiveTasks());
      assertEquals(1, sparkStageInfoImpl0.stageId());
      assertEquals(2949L, sparkStageInfoImpl0.submissionTime());
      assertEquals(1, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-1554), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl((-1), (-1), (-1), "", 1076, (-2677), (-4761), (-1));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals((-1), sparkStageInfoImpl0.stageId());
      assertEquals((-1), sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-2677), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-1L), sparkStageInfoImpl0.submissionTime());
      assertEquals((-1), sparkStageInfoImpl0.currentAttemptId());
      assertEquals(1076, sparkStageInfoImpl0.numTasks());
      assertEquals((-4761), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals("", sparkStageInfoImpl0.name());
      
      int int0 = sparkStageInfoImpl0.currentAttemptId();
      assertEquals((-1), sparkStageInfoImpl0.stageId());
      assertEquals((-1), sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-2677), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-1L), sparkStageInfoImpl0.submissionTime());
      assertEquals((-1), sparkStageInfoImpl0.currentAttemptId());
      assertEquals(1076, sparkStageInfoImpl0.numTasks());
      assertEquals((-4761), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl((-350), 0, 0L, "L", (-350), (-350), (-51), (-350));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      
      String string0 = sparkStageInfoImpl0.name();
      assertNotNull(string0);
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals("L", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl((-350), 0, 0L, "L", (-350), (-350), (-51), (-350));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      
      int int0 = sparkStageInfoImpl0.currentAttemptId();
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl((-350), 0, 0L, "L", (-350), (-350), (-51), (-350));
      assertNotNull(sparkStageInfoImpl0);
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      
      int int0 = sparkStageInfoImpl0.numFailedTasks();
      assertEquals((-350), sparkStageInfoImpl0.stageId());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals((-350), sparkStageInfoImpl0.numTasks());
      assertEquals("L", sparkStageInfoImpl0.name());
      assertEquals((-350), sparkStageInfoImpl0.numActiveTasks());
      assertEquals((-350), sparkStageInfoImpl0.numFailedTasks());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals((-51), sparkStageInfoImpl0.numCompletedTasks());
      assertEquals((-350), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(2948, 2948, 2948, "", 2948, 2948, 2948, 2948);
      assertNotNull(sparkStageInfoImpl0);
      assertEquals(2948, sparkStageInfoImpl0.numFailedTasks());
      assertEquals(2948L, sparkStageInfoImpl0.submissionTime());
      assertEquals(2948, sparkStageInfoImpl0.stageId());
      assertEquals(2948, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(2948, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(2948, sparkStageInfoImpl0.numTasks());
      assertEquals(2948, sparkStageInfoImpl0.currentAttemptId());
      assertEquals("", sparkStageInfoImpl0.name());
      
      int int0 = sparkStageInfoImpl0.numActiveTasks();
      assertEquals(2948, sparkStageInfoImpl0.numFailedTasks());
      assertEquals(2948L, sparkStageInfoImpl0.submissionTime());
      assertEquals(2948, sparkStageInfoImpl0.stageId());
      assertEquals(2948, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(2948, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(2948, sparkStageInfoImpl0.numTasks());
      assertEquals(2948, sparkStageInfoImpl0.currentAttemptId());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(2948, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(2948, 2948, 2948, "", 2948, 2948, 2948, 2948);
      assertNotNull(sparkStageInfoImpl0);
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(2948, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(2948, sparkStageInfoImpl0.stageId());
      assertEquals(2948, sparkStageInfoImpl0.numFailedTasks());
      assertEquals(2948L, sparkStageInfoImpl0.submissionTime());
      assertEquals(2948, sparkStageInfoImpl0.numTasks());
      assertEquals(2948, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(2948, sparkStageInfoImpl0.numCompletedTasks());
      
      long long0 = sparkStageInfoImpl0.submissionTime();
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(2948, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(2948, sparkStageInfoImpl0.stageId());
      assertEquals(2948, sparkStageInfoImpl0.numFailedTasks());
      assertEquals(2948L, sparkStageInfoImpl0.submissionTime());
      assertEquals(2948, sparkStageInfoImpl0.numTasks());
      assertEquals(2948, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(2948, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(2948L, long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(2948, 2948, 2948, "", 2948, 2948, 2948, 2948);
      assertNotNull(sparkStageInfoImpl0);
      assertEquals(2948, sparkStageInfoImpl0.numFailedTasks());
      assertEquals(2948, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(2948, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(2948, sparkStageInfoImpl0.stageId());
      assertEquals(2948L, sparkStageInfoImpl0.submissionTime());
      assertEquals(2948, sparkStageInfoImpl0.numTasks());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(2948, sparkStageInfoImpl0.currentAttemptId());
      
      int int0 = sparkStageInfoImpl0.numTasks();
      assertEquals(2948, sparkStageInfoImpl0.numFailedTasks());
      assertEquals(2948, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(2948, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(2948, sparkStageInfoImpl0.stageId());
      assertEquals(2948L, sparkStageInfoImpl0.submissionTime());
      assertEquals(2948, sparkStageInfoImpl0.numTasks());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(2948, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(2948, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(2948, 2948, 2948, "", 2948, 2948, 2948, 2948);
      assertNotNull(sparkStageInfoImpl0);
      assertEquals(2948, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(2948, sparkStageInfoImpl0.numTasks());
      assertEquals(2948L, sparkStageInfoImpl0.submissionTime());
      assertEquals(2948, sparkStageInfoImpl0.stageId());
      assertEquals(2948, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(2948, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(2948, sparkStageInfoImpl0.numFailedTasks());
      assertEquals("", sparkStageInfoImpl0.name());
      
      int int0 = sparkStageInfoImpl0.numCompletedTasks();
      assertEquals(2948, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(2948, sparkStageInfoImpl0.numTasks());
      assertEquals(2948L, sparkStageInfoImpl0.submissionTime());
      assertEquals(2948, sparkStageInfoImpl0.stageId());
      assertEquals(2948, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(2948, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(2948, sparkStageInfoImpl0.numFailedTasks());
      assertEquals("", sparkStageInfoImpl0.name());
      assertEquals(2948, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SparkStageInfoImpl sparkStageInfoImpl0 = new SparkStageInfoImpl(0, 0, 0, "W+VTr~%", 0, 1, 1, 158);
      assertNotNull(sparkStageInfoImpl0);
      assertEquals(158, sparkStageInfoImpl0.numFailedTasks());
      assertEquals("W+VTr~%", sparkStageInfoImpl0.name());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(1, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(0, sparkStageInfoImpl0.numTasks());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals(1, sparkStageInfoImpl0.numCompletedTasks());
      
      int int0 = sparkStageInfoImpl0.stageId();
      assertEquals(158, sparkStageInfoImpl0.numFailedTasks());
      assertEquals("W+VTr~%", sparkStageInfoImpl0.name());
      assertEquals(0, sparkStageInfoImpl0.currentAttemptId());
      assertEquals(1, sparkStageInfoImpl0.numActiveTasks());
      assertEquals(0, sparkStageInfoImpl0.numTasks());
      assertEquals(0, sparkStageInfoImpl0.stageId());
      assertEquals(0L, sparkStageInfoImpl0.submissionTime());
      assertEquals(1, sparkStageInfoImpl0.numCompletedTasks());
      assertEquals(0, int0);
  }
}
