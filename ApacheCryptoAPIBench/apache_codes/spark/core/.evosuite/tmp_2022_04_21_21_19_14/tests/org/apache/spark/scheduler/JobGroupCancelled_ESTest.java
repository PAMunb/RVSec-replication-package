/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:53:40 GMT 2022
 */

package org.apache.spark.scheduler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.spark.scheduler.JobGroupCancelled;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import scala.Function1;
import scala.Option;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JobGroupCancelled_ESTest extends JobGroupCancelled_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = new JobGroupCancelled("");
      Object object0 = jobGroupCancelled0.productElement(0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = JobGroupCancelled.apply((String) null);
      String string0 = jobGroupCancelled0.groupId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = new JobGroupCancelled("");
      String string0 = jobGroupCancelled0.groupId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = JobGroupCancelled.apply((String) null);
      String string0 = jobGroupCancelled0.copy$default$1();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = new JobGroupCancelled("tdjCV\"uopF\"/|(");
      JobGroupCancelled jobGroupCancelled1 = jobGroupCancelled0.copy("");
      String string0 = jobGroupCancelled1.copy$default$1();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = new JobGroupCancelled("JobGroupCancelled");
      boolean boolean0 = jobGroupCancelled0.canEqual("JobGroupCancelled");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = new JobGroupCancelled((String) null);
      Object object0 = jobGroupCancelled0.productElement(0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = JobGroupCancelled.apply("f,cn\"*S!tF");
      boolean boolean0 = jobGroupCancelled0.canEqual(jobGroupCancelled0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = new JobGroupCancelled("JobGroupCancelled");
      String string0 = jobGroupCancelled0.productPrefix();
      assertEquals("JobGroupCancelled", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = JobGroupCancelled.apply("{g/<U[@@]q;");
      String string0 = jobGroupCancelled0.groupId();
      assertEquals("{g/<U[@@]q;", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = JobGroupCancelled.apply("W-Zr%F=:PxKu,Kl*");
      int int0 = jobGroupCancelled0.productArity();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = JobGroupCancelled.apply("");
      jobGroupCancelled0.productIterator();
      assertEquals(1, jobGroupCancelled0.productArity());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = JobGroupCancelled.apply("");
      Option<String> option0 = JobGroupCancelled.unapply(jobGroupCancelled0);
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = new JobGroupCancelled("");
      JobGroupCancelled jobGroupCancelled1 = JobGroupCancelled.apply("kBYaJ]GnOBSiW)4");
      boolean boolean0 = jobGroupCancelled0.equals(jobGroupCancelled1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = new JobGroupCancelled((String) null);
      JobGroupCancelled jobGroupCancelled1 = new JobGroupCancelled((String) null);
      boolean boolean0 = jobGroupCancelled0.equals(jobGroupCancelled1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = JobGroupCancelled.apply((String) null);
      JobGroupCancelled jobGroupCancelled1 = new JobGroupCancelled("G5");
      boolean boolean0 = jobGroupCancelled0.equals(jobGroupCancelled1);
      assertFalse(boolean0);
      assertFalse(jobGroupCancelled1.equals((Object)jobGroupCancelled0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = JobGroupCancelled.apply((String) null);
      boolean boolean0 = jobGroupCancelled0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = new JobGroupCancelled("");
      boolean boolean0 = jobGroupCancelled0.equals(jobGroupCancelled0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = new JobGroupCancelled("rp.<y8Mzw");
      // Undeclared exception!
      try { 
        jobGroupCancelled0.productElement(801);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // java.lang.Integer@0000000002
         //
         verifyException("org.apache.spark.scheduler.JobGroupCancelled", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = new JobGroupCancelled("scala.Predef");
      jobGroupCancelled0.hashCode();
      assertEquals(1, jobGroupCancelled0.productArity());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = JobGroupCancelled.apply("f,cn\"*S!tF");
      String string0 = jobGroupCancelled0.copy$default$1();
      assertEquals("f,cn\"*S!tF", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = JobGroupCancelled.apply("org.apache.spark.scheduler.JobGroupCancelled");
      JobGroupCancelled jobGroupCancelled1 = jobGroupCancelled0.copy("org.apache.spark.scheduler.JobGroupCancelled");
      boolean boolean0 = jobGroupCancelled1.equals(jobGroupCancelled0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Function1<String, JobGroupCancelled> function1_0 = JobGroupCancelled.andThen((Function1<JobGroupCancelled, JobGroupCancelled>) null);
      assertNotNull(function1_0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Option<String> option0 = JobGroupCancelled.unapply((JobGroupCancelled) null);
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JobGroupCancelled jobGroupCancelled0 = JobGroupCancelled.apply("vYk7':");
      String string0 = jobGroupCancelled0.toString();
      assertEquals("JobGroupCancelled(vYk7':)", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Function1<JobGroupCancelled, JobGroupCancelled> function1_0 = JobGroupCancelled.compose((Function1<JobGroupCancelled, String>) null);
      assertNotNull(function1_0);
  }
}
