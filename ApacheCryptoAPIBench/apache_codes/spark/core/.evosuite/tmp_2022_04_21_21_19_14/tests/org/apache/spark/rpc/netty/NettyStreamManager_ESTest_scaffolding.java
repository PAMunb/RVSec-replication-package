/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Apr 21 22:18:39 GMT 2022
 */

package org.apache.spark.rpc.netty;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class NettyStreamManager_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.spark.rpc.netty.NettyStreamManager"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.dir", "/home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/spark/core"); 
    java.lang.System.setProperty("user.home", "/home/pedro"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "pedro"); 
    java.lang.System.setProperty("user.timezone", ""); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NettyStreamManager_ESTest_scaffolding.class.getClassLoader() ,
      "scala.collection.Seq$",
      "scala.Function1$mcZF$sp",
      "scala.collection.mutable.Iterable$class",
      "org.apache.hadoop.fs.FileSystem",
      "io.netty.channel.ChannelInboundHandlerAdapter",
      "scala.Product2$mcDJ$sp",
      "org.apache.spark.rpc.RpcEndpointRef",
      "scala.Function1$class",
      "org.apache.spark.rpc.netty.NettyStreamManager$$anonfun$addDirectory$1",
      "scala.Function2$mcJJD$sp",
      "scala.runtime.AbstractFunction2$mcIJJ$sp",
      "scala.reflect.Manifest$class",
      "scala.Function1$mcJD$sp",
      "scala.collection.immutable.DefaultMap",
      "org.apache.hadoop.conf.Configuration",
      "scala.collection.immutable.StreamViewLike$DroppedWhile",
      "scala.collection.mutable.ArrayOps",
      "org.apache.spark.rpc.RpcEnvFileServer$class",
      "scala.runtime.AbstractFunction2$mcJDD$sp",
      "scala.Function1$mcFI$sp",
      "scala.util.Either$",
      "scala.Product2$class",
      "scala.math.Numeric$FloatAsIfIntegral$",
      "io.netty.channel.ChannelOutboundBuffer$MessageProcessor",
      "org.apache.spark.SparkContext",
      "scala.reflect.Manifest",
      "scala.collection.SeqLike$PermutationsItr",
      "scala.StringContext",
      "scala.collection.mutable.WrappedArray$ofChar",
      "scala.collection.mutable.SetLike",
      "scala.math.Ordering$Int$",
      "scala.collection.mutable.Buffer",
      "scala.Function0$mcJ$sp",
      "org.apache.spark.network.util.LimitedInputStream",
      "scala.runtime.ScalaRunTime$",
      "scala.Function2$mcZDI$sp",
      "scala.Predef$RichException$",
      "scala.util.Success",
      "scala.math.Numeric$IntIsIntegral$",
      "scala.Tuple2$mcIJ$sp",
      "scala.collection.CustomParallelizable$class",
      "scala.Tuple2$mcZC$sp",
      "scala.collection.generic.SortedMapFactory",
      "scala.collection.immutable.SetProxy",
      "scala.runtime.AbstractFunction2$mcVID$sp",
      "scala.collection.SortedMap",
      "io.netty.channel.AbstractChannelHandlerContext",
      "scala.collection.MapLike$class",
      "scala.collection.TraversableViewLike$Filtered",
      "scala.collection.generic.GenSetFactory",
      "scala.collection.GenSet$",
      "scala.Function2$mcDDI$sp",
      "io.netty.channel.ChannelOutboundHandler",
      "scala.collection.generic.Subtractable$class",
      "scala.collection.GenSeqLike",
      "scala.math.package$",
      "scala.collection.generic.Shrinkable$class",
      "org.apache.spark.rpc.RpcEndpoint",
      "scala.collection.mutable.Set",
      "scala.collection.immutable.Vector",
      "scala.collection.generic.GenericParTemplate",
      "scala.collection.mutable.Seq",
      "scala.collection.immutable.SortedMap$DefaultKeySortedSet",
      "scala.collection.immutable.IntMap",
      "scala.collection.convert.WrapAsScala$class",
      "scala.math.Numeric$BigDecimalAsIfIntegral",
      "scala.collection.GenSeq$",
      "scala.runtime.AbstractFunction2$mcFII$sp",
      "io.netty.buffer.ByteBufAllocator",
      "scala.runtime.AbstractFunction2$mcJIJ$sp",
      "io.netty.channel.epoll.AbstractEpollStreamChannel",
      "scala.collection.immutable.HashMap$HashTrieMap",
      "scala.collection.BitSetLike",
      "scala.collection.LinearSeqLike",
      "scala.util.control.Breaks$TryBlock",
      "scala.Function2$mcVDJ$sp",
      "scala.collection.generic.SliceInterval",
      "scala.math.Fractional$",
      "scala.collection.convert.DecorateAsJava",
      "scala.collection.mutable.HashTable$HashUtils$class",
      "scala.math.Numeric$ExtraImplicits",
      "scala.collection.script.Message",
      "scala.collection.mutable.ArrayLike$class",
      "scala.collection.convert.Wrappers$JListWrapper$",
      "scala.collection.SeqViewLike$Appended",
      "io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInTask",
      "scala.reflect.ManifestFactory$SingletonTypeManifest",
      "scala.collection.Set$",
      "scala.collection.Seq$class",
      "scala.collection.TraversableOnce",
      "scala.Function2$mcFDD$sp",
      "scala.Function0$mcV$sp$class",
      "scala.Function1$mcVI$sp",
      "scala.runtime.TraitSetter",
      "scala.math.Ordering$BigDecimalOrdering",
      "org.apache.spark.util.Utils$$anon$5",
      "org.apache.spark.util.Utils$$anon$6",
      "scala.collection.convert.DecorateAsScala$class",
      "scala.runtime.AbstractFunction0",
      "scala.runtime.AbstractFunction1",
      "org.apache.spark.util.Utils$$anon$1",
      "scala.runtime.AbstractFunction2",
      "org.apache.spark.util.Utils$$anon$2",
      "scala.runtime.AbstractFunction3",
      "org.apache.spark.util.Utils$$anon$3",
      "scala.runtime.AbstractFunction4",
      "scala.collection.mutable.Iterable",
      "scala.runtime.AbstractFunction5",
      "scala.Function1$mcZD$sp",
      "scala.math.Numeric$FloatIsFractional$",
      "org.scalacheck.Test",
      "scala.collection.IterableViewLike$AbstractTransformed",
      "scala.collection.mutable.MapLike",
      "scala.collection.SortedMap$Default",
      "scala.Predef$ArrayCharSequence",
      "scala.collection.convert.Wrappers$JEnumerationWrapper$",
      "scala.collection.IterableProxyLike",
      "scala.collection.immutable.StreamViewLike$Filtered",
      "scala.collection.immutable.StreamViewLike$AbstractTransformed",
      "scala.collection.immutable.IntMap$Tip",
      "io.netty.channel.ChannelHandlerContext",
      "scala.Option$",
      "scala.collection.SeqProxy",
      "scala.collection.mutable.IndexedSeqView$Reversed",
      "scala.Function1$mcJF$sp",
      "scala.math.Numeric",
      "scala.runtime.AbstractFunction2$mcDDJ$sp",
      "scala.collection.convert.Wrappers$SeqWrapper$",
      "scala.util.control.NoStackTrace",
      "scala.util.PropertiesTrait$$anonfun$4",
      "scala.util.PropertiesTrait$$anonfun$3",
      "scala.xml.pull.XMLEvent",
      "scala.util.PropertiesTrait$$anonfun$2",
      "scala.util.PropertiesTrait$$anonfun$1",
      "scala.PartialFunction$class",
      "scala.collection.mutable.ArrayBuilder$ofShort",
      "scala.collection.immutable.StreamViewLike$Patched",
      "io.netty.channel.Channel$Unsafe",
      "scala.collection.immutable.HashMap$$anonfun$1",
      "scala.collection.generic.Subtractable",
      "scala.collection.immutable.NumericRange$$anon$1",
      "scala.collection.immutable.HashSet$HashTrieSet",
      "scala.Tuple2$mcCI$sp",
      "scala.collection.generic.SortedMapFactory$SortedMapCanBuildFrom",
      "scala.collection.TraversableOnce$BufferedCanBuildFrom",
      "scala.collection.generic.IterableForwarder",
      "jodd.io.filter.WildcardFileFilter",
      "scala.sys.BooleanProp$$anonfun$keyExists$1",
      "scala.runtime.AbstractFunction2$mcIDI$sp",
      "scala.collection.mutable.HashTable$",
      "scala.runtime.AbstractFunction2$mcJJJ$sp",
      "org.apache.spark.network.shuffle.mesos.MesosExternalShuffleClient$RegisterDriverCallback",
      "org.apache.spark.internal.Logging$class",
      "scala.Predef$ArrowAssoc$",
      "scala.collection.parallel.ParSet",
      "scala.collection.immutable.Stream$Cons",
      "scala.Tuple2$mcDZ$sp",
      "scala.collection.MapProxy",
      "scala.collection.mutable.BufferLike",
      "scala.Function2$mcJDI$sp",
      "scala.runtime.AbstractFunction2$mcZDJ$sp",
      "scala.math.Numeric$",
      "scala.collection.generic.GenericSetTemplate$class",
      "scala.collection.immutable.LinearSeq$",
      "org.apache.spark.network.TransportContext",
      "scala.collection.convert.Wrappers$IterableWrapperTrait",
      "org.scalactic.TripleEquals",
      "scala.text.DocText",
      "scala.collection.mutable.LazyBuilder",
      "scala.collection.SeqViewLike$Transformed",
      "scala.collection.immutable.List",
      "org.scalacheck.Test$Result$",
      "scala.collection.TraversableLike$class",
      "io.netty.channel.AbstractChannel$AnnotatedSocketException",
      "scala.collection.mutable.SeqLike$class",
      "io.netty.channel.ChannelPipeline",
      "scala.concurrent.impl.Promise$KeptPromise",
      "scala.collection.generic.GenTraversableFactory$$anon$1",
      "scala.collection.generic.ImmutableMapFactory",
      "io.netty.channel.ChannelException",
      "scala.reflect.ClassTag$class",
      "scala.collection.mutable.PriorityQueue$ResizableArrayAccess",
      "scala.collection.GenTraversable$",
      "scala.collection.MapLike",
      "scala.Product2$mcII$sp",
      "scala.collection.mutable.Builder",
      "scala.collection.Traversable$class",
      "scala.collection.mutable.SynchronizedBuffer",
      "scala.collection.generic.HasNewCombiner",
      "scala.math.ScalaNumber",
      "scala.ref.ReferenceWrapper",
      "scala.collection.mutable.Iterable$",
      "scala.reflect.ManifestFactory$PhantomManifest",
      "scala.Predef$DummyImplicit",
      "scala.concurrent.ExecutionContext",
      "scala.Function2$mcZJJ$sp",
      "scala.Function1$mcDI$sp",
      "scala.Function2$mcDIJ$sp",
      "io.netty.channel.epoll.EpollSocketChannel",
      "scala.Tuple2$mcDD$sp",
      "scala.collection.SortedSet",
      "io.netty.channel.unix.DomainSocketChannel",
      "scala.collection.GenMapLike",
      "scala.xml.NodeSeq",
      "scala.collection.ViewMkString",
      "scala.collection.immutable.SortedMap",
      "scala.collection.TraversableViewLike$TakenWhile",
      "scala.Function2$mcIJI$sp",
      "scala.Function1$mcID$sp",
      "scala.collection.immutable.TreeMap",
      "scala.collection.mutable.Builder$class",
      "scala.LowPriorityImplicits",
      "org.apache.spark.util.SparkUncaughtExceptionHandler",
      "scala.sys.BooleanProp",
      "org.apache.spark.serializer.SerializationStream",
      "scala.collection.parallel.ParSeq",
      "scala.math.Numeric$BigDecimalAsIfIntegral$",
      "scala.Product",
      "scala.collection.convert.Wrappers$JIteratorWrapper$",
      "scala.collection.BitSet",
      "scala.collection.Iterator$ConcatIterator",
      "scala.Specializable",
      "scala.Function2$mcJID$sp",
      "scala.package$$anon$1",
      "scala.collection.generic.MapFactory",
      "scala.collection.immutable.Iterable",
      "io.netty.channel.DefaultChannelPipeline$TailContext",
      "scala.collection.mutable.PriorityQueue$",
      "scala.util.PropertiesTrait$class",
      "scala.collection.SetLike$class",
      "scala.collection.IterableProxy",
      "scala.math.Numeric$BigDecimalIsFractional$",
      "scala.collection.GenIterable",
      "scala.Function2$mcIII$sp",
      "org.apache.spark.rpc.RpcEnvStoppedException",
      "scala.collection.mutable.WrappedArray$ofDouble",
      "org.apache.spark.rpc.netty.NettyRpcEnv$FileDownloadChannel",
      "scala.collection.mutable.BufferLike$class",
      "scala.collection.mutable.Cloneable$class",
      "scala.collection.mutable.DefaultEntry",
      "scala.Function0$mcC$sp",
      "scala.util.Left$",
      "org.scalacheck.Test$Result",
      "scala.ScalaReflectionException$",
      "scala.Predef$any2stringadd$",
      "scala.math.BigDecimal",
      "io.netty.channel.ChannelDuplexHandler",
      "scala.collection.generic.GenSeqFactory",
      "scala.runtime.AbstractFunction2$mcIID$sp",
      "org.apache.spark.rpc.netty.NettyRpcHandler",
      "scala.collection.immutable.Traversable$",
      "scala.collection.mutable.ArrayBuilder$ofChar",
      "scala.runtime.Null$",
      "scala.Product2$mcJI$sp",
      "scala.math.Ordering$Byte$",
      "scala.collection.mutable.SynchronizedQueue",
      "scala.reflect.ClassManifestDeprecatedApis$class",
      "scala.ref.PhantomReference",
      "scala.math.LowPriorityOrderingImplicits",
      "org.apache.spark.rpc.RpcAddress",
      "scala.collection.SetLike",
      "scala.collection.immutable.Range$Inclusive",
      "scala.Function2$mcZIJ$sp",
      "scala.Tuple2$mcJJ$sp",
      "scala.reflect.NoManifest$",
      "scala.collection.IterableViewLike$Filtered",
      "org.apache.spark.rpc.netty.Outbox",
      "scala.collection.GenSetLike",
      "scala.math.Numeric$FloatIsConflicted",
      "scala.collection.SeqViewLike$Mapped",
      "org.apache.hadoop.fs.HasFileDescriptor",
      "scala.math.Numeric$FloatIsFractional",
      "scala.collection.immutable.AbstractMap",
      "scala.Proxy",
      "scala.collection.IterableViewLike$TakenWhile",
      "scala.sys.package$",
      "scala.collection.immutable.Range$Int$",
      "scala.Predef$",
      "org.apache.spark.rpc.netty.NettyRpcEndpointRef",
      "scala.sys.ShutdownHookThread",
      "scala.collection.Traversable",
      "scala.Function2$mcDJJ$sp",
      "scala.math.Ordering$StringOrdering",
      "scala.util.control.NoStackTrace$class",
      "scala.collection.IndexedSeqOptimized",
      "scala.runtime.AbstractFunction0$mcC$sp",
      "scala.collection.convert.Decorators$",
      "scala.collection.TraversableLike$WithFilter",
      "org.apache.spark.rpc.netty.NettyRpcEnv",
      "scala.collection.SeqViewLike$Reversed",
      "scala.math.Ordering$ExtraImplicits",
      "scala.collection.mutable.ResizableArray$",
      "scala.ref.SoftReference",
      "scala.collection.immutable.NumericRange$Exclusive",
      "scala.collection.immutable.StringOps$",
      "scala.math.BigDecimal$",
      "scala.collection.Iterator$$anon$2",
      "scala.collection.convert.Wrappers$MapWrapper",
      "scala.collection.Iterator$$anon$24",
      "scala.FallbackArrayBuilding",
      "io.netty.util.AttributeMap",
      "scala.collection.convert.Wrappers$class",
      "scala.collection.mutable.LinkedListLike",
      "scala.collection.IterableViewLike$Zipped",
      "org.apache.hadoop.io.Writable",
      "scala.collection.mutable.WrappedArray$ofInt",
      "scala.Function0$mcZ$sp",
      "scala.NotImplementedError",
      "scala.reflect.ManifestFactory$ClassTypeManifest",
      "scala.collection.immutable.Queue",
      "scala.collection.generic.Shrinkable",
      "scala.collection.mutable.Seq$class",
      "org.apache.spark.rpc.RpcEnvFileServer$$anonfun$validateDirectoryUri$1",
      "scala.collection.immutable.Stream$StreamBuilder",
      "scala.runtime.AbstractFunction2$mcVJJ$sp",
      "scala.collection.Iterator$class",
      "scala.collection.immutable.IndexedSeq",
      "scala.reflect.ManifestFactory$$anon$11",
      "scala.reflect.ManifestFactory$$anon$12",
      "scala.reflect.ManifestFactory$$anon$10",
      "scala.collection.SortedSetLike",
      "scala.xml.PrettyPrinter$Item",
      "scala.collection.mutable.HashTable",
      "org.apache.spark.rpc.netty.OutboxMessage",
      "scala.reflect.ManifestFactory$$anon$13",
      "scala.reflect.ManifestFactory$$anon$14",
      "scala.collection.IndexedSeqLike$Elements",
      "scala.collection.mutable.IndexedSeqLike",
      "scala.runtime.AbstractFunction2$mcJDI$sp",
      "scala.math.LowPriorityOrderingImplicits$class",
      "scala.collection.convert.Wrappers$SetWrapper",
      "scala.collection.immutable.HashMap$EmptyHashMap$",
      "scala.collection.generic.FilterMonadic",
      "io.netty.util.concurrent.EventExecutor",
      "scala.runtime.AbstractFunction2$mcFDI$sp",
      "scala.collection.mutable.Cloneable",
      "org.apache.spark.serializer.SerializerInstance",
      "scala.collection.Iterator$JoinIterator",
      "scala.collection.immutable.SortedSet",
      "scala.sys.SystemProperties$$anonfun$contains$1",
      "scala.collection.GenIterableLike",
      "scala.collection.LinearSeq$",
      "scala.Equals",
      "scala.collection.generic.MutableMapFactory",
      "scala.collection.SortedMapLike",
      "scala.Function2$mcFDJ$sp",
      "scala.Mutable",
      "scala.collection.immutable.ListMap$EmptyListMap$",
      "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask",
      "scala.Function1$mcJJ$sp",
      "scala.collection.immutable.Set$class",
      "scala.collection.convert.Wrappers$JPropertiesWrapper$",
      "scala.runtime.AbstractFunction2$mcFID$sp",
      "scala.Function1$mcVF$sp",
      "scala.collection.mutable.LinearSeq",
      "scala.collection.convert.Wrappers$JCollectionWrapper$",
      "io.netty.util.concurrent.AbstractFuture",
      "org.apache.spark.util.Utils$Lock",
      "scala.collection.immutable.HashSet$HashSetCollision1",
      "scala.collection.immutable.Iterable$",
      "scala.collection.immutable.NumericRange",
      "scala.collection.generic.Sizing",
      "scala.runtime.AbstractFunction2$mcDII$sp",
      "scala.PartialFunction$OrElse",
      "scala.concurrent.impl.Promise$DefaultPromise",
      "scala.collection.SeqLike",
      "scala.collection.immutable.PagedSeq",
      "scala.collection.mutable.WrappedArray$ofUnit",
      "scala.collection.parallel.ParIterable",
      "scala.collection.mutable.IndexedSeqView$TakenWhile",
      "scala.Function2$mcFJJ$sp",
      "scala.runtime.AbstractFunction2$mcVIJ$sp",
      "scala.Tuple2$mcCZ$sp",
      "scala.Function1$mcZJ$sp",
      "io.netty.channel.ChannelId",
      "scala.Predef$$eq$colon$eq$",
      "scala.collection.immutable.StreamView",
      "scala.sys.SystemProperties$$anonfun$get$1",
      "scala.xml.PrettyPrinter$Box$",
      "org.apache.spark.network.client.ChunkReceivedCallback",
      "scala.collection.Iterator$",
      "scala.sys.BooleanProp$",
      "scala.reflect.ClassTypeManifest",
      "scala.collection.mutable.ArrayOps$ofInt",
      "scala.Function1$mcVD$sp",
      "scala.collection.immutable.Seq$class",
      "scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom",
      "scala.collection.mutable.ArrayOps$ofRef$",
      "io.netty.channel.epoll.EpollDomainSocketChannel",
      "scala.collection.SeqLike$CombinationsItr",
      "scala.PartialFunction",
      "scala.Function1$mcIF$sp",
      "scala.collection.immutable.Queue$EmptyQueue$",
      "scala.collection.convert.DecorateAsScala",
      "scala.collection.mutable.WrappedArray$ofRef",
      "io.netty.channel.AbstractChannel$AbstractUnsafe",
      "scala.collection.mutable.IndexedSeqLike$class",
      "io.netty.channel.epoll.EpollChannelConfig",
      "scala.util.control.BreakControl",
      "com.google.common.cache.CacheLoader",
      "scala.Function0$mcF$sp",
      "scala.collection.mutable.MutableList",
      "scala.math.Numeric$LongIsIntegral",
      "scala.collection.parallel.Combiner",
      "scala.math.Ordering$Double$",
      "scala.collection.mutable.ResizableArray$class",
      "scala.package$",
      "scala.runtime.AbstractFunction2$mcVDJ$sp",
      "org.apache.spark.internal.config.OptionalConfigEntry",
      "scala.collection.mutable.WrappedArray$ofBoolean",
      "scala.UninitializedFieldError$",
      "scala.Predef",
      "scala.collection.immutable.ListMap$Node",
      "scala.util.PropertiesTrait$$anonfun$scalaProps$2",
      "org.apache.spark.rpc.netty.RpcOutboxMessage",
      "scala.collection.Set$class",
      "scala.collection.IterableViewLike$DroppedWhile",
      "scala.collection.mutable.HashMap",
      "scala.collection.$colon$plus$",
      "scala.math.Numeric$CharIsIntegral$",
      "io.netty.channel.ChannelProgressivePromise",
      "scala.util.Right",
      "scala.Tuple2$mcCD$sp",
      "scala.concurrent.Future",
      "scala.Predef$StringFormat",
      "scala.collection.mutable.IndexedSeq",
      "scala.runtime.AbstractFunction2$mcFJD$sp",
      "io.netty.util.concurrent.GenericFutureListener",
      "scala.collection.mutable.LinkedList",
      "scala.util.PropertiesTrait$$anonfun$scalaProps$1",
      "org.apache.log4j.Priority",
      "scala.collection.mutable.Queue",
      "scala.collection.mutable.AbstractMap",
      "com.google.common.cache.Cache",
      "scala.collection.generic.GenericClassTagCompanion",
      "scala.math.Numeric$CharIsIntegral",
      "io.netty.util.AttributeKey",
      "scala.Function2$mcDID$sp",
      "com.google.common.cache.LoadingCache",
      "scala.collection.immutable.$colon$colon$",
      "scala.Function1$mcFF$sp",
      "scala.ref.Reference",
      "scala.collection.convert.Wrappers$DictionaryWrapper$",
      "scala.collection.generic.SortedSetFactory$SortedSetCanBuildFrom",
      "scala.collection.immutable.VectorIterator",
      "scala.math.LowPriorityEquiv",
      "scala.collection.Map$class",
      "scala.collection.AbstractSet",
      "scala.collection.AbstractSeq",
      "scala.io.Codec",
      "scala.Tuple2$mcDJ$sp",
      "scala.Product2$mcID$sp",
      "scala.collection.mutable.StringBuilder$",
      "scala.runtime.AbstractFunction2$mcDJI$sp",
      "scala.math.Numeric$FloatAsIfIntegral",
      "scala.collection.convert.Wrappers$JDictionaryWrapper$",
      "io.netty.channel.ChannelHandler$Sharable",
      "scala.util.Properties$",
      "scala.collection.immutable.MapProxy",
      "scala.Function1$mcIJ$sp",
      "scala.collection.SeqProxyLike",
      "scala.collection.mutable.ArrayStack",
      "scala.collection.immutable.VectorPointer",
      "scala.Tuple2$mcZJ$sp",
      "scala.collection.generic.GenericOrderedCompanion",
      "scala.collection.SeqViewLike$Filtered",
      "scala.collection.parallel.mutable.ParIterable",
      "scala.collection.immutable.LinearSeq",
      "scala.collection.SeqViewLike$Forced",
      "scala.util.control.ControlThrowable",
      "scala.collection.mutable.PriorityQueue",
      "scala.math.Ordering$BigDecimal$",
      "scala.collection.mutable.ArrayBuilder$ofFloat",
      "scala.collection.mutable.ArrayLike",
      "scala.Function2$mcFIJ$sp",
      "org.apache.spark.network.shuffle.OneForOneBlockFetcher$DownloadCallback",
      "scala.collection.script.Script",
      "scala.collection.immutable.VectorPointer$class",
      "scala.math.Ordering$Long$",
      "scala.collection.TraversableViewLike$EmptyView",
      "scala.Function2$mcJDD$sp",
      "scala.collection.parallel.ParSetLike",
      "scala.Function2$mcVJI$sp",
      "scala.collection.immutable.Stream$$hash$colon$colon$",
      "scala.collection.immutable.HashMap$$anon$2$$anon$3",
      "scala.runtime.AbstractFunction2$mcJID$sp",
      "io.netty.channel.epoll.AbstractEpollChannel",
      "scala.collection.immutable.ListSet$EmptyListSet$",
      "scala.collection.Parallelizable$class",
      "scala.Tuple2$mcJC$sp",
      "scala.math.Ordered$class",
      "scala.collection.convert.Wrappers$JMapWrapperLike",
      "scala.Function0$mcS$sp",
      "scala.collection.SeqLike$class",
      "scala.collection.immutable.LongMap$Tip",
      "io.netty.util.concurrent.Promise",
      "scala.runtime.AbstractFunction2$mcIDD$sp",
      "scala.runtime.AbstractFunction2$mcIIJ$sp",
      "scala.collection.mutable.ResizableArray",
      "scala.collection.mutable.Stack",
      "scala.ref.WeakReference",
      "scala.collection.immutable.BitSet",
      "scala.None$",
      "io.netty.channel.unix.FileDescriptor",
      "scala.xml.ProcInstr",
      "scala.collection.convert.Wrappers$IterableWrapper$",
      "io.netty.channel.AbstractChannel$AnnotatedConnectException",
      "scala.collection.convert.Wrappers$SeqWrapper",
      "scala.collection.DefaultMap",
      "org.apache.spark.rpc.netty.RequestMessage",
      "scala.Predef$Ensuring$",
      "scala.Function2$mcJIJ$sp",
      "scala.collection.SeqViewLike$Zipped",
      "scala.util.Failure",
      "org.apache.spark.network.buffer.ManagedBuffer",
      "scala.collection.SeqViewLike$Sliced",
      "scala.collection.mutable.WrappedArray$ofByte",
      "scala.collection.immutable.HashSet$EmptyHashSet$",
      "scala.collection.mutable.AbstractIterable",
      "scala.math.Ordering$Implicits$",
      "scala.collection.SeqViewLike$FlatMapped",
      "scala.Product2$mcJD$sp",
      "scala.runtime.AbstractFunction0$mcI$sp",
      "scala.PartialFunction$Lifted",
      "scala.reflect.ClassManifestDeprecatedApis",
      "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe",
      "scala.Function2$mcIDJ$sp",
      "scala.collection.immutable.StringLike$class",
      "scala.collection.generic.IsTraversableLike",
      "scala.collection.mutable.MapBuilder",
      "scala.Function2$mcDJD$sp",
      "scala.collection.immutable.NumericRange$Inclusive",
      "io.netty.channel.DefaultChannelPromise",
      "scala.collection.SetLike$SubsetsItr",
      "scala.collection.mutable.MapLike$class",
      "scala.math.Numeric$IntIsIntegral",
      "scala.collection.IterableViewLike$Sliced",
      "scala.xml.Equality",
      "scala.runtime.AbstractFunction2$mcZJJ$sp",
      "scala.collection.mutable.ArrayBuilder$ofBoolean",
      "scala.UninitializedError",
      "scala.io.Source$RelaxedPositioner$",
      "scala.collection.IterableLike",
      "scala.Predef$Ensuring",
      "io.netty.channel.ChannelOutboundInvoker",
      "scala.collection.parallel.immutable.ParHashSet",
      "scala.runtime.AbstractFunction2$mcJJD$sp",
      "scala.math.Numeric$BigIntIsIntegral$",
      "scala.collection.mutable.ArrayOps$ofRef",
      "scala.collection.convert.Wrappers$JConcurrentMapWrapper$",
      "scala.collection.generic.BitOperations$Int",
      "scala.collection.generic.OrderedTraversableFactory$GenericCanBuildFrom",
      "scala.Function1$mcFD$sp",
      "scala.collection.generic.ParSetFactory",
      "org.json4s.Diff$Diffable",
      "scala.collection.generic.HasNewBuilder",
      "scala.collection.mutable.Map$class",
      "scala.collection.TraversableViewLike$Transformed",
      "scala.collection.mutable.ArrayBuffer$",
      "scala.collection.AbstractTraversable",
      "scala.PartialFunction$AndThen",
      "scala.collection.script.Reset",
      "scala.Function2$mcVII$sp",
      "scala.runtime.AbstractFunction2$mcZDD$sp",
      "scala.collection.AbstractIterable",
      "io.netty.util.DefaultAttributeMap",
      "scala.runtime.AbstractFunction2$mcZIJ$sp",
      "org.apache.hadoop.fs.PositionedReadable",
      "scala.collection.immutable.Traversable$class",
      "scala.DeprecatedPredef",
      "scala.util.PropertiesTrait",
      "scala.collection.immutable.HashSet$LeafHashSet",
      "org.apache.spark.SparkException",
      "scala.collection.generic.Growable$class",
      "io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceFdTask",
      "scala.runtime.Nothing$",
      "scala.collection.Iterator",
      "org.apache.spark.network.client.RpcResponseCallback",
      "scala.Function2$mcJJJ$sp",
      "scala.collection.SetProxyLike",
      "io.netty.util.concurrent.EventExecutorGroup",
      "scala.collection.mutable.AbstractSet",
      "scala.Tuple2$mcIC$sp",
      "scala.collection.IterableViewLike$Forced",
      "scala.collection.mutable.AbstractSeq",
      "scala.collection.generic.GenMapFactory",
      "scala.math.Numeric$LongIsIntegral$",
      "scala.math.Ordering$FloatOrdering",
      "scala.math.Equiv$",
      "scala.util.PropertiesTrait$$anonfun$scalaPropOrElse$1",
      "scala.collection.IterableLike$class",
      "scala.Function2$mcZDJ$sp",
      "scala.collection.immutable.Range$Double$",
      "scala.collection.mutable.Publisher",
      "scala.math.Equiv",
      "scala.math.Ordering$LongOrdering",
      "scala.runtime.AbstractFunction0$mcB$sp",
      "scala.Function0$mcZ$sp$class",
      "scala.Enumeration$Value",
      "scala.runtime.AbstractFunction2$mcZID$sp",
      "scala.sys.SystemProperties$",
      "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask",
      "scala.math.BigInt$",
      "scala.text.DocNest",
      "scala.collection.AbstractMap",
      "scala.collection.script.Remove",
      "scala.math.Ordering$BooleanOrdering",
      "io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe",
      "scala.util.matching.UnanchoredRegex",
      "org.apache.spark.rpc.RpcEnvFileServer",
      "scala.math.Fractional",
      "io.netty.channel.ChannelOutboundHandlerAdapter",
      "org.scalatest.ShellImpl$",
      "org.apache.commons.lang3.JavaVersion",
      "scala.collection.SetProxy",
      "scala.Tuple2$mcII$sp",
      "scala.collection.SeqViewLike$EmptyView",
      "scala.collection.convert.Wrappers",
      "scala.math.Numeric$DoubleIsFractional$",
      "io.netty.util.concurrent.DefaultProgressivePromise",
      "scala.reflect.ManifestFactory$$anon$2",
      "scala.Predef$StringAdd",
      "scala.reflect.ManifestFactory$$anon$3",
      "scala.collection.immutable.HashMap$Merger",
      "scala.reflect.ManifestFactory$$anon$4",
      "scala.Function2$mcVDI$sp",
      "scala.reflect.ManifestFactory$$anon$5",
      "scala.runtime.AbstractFunction2$mcDID$sp",
      "scala.reflect.ManifestFactory$$anon$1",
      "scala.collection.SeqViewLike$Patched",
      "scala.Function2$mcDDJ$sp",
      "scala.Enumeration",
      "scala.collection.IterableViewLike$Appended",
      "scala.collection.SeqViewLike",
      "jodd.io.filter.FileFilterBase",
      "scala.Function2$mcFJD$sp",
      "scala.collection.GenIterable$class",
      "scala.Predef$Triple$",
      "scala.collection.TraversableProxy",
      "scala.collection.LinearSeqLike$class",
      "scala.reflect.ManifestFactory$$anon$6",
      "scala.reflect.ManifestFactory$$anon$7",
      "scala.reflect.ManifestFactory$$anon$8",
      "scala.reflect.ManifestFactory$$anon$9",
      "scala.collection.generic.GenericTraversableTemplate",
      "scala.math.Ordering",
      "scala.collection.generic.GenericClassTagTraversableTemplate",
      "org.json4s.JsonAST$JValue",
      "scala.text.DocCons$",
      "io.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint",
      "scala.Function1$mcDF$sp",
      "scala.collection.generic.ParMapFactory",
      "io.netty.channel.CombinedChannelDuplexHandler",
      "scala.runtime.AbstractFunction2$mcFIJ$sp",
      "scala.collection.immutable.LongMap$Nil$",
      "scala.runtime.AbstractFunction2$mcFDD$sp",
      "scala.collection.immutable.StreamViewLike$Zipped",
      "scala.collection.convert.Decorators$AsScala",
      "org.spark_project.guava.base.Objects$ToStringHelper",
      "io.netty.channel.SimpleChannelInboundHandler",
      "scala.collection.LinearSeq",
      "scala.collection.mutable.DoubleLinkedListLike",
      "io.netty.util.concurrent.Future",
      "scala.collection.generic.TraversableForwarder",
      "scala.collection.convert.Wrappers$MutableSeqWrapper$",
      "scala.collection.IterableViewLike$EmptyView",
      "scala.collection.mutable.IndexedSeqView$AbstractTransformed",
      "scala.collection.TraversableView",
      "scala.collection.immutable.Map$",
      "scala.text.DocGroup",
      "org.apache.spark.network.server.RpcHandler$OneWayRpcCallback",
      "scala.collection.TraversableViewLike$DroppedWhile",
      "scala.Function0$mcV$sp",
      "scala.collection.generic.SetFactory",
      "scala.Enumeration$Val",
      "scala.Tuple2$mcCJ$sp",
      "io.netty.channel.ChannelProgressiveFuture",
      "org.apache.spark.rpc.TestRpcEndpoint",
      "scala.util.Left",
      "scala.collection.immutable.HashMap$HashMap1",
      "scala.collection.generic.ParSetFactory$GenericCanCombineFrom",
      "scala.collection.generic.ParFactory$GenericCanCombineFrom",
      "scala.collection.convert.Wrappers$JMapWrapperLike$$anon$2",
      "scala.collection.immutable.HashMap$$anon$2",
      "scala.collection.GenSet$class",
      "scala.Predef$$less$colon$less",
      "scala.runtime.AbstractFunction2$mcIDJ$sp",
      "scala.collection.generic.GenericTraversableTemplate$class",
      "scala.math.Numeric$BigDecimalIsConflicted",
      "scala.collection.immutable.Map$WithDefault",
      "scala.collection.IndexedSeqLike$class",
      "scala.collection.immutable.VectorBuilder",
      "scala.Function1$mcDD$sp",
      "scala.xml.NamespaceBinding$",
      "scala.Predef$ArrowAssoc",
      "scala.collection.MapLike$MappedValues",
      "scala.runtime.AbstractFunction2$mcDDI$sp",
      "scala.collection.immutable.HashMap$HashMapCollision1",
      "scala.collection.immutable.StreamViewLike$Transformed",
      "scala.collection.immutable.Stack",
      "scala.collection.generic.CanCombineFrom",
      "org.apache.spark.rpc.netty.NettyStreamManager$$anonfun$addFile$1",
      "scala.math.Integral",
      "scala.io.Source$RelaxedPosition$",
      "org.apache.spark.network.client.StreamCallback",
      "org.apache.spark.util.SparkUncaughtExceptionHandler$",
      "org.apache.spark.network.server.TransportServer",
      "scala.StringContext$",
      "scala.collection.mutable.IndexedSeqOptimized",
      "scala.collection.immutable.Range$Long$",
      "scala.Tuple2$mcZZ$sp",
      "scala.Function1$mcVJ$sp",
      "io.netty.channel.unix.UnixChannel",
      "scala.collection.generic.Sorted",
      "scala.math.Ordering$ShortOrdering",
      "scala.runtime.AbstractFunction2$mcFJJ$sp",
      "io.netty.channel.ChannelFutureListener",
      "scala.collection.convert.Decorators",
      "scala.collection.convert.Wrappers$MutableSetWrapper$",
      "scala.collection.JavaConverters$",
      "scala.Predef$Pair$",
      "scala.sys.BooleanProp$BooleanPropImpl",
      "scala.collection.GenIterable$",
      "io.netty.channel.EventLoopGroup",
      "scala.xml.SpecialNode",
      "scala.Product2$mcDI$sp",
      "scala.collection.Parallel",
      "org.json4s.JsonAST$JObject",
      "scala.Tuple2$mcZD$sp",
      "scala.collection.SeqLike$$anon$1",
      "io.netty.channel.VoidChannelPromise",
      "scala.Function2$mcZJI$sp",
      "scala.collection.convert.Decorators$AsJavaCollection",
      "scala.math.Ordering$DoubleOrdering",
      "scala.collection.immutable.LongMap",
      "scala.collection.mutable.ArrayBuilder$ofLong",
      "scala.Function2$mcFID$sp",
      "scala.collection.parallel.immutable.ParSet",
      "scala.collection.immutable.Stream$ConsWrapper",
      "scala.runtime.AbstractFunction0$mcV$sp",
      "scala.util.Try",
      "scala.math.Numeric$ShortIsIntegral",
      "scala.collection.Parallelizable",
      "scala.Tuple2$mcCC$sp",
      "scala.Serializable",
      "scala.collection.immutable.IndexedSeq$",
      "scala.runtime.AbstractFunction2$mcVDD$sp",
      "scala.collection.SeqViewLike$TakenWhile",
      "scala.math.Ordering$BigIntOrdering",
      "scala.collection.immutable.Stream$cons$",
      "org.apache.spark.util.Utils$",
      "scala.concurrent.Awaitable",
      "scala.concurrent.Promise",
      "scala.util.Random",
      "scala.Function2$mcZII$sp",
      "scala.collection.immutable.StreamViewLike$ZippedAll",
      "scala.collection.Iterable$",
      "org.apache.spark.network.client.TransportClientBootstrap",
      "scala.collection.mutable.ArrayOps$class",
      "io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback",
      "scala.collection.generic.GenericCompanion",
      "scala.collection.generic.ClassTagTraversableFactory$GenericCanBuildFrom",
      "org.apache.spark.util.ThreadStackTrace",
      "scala.Function2$mcDII$sp",
      "scala.reflect.ManifestFactory",
      "scala.io.Position",
      "scala.collection.mutable.HashEntry$class",
      "scala.math.PartialOrdering",
      "scala.collection.IterableViewLike$Transformed",
      "scala.Function2$mcVJD$sp",
      "io.netty.util.concurrent.ProgressivePromise",
      "jodd.io.filter.RegExpFileFilter",
      "scala.collection.immutable.StreamViewLike$Prepended",
      "scala.Function0$mcB$sp",
      "org.apache.spark.rpc.RpcEnv",
      "scala.collection.immutable.Stream$Empty$",
      "scala.math.ScalaNumericConversions",
      "scala.collection.immutable.StringOps",
      "io.netty.util.Constant",
      "scala.PartialFunction$Unlifted",
      "scala.reflect.ClassTag",
      "scala.collection.immutable.Range$",
      "scala.collection.immutable.IndexedSeq$class",
      "scala.collection.mutable.WrappedArray$ofFloat",
      "scala.Product2$mcJJ$sp",
      "scala.math.Numeric$ShortIsIntegral$",
      "scala.math.Numeric$DoubleAsIfIntegral$",
      "scala.collection.convert.Wrappers$MutableBufferWrapper$",
      "scala.math.BigInt",
      "scala.collection.mutable.Buffer$",
      "scala.collection.immutable.IntMap$Bin",
      "scala.collection.MapLike$DefaultKeySet",
      "scala.concurrent.impl.Promise",
      "scala.collection.GenMap",
      "org.apache.spark.network.sasl.SecretKeyHolder",
      "scala.xml.ProcInstr$",
      "org.spark_project.guava.base.Preconditions",
      "scala.math.Ordering$UnitOrdering",
      "scala.collection.immutable.StreamViewLike$Sliced",
      "scala.collection.SeqView",
      "scala.collection.mutable.ArrayBuilder$ofRef",
      "scala.runtime.AbstractFunction2$mcJII$sp",
      "scala.runtime.AbstractFunction2$mcZJD$sp",
      "org.apache.spark.network.util.TransportConf",
      "scala.math.Ordering$IntOrdering",
      "org.apache.hadoop.fs.HasEnhancedByteBufferAccess",
      "io.netty.channel.Channel",
      "scala.collection.mutable.WrappedArray$ofLong",
      "org.apache.spark.rpc.netty.NettyRpcEnv$FileDownloadCallback",
      "scala.collection.IterableViewLike$Mapped",
      "scala.collection.immutable.Stream",
      "scala.collection.TraversableViewLike$Mapped",
      "scala.collection.immutable.Stream$",
      "scala.collection.immutable.IndexedSeq$Impl",
      "scala.collection.mutable.IndexedSeqView$DroppedWhile",
      "scala.collection.GenTraversable$class",
      "scala.runtime.AbstractFunction0$mcZ$sp",
      "scala.collection.immutable.HashSet$HashSet1",
      "scala.collection.Iterator$GroupedIterator",
      "scala.Function1$mcFJ$sp",
      "scala.collection.concurrent.Map",
      "scala.math.Ordering$OptionOrdering",
      "scala.xml.Node",
      "org.apache.spark.internal.config.ConfigEntry",
      "scala.collection.mutable.HashTable$HashUtils",
      "io.netty.channel.DefaultChannelConfig",
      "scala.math.Ordering$String$",
      "io.netty.channel.ChannelPromise",
      "scala.collection.GenSeqLike$class",
      "org.apache.hadoop.fs.Path",
      "org.apache.hadoop.conf.Configurable",
      "scala.Some",
      "io.netty.channel.DefaultChannelId",
      "scala.MatchError",
      "scala.collection.mutable.ArrayBuilder$ofDouble",
      "com.google.common.base.Function",
      "io.netty.channel.ChannelInitializer",
      "org.apache.spark.network.buffer.FileSegmentManagedBuffer",
      "scala.math.Ordering$Unit$",
      "scala.StringContext$$anonfun$s$1",
      "scala.Function2$mcIDD$sp",
      "scala.collection.generic.SortedSetFactory",
      "scala.text.DocNest$",
      "scala.sys.Prop",
      "scala.Tuple2$mcDC$sp",
      "scala.runtime.AbstractFunction0$mcD$sp",
      "scala.Function2$mcVID$sp",
      "scala.runtime.AbstractFunction2$mcDJD$sp",
      "io.netty.channel.DefaultChannelPipeline",
      "scala.math.Numeric$ByteIsIntegral$",
      "scala.Function2$mcDJI$sp",
      "scala.collection.immutable.Range$Partial",
      "io.netty.channel.DelegatingChannelPromiseNotifier",
      "scala.Function2$mcIJJ$sp",
      "scala.collection.IndexedSeq",
      "scala.collection.mutable.Traversable$",
      "scala.math.Ordering$Boolean$",
      "scala.math.ScalaNumericAnyConversions",
      "scala.collection.immutable.IntMap$Nil$",
      "scala.collection.mutable.ArrayBuilder$ofInt",
      "scala.Function2$mcIIJ$sp",
      "org.apache.spark.rpc.RpcTimeout",
      "scala.collection.mutable.WrappedArray$",
      "scala.collection.immutable.MapLike",
      "scala.Immutable",
      "scala.math.Ordered$",
      "scala.math.Numeric$DoubleIsConflicted",
      "io.netty.channel.socket.DuplexChannel",
      "scala.Tuple2$mcJI$sp",
      "scala.runtime.AbstractFunction2$mcIJD$sp",
      "scala.collection.immutable.MapLike$ImmutableDefaultKeySet",
      "scala.collection.immutable.Range",
      "org.apache.spark.rpc.netty.NettyStreamManager",
      "org.spark_project.guava.base.Objects",
      "scala.collection.immutable.Map$class",
      "scala.collection.mutable.ArraySeq",
      "scala.runtime.AbstractFunction2$mcJJI$sp",
      "scala.collection.mutable.Seq$",
      "scala.collection.Traversable$",
      "scala.Predef$StringAdd$",
      "scala.collection.immutable.LinearSeq$class",
      "scala.collection.mutable.BufferProxy",
      "io.netty.channel.ChannelFuture",
      "org.apache.spark.network.server.RpcHandler",
      "scala.collection.mutable.Traversable$class",
      "scala.collection.generic.Growable",
      "scala.Function0$mcD$sp",
      "io.netty.channel.ChannelConfig",
      "scala.runtime.AbstractFunction2$mcVJI$sp",
      "scala.runtime.AbstractFunction2$mcZDI$sp",
      "scala.collection.MapLike$DefaultValuesIterable",
      "scala.math.Numeric$DoubleIsFractional",
      "scala.xml.PrettyPrinter",
      "scala.collection.CustomParallelizable",
      "scala.collection.parallel.ParSeqLike",
      "io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException",
      "scala.runtime.AbstractFunction2$mcDIJ$sp",
      "scala.Tuple2$mcID$sp",
      "scala.collection.GenSetLike$class",
      "org.apache.spark.network.client.TransportClientFactory",
      "scala.collection.LinearSeqOptimized",
      "org.apache.hadoop.fs.CanUnbuffer",
      "scala.math.Numeric$ByteIsIntegral",
      "scala.text.DocBreak$",
      "org.apache.log4j.Level",
      "scala.collection.generic.IndexedSeqFactory",
      "scala.collection.immutable.HashSet$",
      "scala.collection.immutable.StreamViewLike$FlatMapped",
      "scala.compat.Platform$",
      "scala.Function2$mcZDD$sp",
      "scala.collection.immutable.StringLike",
      "scala.collection.immutable.Seq$",
      "scala.collection.Map",
      "scala.collection.immutable.StreamViewLike",
      "scala.collection.parallel.ParIterableLike",
      "scala.collection.immutable.LongMap$Bin",
      "scala.collection.mutable.IndexedSeqView$Sliced",
      "scala.collection.convert.DecorateAsScala$$anonfun$mapAsScalaMapConverter$1",
      "org.apache.spark.network.server.NoOpRpcHandler",
      "scala.Function2$mcJJI$sp",
      "org.apache.hadoop.fs.CanSetReadahead",
      "scala.Option$WithFilter",
      "org.apache.spark.SecurityManager",
      "scala.runtime.AbstractFunction2$mcZII$sp",
      "scala.Product$class",
      "scala.reflect.ManifestFactory$",
      "scala.text.DocNil$",
      "scala.math.Numeric$Implicits$",
      "scala.runtime.NonLocalReturnControl",
      "scala.collection.generic.GenTraversableFactory",
      "org.apache.spark.network.server.StreamManager",
      "scala.Function2$mcDDD$sp",
      "scala.Function2$mcVDD$sp",
      "scala.collection.generic.GenericSetTemplate",
      "scala.collection.IterableViewLike$FlatMapped",
      "scala.reflect.ClassManifestFactory$",
      "scala.collection.mutable.StringBuilder",
      "scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1",
      "scala.collection.generic.GenericParMapCompanion",
      "scala.collection.convert.Wrappers$JListWrapper",
      "io.netty.util.ResourceLeakHint",
      "scala.Tuple2$mcIZ$sp",
      "scala.collection.immutable.ListSet$Node",
      "scala.collection.GenSet",
      "scala.collection.immutable.Vector$",
      "scala.collection.TraversableViewLike$Appended",
      "org.apache.hadoop.fs.CanSetDropBehind",
      "scala.collection.GenTraversable",
      "scala.collection.GenSeq",
      "scala.math.Ordering$Char$",
      "io.netty.channel.ChannelMetadata",
      "scala.runtime.AbstractFunction2$mcVII$sp",
      "io.netty.util.Attribute",
      "org.apache.commons.lang3.SystemUtils",
      "scala.Function2$mcFJI$sp",
      "scala.io.BufferedSource",
      "scala.collection.immutable.WrappedString",
      "org.apache.spark.internal.Logging",
      "scala.collection.mutable.ArrayBuilder$ofByte",
      "scala.Function2$class",
      "scala.collection.TraversableProxyLike",
      "scala.collection.immutable.StreamViewLike$EmptyView",
      "scala.util.control.Breaks",
      "scala.Function2$mcVIJ$sp",
      "scala.Predef$$anon$2",
      "scala.Predef$$anon$3",
      "scala.collection.immutable.Set$EmptySet$",
      "scala.collection.immutable.TreeSet",
      "scala.Predef$$anon$1",
      "scala.text.Document",
      "scala.sys.PropImpl",
      "scala.collection.immutable.StreamViewLike$Appended",
      "scala.collection.immutable.HashSet",
      "scala.xml.PrettyPrinter$Box",
      "scala.collection.immutable.MapLike$class",
      "scala.Tuple2$mcZI$sp",
      "io.netty.util.AbstractConstant",
      "org.apache.hadoop.fs.Seekable",
      "io.netty.channel.DefaultChannelProgressivePromise",
      "io.netty.channel.unix.Socket",
      "scala.Function2$mcZJD$sp",
      "scala.collection.mutable.SeqLike",
      "scala.runtime.AbstractFunction2$mcDDD$sp",
      "scala.util.hashing.package$",
      "scala.collection.generic.OrderedTraversableFactory",
      "scala.collection.convert.Wrappers$JMapWrapperLike$class",
      "io.netty.util.concurrent.OrderedEventExecutor",
      "scala.collection.immutable.Iterable$class",
      "org.apache.spark.network.shuffle.OneForOneBlockFetcher$ChunkCallback",
      "scala.collection.immutable.Nil$",
      "scala.collection.TraversableViewLike$AbstractTransformed",
      "scala.Predef$$eq$colon$eq",
      "scala.io.Source$NoPositioner$",
      "io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInChannelTask",
      "io.netty.channel.ChannelHandlerAdapter",
      "scala.Function0$class",
      "scala.collection.SeqViewLike$Prepended",
      "scala.math.Ordering$Float$",
      "scala.collection.immutable.StreamViewLike$Forced",
      "scala.collection.parallel.mutable.ParArray",
      "scala.Tuple2",
      "io.netty.channel.EventLoop",
      "scala.Tuple3",
      "scala.collection.immutable.Map$EmptyMap$",
      "scala.collection.convert.Wrappers$",
      "scala.collection.convert.Wrappers$JSetWrapper",
      "org.apache.spark.rpc.netty.NettyStreamManager$$anonfun$addJar$1",
      "scala.collection.MapProxyLike",
      "scala.Enumeration$ValueSet",
      "scala.util.control.NoStackTrace$",
      "scala.Predef$any2stringadd",
      "scala.collection.IterableView",
      "scala.collection.BufferedIterator",
      "scala.math.Ordering$ByteOrdering",
      "scala.collection.immutable.Seq",
      "scala.Function2$mcJDJ$sp",
      "scala.collection.immutable.ListSet",
      "scala.collection.mutable.ArrayOps$ofInt$",
      "scala.Predef$SeqCharSequence",
      "scala.collection.immutable.Set",
      "org.apache.spark.rpc.ThreadSafeRpcEndpoint",
      "scala.collection.script.Include",
      "scala.collection.mutable.IndexedSeq$class",
      "scala.collection.convert.Wrappers$JMapWrapper",
      "scala.collection.convert.Wrappers$JIterableWrapper$",
      "scala.collection.mutable.IndexedSeqView",
      "scala.collection.immutable.SortedMap$Default",
      "scala.collection.IndexedSeq$",
      "scala.collection.IndexedSeqLike",
      "scala.collection.immutable.Set$",
      "scala.xml.pull.EvElemStart$",
      "io.netty.channel.epoll.LinuxSocket",
      "scala.collection.GenTraversableLike",
      "scala.sys.SystemProperties",
      "scala.Product2$mcDD$sp",
      "scala.collection.immutable.Set$Set4",
      "scala.collection.mutable.WrappedArray$ofShort",
      "scala.collection.LinearSeq$class",
      "scala.Product3",
      "scala.math.Ordering$Short$",
      "scala.Product2",
      "scala.Function2$mcFII$sp",
      "scala.collection.TraversableViewLike$FlatMapped",
      "scala.collection.convert.WrapAsScala$",
      "scala.collection.$plus$colon$",
      "scala.runtime.AbstractFunction2$mcJDJ$sp",
      "scala.collection.immutable.Set$Set1",
      "scala.Product2$mcIJ$sp",
      "scala.collection.mutable.ObservableBuffer",
      "scala.collection.script.Update",
      "scala.collection.immutable.Set$Set3",
      "scala.collection.immutable.Set$Set2",
      "scala.Predef$DummyImplicit$",
      "scala.collection.generic.TraversableFactory",
      "scala.math.Numeric$BigDecimalIsFractional",
      "scala.Function1$mcZI$sp",
      "scala.runtime.BoxedUnit",
      "scala.Function1$mcDJ$sp",
      "scala.Option",
      "scala.Function2$mcFDI$sp",
      "scala.collection.immutable.Map$Map3",
      "scala.collection.immutable.Map$Map2",
      "scala.collection.immutable.Map$Map1",
      "scala.collection.convert.Wrappers$MutableMapWrapper",
      "scala.collection.IndexedSeq$class",
      "scala.runtime.AbstractFunction0$mcF$sp",
      "scala.collection.mutable.Traversable",
      "scala.collection.immutable.Map$Map4",
      "scala.collection.generic.BitOperations$Int$class",
      "scala.collection.generic.GenericParCompanion",
      "scala.reflect.ScalaSignature",
      "scala.collection.mutable.Map$",
      "io.netty.channel.ChannelInboundHandler",
      "scala.collection.generic.ParFactory",
      "scala.util.matching.Regex",
      "scala.collection.mutable.UnrolledBuffer",
      "scala.reflect.package$",
      "scala.collection.SeqViewLike$DroppedWhile",
      "scala.collection.immutable.Range$BigInt$",
      "io.netty.channel.socket.SocketChannel",
      "scala.runtime.BoxesRunTime",
      "org.apache.hadoop.fs.FSDataInputStream",
      "scala.runtime.AbstractFunction2$mcVDI$sp",
      "scala.collection.parallel.immutable.ParIterable",
      "scala.collection.Seq",
      "scala.collection.mutable.Buffer$class",
      "scala.collection.Set",
      "scala.collection.generic.GenMapFactory$MapCanBuildFrom",
      "org.apache.hadoop.fs.ByteBufferReadable",
      "scala.collection.immutable.StreamViewLike$Mapped",
      "scala.collection.convert.Decorators$class",
      "scala.runtime.AbstractFunction2$mcFJI$sp",
      "scala.text.DocCons",
      "scala.collection.IndexedSeqOptimized$class",
      "scala.collection.mutable.SynchronizedStack",
      "org.apache.spark.network.client.TransportClient",
      "scala.collection.generic.ImmutableSetFactory",
      "scala.collection.BufferedIterator$class",
      "scala.collection.mutable.DoubleLinkedList",
      "scala.collection.SeqViewLike$ZippedAll",
      "scala.io.Source$Positioner",
      "scala.runtime.AbstractFunction2$mcZJI$sp",
      "scala.collection.immutable.Stream$StreamWithFilter",
      "scala.Function0",
      "io.netty.util.concurrent.ProgressiveFuture",
      "scala.Function1",
      "scala.math.Ordering$Ops",
      "scala.Function2",
      "scala.Function3",
      "io.netty.channel.AbstractChannel",
      "scala.Function4",
      "scala.collection.convert.Decorators$AsJavaEnumeration",
      "scala.Function5",
      "scala.collection.convert.Wrappers$MutableMapWrapper$",
      "scala.collection.convert.Decorators$AsJavaDictionary",
      "scala.StringContext$InvalidEscapeException",
      "scala.collection.convert.Wrappers$JSetWrapper$",
      "org.spark_project.guava.base.Objects$ToStringHelper$ValueHolder",
      "scala.collection.IterableViewLike$ZippedAll",
      "scala.collection.mutable.HashEntry",
      "scala.collection.SeqViewLike$AbstractTransformed",
      "scala.util.Either",
      "scala.math.Ordering$BigInt$",
      "scala.collection.generic.GenericSeqCompanion",
      "scala.collection.mutable.WrappedArray",
      "scala.collection.parallel.mutable.ParSeq",
      "scala.math.Ordering$CharOrdering",
      "scala.concurrent.impl.AbstractPromise",
      "scala.Function2$mcZID$sp",
      "org.apache.spark.SparkConf",
      "scala.collection.generic.ParMapFactory$CanCombineFromMap",
      "scala.collection.immutable.BitSet$BitSet2",
      "scala.collection.immutable.BitSet$BitSet1",
      "scala.collection.TraversableViewLike",
      "scala.collection.mutable.Map",
      "scala.collection.immutable.BitSet$BitSetN",
      "scala.util.Right$",
      "scala.runtime.AbstractFunction0$mcJ$sp",
      "scala.math.LowPriorityEquiv$class",
      "scala.collection.generic.GenericOrderedTraversableTemplate",
      "scala.Function2$mcIJD$sp",
      "scala.Tuple2$mcDI$sp",
      "jodd.io.filter.FileFilterEx",
      "scala.collection.IndexedSeq$$anon$1",
      "scala.runtime.AbstractFunction2$mcDJJ$sp",
      "scala.runtime.AbstractPartialFunction",
      "scala.collection.TraversableViewLike$Sliced",
      "scala.collection.immutable.List$$anon$1",
      "scala.Predef$StringFormat$",
      "scala.Predef$RichException",
      "scala.collection.generic.SeqForwarder",
      "scala.Function1$mcII$sp",
      "scala.collection.mutable.ArrayBuilder$ofUnit",
      "scala.math.Numeric$Ops",
      "scala.collection.immutable.List$",
      "scala.collection.generic.ClassTagTraversableFactory",
      "scala.collection.script.Scriptable",
      "scala.io.Source",
      "org.apache.hadoop.conf.Configured",
      "scala.collection.mutable.AbstractBuffer",
      "scala.collection.generic.SeqFactory",
      "scala.Cloneable",
      "scala.collection.immutable.ListMap",
      "scala.runtime.AbstractFunction2$mcFDJ$sp",
      "scala.math.Integral$",
      "scala.Tuple2$mcJZ$sp",
      "scala.reflect.OptManifest",
      "scala.collection.TraversableOnce$class",
      "scala.DeprecatedPredef$class",
      "scala.collection.GenSeq$class",
      "scala.math.Ordered",
      "scala.collection.mutable.HashTable$class",
      "io.netty.util.concurrent.DefaultPromise",
      "scala.runtime.AbstractFunction2$mcIJI$sp",
      "scala.collection.TraversableLike",
      "org.scalactic.TripleEqualsSupport",
      "scala.collection.immutable.Map",
      "scala.collection.convert.WrapAsScala",
      "scala.collection.MapLike$FilteredKeys",
      "scala.collection.generic.CanBuildFrom",
      "scala.Array$",
      "scala.LowPriorityImplicits$$anon$4",
      "scala.collection.convert.Decorators$AsJava",
      "scala.reflect.AnyValManifest",
      "scala.collection.convert.Wrappers$JMapWrapper$",
      "scala.collection.IterableViewLike",
      "scala.runtime.AbstractFunction2$mcIII$sp",
      "scala.collection.mutable.IndexedSeqView$Filtered",
      "scala.collection.mutable.ListBuffer",
      "scala.runtime.AbstractFunction2$mcVJD$sp",
      "org.apache.spark.util.CallSite",
      "org.apache.spark.serializer.JavaSerializerInstance",
      "scala.collection.TraversableViewLike$Forced",
      "scala.collection.mutable.IndexedSeqView$Transformed",
      "scala.collection.immutable.StreamViewLike$Reversed",
      "scala.collection.GenTraversableOnce",
      "scala.collection.mutable.ArrayBuilder",
      "scala.collection.immutable.HashMap$",
      "scala.collection.AbstractIterator",
      "io.netty.channel.DefaultChannelPipeline$HeadContext",
      "scala.Function0$mcI$sp",
      "scala.collection.convert.Wrappers$IteratorWrapper$",
      "scala.Function2$mcJII$sp",
      "scala.math.Numeric$BigIntIsIntegral",
      "scala.collection.Map$WithDefault",
      "scala.runtime.AbstractFunction0$mcS$sp",
      "scala.collection.convert.DecorateAsJava$class",
      "scala.collection.immutable.$colon$colon",
      "scala.collection.mutable.ArrayBuffer",
      "scala.collection.immutable.Traversable",
      "scala.collection.GenMapLike$class",
      "scala.Function2$mcVJJ$sp",
      "scala.collection.immutable.StreamViewLike$TakenWhile",
      "org.apache.spark.rpc.netty.NettyStreamManager$$anonfun$1",
      "scala.collection.Iterable",
      "io.netty.channel.ChannelInboundInvoker",
      "io.netty.channel.AbstractChannel$CloseFuture",
      "scala.collection.mutable.IndexedSeq$",
      "scala.collection.generic.Clearable",
      "scala.math.Numeric$DoubleAsIfIntegral",
      "scala.Function2$mcIID$sp",
      "scala.Function1$mcJI$sp",
      "scala.Function2$mcIDI$sp",
      "scala.collection.LinearSeqOptimized$class",
      "org.apache.commons.lang3.math.NumberUtils",
      "scala.collection.Iterable$class",
      "io.netty.channel.ChannelHandler",
      "scala.collection.immutable.HashMap",
      "scala.collection.SortedMapLike$DefaultKeySortedSet",
      "org.apache.spark.rpc.netty.Dispatcher",
      "scala.math.Ordering$",
      "scala.Tuple2$mcJD$sp"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.io.File", false, NettyStreamManager_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.apache.spark.rpc.RpcAddress", false, NettyStreamManager_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.apache.spark.rpc.netty.NettyRpcEnv", false, NettyStreamManager_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NettyStreamManager_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.spark.network.server.StreamManager",
      "org.apache.spark.rpc.netty.NettyStreamManager",
      "scala.runtime.AbstractFunction0",
      "org.apache.spark.rpc.netty.NettyStreamManager$$anonfun$1",
      "org.apache.spark.rpc.netty.NettyStreamManager$$anonfun$addFile$1",
      "org.apache.spark.rpc.netty.NettyStreamManager$$anonfun$addJar$1",
      "org.apache.spark.rpc.netty.NettyStreamManager$$anonfun$addDirectory$1",
      "scala.LowPriorityImplicits",
      "scala.DeprecatedPredef$class",
      "scala.package$$anon$1",
      "scala.collection.generic.GenericCompanion",
      "scala.collection.generic.GenTraversableFactory",
      "scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom",
      "scala.collection.generic.GenTraversableFactory$$anon$1",
      "scala.util.control.Breaks",
      "scala.util.control.BreakControl",
      "scala.util.control.NoStackTrace$class",
      "scala.sys.SystemProperties$",
      "scala.sys.BooleanProp$",
      "scala.sys.PropImpl",
      "scala.sys.BooleanProp$BooleanPropImpl",
      "scala.runtime.AbstractFunction1",
      "scala.sys.BooleanProp$$anonfun$keyExists$1",
      "scala.Function1$class",
      "scala.collection.generic.GenMapFactory",
      "scala.collection.generic.MapFactory",
      "scala.collection.generic.MutableMapFactory",
      "scala.collection.mutable.Map$",
      "scala.collection.AbstractTraversable",
      "scala.collection.AbstractIterable",
      "scala.collection.AbstractSeq",
      "scala.collection.immutable.List",
      "scala.collection.TraversableOnce$class",
      "scala.collection.Parallelizable$class",
      "scala.collection.TraversableLike$class",
      "scala.collection.generic.GenericTraversableTemplate$class",
      "scala.collection.GenTraversable$class",
      "scala.collection.Traversable$class",
      "scala.collection.GenIterable$class",
      "scala.collection.IterableLike$class",
      "scala.collection.Iterable$class",
      "scala.PartialFunction$class",
      "scala.collection.GenSeqLike$class",
      "scala.collection.GenSeq$class",
      "scala.collection.SeqLike$class",
      "scala.collection.Seq$class",
      "scala.collection.immutable.Traversable$class",
      "scala.collection.immutable.Iterable$class",
      "scala.collection.immutable.Seq$class",
      "scala.collection.LinearSeqLike$class",
      "scala.collection.LinearSeq$class",
      "scala.collection.immutable.LinearSeq$class",
      "scala.Product$class",
      "scala.collection.LinearSeqOptimized$class",
      "scala.collection.immutable.Nil$",
      "scala.collection.AbstractMap",
      "scala.collection.mutable.AbstractMap",
      "scala.collection.mutable.HashMap",
      "scala.collection.GenMapLike$class",
      "scala.collection.generic.Subtractable$class",
      "scala.collection.MapLike$class",
      "scala.collection.Map$class",
      "scala.collection.mutable.Traversable$class",
      "scala.collection.mutable.Iterable$class",
      "scala.collection.generic.Growable$class",
      "scala.collection.mutable.Builder$class",
      "scala.collection.generic.Shrinkable$class",
      "scala.collection.mutable.Cloneable$class",
      "scala.collection.mutable.MapLike$class",
      "scala.collection.mutable.Map$class",
      "scala.collection.mutable.HashTable$HashUtils$class",
      "scala.collection.mutable.HashTable$class",
      "scala.collection.mutable.HashTable$",
      "scala.collection.CustomParallelizable$class",
      "scala.runtime.BoxedUnit",
      "scala.runtime.ScalaRunTime$",
      "scala.util.hashing.package$",
      "scala.collection.mutable.DefaultEntry",
      "scala.collection.mutable.HashEntry$class",
      "scala.Option",
      "scala.None$",
      "scala.sys.package$",
      "scala.sys.SystemProperties",
      "scala.runtime.AbstractFunction0$mcZ$sp",
      "scala.sys.SystemProperties$$anonfun$contains$1",
      "scala.Function0$class",
      "scala.Function0$mcZ$sp$class",
      "scala.Some",
      "scala.sys.SystemProperties$$anonfun$get$1",
      "scala.Option$",
      "scala.runtime.BoxesRunTime",
      "scala.util.control.NoStackTrace$",
      "scala.collection.Traversable$",
      "scala.collection.Iterable$",
      "scala.collection.generic.GenSeqFactory",
      "scala.collection.generic.SeqFactory",
      "scala.collection.Seq$",
      "scala.collection.generic.IndexedSeqFactory",
      "scala.collection.IndexedSeq$$anon$1",
      "scala.collection.IndexedSeq$",
      "scala.collection.AbstractIterator",
      "scala.collection.Iterator$$anon$2",
      "scala.collection.Iterator$class",
      "scala.collection.Iterator$",
      "scala.collection.immutable.List$$anon$1",
      "scala.collection.immutable.List$",
      "scala.collection.immutable.$colon$colon$",
      "scala.collection.$plus$colon$",
      "scala.collection.$colon$plus$",
      "scala.collection.immutable.Stream$",
      "scala.collection.immutable.Stream$$hash$colon$colon$",
      "scala.collection.immutable.Vector",
      "scala.collection.IndexedSeqLike$class",
      "scala.collection.IndexedSeq$class",
      "scala.collection.immutable.IndexedSeq$class",
      "scala.collection.immutable.VectorPointer$class",
      "scala.collection.immutable.Vector$",
      "scala.collection.mutable.StringBuilder$",
      "scala.collection.immutable.Range$",
      "scala.math.BigDecimal$",
      "scala.math.BigInt$",
      "scala.math.LowPriorityEquiv$class",
      "scala.math.Equiv$",
      "scala.math.Fractional$",
      "scala.math.Integral$",
      "scala.math.Numeric$",
      "scala.math.Ordered$",
      "scala.math.LowPriorityOrderingImplicits$class",
      "scala.math.Ordering$",
      "scala.util.Either$",
      "scala.util.Left$",
      "scala.util.Right$",
      "scala.package$",
      "scala.collection.generic.ImmutableMapFactory",
      "scala.collection.immutable.Map$",
      "scala.collection.generic.GenSetFactory",
      "scala.collection.generic.SetFactory",
      "scala.collection.generic.ImmutableSetFactory",
      "scala.collection.immutable.Set$",
      "scala.reflect.AnyValManifest",
      "scala.reflect.ManifestFactory$$anon$6",
      "scala.reflect.ClassManifestDeprecatedApis$class",
      "scala.reflect.ClassTag$class",
      "scala.reflect.Manifest$class",
      "scala.reflect.ManifestFactory$$anon$7",
      "scala.reflect.ManifestFactory$$anon$8",
      "scala.reflect.ManifestFactory$$anon$9",
      "scala.reflect.ManifestFactory$$anon$10",
      "scala.reflect.ManifestFactory$$anon$11",
      "scala.reflect.ManifestFactory$$anon$12",
      "scala.reflect.ManifestFactory$$anon$13",
      "scala.reflect.ManifestFactory$$anon$14",
      "scala.reflect.ManifestFactory$ClassTypeManifest",
      "scala.reflect.ManifestFactory$PhantomManifest",
      "scala.reflect.ManifestFactory$$anon$1",
      "scala.reflect.ManifestFactory$$anon$2",
      "scala.reflect.ManifestFactory$$anon$3",
      "scala.reflect.ManifestFactory$$anon$4",
      "scala.reflect.ManifestFactory$$anon$5",
      "scala.reflect.ManifestFactory$",
      "scala.reflect.ClassManifestFactory$",
      "scala.reflect.package$",
      "scala.reflect.NoManifest$",
      "scala.Predef$$anon$3",
      "scala.Predef$$less$colon$less",
      "scala.Predef$$anon$1",
      "scala.Predef$$eq$colon$eq",
      "scala.Predef$$anon$2",
      "scala.Predef$",
      "scala.FallbackArrayBuilding",
      "scala.Array$",
      "org.apache.spark.internal.Logging$class",
      "org.apache.spark.util.SparkUncaughtExceptionHandler",
      "org.apache.spark.util.SparkUncaughtExceptionHandler$",
      "scala.collection.convert.DecorateAsJava$class",
      "scala.collection.convert.DecorateAsScala$class",
      "scala.collection.JavaConverters$",
      "scala.collection.convert.Decorators$AsScala",
      "scala.collection.convert.Decorators$class",
      "scala.collection.convert.Decorators$",
      "scala.collection.convert.DecorateAsScala$$anonfun$mapAsScalaMapConverter$1",
      "scala.collection.convert.WrapAsScala$class",
      "scala.collection.convert.WrapAsScala$",
      "scala.collection.convert.Wrappers$JMapWrapper",
      "scala.collection.convert.Wrappers$class",
      "scala.collection.convert.Wrappers$",
      "scala.collection.convert.Wrappers$JMapWrapperLike$class",
      "scala.collection.mutable.AbstractSeq",
      "scala.collection.mutable.AbstractBuffer",
      "scala.collection.mutable.ArrayBuffer",
      "scala.collection.mutable.SeqLike$class",
      "scala.collection.mutable.Seq$class",
      "scala.collection.mutable.BufferLike$class",
      "scala.collection.mutable.Buffer$class",
      "scala.collection.mutable.IndexedSeqLike$class",
      "scala.collection.IndexedSeqOptimized$class",
      "scala.collection.mutable.IndexedSeq$class",
      "scala.collection.mutable.ResizableArray$class",
      "scala.math.package$",
      "scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1",
      "scala.collection.convert.Wrappers$JMapWrapperLike$$anon$2",
      "scala.Tuple2",
      "scala.Product2$class",
      "scala.collection.mutable.MapBuilder",
      "scala.collection.immutable.AbstractMap",
      "scala.collection.immutable.MapLike$class",
      "scala.collection.immutable.Map$class",
      "scala.collection.immutable.Map$EmptyMap$",
      "scala.collection.immutable.Map$Map1",
      "scala.collection.immutable.Map$Map2",
      "scala.collection.immutable.Map$Map3",
      "scala.collection.immutable.Map$Map4",
      "scala.collection.immutable.HashMap",
      "scala.collection.mutable.WrappedArray",
      "scala.collection.mutable.WrappedArray$ofRef",
      "scala.collection.mutable.ArrayLike$class",
      "scala.collection.immutable.HashMap$HashMap1",
      "scala.collection.generic.BitOperations$Int$class",
      "scala.runtime.AbstractFunction2",
      "scala.collection.immutable.HashMap$$anonfun$1",
      "scala.Function2$class",
      "scala.collection.immutable.HashMap$Merger",
      "scala.collection.immutable.HashMap$$anon$2",
      "scala.collection.immutable.HashMap$$anon$2$$anon$3",
      "scala.collection.immutable.HashMap$",
      "scala.collection.immutable.HashMap$HashTrieMap",
      "scala.collection.generic.GenMapFactory$MapCanBuildFrom",
      "scala.collection.immutable.HashMap$EmptyHashMap$",
      "scala.util.PropertiesTrait$class",
      "scala.collection.mutable.StringBuilder",
      "scala.math.Ordered$class",
      "scala.collection.immutable.StringLike$class",
      "scala.runtime.AbstractFunction0$mcV$sp",
      "scala.util.PropertiesTrait$$anonfun$scalaProps$1",
      "scala.Function0$mcV$sp$class",
      "scala.util.PropertiesTrait$$anonfun$scalaProps$2",
      "scala.util.PropertiesTrait$$anonfun$1",
      "scala.Option$WithFilter",
      "scala.util.PropertiesTrait$$anonfun$2",
      "scala.util.PropertiesTrait$$anonfun$3",
      "scala.util.PropertiesTrait$$anonfun$4",
      "scala.util.PropertiesTrait$$anonfun$scalaPropOrElse$1",
      "scala.util.Properties$",
      "scala.compat.Platform$",
      "org.apache.commons.lang3.math.NumberUtils",
      "org.apache.commons.lang3.JavaVersion",
      "org.apache.commons.lang3.SystemUtils",
      "scala.collection.immutable.StringOps",
      "scala.util.matching.Regex",
      "scala.collection.immutable.StringOps$",
      "scala.collection.AbstractSet",
      "scala.collection.GenSetLike$class",
      "scala.collection.generic.GenericSetTemplate$class",
      "scala.collection.GenSet$class",
      "scala.collection.SetLike$class",
      "scala.collection.Set$class",
      "scala.collection.immutable.Set$class",
      "scala.collection.immutable.Set$EmptySet$",
      "org.apache.spark.util.Utils$",
      "org.apache.spark.rpc.RpcEnv",
      "org.apache.spark.rpc.netty.NettyRpcEnv",
      "org.apache.spark.rpc.RpcEnvFileServer$class",
      "org.apache.spark.rpc.RpcEnvFileServer$$anonfun$validateDirectoryUri$1",
      "scala.StringContext",
      "scala.collection.mutable.ArrayOps$ofRef",
      "scala.collection.mutable.ArrayOps$class",
      "scala.LowPriorityImplicits$$anon$4",
      "scala.collection.immutable.IndexedSeq$",
      "scala.collection.immutable.VectorBuilder",
      "scala.collection.mutable.ArrayOps$ofRef$",
      "scala.MatchError",
      "org.apache.spark.rpc.RpcAddress",
      "scala.collection.mutable.WrappedArray$",
      "scala.StringContext$$anonfun$s$1",
      "scala.collection.IndexedSeqLike$Elements",
      "scala.collection.BufferedIterator$class",
      "scala.StringContext$",
      "org.apache.spark.network.buffer.ManagedBuffer",
      "org.apache.spark.network.buffer.FileSegmentManagedBuffer",
      "org.spark_project.guava.base.Objects",
      "org.spark_project.guava.base.Objects$ToStringHelper",
      "org.spark_project.guava.base.Objects$ToStringHelper$ValueHolder",
      "org.spark_project.guava.base.Preconditions",
      "org.apache.spark.network.util.TransportConf"
    );
  }
}
