/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 00:05:02 GMT 2022
 */

package org.apache.spark.shuffle.sort;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.spark.shuffle.sort.SpillInfo;
import org.apache.spark.storage.TempShuffleBlockId;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SpillInfo_ESTest extends SpillInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      TempShuffleBlockId tempShuffleBlockId0 = mock(TempShuffleBlockId.class, new ViolatedAssumptionAnswer());
      SpillInfo spillInfo0 = new SpillInfo(4408, file0, tempShuffleBlockId0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      TempShuffleBlockId tempShuffleBlockId0 = mock(TempShuffleBlockId.class, new ViolatedAssumptionAnswer());
      SpillInfo spillInfo0 = null;
      try {
        spillInfo0 = new SpillInfo((-1), file0, tempShuffleBlockId0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.shuffle.sort.SpillInfo", e);
      }
  }
}
