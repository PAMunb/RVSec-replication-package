/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:10:32 GMT 2022
 */

package org.apache.spark.status.api.v1;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import java.util.List;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import org.apache.spark.status.api.v1.ApplicationAttemptInfo;
import org.apache.spark.status.api.v1.ApplicationListResource;
import org.apache.spark.status.api.v1.ApplicationStatus;
import org.apache.spark.status.api.v1.SimpleDateParam;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ApplicationListResource_ESTest extends ApplicationListResource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(170L).when(date0).getTime();
      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(1884L, 1884L).when(date1).getTime();
      ApplicationAttemptInfo applicationAttemptInfo0 = mock(ApplicationAttemptInfo.class, new ViolatedAssumptionAnswer());
      doReturn(date1, (Date) null).when(applicationAttemptInfo0).endTime();
      doReturn(date0, date1).when(applicationAttemptInfo0).startTime();
      SimpleDateParam simpleDateParam0 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      doReturn((-2132L), 170L, (-2132L)).when(simpleDateParam0).timestamp();
      applicationListResource0.httpRequest();
      applicationListResource0.httpRequest_$eq((HttpServletRequest) null);
      SimpleDateParam simpleDateParam1 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        applicationListResource0.org$apache$spark$status$api$v1$ApplicationListResource$$isAttemptInRange(applicationAttemptInfo0, simpleDateParam0, simpleDateParam0, simpleDateParam0, simpleDateParam1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.status.api.v1.ApplicationListResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(4155L).when(date0).getTime();
      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(0L, 0L).when(date1).getTime();
      ApplicationAttemptInfo applicationAttemptInfo0 = mock(ApplicationAttemptInfo.class, new ViolatedAssumptionAnswer());
      doReturn(date1, (Date) null).when(applicationAttemptInfo0).endTime();
      doReturn(date0, date1).when(applicationAttemptInfo0).startTime();
      SimpleDateParam simpleDateParam0 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      doReturn(0L, 0L, 0L).when(simpleDateParam0).timestamp();
      // Undeclared exception!
      try { 
        applicationListResource0.org$apache$spark$status$api$v1$ApplicationListResource$$isAttemptInRange(applicationAttemptInfo0, simpleDateParam0, simpleDateParam0, simpleDateParam0, simpleDateParam0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.status.api.v1.ApplicationListResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(4382L).when(date0).getTime();
      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(date1).getTime();
      Date date2 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(date2).getTime();
      ApplicationAttemptInfo applicationAttemptInfo0 = mock(ApplicationAttemptInfo.class, new ViolatedAssumptionAnswer());
      doReturn(date1, (Date) null).when(applicationAttemptInfo0).endTime();
      doReturn(date0, date2).when(applicationAttemptInfo0).startTime();
      SimpleDateParam simpleDateParam0 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      doReturn((-471L)).when(simpleDateParam0).timestamp();
      SimpleDateParam simpleDateParam1 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      doReturn(0L, 0L).when(simpleDateParam1).timestamp();
      // Undeclared exception!
      try { 
        applicationListResource0.org$apache$spark$status$api$v1$ApplicationListResource$$isAttemptInRange(applicationAttemptInfo0, simpleDateParam1, simpleDateParam1, simpleDateParam0, simpleDateParam0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.status.api.v1.ApplicationListResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(766L).when(date0).getTime();
      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(date1).getTime();
      ApplicationAttemptInfo applicationAttemptInfo0 = mock(ApplicationAttemptInfo.class, new ViolatedAssumptionAnswer());
      doReturn(date0, date1).when(applicationAttemptInfo0).startTime();
      SimpleDateParam simpleDateParam0 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      doReturn(2908L).when(simpleDateParam0).timestamp();
      SimpleDateParam simpleDateParam1 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      doReturn(0L, 0L).when(simpleDateParam1).timestamp();
      boolean boolean0 = applicationListResource0.org$apache$spark$status$api$v1$ApplicationListResource$$isAttemptInRange(applicationAttemptInfo0, simpleDateParam1, simpleDateParam1, simpleDateParam1, simpleDateParam0, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(1L).when(date0).getTime();
      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(date1).getTime();
      ApplicationAttemptInfo applicationAttemptInfo0 = mock(ApplicationAttemptInfo.class, new ViolatedAssumptionAnswer());
      doReturn(date0, date1).when(applicationAttemptInfo0).startTime();
      SimpleDateParam simpleDateParam0 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      doReturn((-925L), 1L, 1392409281320L).when(simpleDateParam0).timestamp();
      boolean boolean0 = applicationListResource0.org$apache$spark$status$api$v1$ApplicationListResource$$isAttemptInRange(applicationAttemptInfo0, simpleDateParam0, simpleDateParam0, simpleDateParam0, simpleDateParam0, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      ServletContext servletContext0 = applicationListResource0.servletContext();
      assertNull(servletContext0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn((-3410L)).when(date0).getTime();
      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn((-3410L)).when(date1).getTime();
      Date date2 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn((-3410L)).when(date2).getTime();
      Date date3 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(date3).getTime();
      ApplicationAttemptInfo applicationAttemptInfo0 = mock(ApplicationAttemptInfo.class, new ViolatedAssumptionAnswer());
      doReturn(date2, date3).when(applicationAttemptInfo0).endTime();
      doReturn(date0, date1).when(applicationAttemptInfo0).startTime();
      SimpleDateParam simpleDateParam0 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      doReturn((-3410L), (-3410L), (-7046033566014671415L), 512L).when(simpleDateParam0).timestamp();
      boolean boolean0 = applicationListResource0.org$apache$spark$status$api$v1$ApplicationListResource$$isAttemptInRange(applicationAttemptInfo0, simpleDateParam0, simpleDateParam0, simpleDateParam0, simpleDateParam0, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn((-1367L)).when(date0).getTime();
      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(date1).getTime();
      ApplicationAttemptInfo applicationAttemptInfo0 = mock(ApplicationAttemptInfo.class, new ViolatedAssumptionAnswer());
      doReturn(date1, (Date) null).when(applicationAttemptInfo0).endTime();
      doReturn(date0).when(applicationAttemptInfo0).startTime();
      SimpleDateParam simpleDateParam0 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      doReturn(2295L, 0L).when(simpleDateParam0).timestamp();
      // Undeclared exception!
      try { 
        applicationListResource0.org$apache$spark$status$api$v1$ApplicationListResource$$isAttemptInRange(applicationAttemptInfo0, simpleDateParam0, simpleDateParam0, simpleDateParam0, simpleDateParam0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.status.api.v1.ApplicationListResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(170L).when(date0).getTime();
      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(170L).when(date1).getTime();
      ApplicationAttemptInfo applicationAttemptInfo0 = mock(ApplicationAttemptInfo.class, new ViolatedAssumptionAnswer());
      doReturn(date0, date1).when(applicationAttemptInfo0).startTime();
      SimpleDateParam simpleDateParam0 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      doReturn(170L).when(simpleDateParam0).timestamp();
      SimpleDateParam simpleDateParam1 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      doReturn(443L, 443L).when(simpleDateParam1).timestamp();
      SimpleDateParam simpleDateParam2 = mock(SimpleDateParam.class, new ViolatedAssumptionAnswer());
      System.setCurrentTimeMillis(170L);
      boolean boolean0 = applicationListResource0.org$apache$spark$status$api$v1$ApplicationListResource$$isAttemptInRange(applicationAttemptInfo0, simpleDateParam0, simpleDateParam1, simpleDateParam2, simpleDateParam1, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      Integer integer0 = new Integer(402);
      // Undeclared exception!
      try { 
        applicationListResource0.appList((List<ApplicationStatus>) null, (SimpleDateParam) null, (SimpleDateParam) null, (SimpleDateParam) null, (SimpleDateParam) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      // Undeclared exception!
      try { 
        applicationListResource0.appList((List<ApplicationStatus>) null, (SimpleDateParam) null, (SimpleDateParam) null, (SimpleDateParam) null, (SimpleDateParam) null, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      applicationListResource0.servletContext_$eq((ServletContext) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ApplicationListResource applicationListResource0 = new ApplicationListResource();
      // Undeclared exception!
      try { 
        applicationListResource0.uiRoot();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.status.api.v1.UIRootFromServletContext$", e);
      }
  }
}
