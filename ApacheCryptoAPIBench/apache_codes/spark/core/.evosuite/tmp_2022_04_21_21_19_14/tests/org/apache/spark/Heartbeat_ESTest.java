/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:21:42 GMT 2022
 */

package org.apache.spark;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.spark.Heartbeat;
import org.apache.spark.storage.BlockManagerId;
import org.apache.spark.util.AccumulatorV2;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import scala.Function1;
import scala.Option;
import scala.Tuple2;
import scala.Tuple3;
import scala.collection.Seq;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Heartbeat_ESTest extends Heartbeat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Function1<Tuple3<String, Tuple2<Object, Seq<AccumulatorV2<?, ?>>>[], BlockManagerId>, Heartbeat> function1_0 = Heartbeat.tupled();
      assertNotNull(function1_0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Option<Tuple3<String, Tuple2<Object, Seq<AccumulatorV2<?, ?>>>[], BlockManagerId>> option0 = Heartbeat.unapply((Heartbeat) null);
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Function1<String, Function1<Tuple2<Object, Seq<AccumulatorV2<?, ?>>>[], Function1<BlockManagerId, Heartbeat>>> function1_0 = Heartbeat.curried();
      assertNotNull(function1_0);
  }
}
