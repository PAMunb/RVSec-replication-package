/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:05:01 GMT 2022
 */

package org.apache.spark.deploy.history;

//import org.junit.Test;
//import static org.junit.Assert.*;
//import static org.evosuite.shaded.org.mockito.Mockito.*;
//import static org.evosuite.runtime.EvoAssertions.*;
//import org.apache.spark.deploy.history.ApplicationStoreInfo;
//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
//import org.evosuite.runtime.ViolatedAssumptionAnswer;
//import org.junit.runner.RunWith;
//import scala.Function1;
//import scala.Option;
//import scala.Tuple5;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ApplicationStoreInfo_ESTest { //extends ApplicationStoreInfo_ESTest_scaffolding {

//  @Test(timeout = 4000)
//  public void test00()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo((String) null, 1006L, (String) null, (Option<String>) null, 1006L);
//      ApplicationStoreInfo applicationStoreInfo1 = applicationStoreInfo0.copy(".'1Ls&4NTs<E", 1006L, "org.apache.spark.deploy.history.ApplicationStoreInfo$", (Option<String>) null, (-3248L));
//      assertEquals("org.apache.spark.deploy.history.ApplicationStoreInfo$", applicationStoreInfo1.copy$default$3());
//      assertEquals(".'1Ls&4NTs<E", applicationStoreInfo1.copy$default$1());
//      assertEquals(1006L, applicationStoreInfo1.copy$default$2());
//      assertEquals((-3248L), applicationStoreInfo1.size());
//  }
//
//  @Test(timeout = 4000)
//  public void test01()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 4L, "", (Option<String>) null, 4L);
//      ApplicationStoreInfo applicationStoreInfo1 = ApplicationStoreInfo.apply("", 4L, "", (Option<String>) null, 2);
//      boolean boolean0 = applicationStoreInfo1.equals(applicationStoreInfo0);
//      assertFalse(boolean0);
//      assertFalse(applicationStoreInfo0.equals((Object)applicationStoreInfo1));
//      assertEquals(4L, applicationStoreInfo1.lastAccess());
//      assertEquals(2L, applicationStoreInfo1.size());
//  }
//
//  @Test(timeout = 4000)
//  public void test02()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 0L, "", (Option<String>) null, 240L);
//      ApplicationStoreInfo applicationStoreInfo1 = new ApplicationStoreInfo("", (-3449L), "true", (Option<String>) null, (-5L));
//      boolean boolean0 = applicationStoreInfo0.equals(applicationStoreInfo1);
//      assertEquals(0L, applicationStoreInfo0.copy$default$2());
//      assertEquals(240L, applicationStoreInfo0.copy$default$5());
//      assertEquals((-3449L), applicationStoreInfo1.lastAccess());
//      assertFalse(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test03()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("|", 0L, "N", (Option<String>) null, 0L);
//      long long0 = applicationStoreInfo0.size();
//      assertEquals(0L, long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test04()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("W", (-733L), "", (Option<String>) null, (-544L));
//      long long0 = applicationStoreInfo0.size();
//      assertEquals((-544L), long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test05()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo((String) null, (-6058L), "w.0q#]tR]", (Option<String>) null, 0L);
//      String string0 = applicationStoreInfo0.path();
//      assertNull(string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test06()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("org.apache.spark.deploy.history.ApplicationStoreInfo$", 0L, "org.apache.spark.deploy.history.ApplicationStoreInfo$", (Option<String>) null, (-841L));
//      applicationStoreInfo0.path();
//      assertEquals((-841L), applicationStoreInfo0.size());
//      assertEquals(0L, applicationStoreInfo0.copy$default$2());
//  }
//
//  @Test(timeout = 4000)
//  public void test07()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("{!'dmB]|{F(,cW}+=,", 0L, "", (Option<String>) null, 1L);
//      long long0 = applicationStoreInfo0.lastAccess();
//      assertEquals(1L, applicationStoreInfo0.copy$default$5());
//      assertEquals("", applicationStoreInfo0.copy$default$3());
//      assertEquals("{!'dmB]|{F(,cW}+=,", applicationStoreInfo0.path());
//      assertEquals(0L, long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test08()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 1, "7*W[/O2u|}Lp0v", (Option<String>) null, 0L);
//      long long0 = applicationStoreInfo0.lastAccess();
//      assertEquals("", applicationStoreInfo0.path());
//      assertEquals(1L, long0);
//      assertEquals(0L, applicationStoreInfo0.size());
//      assertEquals("7*W[/O2u|}Lp0v", applicationStoreInfo0.appId());
//  }
//
//  @Test(timeout = 4000)
//  public void test09()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 0L, "", (Option<String>) null, 261L);
//      ApplicationStoreInfo applicationStoreInfo1 = applicationStoreInfo0.copy((String) null, (-2451L), (String) null, (Option<String>) null, (-2451L));
//      assertEquals(261L, applicationStoreInfo0.copy$default$5());
//      assertEquals((-2451L), applicationStoreInfo1.lastAccess());
//      assertEquals((-2451L), applicationStoreInfo1.size());
//      assertEquals(0L, applicationStoreInfo0.copy$default$2());
//  }
//
//  @Test(timeout = 4000)
//  public void test10()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("{!'dmB]|{F(,cW}+=,", 0L, "", (Option<String>) null, 1L);
//      long long0 = applicationStoreInfo0.copy$default$5();
//      assertEquals("{!'dmB]|{F(,cW}+=,", applicationStoreInfo0.copy$default$1());
//      assertEquals("", applicationStoreInfo0.copy$default$3());
//      assertEquals(1L, long0);
//      assertEquals(0L, applicationStoreInfo0.copy$default$2());
//  }
//
//  @Test(timeout = 4000)
//  public void test11()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("", (-3449L), "true", (Option<String>) null, (-5L));
//      long long0 = applicationStoreInfo0.copy$default$5();
//      assertEquals((-5L), long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test12()  throws Throwable  {
//      Option<String> option0 = (Option<String>) mock(Option.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null, (String) null, (String) null).when(option0).toString();
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 0L, "", option0, (-4823L));
//      applicationStoreInfo0.copy$default$4();
//      assertEquals(0L, applicationStoreInfo0.copy$default$2());
//      assertEquals((-4823L), applicationStoreInfo0.size());
//  }
//
//  @Test(timeout = 4000)
//  public void test13()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply((String) null, 3914L, (String) null, (Option<String>) null, 0L);
//      applicationStoreInfo0.copy$default$3();
//      assertEquals(3914L, applicationStoreInfo0.lastAccess());
//      assertEquals(0L, applicationStoreInfo0.copy$default$5());
//  }
//
//  @Test(timeout = 4000)
//  public void test14()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("-f~%Nq<h['?dm^e", 1317L, "-f~%Nq<h['?dm^e", (Option<String>) null, 1317L);
//      String string0 = applicationStoreInfo0.copy$default$3();
//      assertEquals("-f~%Nq<h['?dm^e", string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test15()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("", 1L, "", (Option<String>) null, 0L);
//      long long0 = applicationStoreInfo0.copy$default$2();
//      assertEquals(1L, long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test16()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("M<#{qKVWP\"X0q", (-950L), " &^mcJn4]aMxcHs[=", (Option<String>) null, 1L);
//      long long0 = applicationStoreInfo0.copy$default$2();
//      assertEquals((-950L), long0);
//      assertEquals(1L, applicationStoreInfo0.copy$default$5());
//      assertEquals(" &^mcJn4]aMxcHs[=", applicationStoreInfo0.appId());
//      assertEquals("M<#{qKVWP\"X0q", applicationStoreInfo0.copy$default$1());
//  }
//
//  @Test(timeout = 4000)
//  public void test17()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo((String) null, 0L, "", (Option<String>) null, 3343L);
//      String string0 = applicationStoreInfo0.copy$default$1();
//      assertNull(string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test18()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("", 0L, "%Sm9\"Hyin|2ThM", (Option<String>) null, (-240L));
//      String string0 = applicationStoreInfo0.copy$default$1();
//      assertEquals("", string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test19()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("M<#{qKVWP\"X0q", (-950L), " &^mcJn4]aMxcHs[=", (Option<String>) null, 1L);
//      applicationStoreInfo0.canEqual((Object) null);
//      assertEquals(1L, applicationStoreInfo0.copy$default$5());
//      assertEquals(" &^mcJn4]aMxcHs[=", applicationStoreInfo0.appId());
//      assertEquals("M<#{qKVWP\"X0q", applicationStoreInfo0.copy$default$1());
//      assertEquals((-950L), applicationStoreInfo0.copy$default$2());
//  }
//
//  @Test(timeout = 4000)
//  public void test20()  throws Throwable  {
//      Option<String> option0 = (Option<String>) mock(Option.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null, (String) null).when(option0).toString();
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 0L, "", option0, (-4823L));
//      applicationStoreInfo0.attemptId();
//      assertEquals(0L, applicationStoreInfo0.lastAccess());
//      assertEquals((-4823L), applicationStoreInfo0.size());
//  }
//
//  @Test(timeout = 4000)
//  public void test21()  throws Throwable  {
//      Option<String> option0 = (Option<String>) mock(Option.class, new ViolatedAssumptionAnswer());
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("", 1L, (String) null, option0, (-1285L));
//      String string0 = applicationStoreInfo0.appId();
//      assertNull(string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test22()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 0L, "", (Option<String>) null, 240L);
//      applicationStoreInfo0.appId();
//      assertEquals(240L, applicationStoreInfo0.copy$default$5());
//      assertEquals(0L, applicationStoreInfo0.copy$default$2());
//  }
//
//  @Test(timeout = 4000)
//  public void test23()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("M%][E=xuSEZr-yB", (-1L), "V9hy", (Option<String>) null, (-1L));
//      Object object0 = applicationStoreInfo0.productElement(4);
//      assertEquals((-1L), object0);
//  }
//
//  @Test(timeout = 4000)
//  public void test24()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 4208L, "", (Option<String>) null, 0L);
//      applicationStoreInfo0.productElement(3);
//      assertEquals(0L, applicationStoreInfo0.copy$default$5());
//      assertEquals(4208L, applicationStoreInfo0.copy$default$2());
//  }
//
//  @Test(timeout = 4000)
//  public void test25()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 4L, "", (Option<String>) null, 4L);
//      applicationStoreInfo0.productElement(2);
//      assertEquals(4L, applicationStoreInfo0.size());
//      assertEquals(4L, applicationStoreInfo0.lastAccess());
//  }
//
//  @Test(timeout = 4000)
//  public void test26()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 0L, "", (Option<String>) null, 240L);
//      Object object0 = applicationStoreInfo0.productElement(1);
//      assertEquals(0L, object0);
//      assertEquals(240L, applicationStoreInfo0.copy$default$5());
//  }
//
//  @Test(timeout = 4000)
//  public void test27()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 0L, "", (Option<String>) null, 240L);
//      applicationStoreInfo0.productElement(0);
//      assertEquals(240L, applicationStoreInfo0.copy$default$5());
//      assertEquals(0L, applicationStoreInfo0.lastAccess());
//  }
//
//  @Test(timeout = 4000)
//  public void test28()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("VI2Pc]mFyUC^Kc|PVOP", (-222L), "Qw?cN&)}F( 6;", (Option<String>) null, (-222L));
//      long long0 = applicationStoreInfo0.lastAccess();
//      assertEquals((-222L), long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test29()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo((String) null, 1006L, (String) null, (Option<String>) null, 1006L);
//      Option<String> option0 = applicationStoreInfo0.attemptId();
//      assertNull(option0);
//  }
//
//  @Test(timeout = 4000)
//  public void test30()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("J~m;FoM0T)]%UO", 0L, "J~m;FoM0T)]%UO", (Option<String>) null, 0L);
//      boolean boolean0 = applicationStoreInfo0.canEqual(applicationStoreInfo0);
//      assertTrue(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test31()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("ApplicationStoreInfo", 0L, "scala.Predef$Ensuring$", (Option<String>) null, 3446L);
//      long long0 = applicationStoreInfo0.size();
//      assertEquals(3446L, long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test32()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 0L, "scala.Predef$$eq$colon$eq$", (Option<String>) null, 0L);
//      String string0 = applicationStoreInfo0.appId();
//      assertEquals("scala.Predef$$eq$colon$eq$", string0);
//      assertEquals("", applicationStoreInfo0.path());
//  }
//
//  @Test(timeout = 4000)
//  public void test33()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo((String) null, 1006L, (String) null, (Option<String>) null, 1006L);
//      int int0 = applicationStoreInfo0.productArity();
//      assertEquals(5, int0);
//  }
//
//  @Test(timeout = 4000)
//  public void test34()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("", 2275L, "", (Option<String>) null, 2275L);
//      String string0 = applicationStoreInfo0.productPrefix();
//      assertEquals("ApplicationStoreInfo", string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test35()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", 4L, "", (Option<String>) null, 4L);
//      applicationStoreInfo0.productIterator();
//      assertEquals(4L, applicationStoreInfo0.size());
//      assertEquals(5, applicationStoreInfo0.productArity());
//      assertEquals(4L, applicationStoreInfo0.lastAccess());
//  }
//
//  @Test(timeout = 4000)
//  public void test36()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("", (-841L), "", (Option<String>) null, (-841L));
//      String string0 = applicationStoreInfo0.path();
//      assertEquals("", string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test37()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("WS", 23L, "WS", (Option<String>) null, 23L);
//      ApplicationStoreInfo applicationStoreInfo1 = ApplicationStoreInfo.apply("WS", 23L, "WS", (Option<String>) null, (-1579L));
//      boolean boolean0 = applicationStoreInfo0.equals(applicationStoreInfo1);
//      assertFalse(boolean0);
//      assertEquals(23L, applicationStoreInfo1.copy$default$2());
//      assertFalse(applicationStoreInfo1.equals((Object)applicationStoreInfo0));
//      assertEquals(23L, applicationStoreInfo0.copy$default$5());
//  }
//
//  @Test(timeout = 4000)
//  public void test38()  throws Throwable  {
//      Option<String> option0 = (Option<String>) mock(Option.class, new ViolatedAssumptionAnswer());
//      doReturn("R</7RX}/$)T)cS{", "R</7RX}/$)T)cS{", "R</7RX}/$)T)cS{", "R</7RX}/$)T)cS{", "R</7RX}/$)T)cS{").when(option0).toString();
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("R</7RX}/$)T)cS{", (-2586L), "R</7RX}/$)T)cS{", option0, (-2586L));
//      ApplicationStoreInfo applicationStoreInfo1 = ApplicationStoreInfo.apply("R</7RX}/$)T)cS{", (-2586L), "R</7RX}/$)T)cS{", option0, (-2586L));
//      boolean boolean0 = applicationStoreInfo1.equals(applicationStoreInfo0);
//      assertTrue(boolean0);
//      assertEquals((-2586L), applicationStoreInfo1.copy$default$5());
//      assertEquals((-2586L), applicationStoreInfo1.copy$default$2());
//  }
//
//  @Test(timeout = 4000)
//  public void test39()  throws Throwable  {
//      Option<String> option0 = (Option<String>) mock(Option.class, new ViolatedAssumptionAnswer());
//      doReturn("", "", "").when(option0).toString();
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("", (-2576L), "", (Option<String>) null, (-2576L));
//      ApplicationStoreInfo applicationStoreInfo1 = ApplicationStoreInfo.apply("", (-2576L), "", option0, (-2576L));
//      boolean boolean0 = applicationStoreInfo1.equals(applicationStoreInfo0);
//      assertFalse(boolean0);
//      assertEquals((-2576L), applicationStoreInfo1.copy$default$2());
//      assertEquals((-2576L), applicationStoreInfo1.size());
//  }
//
//  @Test(timeout = 4000)
//  public void test40()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("org.apache.spark.deploy.history.ApplicationStoreInfo", (-2763L), "org.apache.spark.deploy.history.ApplicationStoreInfo", (Option<String>) null, (-2763L));
//      ApplicationStoreInfo applicationStoreInfo1 = ApplicationStoreInfo.apply("org.apache.spark.deploy.history.ApplicationStoreInfo", (-2763L), (String) null, (Option<String>) null, (-2763L));
//      boolean boolean0 = applicationStoreInfo0.equals(applicationStoreInfo1);
//      assertFalse(boolean0);
//      assertEquals((-2763L), applicationStoreInfo1.copy$default$2());
//      assertEquals((-2763L), applicationStoreInfo1.copy$default$5());
//  }
//
//  @Test(timeout = 4000)
//  public void test41()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("org.apache.spark.deploy.history.ApplicationStoreInfo", (-2763L), "org.apache.spark.deploy.history.ApplicationStoreInfo", (Option<String>) null, (-2763L));
//      ApplicationStoreInfo applicationStoreInfo1 = ApplicationStoreInfo.apply("org.apache.spark.deploy.history.ApplicationStoreInfo", (-2763L), (String) null, (Option<String>) null, (-2763L));
//      boolean boolean0 = applicationStoreInfo1.equals(applicationStoreInfo0);
//      assertEquals((-2763L), applicationStoreInfo1.copy$default$2());
//      assertFalse(boolean0);
//      assertEquals((-2763L), applicationStoreInfo1.copy$default$5());
//  }
//
//  @Test(timeout = 4000)
//  public void test42()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("WS", 10L, "WS", (Option<String>) null, 10L);
//      ApplicationStoreInfo applicationStoreInfo1 = new ApplicationStoreInfo("WS", 0L, "WS", (Option<String>) null, 10L);
//      boolean boolean0 = applicationStoreInfo1.equals(applicationStoreInfo0);
//      assertFalse(applicationStoreInfo0.equals((Object)applicationStoreInfo1));
//      assertFalse(boolean0);
//      assertEquals(10L, applicationStoreInfo0.size());
//      assertEquals(10L, applicationStoreInfo0.lastAccess());
//  }
//
//  @Test(timeout = 4000)
//  public void test43()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply((String) null, 24L, "WS", (Option<String>) null, 24L);
//      ApplicationStoreInfo applicationStoreInfo1 = new ApplicationStoreInfo("WS", 24L, "WS", (Option<String>) null, 24L);
//      boolean boolean0 = applicationStoreInfo1.equals(applicationStoreInfo0);
//      assertFalse(boolean0);
//      assertEquals(24L, applicationStoreInfo0.size());
//      assertEquals(24L, applicationStoreInfo0.lastAccess());
//  }
//
//  @Test(timeout = 4000)
//  public void test44()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply((String) null, 30L, (String) null, (Option<String>) null, 30L);
//      ApplicationStoreInfo applicationStoreInfo1 = applicationStoreInfo0.copy((String) null, 30L, (String) null, (Option<String>) null, 30L);
//      boolean boolean0 = applicationStoreInfo1.equals(applicationStoreInfo0);
//      assertTrue(boolean0);
//      assertEquals(30L, applicationStoreInfo1.copy$default$5());
//      assertEquals(30L, applicationStoreInfo1.copy$default$2());
//  }
//
//  @Test(timeout = 4000)
//  public void test45()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("org.apache.spark.deploy.history.ApplicationStoreInfo", (-2763L), "org.apache.spark.deploy.history.ApplicationStoreInfo", (Option<String>) null, (-2763L));
//      ApplicationStoreInfo applicationStoreInfo1 = new ApplicationStoreInfo((String) null, (-2763L), (String) null, (Option<String>) null, (-2763L));
//      boolean boolean0 = applicationStoreInfo1.equals(applicationStoreInfo0);
//      assertEquals((-2763L), applicationStoreInfo0.copy$default$2());
//      assertEquals((-2763L), applicationStoreInfo0.size());
//      assertFalse(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test46()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply((String) null, 1864L, (String) null, (Option<String>) null, 1864L);
//      boolean boolean0 = applicationStoreInfo0.equals((Object) null);
//      assertFalse(boolean0);
//      assertEquals(1864L, applicationStoreInfo0.copy$default$2());
//      assertEquals(1864L, applicationStoreInfo0.copy$default$5());
//  }
//
//  @Test(timeout = 4000)
//  public void test47()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("WS", 44L, "WS", (Option<String>) null, 44L);
//      boolean boolean0 = applicationStoreInfo0.equals(applicationStoreInfo0);
//      assertTrue(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test48()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("", (-841L), "", (Option<String>) null, (-841L));
//      // Undeclared exception!
//      try { 
//        applicationStoreInfo0.productElement(20);
//        fail("Expecting exception: IndexOutOfBoundsException");
//      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // java.lang.Integer@0000000002
//         //
//         verifyException("org.apache.spark.deploy.history.ApplicationStoreInfo", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test49()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("", 1L, "", (Option<String>) null, 1L);
//      ApplicationStoreInfo.unapply(applicationStoreInfo0);
//      assertEquals(1L, applicationStoreInfo0.size());
//      assertEquals(1L, applicationStoreInfo0.lastAccess());
//      assertEquals(1L, applicationStoreInfo0.copy$default$2());
//  }
//
//  @Test(timeout = 4000)
//  public void test50()  throws Throwable  {
//      Option<Tuple5<String, Object, String, Option<String>, Object>> option0 = ApplicationStoreInfo.unapply((ApplicationStoreInfo) null);
//      assertNotNull(option0);
//  }
//
//  @Test(timeout = 4000)
//  public void test51()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("", 0L, "", (Option<String>) null, 0L);
//      String string0 = applicationStoreInfo0.copy$default$3();
//      assertEquals("", string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test52()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("Od:=OU*^D3!FS~LMUll", (-2118L), "ApplicationStoreInfo", (Option<String>) null, (-2118L));
//      String string0 = applicationStoreInfo0.copy$default$1();
//      assertEquals("Od:=OU*^D3!FS~LMUll", string0);
//      assertEquals((-2118L), applicationStoreInfo0.copy$default$2());
//      assertEquals("ApplicationStoreInfo", applicationStoreInfo0.appId());
//      assertEquals((-2118L), applicationStoreInfo0.copy$default$5());
//  }
//
//  @Test(timeout = 4000)
//  public void test53()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("", 0L, "", (Option<String>) null, 0L);
//      long long0 = applicationStoreInfo0.copy$default$5();
//      assertEquals(0L, long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test54()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("J~m;FoM0T)]%UO", 0L, "J~m;FoM0T)]%UO", (Option<String>) null, 0L);
//      long long0 = applicationStoreInfo0.copy$default$2();
//      assertEquals(0L, long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test55()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = new ApplicationStoreInfo("org.apache.spark.deploy.history.ApplicationStoreInfo", 2423L, "org.apache.spark.deploy.history.ApplicationStoreInfo", (Option<String>) null, 2423L);
//      applicationStoreInfo0.hashCode();
//      assertEquals(2423L, applicationStoreInfo0.size());
//      assertEquals(2423L, applicationStoreInfo0.copy$default$2());
//  }
//
//  @Test(timeout = 4000)
//  public void test56()  throws Throwable  {
//      Function1<String, Function1<Object, Function1<String, Function1<Option<String>, Function1<Object, ApplicationStoreInfo>>>>> function1_0 = ApplicationStoreInfo.curried();
//      assertNotNull(function1_0);
//  }
//
//  @Test(timeout = 4000)
//  public void test57()  throws Throwable  {
//      Function1<Tuple5<String, Object, String, Option<String>, Object>, ApplicationStoreInfo> function1_0 = ApplicationStoreInfo.tupled();
//      assertNotNull(function1_0);
//  }
//
//  @Test(timeout = 4000)
//  public void test58()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("^", (-1L), "^", (Option<String>) null, (-1L));
//      String string0 = applicationStoreInfo0.toString();
//      assertEquals("ApplicationStoreInfo(^,-1,^,null,-1)", string0);
//      assertEquals(5, applicationStoreInfo0.productArity());
//  }
//
//  @Test(timeout = 4000)
//  public void test59()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("scala.collection.Iterator$class", 2423L, "scala.collection.Iterator$class", (Option<String>) null, 2423L);
//      applicationStoreInfo0.copy$default$4();
//      assertEquals(2423L, applicationStoreInfo0.size());
//      assertEquals(2423L, applicationStoreInfo0.lastAccess());
//  }
//
//  @Test(timeout = 4000)
//  public void test60()  throws Throwable  {
//      ApplicationStoreInfo applicationStoreInfo0 = ApplicationStoreInfo.apply("WS", 0L, "WS", (Option<String>) null, 0L);
//      ApplicationStoreInfo applicationStoreInfo1 = applicationStoreInfo0.copy("WS", 0L, "WS", (Option<String>) null, 0L);
//      boolean boolean0 = applicationStoreInfo1.equals(applicationStoreInfo0);
//      assertTrue(boolean0);
//  }
}
