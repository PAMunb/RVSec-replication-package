/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 23:47:28 GMT 2022
 */

package org.apache.spark.scheduler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.spark.scheduler.FIFOSchedulingAlgorithm;
import org.apache.spark.scheduler.Schedulable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FIFOSchedulingAlgorithm_ESTest extends FIFOSchedulingAlgorithm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FIFOSchedulingAlgorithm fIFOSchedulingAlgorithm0 = new FIFOSchedulingAlgorithm();
      assertNotNull(fIFOSchedulingAlgorithm0);
      
      Schedulable schedulable0 = mock(Schedulable.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(schedulable0).priority();
      doReturn(0).when(schedulable0).stageId();
      Schedulable schedulable1 = mock(Schedulable.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(schedulable1).priority();
      doReturn(0).when(schedulable1).stageId();
      boolean boolean0 = fIFOSchedulingAlgorithm0.comparator(schedulable0, schedulable1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FIFOSchedulingAlgorithm fIFOSchedulingAlgorithm0 = new FIFOSchedulingAlgorithm();
      assertNotNull(fIFOSchedulingAlgorithm0);
      
      // Undeclared exception!
      try { 
        fIFOSchedulingAlgorithm0.comparator((Schedulable) null, (Schedulable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.scheduler.FIFOSchedulingAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FIFOSchedulingAlgorithm fIFOSchedulingAlgorithm0 = new FIFOSchedulingAlgorithm();
      assertNotNull(fIFOSchedulingAlgorithm0);
      
      Schedulable schedulable0 = mock(Schedulable.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(schedulable0).priority();
      doReturn(2779, 16).when(schedulable0).stageId();
      boolean boolean0 = fIFOSchedulingAlgorithm0.comparator(schedulable0, schedulable0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FIFOSchedulingAlgorithm fIFOSchedulingAlgorithm0 = new FIFOSchedulingAlgorithm();
      Schedulable schedulable0 = mock(Schedulable.class, new ViolatedAssumptionAnswer());
      doReturn((-555), 1).when(schedulable0).priority();
      boolean boolean0 = fIFOSchedulingAlgorithm0.comparator(schedulable0, schedulable0);
      assertTrue(boolean0);
  }
}
