/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:40:06 GMT 2022
 */

package org.apache.spark.deploy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URI;
import org.apache.spark.deploy.ApplicationDescription;
import org.apache.spark.deploy.Command;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import scala.Function1;
import scala.Option;
import scala.ScalaReflectionException;
import scala.Tuple10;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ApplicationDescription_ESTest extends ApplicationDescription_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("scala.util.Right$", (Option<Object>) null, 2180, command0, "scala.util.Right$", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "scala.util.Right$");
      applicationDescription0.user();
      assertEquals(2180, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("./VC&.Gkjn8 J<", (Option<Object>) null, 2180, (Command) null, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "");
      String string0 = applicationDescription0.user();
      assertEquals("./VC&.Gkjn8 J<", applicationDescription0.name());
      assertEquals("", string0);
      assertEquals("", applicationDescription0.appUiUrl());
      assertEquals(2180, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "xj9o82");
      String string0 = applicationDescription0.name();
      assertEquals("@|jT#YJd.^j$i>", string0);
      assertEquals(0, applicationDescription0.copy$default$3());
      assertEquals("xj9o82", applicationDescription0.user());
      assertEquals("@|jT#YJd.^j$i>", applicationDescription0.appUiUrl());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("", (Option<Object>) null, (-889275714), (Command) null, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "");
      applicationDescription0.name();
      assertEquals((-889275714), applicationDescription0.memoryPerExecutorMB());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = new ApplicationDescription("scala.util.Right$", (Option<Object>) null, 5, command0, "<unknown>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "scala.util.Right$");
      int int0 = applicationDescription0.memoryPerExecutorMB();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("0$WBEGx)T^(EgP)M)", (Option<Object>) null, (-3835), (Command) null, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "");
      int int0 = applicationDescription0.memoryPerExecutorMB();
      assertEquals("", applicationDescription0.copy$default$10());
      assertEquals("", applicationDescription0.appUiUrl());
      assertEquals((-3835), int0);
      assertEquals("0$WBEGx)T^(EgP)M)", applicationDescription0.copy$default$1());
  }

//  @Test(timeout = 4000)
//  public void test06()  throws Throwable  {
//      ScalaReflectionException. scalaReflectionException_0 = ScalaReflectionException..MODULE$;
//      ScalaReflectionException scalaReflectionException0 = scalaReflectionException_0.apply("/Ksm*");
//      Option<String> option0 = scalaReflectionException_0.unapply(scalaReflectionException0);
//      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("/Ksm*", (Option<Object>) null, (-1486), (Command) null, "/Ksm*", (Option<URI>) null, option0, (Option<Object>) null, (Option<Object>) null, "zero step");
//      Option<String> option1 = applicationDescription0.eventLogCodec();
//      assertEquals("/Ksm*", applicationDescription0.appUiUrl());
//      assertNotNull(option1);
//      assertEquals("zero step", applicationDescription0.user());
//      assertEquals((-1486), applicationDescription0.memoryPerExecutorMB());
//      assertEquals("/Ksm*", applicationDescription0.name());
//  }

//  @Test(timeout = 4000)
//  public void test07()  throws Throwable  {
//      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("scala.collection.immutable.List$", (Option<Object>) null, (-32743), (Command) null, "b^Wm04&`5,uSZ?Ehi4", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "CVNzOo");
//      ScalaReflectionException. scalaReflectionException_0 = ScalaReflectionException..MODULE$;
//      ScalaReflectionException scalaReflectionException0 = scalaReflectionException_0.apply((String) null);
//      Option<String> option0 = scalaReflectionException_0.unapply(scalaReflectionException0);
//      ApplicationDescription applicationDescription1 = applicationDescription0.copy("scala.collection.immutable.List$", (Option<Object>) null, 1901, (Command) null, "b^Wm04&`5,uSZ?Ehi4", (Option<URI>) null, option0, (Option<Object>) null, (Option<Object>) null, "");
//      Option<String> option1 = applicationDescription1.copy$default$7();
//      assertNotNull(option1);
//      assertEquals(1901, applicationDescription1.copy$default$3());
//      assertEquals((-32743), applicationDescription0.memoryPerExecutorMB());
//      assertEquals("CVNzOo", applicationDescription0.copy$default$10());
//      assertEquals("", applicationDescription1.copy$default$10());
//      assertEquals("scala.collection.immutable.List$", applicationDescription1.copy$default$1());
//      assertEquals("b^Wm04&`5,uSZ?Ehi4", applicationDescription1.copy$default$5());
//      assertEquals("scala.collection.immutable.List$", applicationDescription0.copy$default$1());
//      assertEquals("b^Wm04&`5,uSZ?Ehi4", applicationDescription0.appUiUrl());
//  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = new ApplicationDescription("c|c4Z&Q]b_WS]q", (Option<Object>) null, (-2015), command0, (String) null, (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "");
      String string0 = applicationDescription0.copy$default$5();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("scala.", (Option<Object>) null, 2180, (Command) null, "scala.", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "");
      ApplicationDescription applicationDescription1 = applicationDescription0.copy("", (Option<Object>) null, (-128), (Command) null, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "scala.collection.convert.Wrappers$JMapWrapper$");
      String string0 = applicationDescription1.copy$default$5();
      assertEquals("scala.", applicationDescription0.name());
      assertEquals((-128), applicationDescription1.copy$default$3());
      assertEquals("", applicationDescription1.name());
      assertEquals("", applicationDescription0.user());
      assertEquals("scala.", applicationDescription0.appUiUrl());
      assertEquals(2180, applicationDescription0.copy$default$3());
      assertEquals("scala.collection.convert.Wrappers$JMapWrapper$", applicationDescription1.copy$default$10());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply((String) null, (Option<Object>) null, 2169, command0, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "gY_Hy");
      int int0 = applicationDescription0.copy$default$3();
      assertEquals("", applicationDescription0.appUiUrl());
      assertEquals("gY_Hy", applicationDescription0.user());
      assertEquals(2169, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ApplicationDescription applicationDescription0 = new ApplicationDescription((String) null, (Option<Object>) null, (-1380), (Command) null, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, ")");
      int int0 = applicationDescription0.copy$default$3();
      assertEquals((-1380), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply((String) null, (Option<Object>) null, 2180, command0, (String) null, (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, (String) null);
      applicationDescription0.copy$default$10();
      assertEquals(2180, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("", (Option<Object>) null, 2180, command0, "<unknown>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "");
      String string0 = applicationDescription0.copy$default$10();
      assertEquals("<unknown>", applicationDescription0.appUiUrl());
      assertEquals(2180, applicationDescription0.memoryPerExecutorMB());
      assertEquals("", applicationDescription0.copy$default$1());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply((String) null, (Option<Object>) null, 2169, command0, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "nK5c?$]2^N Tz9.i1");
      String string0 = applicationDescription0.copy$default$1();
      assertNull(string0);
      assertEquals("", applicationDescription0.copy$default$5());
      assertEquals(2169, applicationDescription0.copy$default$3());
      assertEquals("nK5c?$]2^N Tz9.i1", applicationDescription0.copy$default$10());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("", (Option<Object>) null, 1, command0, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, (String) null);
      String string0 = applicationDescription0.copy$default$1();
      assertEquals(1, applicationDescription0.copy$default$3());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("Ud@rC0BX@", (Option<Object>) null, 10, command0, "scala.util.Right$", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "5>7AkgY4Dq4O");
      String string0 = applicationDescription0.appUiUrl();
      assertEquals("Ud@rC0BX@", applicationDescription0.name());
      assertEquals(10, applicationDescription0.copy$default$3());
      assertEquals("5>7AkgY4Dq4O", applicationDescription0.user());
      assertEquals("scala.util.Right$", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply((String) null, (Option<Object>) null, 2169, command0, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "nK5c?$]2^N Tz9.i1");
      String string0 = applicationDescription0.appUiUrl();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(2169, applicationDescription0.memoryPerExecutorMB());
      assertEquals("nK5c?$]2^N Tz9.i1", applicationDescription0.user());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT#YJd.^j$i>");
      int int0 = applicationDescription0.memoryPerExecutorMB();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ApplicationDescription applicationDescription0 = new ApplicationDescription((String) null, (Option<Object>) null, (-1380), (Command) null, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, ")");
      Option<Object> option0 = applicationDescription0.coresPerExecutor();
      assertNull(option0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ApplicationDescription applicationDescription0 = new ApplicationDescription((String) null, (Option<Object>) null, 1195, (Command) null, (String) null, (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, (String) null);
      String string0 = applicationDescription0.name();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("scala.util.Right$", (Option<Object>) null, 2180, command0, "scala.util.Right$", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "scala.util.Right$");
      applicationDescription0.maxCores();
      assertEquals(2180, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("]*u&&byu9E$H9", (Option<Object>) null, 2689, command0, "w;KyW,I;", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "w;KyW,I;");
      applicationDescription0.initialExecutorLimit();
      assertEquals(2689, applicationDescription0.memoryPerExecutorMB());
      assertEquals("w;KyW,I;", applicationDescription0.appUiUrl());
      assertEquals("w;KyW,I;", applicationDescription0.user());
      assertEquals("]*u&&byu9E$H9", applicationDescription0.copy$default$1());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("", (Option<Object>) null, 1195, (Command) null, "scala.collection.immutable.Vector", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, (String) null);
      String string0 = applicationDescription0.user();
      assertEquals("scala.collection.immutable.Vector", applicationDescription0.appUiUrl());
      assertNull(string0);
      assertEquals(1195, applicationDescription0.copy$default$3());
      assertEquals("", applicationDescription0.copy$default$1());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("T!iD\"4l.tPJC|E", (Option<Object>) null, (-828), (Command) null, (String) null, (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, (String) null);
      String string0 = applicationDescription0.appUiUrl();
      assertNull(string0);
      assertEquals((-828), applicationDescription0.memoryPerExecutorMB());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "xj9o82");
      int int0 = applicationDescription0.productArity();
      assertEquals("@|jT#YJd.^j$i>", applicationDescription0.copy$default$5());
      assertEquals("xj9o82", applicationDescription0.copy$default$10());
      assertEquals(10, int0);
      assertEquals(0, applicationDescription0.memoryPerExecutorMB());
      assertEquals("@|jT#YJd.^j$i>", applicationDescription0.copy$default$1());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT#YJd.^j$i>");
      applicationDescription0.command();
      assertEquals(0, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("./VC&.Gkjn8 J<", (Option<Object>) null, 2180, (Command) null, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "");
      applicationDescription0.eventLogCodec();
      assertEquals(2180, applicationDescription0.memoryPerExecutorMB());
      assertEquals("", applicationDescription0.user());
      assertEquals("./VC&.Gkjn8 J<", applicationDescription0.copy$default$1());
      assertEquals("", applicationDescription0.copy$default$5());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = new ApplicationDescription("K'qDkI ", (Option<Object>) null, (-1756), command0, "K'qDkI ", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "");
      Option<URI> option0 = applicationDescription0.eventLogDir();
      assertNull(option0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("Q1Qds", (Option<Object>) null, 2180, (Command) null, "Q1Qds", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "Q1Qds");
      boolean boolean0 = applicationDescription0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(2180, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT#YJd.^j$i>");
      applicationDescription0.productElement(9);
      assertEquals(0, applicationDescription0.memoryPerExecutorMB());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("C0y+c|", (Option<Object>) null, 8, (Command) null, "C0y+c|", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "C0y+c|");
      Object object0 = applicationDescription0.productElement(8);
      assertEquals(8, applicationDescription0.copy$default$3());
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "xj9o82");
      applicationDescription0.productElement(7);
      assertEquals("@|jT#YJd.^j$i>", applicationDescription0.copy$default$1());
      assertEquals("@|jT#YJd.^j$i>", applicationDescription0.copy$default$5());
      assertEquals("xj9o82", applicationDescription0.copy$default$10());
      assertEquals(0, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 6, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT#YJd.^j$i>");
      applicationDescription0.productElement(6);
      assertEquals(6, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT#YJd.^j$i>");
      applicationDescription0.productElement(5);
      assertEquals(0, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@s#%Jdkrjz", (Option<Object>) null, 32, (Command) null, "@s#%Jdkrjz", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@s#%Jdkrjz");
      Object object0 = applicationDescription0.productElement(4);
      assertNotNull(object0);
      assertEquals(32, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ApplicationDescription applicationDescription0 = new ApplicationDescription("@|jT#YJd.^j$i>", (Option<Object>) null, 20, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "xz9o82");
      Object object0 = applicationDescription0.productElement(3);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ApplicationDescription applicationDescription0 = new ApplicationDescription("@sc(%Jdkjz", (Option<Object>) null, 2, (Command) null, "@sc(%Jdkjz", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@sc(%Jdkjz");
      Object object0 = applicationDescription0.productElement(2);
      assertNotNull(object0);
      assertEquals(2, object0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@sc(%Jdkjz", (Option<Object>) null, 1, (Command) null, "@sc(%Jdkjz", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@sc(%Jdkjz");
      Object object0 = applicationDescription0.productElement(1);
      assertNull(object0);
      assertEquals(1, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("", (Option<Object>) null, 55, (Command) null, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "");
      // Undeclared exception!
      try { 
        applicationDescription0.productElement(55);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // java.lang.Integer@0000000004
         //
         verifyException("org.apache.spark.deploy.ApplicationDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT#YJd.^j$i>");
      Object object0 = applicationDescription0.productElement(0);
      assertEquals(0, applicationDescription0.copy$default$3());
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT?YJd.^j?i>", (Option<Object>) null, (-41), (Command) null, "@|jT?YJd.^j?i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT?YJd.^j?i>");
      ApplicationDescription.unapply(applicationDescription0);
      assertEquals((-41), applicationDescription0.copy$default$3());
      assertEquals((-41), applicationDescription0.memoryPerExecutorMB());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("", (Option<Object>) null, 55, (Command) null, "", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "");
      applicationDescription0.copy$default$6();
      assertEquals(55, applicationDescription0.memoryPerExecutorMB());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("C0y+c|", (Option<Object>) null, (-2218), (Command) null, "C0y+c|", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "C0y+c|");
      String string0 = applicationDescription0.productPrefix();
      assertEquals("ApplicationDescription", string0);
      assertEquals((-2218), applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Command command0 = mock(Command.class, new ViolatedAssumptionAnswer());
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("|(?8cDXR}X2,h", (Option<Object>) null, 2180, command0, "|(?8cDXR}X2,h", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "|(?8cDXR}X2,h");
      applicationDescription0.copy$default$1();
      assertEquals(2180, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Function1<Tuple10<String, Option<Object>, Object, Command, String, Option<URI>, Option<String>, Option<Object>, Option<Object>, String>, ApplicationDescription> function1_0 = ApplicationDescription.tupled();
      assertNotNull(function1_0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply((String) null, (Option<Object>) null, (-4), (Command) null, (String) null, (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, (String) null);
      applicationDescription0.copy$default$8();
      assertEquals((-4), applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT#YJd.^j$i>");
      applicationDescription0.copy$default$2();
      assertEquals(0, applicationDescription0.memoryPerExecutorMB());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT#YJd.^j$i>");
      applicationDescription0.copy$default$10();
      assertEquals(0, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@j#YJdkrji7", (Option<Object>) null, 32, (Command) null, "@j#YJdkrji7", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@j#YJdkrji7");
      applicationDescription0.canEqual((Object) null);
      assertEquals(32, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@jT#YJdkrjzi7", (Option<Object>) null, 32, (Command) null, "@jT#YJdkrjzi7", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@jT#YJdkrjzi7");
      String string0 = applicationDescription0.toString();
      assertEquals("ApplicationDescription(@jT#YJdkrjzi7)", string0);
      assertEquals(32, applicationDescription0.memoryPerExecutorMB());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Function1<String, Function1<Option<Object>, Function1<Object, Function1<Command, Function1<String, Function1<Option<URI>, Function1<Option<String>, Function1<Option<Object>, Function1<Option<Object>, Function1<String, ApplicationDescription>>>>>>>>>> function1_0 = ApplicationDescription.curried();
      assertNotNull(function1_0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "xj9o82");
      int int0 = applicationDescription0.copy$default$3();
      assertEquals(0, int0);
      assertEquals("@|jT#YJd.^j$i>", applicationDescription0.name());
      assertEquals("xj9o82", applicationDescription0.user());
      assertEquals("@|jT#YJd.^j$i>", applicationDescription0.appUiUrl());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Option<Tuple10<String, Option<Object>, Object, Command, String, Option<URI>, Option<String>, Option<Object>, Option<Object>, String>> option0 = ApplicationDescription.unapply((ApplicationDescription) null);
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("ApplicationDescription(", (Option<Object>) null, 62, (Command) null, "ApplicationDescription(", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "ApplicationDescription(");
      applicationDescription0.copy$default$7();
      assertEquals(62, applicationDescription0.memoryPerExecutorMB());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT?YJd.^j?i>", (Option<Object>) null, (-41), (Command) null, "@|jT?YJd.^j?i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT?YJd.^j?i>");
      applicationDescription0.copy$default$4();
      assertEquals((-41), applicationDescription0.memoryPerExecutorMB());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ApplicationDescription applicationDescription0 = new ApplicationDescription("org.apache.spark.deploy.ApplicationDescription", (Option<Object>) null, 1756, (Command) null, "scala.collection.generic.GenMapFactory", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "org.apache.spark.deploy.ApplicationDescription");
      String string0 = applicationDescription0.copy$default$5();
      assertEquals("scala.collection.generic.GenMapFactory", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("K", (Option<Object>) null, 32, (Command) null, "K", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "K");
      applicationDescription0.productIterator();
      assertEquals(10, applicationDescription0.productArity());
      assertEquals(32, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT#YJd.^j$i>");
      applicationDescription0.hashCode();
      assertEquals(0, applicationDescription0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@jT#YJdkrjzi7", (Option<Object>) null, 32, (Command) null, "@jT#YJdkrjzi7", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@jT#YJdkrjzi7");
      applicationDescription0.copy$default$9();
      assertEquals(32, applicationDescription0.memoryPerExecutorMB());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Option<Object> option0 = ApplicationDescription.apply$default$8();
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Option<URI> option0 = ApplicationDescription.$lessinit$greater$default$6();
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Option<Object> option0 = ApplicationDescription.$lessinit$greater$default$8();
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Option<String> option0 = ApplicationDescription.$lessinit$greater$default$7();
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String string0 = ApplicationDescription.apply$default$10();
      assertEquals("pedro", string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String string0 = ApplicationDescription.$lessinit$greater$default$10();
      assertEquals("pedro", string0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Option<Object> option0 = ApplicationDescription.apply$default$9();
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Option<URI> option0 = ApplicationDescription.apply$default$6();
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ApplicationDescription applicationDescription0 = ApplicationDescription.apply("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT#YJd.^j$i>");
      ApplicationDescription applicationDescription1 = applicationDescription0.copy("@|jT#YJd.^j$i>", (Option<Object>) null, 0, (Command) null, "@|jT#YJd.^j$i>", (Option<URI>) null, (Option<String>) null, (Option<Object>) null, (Option<Object>) null, "@|jT#YJd.^j$i>");
      assertTrue(applicationDescription1.equals((Object)applicationDescription0));
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Option<String> option0 = ApplicationDescription.apply$default$7();
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Option<Object> option0 = ApplicationDescription.$lessinit$greater$default$9();
      assertNotNull(option0);
  }
}
