/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:41:32 GMT 2022
 */

package org.apache.spark.api.python;

//import org.junit.Test;
//import static org.junit.Assert.*;
//import static org.evosuite.shaded.org.mockito.Mockito.*;
//import static org.evosuite.runtime.EvoAssertions.*;
//import org.apache.hadoop.io.Writable;
//import org.apache.spark.api.python.WritableToJavaConverter;
//import org.apache.spark.broadcast.Broadcast;
//import org.apache.spark.util.SerializableConfiguration;
//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
//import org.evosuite.runtime.ViolatedAssumptionAnswer;
//import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WritableToJavaConverter_ESTest { //extends WritableToJavaConverter_ESTest_scaffolding {

//  @Test(timeout = 4000)
//  public void test0()  throws Throwable  {
//      Broadcast<SerializableConfiguration> broadcast0 = (Broadcast<SerializableConfiguration>) mock(Broadcast.class, new ViolatedAssumptionAnswer());
//      WritableToJavaConverter writableToJavaConverter0 = new WritableToJavaConverter(broadcast0);
//      Object object0 = writableToJavaConverter0.convert((Object) null);
//      assertNull(object0);
//  }
//
//  @Test(timeout = 4000)
//  public void test1()  throws Throwable  {
//      Writable writable0 = mock(Writable.class, new ViolatedAssumptionAnswer());
//      Broadcast<SerializableConfiguration> broadcast0 = (Broadcast<SerializableConfiguration>) mock(Broadcast.class, new ViolatedAssumptionAnswer());
//      doReturn((Object) null).when(broadcast0).value();
//      WritableToJavaConverter writableToJavaConverter0 = new WritableToJavaConverter(broadcast0);
//      // Undeclared exception!
//      try { 
//        writableToJavaConverter0.convert(writable0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.spark.api.python.WritableToJavaConverter", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test2()  throws Throwable  {
//      Broadcast<SerializableConfiguration> broadcast0 = (Broadcast<SerializableConfiguration>) mock(Broadcast.class, new ViolatedAssumptionAnswer());
//      WritableToJavaConverter writableToJavaConverter0 = new WritableToJavaConverter(broadcast0);
//      Object object0 = writableToJavaConverter0.convert(writableToJavaConverter0);
//      assertSame(object0, writableToJavaConverter0);
//  }
//
//  @Test(timeout = 4000)
//  public void test3()  throws Throwable  {
//      SerializableConfiguration serializableConfiguration0 = mock(SerializableConfiguration.class, new ViolatedAssumptionAnswer());
//      Broadcast<SerializableConfiguration> broadcast0 = (Broadcast<SerializableConfiguration>) mock(Broadcast.class, new ViolatedAssumptionAnswer());
//      doReturn((Object) null).when(broadcast0).value();
//      WritableToJavaConverter writableToJavaConverter0 = new WritableToJavaConverter(broadcast0);
//      Writable writable0 = mock(Writable.class, new ViolatedAssumptionAnswer());
//      // Undeclared exception!
//      try { 
//        writableToJavaConverter0.org$apache$spark$api$python$WritableToJavaConverter$$convertWritable(writable0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.spark.api.python.WritableToJavaConverter", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test4()  throws Throwable  {
//      Broadcast<SerializableConfiguration> broadcast0 = (Broadcast<SerializableConfiguration>) mock(Broadcast.class, new ViolatedAssumptionAnswer());
//      WritableToJavaConverter writableToJavaConverter0 = new WritableToJavaConverter(broadcast0);
//      Object object0 = writableToJavaConverter0.org$apache$spark$api$python$WritableToJavaConverter$$convertWritable((Writable) null);
//      assertNull(object0);
//  }
}
