/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 00:02:44 GMT 2022
 */

package org.apache.spark.rdd;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.spark.rdd.CheckpointRDDPartition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CheckpointRDDPartition_ESTest extends CheckpointRDDPartition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CheckpointRDDPartition checkpointRDDPartition0 = new CheckpointRDDPartition(4549);
      int int0 = checkpointRDDPartition0.index();
      assertEquals(4549, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CheckpointRDDPartition checkpointRDDPartition0 = new CheckpointRDDPartition((-3329));
      int int0 = checkpointRDDPartition0.index();
      assertEquals((-3329), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CheckpointRDDPartition checkpointRDDPartition0 = new CheckpointRDDPartition(0);
      boolean boolean0 = checkpointRDDPartition0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CheckpointRDDPartition checkpointRDDPartition0 = new CheckpointRDDPartition(0);
      int int0 = checkpointRDDPartition0.index();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CheckpointRDDPartition checkpointRDDPartition0 = new CheckpointRDDPartition(0);
      checkpointRDDPartition0.hashCode();
      assertEquals(0, checkpointRDDPartition0.index());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CheckpointRDDPartition checkpointRDDPartition0 = new CheckpointRDDPartition(0);
      boolean boolean0 = checkpointRDDPartition0.equals(checkpointRDDPartition0);
      assertTrue(boolean0);
  }
}
