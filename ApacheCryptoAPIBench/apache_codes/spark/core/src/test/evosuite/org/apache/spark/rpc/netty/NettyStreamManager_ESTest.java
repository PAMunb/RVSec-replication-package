/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:18:39 GMT 2022
 */

package org.apache.spark.rpc.netty;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.spark.network.util.TransportConf;
import org.apache.spark.rpc.RpcAddress;
import org.apache.spark.rpc.netty.NettyRpcEnv;
import org.apache.spark.rpc.netty.NettyStreamManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NettyStreamManager_ESTest extends NettyStreamManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NettyRpcEnv nettyRpcEnv0 = mock(NettyRpcEnv.class, new ViolatedAssumptionAnswer());
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager(nettyRpcEnv0);
      nettyStreamManager0.validateDirectoryUri("");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn("+{DSq=Jc+mt", (String) null).when(file0).getName();
      RpcAddress rpcAddress0 = mock(RpcAddress.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(rpcAddress0).toSparkURL();
      NettyRpcEnv nettyRpcEnv0 = mock(NettyRpcEnv.class, new ViolatedAssumptionAnswer());
      doReturn(rpcAddress0).when(nettyRpcEnv0).address();
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager(nettyRpcEnv0);
      // Undeclared exception!
      try { 
        nettyStreamManager0.addFile(file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.util.Utils$", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager((NettyRpcEnv) null);
      // Undeclared exception!
      try { 
        nettyStreamManager0.validateDirectoryUri((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("scala.collection.immutable.StringLike$class", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager((NettyRpcEnv) null);
      // Undeclared exception!
      try { 
        nettyStreamManager0.openStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("scala.collection.immutable.StringLike$class", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager((NettyRpcEnv) null);
      // Undeclared exception!
      try { 
        nettyStreamManager0.validateDirectoryUri("/files/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // requirement failed: Directory URI cannot be /files nor /jars.
         //
         verifyException("scala.Predef$", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RpcAddress rpcAddress0 = mock(RpcAddress.class, new ViolatedAssumptionAnswer());
      doReturn("").when(rpcAddress0).toSparkURL();
      NettyRpcEnv nettyRpcEnv0 = mock(NettyRpcEnv.class, new ViolatedAssumptionAnswer());
      doReturn(rpcAddress0).when(nettyRpcEnv0).address();
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager(nettyRpcEnv0);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn("", "").when(file0).getName();
      doReturn(false).when(file0).isFile();
      doReturn((String) null).when(file0).toString();
      nettyStreamManager0.addJar(file0);
      nettyStreamManager0.openStream("/jars/");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RpcAddress rpcAddress0 = mock(RpcAddress.class, new ViolatedAssumptionAnswer());
      doReturn("").when(rpcAddress0).toSparkURL();
      NettyRpcEnv nettyRpcEnv0 = mock(NettyRpcEnv.class, new ViolatedAssumptionAnswer());
      doReturn(rpcAddress0).when(nettyRpcEnv0).address();
      doReturn((TransportConf) null).when(nettyRpcEnv0).transportConf();
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager(nettyRpcEnv0);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn("", "").when(file0).getName();
      doReturn(true).when(file0).isFile();
      doReturn(0L).when(file0).length();
      doReturn((String) null, (String) null).when(file0).toString();
      nettyStreamManager0.addJar(file0);
      nettyStreamManager0.openStream("/jars/");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager((NettyRpcEnv) null);
      nettyStreamManager0.openStream("/jars/");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager((NettyRpcEnv) null);
      nettyStreamManager0.openStream("/files/");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager((NettyRpcEnv) null);
      // Undeclared exception!
      try { 
        nettyStreamManager0.openStream("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // [Ljava.lang.String;@0000000003 (of class [Ljava.lang.String;)
         //
         verifyException("org.apache.spark.rpc.netty.NettyStreamManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn("+{DSq=Jc+mt").when(file0).getName();
      NettyRpcEnv nettyRpcEnv0 = mock(NettyRpcEnv.class, new ViolatedAssumptionAnswer());
      doReturn((RpcAddress) null).when(nettyRpcEnv0).address();
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager(nettyRpcEnv0);
      // Undeclared exception!
      try { 
        nettyStreamManager0.addJar(file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.rpc.netty.NettyStreamManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager((NettyRpcEnv) null);
      // Undeclared exception!
      try { 
        nettyStreamManager0.openStream("j}?':A`C NrQ_g=Z/][");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // requirement failed: Invalid stream URI: j}?':A`C NrQ_g=Z not found.
         //
         verifyException("scala.Predef$", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RpcAddress rpcAddress0 = mock(RpcAddress.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(rpcAddress0).toSparkURL();
      NettyRpcEnv nettyRpcEnv0 = mock(NettyRpcEnv.class, new ViolatedAssumptionAnswer());
      doReturn(rpcAddress0).when(nettyRpcEnv0).address();
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager(nettyRpcEnv0);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      File file1 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file1).toString();
      nettyStreamManager0.addDirectory("", file1);
      // Undeclared exception!
      try { 
        nettyStreamManager0.addDirectory("", file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // requirement failed: URI '/' already registered.
         //
         verifyException("scala.Predef$", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager((NettyRpcEnv) null);
      // Undeclared exception!
      try { 
        nettyStreamManager0.addDirectory("1Q6T_`}]O,D]8#ezDq", (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NettyStreamManager nettyStreamManager0 = new NettyStreamManager((NettyRpcEnv) null);
      // Undeclared exception!
      try { 
        nettyStreamManager0.getChunk((-805L), 1620);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.rpc.netty.NettyStreamManager", e);
      }
  }
}
