/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:46:35 GMT 2022
 */

package org.apache.spark.status.api.v1;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import org.apache.spark.status.api.v1.ApplicationAttemptInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import scala.Function1;
import scala.Option;
import scala.ScalaReflectionException;
import scala.Tuple8;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ApplicationAttemptInfo_ESTest extends ApplicationAttemptInfo_ESTest_scaffolding {

//  @Test(timeout = 4000)
//  public void test00()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, (-3146L), (String) null, true, "");
//      ApplicationAttemptInfo applicationAttemptInfo1 = applicationAttemptInfo0.copy((Option<String>) null, (Date) null, (Date) null, (Date) null, 410, (String) null, true, "");
//      boolean boolean0 = applicationAttemptInfo1.equals(applicationAttemptInfo0);
//      assertFalse(boolean0);
//      assertTrue(applicationAttemptInfo1.copy$default$7());
//      assertEquals(410L, applicationAttemptInfo1.copy$default$5());
//      assertFalse(applicationAttemptInfo0.equals((Object)applicationAttemptInfo1));
//  }
//
//  @Test(timeout = 4000)
//  public void test01()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null).when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, 501L, "org.apache.spark.status.api.v1.ApplicationAttemptInfo", false, "scala.runtime.AbstractFunction0$mcB$sp");
//      Date date1 = applicationAttemptInfo0.startTime();
//      assertSame(date1, date0);
//  }
//
//  @Test(timeout = 4000)
//  public void test02()  throws Throwable  {
//      ScalaReflectionException. scalaReflectionException_0 = ScalaReflectionException..MODULE$;
//      ScalaReflectionException scalaReflectionException0 = scalaReflectionException_0.apply("");
//      Option<String> option0 = scalaReflectionException_0.unapply(scalaReflectionException0);
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo(option0, date0, date1, date0, (-861L), "s", true, "");
//      Date date2 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null, (String) null).when(date2).toString();
//      ApplicationAttemptInfo applicationAttemptInfo1 = applicationAttemptInfo0.copy(option0, date2, date2, date2, 3887L, (String) null, true, "scala.collection.TraversableViewLike$AbstractTransformed");
//      String string0 = applicationAttemptInfo1.sparkUser();
//      assertTrue(applicationAttemptInfo1.completed());
//      assertNull(string0);
//      assertEquals(3887L, applicationAttemptInfo1.duration());
//  }
//
//  @Test(timeout = 4000)
//  public void test03()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("[]x6(E,U2wm}O+", "5@V,", "5@V,", "|S<Hj\"Qz:^+CmWC\"", "[]x6(E,U2wm}O+").when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date0, (-1647L), "", false, "");
//      applicationAttemptInfo0.sparkUser();
//      assertEquals((-1647L), applicationAttemptInfo0.copy$default$5());
//      assertFalse(applicationAttemptInfo0.completed());
//  }
//
//  @Test(timeout = 4000)
//  public void test04()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("", "$GktjyN,t]k1jR53", "", "$GktjyN,t]k1jR53", "O").when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date0, 0L, "", false, "");
//      applicationAttemptInfo0.lastUpdated();
//      assertFalse(applicationAttemptInfo0.completed());
//  }
//
//  @Test(timeout = 4000)
//  public void test05()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn(0L, (-420L)).when(date0).getTime();
//      doReturn("!qOd(@F<", "!qOd(@F<", "!qOd(@F<", ")I%R)F^c", ")I%R)F^c").when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date0, 2975L, "", false, "");
//      applicationAttemptInfo0.getLastUpdatedEpoch();
//      applicationAttemptInfo0.getStartTimeEpoch();
//      assertEquals(2975L, applicationAttemptInfo0.duration());
//      assertFalse(applicationAttemptInfo0.copy$default$7());
//  }
//
//  @Test(timeout = 4000)
//  public void test06()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((-1987L), 143L).when(date0).getTime();
//      doReturn("scala.collection.immutable.Stream$ConsWrapper", (String) null, (String) null, "scala.collection.mutable.PriorityQueue", (String) null).when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date0, (-1647L), "", false, "");
//      applicationAttemptInfo0.getEndTimeEpoch();
//      applicationAttemptInfo0.getLastUpdatedEpoch();
//      assertFalse(applicationAttemptInfo0.completed());
//      assertEquals((-1647L), applicationAttemptInfo0.copy$default$5());
//  }
//
//  @Test(timeout = 4000)
//  public void test07()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((-991L)).when(date0).getTime();
//      doReturn("b|rsCm@||OAZ%Z4E_SN").when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, (-1858L), "", true, "");
//      long long0 = applicationAttemptInfo0.getLastUpdatedEpoch();
//      assertEquals((-991L), long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test08()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn(0L).when(date0).getTime();
//      doReturn("scala.runtime.AbstractFunction0", "", "", "org.apache.spark.status.api.v1.ApplicationAttemptInfo$", "scala.runtime.AbstractFunction0").when(date0).toString();
//      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("org.apache.spark.status.api.v1.ApplicationAttemptInfo$", "").when(date1).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date1, 3653L, "scala.runtime.AbstractFunction0", true, "d,mo)3WiIbm,yrYQ");
//      applicationAttemptInfo0.getEndTimeEpoch();
//      assertEquals("d,mo)3WiIbm,yrYQ", applicationAttemptInfo0.appSparkVersion());
//      assertTrue(applicationAttemptInfo0.copy$default$7());
//      assertEquals(3653L, applicationAttemptInfo0.copy$default$5());
//      assertEquals("scala.runtime.AbstractFunction0", applicationAttemptInfo0.sparkUser());
//  }
//
//  @Test(timeout = 4000)
//  public void test09()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn(1624L, 0L, 1624L).when(date0).getTime();
//      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date0, (-3117L), "scala.runtime.AbstractFunction0", false, "");
//      applicationAttemptInfo0.getStartTimeEpoch();
//      applicationAttemptInfo0.getStartTimeEpoch();
//      applicationAttemptInfo0.getEndTimeEpoch();
//      assertEquals("", applicationAttemptInfo0.appSparkVersion());
//      assertEquals("scala.runtime.AbstractFunction0", applicationAttemptInfo0.sparkUser());
//      assertFalse(applicationAttemptInfo0.completed());
//      assertEquals((-3117L), applicationAttemptInfo0.duration());
//  }
//
//  @Test(timeout = 4000)
//  public void test10()  throws Throwable  {
//      ScalaReflectionException. scalaReflectionException_0 = ScalaReflectionException..MODULE$;
//      ScalaReflectionException scalaReflectionException0 = scalaReflectionException_0.apply("");
//      Option<String> option0 = scalaReflectionException_0.unapply(scalaReflectionException0);
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null).when(date0).toString();
//      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo(option0, date0, date0, date1, (-1421L), "", false, "");
//      Date date2 = applicationAttemptInfo0.endTime();
//      assertFalse(date2.equals((Object)date1));
//  }
//
//  @Test(timeout = 4000)
//  public void test11()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, 501L, "org.apache.spark.status.api.v1.ApplicationAttemptInfo", false, "scala.runtime.AbstractFunction0$mcB$sp");
//      long long0 = applicationAttemptInfo0.duration();
//      assertEquals(501L, long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test12()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, (-1858L), "", true, "");
//      long long0 = applicationAttemptInfo0.duration();
//      assertEquals((-1858L), long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test13()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(date0).toString();
//      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null).when(date1).toString();
//      Date date2 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null).when(date2).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date2, 1838L, "ApplicatinAttemptInfo", true, "ApplicatinAttemptInfo");
//      Date date3 = applicationAttemptInfo0.copy$default$2();
//      ApplicationAttemptInfo applicationAttemptInfo1 = ApplicationAttemptInfo.apply((Option<String>) null, date3, date1, date3, 1838L, "", false, (String) null);
//      String string0 = applicationAttemptInfo1.copy$default$8();
//      assertNull(string0);
//      assertFalse(applicationAttemptInfo1.completed());
//      assertEquals(1838L, applicationAttemptInfo1.copy$default$5());
//      assertSame(date3, date0);
//  }
//
//  @Test(timeout = 4000)
//  public void test14()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, (-1650L), "ApplicationAttemptInfo", true, "ApplicationAttemptInfo");
//      String string0 = applicationAttemptInfo0.copy$default$8();
//      assertEquals("ApplicationAttemptInfo", string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test15()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, (-1650L), "ApplicationAttemptInfo", true, (String) null);
//      boolean boolean0 = applicationAttemptInfo0.copy$default$7();
//      assertTrue(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test16()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, (-2975L), (String) null, false, (String) null);
//      String string0 = applicationAttemptInfo0.copy$default$6();
//      assertNull(string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test17()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("[]x6(E,U2wm}O+", "5@V,", "5@V,", "|S<Hj\"Qz:^+CmWC\"", "[]x6(E,U2wm}O+").when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date0, (-1647L), "", false, "");
//      applicationAttemptInfo0.copy$default$6();
//      assertFalse(applicationAttemptInfo0.completed());
//      assertEquals((-1647L), applicationAttemptInfo0.duration());
//  }
//
//  @Test(timeout = 4000)
//  public void test18()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date1, date0, date1, 0, "6IU6", false, "");
//      long long0 = applicationAttemptInfo0.copy$default$5();
//      assertEquals(0L, long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test19()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("", "$GktjyN,t]k1jR53", "", "$GktjyN,t]k1jR53", "O").when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date0, 0L, "", false, "");
//      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null, (String) null).when(date1).toString();
//      ApplicationAttemptInfo applicationAttemptInfo1 = applicationAttemptInfo0.copy((Option<String>) null, date1, date1, date1, (-4150L), "An/gJ%qX[ut", false, "_^=");
//      long long0 = applicationAttemptInfo1.copy$default$5();
//      assertEquals((-4150L), long0);
//      assertFalse(applicationAttemptInfo0.copy$default$7());
//      assertFalse(applicationAttemptInfo1.completed());
//      assertEquals("_^=", applicationAttemptInfo1.copy$default$8());
//      assertEquals("An/gJ%qX[ut", applicationAttemptInfo1.sparkUser());
//  }
//
//  @Test(timeout = 4000)
//  public void test20()  throws Throwable  {
//      ScalaReflectionException. scalaReflectionException_0 = ScalaReflectionException..MODULE$;
//      ScalaReflectionException scalaReflectionException0 = scalaReflectionException_0.apply("%4SV6<`d$k");
//      Option<String> option0 = scalaReflectionException_0.unapply(scalaReflectionException0);
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply(option0, date0, date0, date0, 3744L, "/", false, "%4SV6<`d$k");
//      applicationAttemptInfo0.copy$default$4();
//      assertEquals(3744L, applicationAttemptInfo0.duration());
//      assertFalse(applicationAttemptInfo0.completed());
//      assertEquals("%4SV6<`d$k", applicationAttemptInfo0.copy$default$8());
//      assertEquals("/", applicationAttemptInfo0.copy$default$6());
//  }
//
//  @Test(timeout = 4000)
//  public void test21()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("", "$GktjyN,t]k1jR53", "", "$GktjyN,t]k1jR53", "O").when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date0, 0L, "", false, "");
//      applicationAttemptInfo0.copy$default$3();
//      assertFalse(applicationAttemptInfo0.completed());
//  }
//
//  @Test(timeout = 4000)
//  public void test22()  throws Throwable  {
//      ScalaReflectionException. scalaReflectionException_0 = ScalaReflectionException..MODULE$;
//      ScalaReflectionException scalaReflectionException0 = scalaReflectionException_0.apply("");
//      Option<String> option0 = scalaReflectionException_0.unapply(scalaReflectionException0);
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo(option0, (Date) null, (Date) null, (Date) null, 1L, "", false, "");
//      Option<String> option1 = applicationAttemptInfo0.copy$default$1();
//      assertSame(option1, option0);
//  }
//
//  @Test(timeout = 4000)
//  public void test23()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, (-1858L), "", true, "");
//      boolean boolean0 = applicationAttemptInfo0.completed();
//      assertTrue(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test24()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, 0L, "org.apache.spark.status.api.v1.ApplicationAttemptInfo$", true, "tail of empty stream");
//      boolean boolean0 = applicationAttemptInfo0.canEqual(applicationAttemptInfo0);
//      assertTrue(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test25()  throws Throwable  {
//      ScalaReflectionException. scalaReflectionException_0 = ScalaReflectionException..MODULE$;
//      ScalaReflectionException scalaReflectionException0 = scalaReflectionException_0.apply("");
//      Option<String> option0 = scalaReflectionException_0.unapply(scalaReflectionException0);
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo(option0, date0, date0, date0, 0L, "", true, (String) null);
//      Option<String> option1 = applicationAttemptInfo0.attemptId();
//      assertSame(option0, option1);
//  }
//
//  @Test(timeout = 4000)
//  public void test26()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(date0).toString();
//      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null).when(date1).toString();
//      Date date2 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null).when(date2).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date2, 1838L, "ApplicatinAttemptInfo", true, "ApplicatinAttemptInfo");
//      Date date3 = applicationAttemptInfo0.copy$default$2();
//      ApplicationAttemptInfo applicationAttemptInfo1 = ApplicationAttemptInfo.apply((Option<String>) null, date3, date1, date3, 1838L, "", false, (String) null);
//      String string0 = applicationAttemptInfo1.appSparkVersion();
//      assertNull(string0);
//      assertEquals(1838L, applicationAttemptInfo1.copy$default$5());
//      assertFalse(applicationAttemptInfo1.completed());
//      assertSame(date3, date0);
//  }
//
//  @Test(timeout = 4000)
//  public void test27()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("[]x6(E,U2wm}O+", "5@V,", "5@V,", "|S<Hj\"Qz:^+CmWC\"", "[]x6(E,U2wm}O+").when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date0, (-1647L), "", false, "");
//      applicationAttemptInfo0.appSparkVersion();
//      assertFalse(applicationAttemptInfo0.copy$default$7());
//      assertEquals((-1647L), applicationAttemptInfo0.duration());
//  }
//
//  @Test(timeout = 4000)
//  public void test28()  throws Throwable  {
//      ScalaReflectionException. scalaReflectionException_0 = ScalaReflectionException..MODULE$;
//      ScalaReflectionException scalaReflectionException0 = scalaReflectionException_0.apply("");
//      Option<String> option0 = scalaReflectionException_0.unapply(scalaReflectionException0);
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply(option0, (Date) null, (Date) null, (Date) null, 0L, (String) null, true, "");
//      // Undeclared exception!
//      try { 
//        applicationAttemptInfo0.getStartTimeEpoch();
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.spark.status.api.v1.ApplicationAttemptInfo", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test29()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null, (String) null, (String) null).when(date0).toString();
//      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null).when(date1).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date1, 1838L, "ApplicatinAttemptInfo", true, "ApplicatinAttemptInfo");
//      applicationAttemptInfo0.productElement(7);
//      assertTrue(applicationAttemptInfo0.completed());
//      assertEquals(1838L, applicationAttemptInfo0.duration());
//  }
//
//  @Test(timeout = 4000)
//  public void test30()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, (-1650L), "scala.runtime.AbstractFunction2$mcJJI$sp", true, "scala.runtime.AbstractFunction2$mcDII$sp");
//      Object object0 = applicationAttemptInfo0.productElement(4);
//      assertEquals((-1650L), object0);
//  }
//
//  @Test(timeout = 4000)
//  public void test31()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null).when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, (-1647L), "ApplicationAttemptInfo", true, "ApplicationAttemptInfo");
//      Object object0 = applicationAttemptInfo0.productElement(1);
//      assertNotNull(object0);
//  }
//
//  @Test(timeout = 4000)
//  public void test32()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date1, date0, date1, 0, "6IU6", false, "");
//      Object object0 = applicationAttemptInfo0.productElement(0);
//      assertNull(object0);
//  }
//
//  @Test(timeout = 4000)
//  public void test33()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn((String) null, (String) null).when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, (-1650L), "scala.runtime.AbstractFunction2$mcJJI$sp", true, "scala.runtime.AbstractFunction2$mcDII$sp");
//      Object object0 = applicationAttemptInfo0.productElement(2);
//      assertNotNull(object0);
//  }
//
//  @Test(timeout = 4000)
//  public void test34()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, "6IU6", false, "");
//      Object object0 = applicationAttemptInfo0.productElement(3);
//      assertNull(object0);
//  }
//
//  @Test(timeout = 4000)
//  public void test35()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, (-1651L), "org.apache.spark.staus.api.v1.ApplicationAttemptInfo", true, "org.apache.spark.staus.api.v1.ApplicationAttemptInfo");
//      Object object0 = applicationAttemptInfo0.productElement(5);
//      assertEquals("org.apache.spark.staus.api.v1.ApplicationAttemptInfo", object0);
//  }
//
//  @Test(timeout = 4000)
//  public void test36()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, 501L, "org.apache.spark.status.api.v1.ApplicationAttemptInfo", false, "scala.runtime.AbstractFunction0$mcB$sp");
//      boolean boolean0 = applicationAttemptInfo0.completed();
//      assertFalse(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test37()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, date0, (Date) null, 0L, "", true, "");
//      String string0 = applicationAttemptInfo0.productPrefix();
//      assertEquals("ApplicationAttemptInfo", string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test38()  throws Throwable  {
//      ScalaReflectionException. scalaReflectionException_0 = ScalaReflectionException..MODULE$;
//      ScalaReflectionException scalaReflectionException0 = scalaReflectionException_0.apply("");
//      Option<String> option0 = scalaReflectionException_0.unapply(scalaReflectionException0);
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply(option0, (Date) null, (Date) null, (Date) null, 1499L, (String) null, false, (String) null);
//      applicationAttemptInfo0.startTime();
//      assertEquals(1499L, applicationAttemptInfo0.duration());
//      assertFalse(applicationAttemptInfo0.completed());
//  }
//
//  @Test(timeout = 4000)
//  public void test39()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, "6IU6", false, "");
//      Date date0 = applicationAttemptInfo0.lastUpdated();
//      assertNull(date0);
//  }
//
//  @Test(timeout = 4000)
//  public void test40()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, 1949L, "ApplicationAttemptInfo", true, "<B0-TE#7>V>vcv,)");
//      applicationAttemptInfo0.productIterator();
//      assertTrue(applicationAttemptInfo0.completed());
//      assertEquals(8, applicationAttemptInfo0.productArity());
//      assertEquals(1949L, applicationAttemptInfo0.duration());
//      assertEquals("ApplicationAttemptInfo", applicationAttemptInfo0.copy$default$6());
//      assertEquals("<B0-TE#7>V>vcv,)", applicationAttemptInfo0.appSparkVersion());
//  }
//
//  @Test(timeout = 4000)
//  public void test41()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, 1241L, "", false, "scala.collection.mutable.IndexedSeqLike$class");
//      Object object0 = applicationAttemptInfo0.productElement(6);
//      boolean boolean0 = applicationAttemptInfo0.canEqual(object0);
//      assertFalse(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test42()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, 1068L, "CHLV427%V", false, "CHLV427%V");
//      int int0 = applicationAttemptInfo0.productArity();
//      assertEquals(8, int0);
//      assertEquals(1068L, applicationAttemptInfo0.copy$default$5());
//      assertFalse(applicationAttemptInfo0.completed());
//  }
//
//  @Test(timeout = 4000)
//  public void test43()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, "6IU6", false, "");
//      Date date0 = applicationAttemptInfo0.endTime();
//      assertNull(date0);
//  }
//
//  @Test(timeout = 4000)
//  public void test44()  throws Throwable  {
//      ScalaReflectionException. scalaReflectionException_0 = ScalaReflectionException..MODULE$;
//      ScalaReflectionException scalaReflectionException0 = scalaReflectionException_0.apply("");
//      Option<String> option0 = scalaReflectionException_0.unapply(scalaReflectionException0);
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo(option0, date0, date1, date0, (-861L), "s", true, "");
//      String string0 = applicationAttemptInfo0.sparkUser();
//      assertEquals("s", string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test45()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("scala.runtime.AbstractFunction0", "", "", "org.apache.spark.status.api.v1.ApplicationAttemptInfo$").when(date0).toString();
//      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("org.apache.spark.status.api.v1.ApplicationAttemptInfo$", "").when(date1).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date1, 3653L, "scala.runtime.AbstractFunction0", true, "d,mo)3WiIbm,yrYQ");
//      String string0 = applicationAttemptInfo0.appSparkVersion();
//      assertEquals("d,mo)3WiIbm,yrYQ", string0);
//      assertEquals(3653L, applicationAttemptInfo0.copy$default$5());
//      assertEquals("scala.runtime.AbstractFunction0", applicationAttemptInfo0.sparkUser());
//      assertTrue(applicationAttemptInfo0.completed());
//  }
//
//  @Test(timeout = 4000)
//  public void test46()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date1, date0, date1, 0, "6IU6", false, "");
//      long long0 = applicationAttemptInfo0.duration();
//      assertEquals(0L, long0);
//  }
//
//  @Test(timeout = 4000)
//  public void test47()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, (-538L), "o;fwzCKsz]7", true, "o;fwzCKsz]7");
//      Option<String> option0 = applicationAttemptInfo0.attemptId();
//      assertNull(option0);
//  }
//
//  @Test(timeout = 4000)
//  public void test48()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 1L, "", false, (String) null);
//      ApplicationAttemptInfo.unapply(applicationAttemptInfo0);
//      assertEquals(1L, applicationAttemptInfo0.copy$default$5());
//      assertEquals(1L, applicationAttemptInfo0.duration());
//  }
//
//  @Test(timeout = 4000)
//  public void test49()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, (-538L), "o;fwzCKsz]7", false, "$S|=;]~m2O-:.mS0");
//      ApplicationAttemptInfo applicationAttemptInfo1 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, (-538L), "o;fwzCKsz]7", false, "o;fwzCKsz]7");
//      boolean boolean0 = applicationAttemptInfo1.equals(applicationAttemptInfo0);
//      assertEquals((-538L), applicationAttemptInfo1.duration());
//      assertFalse(boolean0);
//      assertFalse(applicationAttemptInfo1.copy$default$7());
//  }
//
//  @Test(timeout = 4000)
//  public void test50()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, (String) null, false, (String) null);
//      ApplicationAttemptInfo applicationAttemptInfo1 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, (String) null, false, (String) null);
//      boolean boolean0 = applicationAttemptInfo0.equals(applicationAttemptInfo1);
//      assertTrue(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test51()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, (String) null, false, (String) null);
//      ApplicationAttemptInfo applicationAttemptInfo1 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, (String) null, false, "org.apache.spark.status.api.v1.ApplicationAttemptInfo");
//      boolean boolean0 = applicationAttemptInfo0.equals(applicationAttemptInfo1);
//      assertFalse(applicationAttemptInfo1.completed());
//      assertFalse(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test52()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, (-538L), "o;fwzCKsz]7", false, "o;fwzCKsz]7");
//      ApplicationAttemptInfo applicationAttemptInfo1 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, (-538L), "", true, "OJ");
//      boolean boolean0 = applicationAttemptInfo0.equals(applicationAttemptInfo1);
//      assertEquals((-538L), applicationAttemptInfo1.copy$default$5());
//      assertTrue(applicationAttemptInfo1.completed());
//      assertEquals("", applicationAttemptInfo1.copy$default$6());
//      assertFalse(boolean0);
//      assertEquals("OJ", applicationAttemptInfo1.copy$default$8());
//  }
//
//  @Test(timeout = 4000)
//  public void test53()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, (String) null, true, (String) null);
//      ApplicationAttemptInfo applicationAttemptInfo1 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, (String) null, false, "org.apache.spark.status.api.v1.ApplicationAttemptInfo");
//      boolean boolean0 = applicationAttemptInfo0.equals(applicationAttemptInfo1);
//      assertFalse(boolean0);
//      assertFalse(applicationAttemptInfo1.completed());
//  }
//
//  @Test(timeout = 4000)
//  public void test54()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, (String) null, false, (String) null);
//      ApplicationAttemptInfo applicationAttemptInfo1 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, "scala.math.Ordering$Double$", false, "");
//      boolean boolean0 = applicationAttemptInfo0.equals(applicationAttemptInfo1);
//      assertFalse(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test55()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, (-538L), "o;fwzCKsz]7", false, "o;fwzCKsz]7");
//      ApplicationAttemptInfo applicationAttemptInfo1 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, "o;fwzCKsz]7", false, "o;fwzCKsz]7");
//      boolean boolean0 = applicationAttemptInfo0.equals(applicationAttemptInfo1);
//      assertFalse(applicationAttemptInfo1.equals((Object)applicationAttemptInfo0));
//      assertFalse(boolean0);
//      assertEquals((-538L), applicationAttemptInfo0.copy$default$5());
//      assertFalse(applicationAttemptInfo0.copy$default$7());
//  }
//
//  @Test(timeout = 4000)
//  public void test56()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("", "", "", (String) null, (String) null).when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, date0, 19L, "", false, "");
//      ApplicationAttemptInfo applicationAttemptInfo1 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, date0, 19L, "", false, "");
//      boolean boolean0 = applicationAttemptInfo0.equals(applicationAttemptInfo1);
//      assertFalse(applicationAttemptInfo1.completed());
//      assertTrue(boolean0);
//      assertEquals(19L, applicationAttemptInfo1.copy$default$5());
//  }
//
//  @Test(timeout = 4000)
//  public void test57()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("", "", "").when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, date0, 19L, "", false, "");
//      ApplicationAttemptInfo applicationAttemptInfo1 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 19L, "", false, "");
//      boolean boolean0 = applicationAttemptInfo0.equals(applicationAttemptInfo1);
//      assertFalse(boolean0);
//      assertFalse(applicationAttemptInfo0.copy$default$7());
//      assertEquals(19L, applicationAttemptInfo0.duration());
//  }
//
//  @Test(timeout = 4000)
//  public void test58()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("scala.collection.immutable.Queue$EmptyQueue$", (String) null, (String) null, (String) null, (String) null).when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, (String) null, false, (String) null);
//      ApplicationAttemptInfo applicationAttemptInfo1 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, date0, (Date) null, 0L, "scala.collection.immutable.Queue$EmptyQueue$", false, (String) null);
//      ApplicationAttemptInfo applicationAttemptInfo2 = applicationAttemptInfo0.copy((Option<String>) null, (Date) null, date0, date0, 0L, (String) null, false, "&");
//      boolean boolean0 = applicationAttemptInfo1.equals(applicationAttemptInfo2);
//      assertFalse(boolean0);
//      assertFalse(applicationAttemptInfo2.completed());
//  }
//
//  @Test(timeout = 4000)
//  public void test59()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("", "", "", (String) null, (String) null).when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, date0, 7L, "", false, "");
//      ApplicationAttemptInfo applicationAttemptInfo1 = applicationAttemptInfo0.copy((Option<String>) null, (Date) null, date0, date0, 7L, "", false, "");
//      boolean boolean0 = applicationAttemptInfo0.equals(applicationAttemptInfo1);
//      assertEquals(7L, applicationAttemptInfo1.copy$default$5());
//      assertFalse(applicationAttemptInfo0.completed());
//      assertFalse(applicationAttemptInfo1.copy$default$7());
//      assertFalse(applicationAttemptInfo1.equals((Object)applicationAttemptInfo0));
//      assertFalse(boolean0);
//      assertEquals(7L, applicationAttemptInfo0.copy$default$5());
//  }
//
//  @Test(timeout = 4000)
//  public void test60()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("scala.collection.immutable.Queue$EmptyQueue$").when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, date0, (Date) null, 0L, "scala.collection.immutable.Queue$EmptyQueue$", false, (String) null);
//      ApplicationAttemptInfo applicationAttemptInfo1 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, "&", false, "scala.collection.immutable.Queue$EmptyQueue$");
//      boolean boolean0 = applicationAttemptInfo0.equals(applicationAttemptInfo1);
//      assertFalse(boolean0);
//      assertEquals("&", applicationAttemptInfo1.copy$default$6());
//      assertFalse(applicationAttemptInfo1.completed());
//      assertEquals("scala.collection.immutable.Queue$EmptyQueue$", applicationAttemptInfo1.appSparkVersion());
//  }
//
//  @Test(timeout = 4000)
//  public void test61()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("1", "1", "1", (String) null, (String) null).when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, date0, 7L, "1", false, "1");
//      ApplicationAttemptInfo applicationAttemptInfo1 = ApplicationAttemptInfo.apply((Option<String>) null, date0, (Date) null, date0, 7L, "1", false, "1");
//      boolean boolean0 = applicationAttemptInfo0.equals(applicationAttemptInfo1);
//      assertFalse(applicationAttemptInfo1.completed());
//      assertFalse(applicationAttemptInfo1.equals((Object)applicationAttemptInfo0));
//      assertEquals(7L, applicationAttemptInfo1.duration());
//      assertFalse(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test62()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, (-572L), "p@l{'fe#^|", false, "p@l{'fe#^|");
//      boolean boolean0 = applicationAttemptInfo0.equals((Object) null);
//      assertFalse(boolean0);
//      assertEquals((-572L), applicationAttemptInfo0.copy$default$5());
//      assertFalse(applicationAttemptInfo0.completed());
//  }
//
//  @Test(timeout = 4000)
//  public void test63()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, (-572L), "p@l{'fe#^|", true, "p@l{'fe#^|");
//      applicationAttemptInfo0.equals(applicationAttemptInfo0);
//      assertEquals((-572L), applicationAttemptInfo0.copy$default$5());
//      assertTrue(applicationAttemptInfo0.completed());
//  }
//
//  @Test(timeout = 4000)
//  public void test64()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, 1949L, "ApplicationAttemptInfo", true, "<B0-TE#7>V>vcv,)");
//      applicationAttemptInfo0.hashCode();
//      assertEquals(1949L, applicationAttemptInfo0.copy$default$5());
//      assertEquals("ApplicationAttemptInfo", applicationAttemptInfo0.copy$default$6());
//      assertTrue(applicationAttemptInfo0.completed());
//      assertEquals("<B0-TE#7>V>vcv,)", applicationAttemptInfo0.appSparkVersion());
//  }
//
//  @Test(timeout = 4000)
//  public void test65()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 1068L, "CHLV427%V", false, "CHLV427%V");
//      applicationAttemptInfo0.hashCode();
//      assertEquals(1068L, applicationAttemptInfo0.copy$default$5());
//  }
//
//  @Test(timeout = 4000)
//  public void test66()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, (-261L), "o;fwzCKsz]7", false, "o;fwzCKsz]7");
//      // Undeclared exception!
//      try { 
//        applicationAttemptInfo0.productElement(1398);
//        fail("Expecting exception: IndexOutOfBoundsException");
//      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // java.lang.Integer@0000000012
//         //
//         verifyException("org.apache.spark.status.api.v1.ApplicationAttemptInfo", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test67()  throws Throwable  {
//      boolean boolean0 = ApplicationAttemptInfo.apply$default$7();
//      assertFalse(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test68()  throws Throwable  {
//      Function1<Tuple8<Option<String>, Date, Date, Date, Object, String, Object, String>, ApplicationAttemptInfo> function1_0 = ApplicationAttemptInfo.tupled();
//      assertNotNull(function1_0);
//  }
//
//  @Test(timeout = 4000)
//  public void test69()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, (-538L), "o;fwzCKsz]7", false, "o;fwzCKsz]7");
//      // Undeclared exception!
//      try { 
//        applicationAttemptInfo0.getEndTimeEpoch();
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.spark.status.api.v1.ApplicationAttemptInfo", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test70()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, (-1L), "$]>gJ5Tz%;qu>H", false, "");
//      Date date0 = applicationAttemptInfo0.copy$default$2();
//      assertNull(date0);
//  }
//
//  @Test(timeout = 4000)
//  public void test71()  throws Throwable  {
//      boolean boolean0 = ApplicationAttemptInfo.$lessinit$greater$default$7();
//      assertFalse(boolean0);
//  }
//
//  @Test(timeout = 4000)
//  public void test72()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, (-1650L), "ApplicationAttemptInfo", false, "ApplicationAttemptInfo");
//      String string0 = applicationAttemptInfo0.copy$default$6();
//      assertEquals("ApplicationAttemptInfo", string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test73()  throws Throwable  {
//      Option<Tuple8<Option<String>, Date, Date, Date, Object, String, Object, String>> option0 = ApplicationAttemptInfo.unapply((ApplicationAttemptInfo) null);
//      assertNotNull(option0);
//  }
//
//  @Test(timeout = 4000)
//  public void test74()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      doReturn("scala.collection.immutable.Stream$ConsWrapper", (String) null, (String) null, "scala.collection.mutable.PriorityQueue", (String) null).when(date0).toString();
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, date0, date0, date0, (-1647L), "", false, "");
//      boolean boolean0 = applicationAttemptInfo0.copy$default$7();
//      assertFalse(boolean0);
//      assertEquals((-1647L), applicationAttemptInfo0.copy$default$5());
//  }
//
//  @Test(timeout = 4000)
//  public void test75()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, date0, (Date) null, 0L, "", true, "");
//      Date date1 = applicationAttemptInfo0.copy$default$4();
//      assertNull(date1);
//  }
//
//  @Test(timeout = 4000)
//  public void test76()  throws Throwable  {
//      Function1<Option<String>, Function1<Date, Function1<Date, Function1<Date, Function1<Object, Function1<String, Function1<Object, Function1<String, ApplicationAttemptInfo>>>>>>>> function1_0 = ApplicationAttemptInfo.curried();
//      assertNotNull(function1_0);
//  }
//
//  @Test(timeout = 4000)
//  public void test77()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, (-572L), "p@l{'fe#^|", false, "p@l{'fe#^|");
//      // Undeclared exception!
//      try { 
//        applicationAttemptInfo0.getLastUpdatedEpoch();
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.spark.status.api.v1.ApplicationAttemptInfo", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test78()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, (Date) null, (Date) null, (Date) null, 0L, (String) null, false, (String) null);
//      Option<String> option0 = applicationAttemptInfo0.copy$default$1();
//      assertNull(option0);
//  }
//
//  @Test(timeout = 4000)
//  public void test79()  throws Throwable  {
//      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
//      ApplicationAttemptInfo applicationAttemptInfo0 = new ApplicationAttemptInfo((Option<String>) null, date0, date0, date0, 0L, "5^OwV2q],-Q]", true, "");
//      String string0 = applicationAttemptInfo0.copy$default$8();
//      assertEquals("", string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test80()  throws Throwable  {
//      ApplicationAttemptInfo applicationAttemptInfo0 = ApplicationAttemptInfo.apply((Option<String>) null, (Date) null, (Date) null, (Date) null, (-505L), "o;fCKsz]7", true, "o;fCKsz]7");
//      String string0 = applicationAttemptInfo0.toString();
//      assertEquals("ApplicationAttemptInfo(null,null,null,null,-505,o;fCKsz]7,true,o;fCKsz]7)", string0);
//      assertEquals(8, applicationAttemptInfo0.productArity());
//  }
}
