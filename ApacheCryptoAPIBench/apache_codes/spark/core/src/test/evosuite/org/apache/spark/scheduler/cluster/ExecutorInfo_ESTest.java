/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 23:09:45 GMT 2022
 */

package org.apache.spark.scheduler.cluster;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.spark.scheduler.cluster.ExecutorInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import scala.collection.immutable.Map;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExecutorInfo_ESTest extends ExecutorInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo("scala.collection.parallel.mutable.ParArray", (-3454), (Map<String, String>) null);
      ExecutorInfo executorInfo1 = new ExecutorInfo("scala.collection.parallel.mutable.ParArray", 31, (Map<String, String>) null);
      boolean boolean0 = executorInfo1.equals(executorInfo0);
      assertFalse(executorInfo0.equals((Object)executorInfo1));
      assertFalse(boolean0);
      assertEquals(31, executorInfo1.totalCores());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo("{\"Of64AH", 0, (Map<String, String>) null);
      int int0 = executorInfo0.totalCores();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo("", (-3454), (Map<String, String>) null);
      int int0 = executorInfo0.totalCores();
      assertEquals((-3454), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo((String) null, 4934, (Map<String, String>) null);
      String string0 = executorInfo0.executorHost();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo("qB;L!H", (-1), (Map<String, String>) null);
      String string0 = executorInfo0.executorHost();
      assertEquals("qB;L!H", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo("", (-1), (Map<String, String>) null);
      boolean boolean0 = executorInfo0.canEqual(executorInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo((String) null, 31, (Map<String, String>) null);
      int int0 = executorInfo0.totalCores();
      assertEquals(31, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo("scala.collection.immutable.Range$BigInt$", 4934, (Map<String, String>) null);
      boolean boolean0 = executorInfo0.canEqual((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo("<", 31, (Map<String, String>) null);
      Map<String, String> map0 = executorInfo0.logUrlMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo("", 0, (Map<String, String>) null);
      String string0 = executorInfo0.executorHost();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo((String) null, 1, (Map<String, String>) null);
      ExecutorInfo executorInfo1 = new ExecutorInfo((String) null, 0, (Map<String, String>) null);
      boolean boolean0 = executorInfo1.equals(executorInfo0);
      assertEquals(1, executorInfo0.totalCores());
      assertFalse(boolean0);
      assertFalse(executorInfo0.equals((Object)executorInfo1));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo((String) null, 3, (Map<String, String>) null);
      ExecutorInfo executorInfo1 = new ExecutorInfo("", 3, (Map<String, String>) null);
      boolean boolean0 = executorInfo1.equals(executorInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo("", 31, (Map<String, String>) null);
      ExecutorInfo executorInfo1 = new ExecutorInfo((String) null, 31, (Map<String, String>) null);
      boolean boolean0 = executorInfo1.equals(executorInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo((String) null, 0, (Map<String, String>) null);
      boolean boolean0 = executorInfo0.equals(executorInfo0);
      assertTrue(boolean0);
      assertEquals(0, executorInfo0.totalCores());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo((String) null, 31, (Map<String, String>) null);
      boolean boolean0 = executorInfo0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExecutorInfo executorInfo0 = new ExecutorInfo("org.apache.spark.scheduler.cluster.ExecutorInfo$$anonfun$hashCode$2", 1, (Map<String, String>) null);
      executorInfo0.hashCode();
      assertEquals(1, executorInfo0.totalCores());
  }
}
