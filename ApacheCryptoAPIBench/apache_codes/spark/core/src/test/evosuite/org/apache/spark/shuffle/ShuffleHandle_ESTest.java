/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 00:04:09 GMT 2022
 */

package org.apache.spark.shuffle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.spark.ShuffleDependency;
import org.apache.spark.shuffle.BaseShuffleHandle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ShuffleHandle_ESTest extends ShuffleHandle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ShuffleDependency<Object, Object, Object> shuffleDependency0 = (ShuffleDependency<Object, Object, Object>) mock(ShuffleDependency.class, new ViolatedAssumptionAnswer());
      BaseShuffleHandle<Object, Object, Object> baseShuffleHandle0 = new BaseShuffleHandle<Object, Object, Object>(0, 1, shuffleDependency0);
      int int0 = baseShuffleHandle0.shuffleId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ShuffleDependency<Object, Integer, Integer> shuffleDependency0 = (ShuffleDependency<Object, Integer, Integer>) mock(ShuffleDependency.class, new ViolatedAssumptionAnswer());
      BaseShuffleHandle<Object, Integer, Integer> baseShuffleHandle0 = new BaseShuffleHandle<Object, Integer, Integer>(959, 0, shuffleDependency0);
      int int0 = baseShuffleHandle0.shuffleId();
      assertEquals(959, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BaseShuffleHandle<Object, Integer, Integer> baseShuffleHandle0 = new BaseShuffleHandle<Object, Integer, Integer>((-1), (-1), (ShuffleDependency<Object, Integer, Integer>) null);
      int int0 = baseShuffleHandle0.shuffleId();
      assertEquals((-1), int0);
  }
}
