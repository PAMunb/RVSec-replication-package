/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:50:39 GMT 2022
 */

package org.apache.spark.deploy.security;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.spark.deploy.security.HiveDelegationTokenProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import scala.Function0;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HiveDelegationTokenProvider_ESTest extends HiveDelegationTokenProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HiveDelegationTokenProvider hiveDelegationTokenProvider0 = new HiveDelegationTokenProvider();
      hiveDelegationTokenProvider0.initializeLogIfNecessary(true);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HiveDelegationTokenProvider hiveDelegationTokenProvider0 = new HiveDelegationTokenProvider();
      Function0<String> function0_0 = (Function0<String>) mock(Function0.class, new ViolatedAssumptionAnswer());
      hiveDelegationTokenProvider0.logError(function0_0);
  }
}
