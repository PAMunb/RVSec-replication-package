/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 00:29:57 GMT 2022
 */

package org.apache.spark.status.api.v1;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.spark.status.api.v1.VersionInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VersionInfo_ESTest extends VersionInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VersionInfo versionInfo0 = new VersionInfo("_t,=}OW^O&lTs");
      assertEquals("_t,=}OW^O&lTs", versionInfo0.spark());
      assertNotNull(versionInfo0);
      
      String string0 = versionInfo0.spark();
      assertEquals("_t,=}OW^O&lTs", versionInfo0.spark());
      assertEquals("_t,=}OW^O&lTs", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      VersionInfo versionInfo0 = new VersionInfo("");
      assertEquals("", versionInfo0.spark());
      assertNotNull(versionInfo0);
      
      String string0 = versionInfo0.spark();
      assertEquals("", versionInfo0.spark());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      VersionInfo versionInfo0 = new VersionInfo((String) null);
      String string0 = versionInfo0.spark();
      assertNull(string0);
  }
}
