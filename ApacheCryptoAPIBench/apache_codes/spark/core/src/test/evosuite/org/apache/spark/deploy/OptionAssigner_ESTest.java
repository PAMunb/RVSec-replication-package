/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:02:56 GMT 2022
 */

package org.apache.spark.deploy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.spark.deploy.OptionAssigner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import scala.Function1;
import scala.Option;
import scala.Tuple5;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptionAssigner_ESTest extends OptionAssigner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("", 2, 2, "", "");
      OptionAssigner optionAssigner1 = new OptionAssigner("", 2, (-2603), "`eoFzX'4L{TZ<'t}", "");
      boolean boolean0 = optionAssigner0.equals(optionAssigner1);
      assertFalse(boolean0);
      assertEquals(2, optionAssigner0.copy$default$2());
      assertEquals(2, optionAssigner0.copy$default$3());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, (-2392), 805, "", "*");
      OptionAssigner optionAssigner1 = OptionAssigner.apply((String) null, (-909), 805, "", "");
      boolean boolean0 = optionAssigner0.equals(optionAssigner1);
      assertEquals(805, optionAssigner1.deployMode());
      assertFalse(boolean0);
      assertEquals("", optionAssigner0.copy$default$4());
      assertEquals("*", optionAssigner0.confKey());
      assertEquals((-909), optionAssigner1.clusterManager());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner((String) null, 15, 15, (String) null, "qu8T.`kGn liafZ<j");
      String string0 = optionAssigner0.value();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("", (-1622), (-889275714), "", "(6V|}zDM3\"98J*");
      OptionAssigner optionAssigner1 = optionAssigner0.copy("(6V|}zDM3\"98J*", (-889275714), (-770), "(6V|}zDM3\"98J*", "");
      String string0 = optionAssigner1.value();
      assertEquals("(6V|}zDM3\"98J*", string0);
      assertEquals((-770), optionAssigner1.deployMode());
      assertEquals((-889275714), optionAssigner0.deployMode());
      assertEquals((-889275714), optionAssigner1.copy$default$2());
      assertEquals("", optionAssigner1.confKey());
      assertEquals("", optionAssigner0.copy$default$4());
      assertEquals("", optionAssigner0.value());
      assertEquals("(6V|}zDM3\"98J*", optionAssigner1.copy$default$4());
      assertEquals((-1622), optionAssigner0.copy$default$2());
      assertEquals("(6V|}zDM3\"98J*", optionAssigner0.copy$default$5());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner((String) null, 15, 15, (String) null, "qu8T.`kGn liafZ<j");
      Object object0 = optionAssigner0.productElement(0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("4'iu*2.6v=Cj", 0, 0, "4'iu*2.6v=Cj", "4'iu*2.6v=Cj");
      int int0 = optionAssigner0.deployMode();
      assertEquals(0, int0);
      assertEquals(0, optionAssigner0.copy$default$2());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("", 5, (-3017), "", "org.apache.spark.deploy.OptionAssigner$");
      int int0 = optionAssigner0.deployMode();
      assertEquals((-3017), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("", 5, (-3017), "", "org.apache.spark.deploy.OptionAssigner$");
      String string0 = optionAssigner0.copy$default$5();
      assertEquals("org.apache.spark.deploy.OptionAssigner$", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("#_H[,@A2%Fh1Fd", 0, 0, (String) null, "");
      String string0 = optionAssigner0.copy$default$5();
      assertNotNull(string0);
      assertEquals(0, optionAssigner0.copy$default$3());
      assertEquals("", string0);
      assertEquals("#_H[,@A2%Fh1Fd", optionAssigner0.value());
      assertEquals(0, optionAssigner0.clusterManager());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("", (-666), (-339), (String) null, (String) null);
      String string0 = optionAssigner0.copy$default$4();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("[q", 0, 0, "", "");
      OptionAssigner optionAssigner1 = optionAssigner0.copy("", 0, 0, "org.apache.spark.deploy.OptionAssigner$", "");
      String string0 = optionAssigner1.copy$default$4();
      assertEquals("org.apache.spark.deploy.OptionAssigner$", string0);
      assertEquals(0, optionAssigner1.copy$default$3());
      assertEquals(0, optionAssigner1.copy$default$2());
      assertEquals("", optionAssigner1.copy$default$5());
      assertEquals("", optionAssigner1.value());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("OptionAssigner", 1123, 338, "", "chV/2O8@n_[6L=ygC ");
      int int0 = optionAssigner0.copy$default$3();
      assertEquals("OptionAssigner", optionAssigner0.copy$default$1());
      assertEquals("chV/2O8@n_[6L=ygC ", optionAssigner0.confKey());
      assertEquals("", optionAssigner0.clOption());
      assertEquals(1123, optionAssigner0.clusterManager());
      assertEquals(338, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("", (-1622), (-889275714), "", "(6V|}zDM3\"98J*");
      int int0 = optionAssigner0.copy$default$3();
      assertEquals((-889275714), int0);
      assertEquals((-1622), optionAssigner0.clusterManager());
      assertEquals("", optionAssigner0.copy$default$4());
      assertEquals("(6V|}zDM3\"98J*", optionAssigner0.copy$default$5());
      assertEquals("", optionAssigner0.value());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("%", 629, 0, "%", "%");
      OptionAssigner optionAssigner1 = optionAssigner0.copy("%", 0, (-1807), "%", "%");
      int int0 = optionAssigner1.copy$default$2();
      assertEquals((-1807), optionAssigner1.copy$default$3());
      assertEquals(629, optionAssigner0.clusterManager());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, (-2062), 10, (String) null, (String) null);
      int int0 = optionAssigner0.copy$default$2();
      assertEquals(10, optionAssigner0.deployMode());
      assertEquals((-2062), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("`PA", (-5040), (-5040), "org.apache.spark.deploy.OptionAssigner$", "OptionAssigner");
      String string0 = optionAssigner0.copy$default$1();
      assertEquals("`PA", string0);
      assertEquals((-5040), optionAssigner0.copy$default$3());
      assertEquals("OptionAssigner", optionAssigner0.copy$default$5());
      assertEquals((-5040), optionAssigner0.clusterManager());
      assertEquals("org.apache.spark.deploy.OptionAssigner$", optionAssigner0.copy$default$4());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("", (-1622), (-889275714), "", "(6V|}zDM3\"98J*");
      String string0 = optionAssigner0.copy$default$1();
      assertEquals("(6V|}zDM3\"98J*", optionAssigner0.copy$default$5());
      assertEquals("", string0);
      assertEquals((-889275714), optionAssigner0.copy$default$3());
      assertEquals("", optionAssigner0.clOption());
      assertEquals((-1622), optionAssigner0.copy$default$2());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("", (-2308), (-2308), "empty.head", (String) null);
      String string0 = optionAssigner0.confKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner((String) null, (-5040), (-5040), "org.apache.spark.deploy.OptionAssigner$", "org.apache.spark.deploy.OptionAssigner$");
      String string0 = optionAssigner0.confKey();
      assertEquals("org.apache.spark.deploy.OptionAssigner$", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("[q", 0, 0, "", "");
      int int0 = optionAssigner0.clusterManager();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("org.apache.spark.deploy.OptionAssigner$", Integer.MAX_VALUE, (-2411), (String) null, (String) null);
      int int0 = optionAssigner0.clusterManager();
      assertEquals((-2411), optionAssigner0.copy$default$3());
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("org.apache.spark.deploy.OptionAssigner$", (-99), 2899, "org.apache.spark.deploy.OptionAssigner$", "");
      String string0 = optionAssigner0.clOption();
      assertEquals("org.apache.spark.deploy.OptionAssigner$", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("org.apache.spark.deploy.OptionAssigner$", (-42), 0, "", "org.apache.spark.deploy.OptionAssigner$");
      String string0 = optionAssigner0.clOption();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("scala.Enumeration$ValueSet", 0, 0, "scala.Enumeration$ValueSet", "");
      boolean boolean0 = optionAssigner0.canEqual("scala.Enumeration$ValueSet");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("", 2, 2, "", "");
      Object object0 = optionAssigner0.productElement(3);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("OptionAssigner", 4, 4, "OptionAssigner", "OptionAssigner");
      optionAssigner0.productElement(4);
      assertEquals(4, optionAssigner0.copy$default$3());
      assertEquals(4, optionAssigner0.clusterManager());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("", 2, 2, "", "");
      Object object0 = optionAssigner0.productElement(2);
      assertEquals(2, object0);
      assertEquals(2, optionAssigner0.clusterManager());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("", (-1622), (-889275714), "", "(6V|}zDM3\"98J*");
      String string0 = optionAssigner0.value();
      assertEquals("", optionAssigner0.copy$default$4());
      assertEquals((-1622), optionAssigner0.copy$default$2());
      assertEquals((-889275714), optionAssigner0.copy$default$3());
      assertEquals("", string0);
      assertEquals("(6V|}zDM3\"98J*", optionAssigner0.copy$default$5());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, (-243), (-243), (String) null, (String) null);
      optionAssigner0.clOption();
      assertEquals((-243), optionAssigner0.copy$default$3());
      assertEquals((-243), optionAssigner0.copy$default$2());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("2$/\"=pO9G", (-909), (-3419), "", "");
      boolean boolean0 = optionAssigner0.canEqual(optionAssigner0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, 2342, (-1751), (String) null, (String) null);
      optionAssigner0.productIterator();
      assertEquals(5, optionAssigner0.productArity());
      assertEquals(2342, optionAssigner0.copy$default$2());
      assertEquals((-1751), optionAssigner0.deployMode());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, (-2062), 10, (String) null, (String) null);
      int int0 = optionAssigner0.clusterManager();
      assertEquals((-2062), int0);
      assertEquals(10, optionAssigner0.deployMode());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("", 0, 1, "", "");
      int int0 = optionAssigner0.deployMode();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("-+;(", 0, 0, "~u|]D^*es2cB?.U48", "");
      String string0 = optionAssigner0.confKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("", 20, 20, "", "");
      OptionAssigner optionAssigner1 = optionAssigner0.copy("", 20, 20, "", "bC~AQZ' ^V([jCM03");
      boolean boolean0 = optionAssigner0.equals(optionAssigner1);
      assertEquals(20, optionAssigner1.copy$default$2());
      assertFalse(boolean0);
      assertEquals("", optionAssigner1.copy$default$1());
      assertEquals(20, optionAssigner1.deployMode());
      assertEquals("", optionAssigner1.copy$default$4());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, 1, 1, (String) null, (String) null);
      OptionAssigner optionAssigner1 = optionAssigner0.copy((String) null, 1, 1, (String) null, "6e)Aeh");
      boolean boolean0 = optionAssigner0.equals(optionAssigner1);
      assertEquals(1, optionAssigner1.copy$default$2());
      assertEquals(1, optionAssigner1.deployMode());
      assertEquals(1, optionAssigner0.deployMode());
      assertFalse(boolean0);
      assertEquals(1, optionAssigner0.clusterManager());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner((String) null, 10, 10, (String) null, (String) null);
      OptionAssigner optionAssigner1 = OptionAssigner.apply((String) null, 10, 10, "next on empty iterator", "next on empty iterator");
      boolean boolean0 = optionAssigner0.equals(optionAssigner1);
      assertFalse(boolean0);
      assertEquals(10, optionAssigner1.copy$default$3());
      assertEquals(10, optionAssigner1.clusterManager());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, 1, 1, (String) null, (String) null);
      OptionAssigner optionAssigner1 = optionAssigner0.copy((String) null, 1, 1, (String) null, (String) null);
      boolean boolean0 = optionAssigner0.equals(optionAssigner1);
      assertTrue(boolean0);
      assertEquals(1, optionAssigner0.deployMode());
      assertEquals(1, optionAssigner1.clusterManager());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner((String) null, (-18), (-39), (String) null, (String) null);
      OptionAssigner optionAssigner1 = OptionAssigner.apply((String) null, (-18), (-18), (String) null, (String) null);
      boolean boolean0 = optionAssigner0.equals(optionAssigner1);
      assertFalse(boolean0);
      assertFalse(optionAssigner1.equals((Object)optionAssigner0));
      assertEquals((-18), optionAssigner1.deployMode());
      assertEquals((-18), optionAssigner1.clusterManager());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, 1, 1, (String) null, (String) null);
      OptionAssigner optionAssigner1 = optionAssigner0.copy((String) null, 28, 1, (String) null, (String) null);
      boolean boolean0 = optionAssigner1.equals(optionAssigner0);
      assertEquals(1, optionAssigner1.copy$default$3());
      assertFalse(boolean0);
      assertEquals(1, optionAssigner0.clusterManager());
      assertEquals(28, optionAssigner1.copy$default$2());
      assertEquals(1, optionAssigner0.deployMode());
      assertFalse(optionAssigner0.equals((Object)optionAssigner1));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("WGoo'`.KMk5cxY/oX>L", 3, 3, "WGoo'`.KMk5cxY/oX>L", "WGoo'`.KMk5cxY/oX>L");
      OptionAssigner optionAssigner1 = OptionAssigner.apply("scala.collection.Iterator$class", 3, 3, "scala.collection.Iterator$class", "WGoo'`.KMk5cxY/oX>L");
      boolean boolean0 = optionAssigner0.equals(optionAssigner1);
      assertFalse(boolean0);
      assertEquals("scala.collection.Iterator$class", optionAssigner1.copy$default$4());
      assertEquals(3, optionAssigner1.copy$default$2());
      assertEquals(3, optionAssigner1.copy$default$3());
      assertEquals("WGoo'`.KMk5cxY/oX>L", optionAssigner1.confKey());
      assertEquals("scala.collection.Iterator$class", optionAssigner1.copy$default$1());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, 1, 1, (String) null, (String) null);
      OptionAssigner optionAssigner1 = new OptionAssigner("6e)Aeh", 1, 1, "6e)Aeh", "6e)Aeh");
      boolean boolean0 = optionAssigner0.equals(optionAssigner1);
      assertFalse(boolean0);
      assertEquals(1, optionAssigner0.deployMode());
      assertEquals(1, optionAssigner0.clusterManager());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, (-142), (-142), (String) null, "SjDjZuyhJ}gU_fYt7lG");
      OptionAssigner optionAssigner1 = optionAssigner0.copy((String) null, (-142), (-142), "SjDjZuyhJ}gU_fYt7lG", (String) null);
      boolean boolean0 = optionAssigner1.equals(optionAssigner0);
      assertEquals((-142), optionAssigner1.copy$default$3());
      assertEquals((-142), optionAssigner0.deployMode());
      assertEquals((-142), optionAssigner1.clusterManager());
      assertFalse(boolean0);
      assertEquals((-142), optionAssigner0.clusterManager());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, 1, 1, (String) null, (String) null);
      Object object0 = optionAssigner0.productElement(1);
      assertEquals(1, object0);
      
      boolean boolean0 = optionAssigner0.equals(object0);
      assertEquals(1, optionAssigner0.copy$default$3());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, 1, 1, (String) null, (String) null);
      boolean boolean0 = optionAssigner0.equals(optionAssigner0);
      assertTrue(boolean0);
      assertEquals(1, optionAssigner0.copy$default$3());
      assertEquals(1, optionAssigner0.copy$default$2());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, 14, 14, (String) null, (String) null);
      // Undeclared exception!
      try { 
        optionAssigner0.productElement(14);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // java.lang.Integer@0000000012
         //
         verifyException("org.apache.spark.deploy.OptionAssigner", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Option<Tuple5<String, Object, Object, String, String>> option0 = OptionAssigner.unapply((OptionAssigner) null);
      assertNotNull(option0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("4'iu*2.6v=Cj", 0, 0, "4'iu*2.6v=Cj", "4'iu*2.6v=Cj");
      int int0 = optionAssigner0.copy$default$3();
      assertEquals(0, optionAssigner0.clusterManager());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, 1, 1, (String) null, (String) null);
      String string0 = optionAssigner0.toString();
      assertEquals("OptionAssigner(null,1,1,null,null)", string0);
      assertEquals(5, optionAssigner0.productArity());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply((String) null, 2342, (-1751), (String) null, (String) null);
      optionAssigner0.copy$default$5();
      assertEquals((-1751), optionAssigner0.deployMode());
      assertEquals(2342, optionAssigner0.copy$default$2());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner((String) null, 5, 5, (String) null, (String) null);
      optionAssigner0.hashCode();
      assertEquals(5, optionAssigner0.copy$default$2());
      assertEquals(5, optionAssigner0.deployMode());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Function1<Tuple5<String, Object, Object, String, String>, OptionAssigner> function1_0 = OptionAssigner.tupled();
      assertNotNull(function1_0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("%", 629, 0, "%", "%");
      int int0 = optionAssigner0.copy$default$2();
      assertEquals(629, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("E", 58, 58, "E", "E");
      OptionAssigner optionAssigner1 = new OptionAssigner("E", 58, 58, "E", "E");
      boolean boolean0 = optionAssigner0.equals(optionAssigner1);
      assertEquals(58, optionAssigner1.copy$default$3());
      assertEquals(58, optionAssigner1.clusterManager());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Function1<String, Function1<Object, Function1<Object, Function1<String, Function1<String, OptionAssigner>>>>> function1_0 = OptionAssigner.curried();
      assertNotNull(function1_0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("", (-2), (-2), "", "");
      OptionAssigner.unapply(optionAssigner0);
      assertEquals((-2), optionAssigner0.copy$default$3());
      assertEquals((-2), optionAssigner0.copy$default$2());
      assertEquals((-2), optionAssigner0.clusterManager());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("", 2, 2, "", "");
      optionAssigner0.copy$default$4();
      assertEquals(2, optionAssigner0.deployMode());
      assertEquals(2, optionAssigner0.clusterManager());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner((String) null, (-526), (-526), (String) null, (String) null);
      String string0 = optionAssigner0.copy$default$1();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      OptionAssigner optionAssigner0 = new OptionAssigner("", (-862048943), (-862048943), "", "");
      String string0 = optionAssigner0.productPrefix();
      assertEquals("OptionAssigner", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = OptionAssigner.apply$default$5();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = OptionAssigner.$lessinit$greater$default$4();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      OptionAssigner optionAssigner0 = OptionAssigner.apply("", 5, 0, "", "I2 <Zv>t(vV!,v");
      int int0 = optionAssigner0.productArity();
      assertEquals(5, optionAssigner0.clusterManager());
      assertEquals("I2 <Zv>t(vV!,v", optionAssigner0.copy$default$5());
      assertEquals("", optionAssigner0.copy$default$4());
      assertEquals(0, optionAssigner0.copy$default$3());
      assertEquals(5, int0);
      assertEquals("", optionAssigner0.copy$default$1());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = OptionAssigner.apply$default$4();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = OptionAssigner.$lessinit$greater$default$5();
      assertNull(string0);
  }
}
