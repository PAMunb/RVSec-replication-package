/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 22:42:30 GMT 2022
 */

package org.apache.spark.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.nio.file.Path;
import org.apache.spark.io.NioBufferedFileInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NioBufferedFileInputStream_ESTest extends NioBufferedFileInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((Path) null).when(file0).toPath();
      NioBufferedFileInputStream nioBufferedFileInputStream0 = null;
      try {
        nioBufferedFileInputStream0 = new NioBufferedFileInputStream(file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.channels.FileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NioBufferedFileInputStream nioBufferedFileInputStream0 = null;
      try {
        nioBufferedFileInputStream0 = new NioBufferedFileInputStream((File) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.io.NioBufferedFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NioBufferedFileInputStream nioBufferedFileInputStream0 = null;
      try {
        nioBufferedFileInputStream0 = new NioBufferedFileInputStream((File) null, (-49));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative capacity: -49
         //
         verifyException("java.nio.Buffer", e);
      }
  }
}
