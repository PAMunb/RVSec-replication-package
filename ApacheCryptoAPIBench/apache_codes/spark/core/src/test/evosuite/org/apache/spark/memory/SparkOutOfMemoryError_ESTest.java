/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 22 00:50:20 GMT 2022
 */

package org.apache.spark.memory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.spark.memory.SparkOutOfMemoryError;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SparkOutOfMemoryError_ESTest extends SparkOutOfMemoryError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SparkOutOfMemoryError sparkOutOfMemoryError0 = null;
      try {
        sparkOutOfMemoryError0 = new SparkOutOfMemoryError((OutOfMemoryError) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.spark.memory.SparkOutOfMemoryError", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SparkOutOfMemoryError sparkOutOfMemoryError0 = new SparkOutOfMemoryError("");
      SparkOutOfMemoryError sparkOutOfMemoryError1 = new SparkOutOfMemoryError(sparkOutOfMemoryError0);
      assertEquals("", sparkOutOfMemoryError1.getMessage());
  }
}
