/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 16:51:58 GMT 2022
 */

package org.apache.manifoldcf.core.interfaces;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.InputStream;
import java.io.Reader;
import org.apache.manifoldcf.core.interfaces.CharacterInput;
import org.apache.manifoldcf.core.interfaces.NullCharacterInput;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NullCharacterInput_ESTest extends NullCharacterInput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      nullCharacterInput0.calculateLength();
      assertEquals(0L, nullCharacterInput0.getUtf8StreamLength());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      nullCharacterInput0.discard();
      assertEquals(0L, nullCharacterInput0.getCharacterLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      InputStream inputStream0 = nullCharacterInput0.getUtf8Stream();
      assertEquals(0, inputStream0.available());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      long long0 = nullCharacterInput0.getUtf8StreamLength();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      String string0 = nullCharacterInput0.getHashValue();
      assertEquals("DA39A3EE5E6B4B0D3255BFEF95601890AFD80709", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      nullCharacterInput0.closeStream();
      assertEquals(0L, nullCharacterInput0.getUtf8StreamLength());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      nullCharacterInput0.openStream();
      assertEquals(0L, nullCharacterInput0.getCharacterLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      nullCharacterInput0.doneWithStream();
      assertEquals(0L, nullCharacterInput0.getUtf8StreamLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      CharacterInput characterInput0 = nullCharacterInput0.transfer();
      assertEquals(0L, characterInput0.getCharacterLength());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      nullCharacterInput0.calculateHashValue();
      assertEquals(0L, nullCharacterInput0.getCharacterLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      Reader reader0 = nullCharacterInput0.getStream();
      assertNotNull(reader0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      long long0 = nullCharacterInput0.getCharacterLength();
      assertEquals(0L, long0);
  }
}
