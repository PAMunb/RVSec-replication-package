/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:27:24 GMT 2022
 */

package org.apache.manifoldcf.core.system;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.log4j.Logger;
import org.apache.manifoldcf.core.interfaces.ManifoldCFConfiguration;
import org.apache.manifoldcf.core.system.Logging;
import org.apache.manifoldcf.core.system.ManifoldCF;
import org.apache.manifoldcf.core.threadcontext.ThreadContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Logging_ESTest extends Logging_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      File file0 = MockFile.createTempFile("Cxb}--iq", "\"O:Ja_7 &`.K`dk.");
      Logging.initializeLoggingSystem(file0);
      Logger logger0 = Logging.getLogger("");
      assertNull(logger0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      File file0 = MockFile.createTempFile("_@.x7J{AH>f", "_@.x7J{AH>f");
      Logging.initializeLoggingSystem(file0);
      Logger logger0 = Logging.newLogger("|}:FQ");
      assertNotNull(logger0);
      
      Logger logger1 = Logging.getLogger("|}:FQ");
      assertEquals("|}:FQ", logger1.getName());
      assertNotNull(logger1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        Logging.initializeLoggingSystem((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.Logging", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Logging.newLogger("@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.Logging", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Fnoatsst?[ngConvQrter()", "Fnoatsst?[ngConvQrter()");
      Logging.initializeLoggingSystem(mockFile0);
      ThreadContext threadContext0 = new ThreadContext();
      ManifoldCFConfiguration manifoldCFConfiguration0 = new ManifoldCFConfiguration();
      ManifoldCF.localConfiguration = manifoldCFConfiguration0;
      Logging.initializeLoggers();
      Logging.setLogLevels(threadContext0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Fnoatsst?[ngConvQrter()", "Fnoatsst?[ngConvQrter()");
      Logging.initializeLoggingSystem(mockFile0);
      ThreadContext threadContext0 = new ThreadContext();
      Logging.initializeLoggers();
      // Undeclared exception!
      try { 
        Logging.setLogLevels(threadContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Fnoatsst?[ngConvQrter()", "Fnoatsst?[ngConvQrter()");
      Logging.initializeLoggingSystem(mockFile0);
      Logging.initializeLoggers();
      Logging.initializeLoggers();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Fnoatsst?[ngConvQrter()", "Fnoatsst?[ngConvQrter()");
      Logging.initializeLoggingSystem(mockFile0);
      Logging.initializeLoggingSystem(mockFile0);
      assertEquals(0L, mockFile0.getTotalSpace());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Logging.initializeLoggers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.Logging", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        Logging.getLogger("{ECah}&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.Logging", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Logging logging0 = new Logging();
  }
}
