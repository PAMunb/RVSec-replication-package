/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:23:13 GMT 2022
 */

package org.apache.manifoldcf.core.lockmanager;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.manifoldcf.core.lockmanager.ZooKeeperLockManager;
import org.apache.manifoldcf.core.threadcontext.ThreadContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ZooKeeperLockManager_ESTest extends ZooKeeperLockManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ZooKeeperLockManager.shutdownPool();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Unable to create class {} specified in {}";
      // Undeclared exception!
      try { 
        ZooKeeperLockManager.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = ZooKeeperLockManager.buildServiceTypeLockPath(":MuZF@G[VT)>46");
      assertEquals("/org.apache.manifoldcf/servicelock-:MuZF@G[VT)>46", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = ZooKeeperLockManager.buildServiceTypeActivePath("vIQAj(6E{P~", "):");
      assertEquals("/org.apache.manifoldcf/serviceactive-vIQAj(6E{P~-):", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        ZooKeeperLockManager.makeServiceCounterName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        ZooKeeperLockManager.buildServiceTypeRegistrationPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        ZooKeeperLockManager.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        ZooKeeperLockManager.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ZooKeeperLockManager zooKeeperLockManager0 = null;
      try {
        zooKeeperLockManager0 = new ZooKeeperLockManager();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ZooKeeperLockManager.ZooKeeperShutdown zooKeeperLockManager_ZooKeeperShutdown0 = new ZooKeeperLockManager.ZooKeeperShutdown();
      ThreadContext threadContext0 = new ThreadContext();
      zooKeeperLockManager_ZooKeeperShutdown0.doCleanup(threadContext0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = ZooKeeperLockManager.buildServiceTypeRegistrationPath("/org.apache.manifoldcf/resources-");
      assertEquals("/org.apache.manifoldcf/service-\\0org.apache.manifoldcf\\0resources-", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = ZooKeeperLockManager.makeServiceCounterName("/org.apache.manifoldcf/resources-");
      assertEquals("/org.apache.manifoldcf/serviceanon-\\0org.apache.manifoldcf\\0resources-", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        ZooKeeperLockManager.buildServiceTypeActivePath((String) null, "' of type '");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        ZooKeeperLockManager.buildServiceTypeLockPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }
}
