/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:54:46 GMT 2022
 */

package org.apache.manifoldcf.core.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Enumeration;
import java.util.Stack;
import org.apache.manifoldcf.core.common.Base64;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Base64_ESTest extends Base64_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-109);
      String string0 = base64_0.encodeByteArray(byteArray0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)83;
      String string0 = base64_0.encodeByteArray(byteArray0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-26);
      String string0 = base64_0.encodeByteArray(byteArray0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = base64_0.decodeString("");
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Base64 base64_0 = new Base64();
      StringReader stringReader0 = new StringReader("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      File file0 = MockFile.createTempFile("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $", (String) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 3309);
      boolean boolean0 = base64_0.decodeNextWord(stringReader0, bufferedOutputStream0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Base64 base64_0 = new Base64();
      PipedInputStream pipedInputStream0 = new PipedInputStream(76);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      try { 
        base64_0.encodeStream(pipedInputStream0, charArrayWriter0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error encoding in base64
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Base64 base64_0 = new Base64();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      Charset charset0 = Charset.defaultCharset();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(filterOutputStream0, charset0);
      // Undeclared exception!
      try { 
        base64_0.encodeStream((InputStream) null, outputStreamWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1634), 106);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        base64_0.encodeStream(byteArrayInputStream0, stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Base64 base64_0 = new Base64();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        base64_0.encodeNextWord(pipedInputStream0, (Writer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error encoding in base64
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-420), (byte)81);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $", false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      // Undeclared exception!
      try { 
        base64_0.encodeNextWord(byteArrayInputStream0, mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Base64 base64_0 = new Base64();
      // Undeclared exception!
      try { 
        base64_0.decodeString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Base64 base64_0 = new Base64();
      char[] charArray0 = new char[1];
      base64_0.characterBuffer = charArray0;
      // Undeclared exception!
      try { 
        base64_0.decodeString("TwfEPG<+j;& KL1");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Base64 base64_0 = new Base64();
      PipedReader pipedReader0 = new PipedReader();
      MockPrintStream mockPrintStream0 = new MockPrintStream("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      try { 
        base64_0.decodeStream(pipedReader0, objectOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error converting from base 64
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Base64 base64_0 = new Base64();
      MockPrintStream mockPrintStream0 = new MockPrintStream("Z1?m");
      // Undeclared exception!
      try { 
        base64_0.decodeStream((Reader) null, mockPrintStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Base64 base64_0 = new Base64();
      StringReader stringReader0 = new StringReader("\"5QvUV:z'VU");
      char[] charArray0 = new char[3];
      base64_0.characterBuffer = charArray0;
      // Undeclared exception!
      try { 
        base64_0.decodeNextWord(stringReader0, (OutputStream) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFile mockFile0 = new MockFile("", "MGTWEx");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, true);
      base64_0.encodeStream(byteArrayInputStream0, mockFileWriter0);
      assertEquals(0, byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        base64_0.encodeNextWord(byteArrayInputStream0, (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Base64 base64_0 = new Base64();
      MockFile mockFile0 = new MockFile("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      boolean boolean0 = base64_0.encodeNextWord(byteArrayInputStream0, mockPrintWriter0);
      assertEquals(1, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        base64_0.encodeNextWord(byteArrayInputStream0, (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Base64 base64_0 = new Base64();
      Stack<PushbackInputStream> stack0 = new Stack<PushbackInputStream>();
      Enumeration<PushbackInputStream> enumeration0 = stack0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      MockFile mockFile0 = new MockFile("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $", "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      boolean boolean0 = base64_0.encodeNextWord(sequenceInputStream0, mockPrintWriter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Base64 base64_0 = new Base64();
      StringReader stringReader0 = new StringReader("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0, (byte)36);
      base64_0.decodeStream(stringReader0, bufferedOutputStream0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Base64 base64_0 = new Base64();
      StringReader stringReader0 = new StringReader("nIJ-");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        base64_0.decodeNextWord(stringReader0, pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected end of base64 input
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Base64 base64_0 = new Base64();
      StringReader stringReader0 = new StringReader("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      CharBuffer charBuffer0 = CharBuffer.allocate(93);
      stringReader0.read(charBuffer0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("#");
      boolean boolean0 = base64_0.decodeNextWord(stringReader0, mockFileOutputStream0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Base64 base64_0 = new Base64();
      StringReader stringReader0 = new StringReader("=`t1L}*K95p(1$@@z");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        base64_0.decodeNextWord(stringReader0, filterOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[8];
      base64_0.byteBuffer = byteArray0;
      // Undeclared exception!
      try { 
        base64_0.encodeByteArray(base64_0.byteBuffer);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Should never get here
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[0];
      base64_0.byteBuffer = byteArray0;
      byte[] byteArray1 = base64_0.decodeString("kTwfEPG<+j;& KL1");
      try { 
        base64_0.encodeByteArray(byteArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Read 0 bytes!
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = base64_0.decodeString("j`L>^=!j");
      assertArrayEquals(new byte[] {(byte) (-116)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Base64 base64_0 = new Base64();
      try { 
        base64_0.decodeString(";}E?. -_#KLP?L>|n");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected end of base64 input
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Base64 base64_0 = new Base64();
      // Undeclared exception!
      try { 
        base64_0.encodeByteArray((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }
}
