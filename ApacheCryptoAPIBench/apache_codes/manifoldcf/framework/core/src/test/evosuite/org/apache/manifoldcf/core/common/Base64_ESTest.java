/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:25:33 GMT 2022
 */

package org.apache.manifoldcf.core.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.DataOutputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.Reader;
import java.io.StringReader;
import java.net.URI;
import org.apache.manifoldcf.core.common.Base64;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64_ESTest extends Base64_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-51);
      base64_0.encodeByteArray(byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-121);
      base64_0.encodeByteArray(byteArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)109;
      base64_0.encodeByteArray(byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Base64 base64_0 = new Base64();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(2644);
      try { 
        base64_0.encodeStream(pipedInputStream0, charArrayWriter0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error encoding in base64
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Base64 base64_0 = new Base64();
      MockFileWriter mockFileWriter0 = new MockFileWriter("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $", false);
      // Undeclared exception!
      try { 
        base64_0.encodeStream((InputStream) null, mockFileWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Base64 base64_0 = new Base64();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);
      try { 
        base64_0.encodeNextWord(pipedInputStream0, mockPrintWriter0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error encoding in base64
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Base64 base64_0 = new Base64();
      MockFileWriter mockFileWriter0 = new MockFileWriter("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      // Undeclared exception!
      try { 
        base64_0.encodeNextWord((InputStream) null, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Base64 base64_0 = new Base64();
      // Undeclared exception!
      try { 
        base64_0.encodeByteArray((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Base64 base64_0 = new Base64();
      // Undeclared exception!
      try { 
        base64_0.decodeString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Base64 base64_0 = new Base64();
      base64_0.characterBuffer = null;
      // Undeclared exception!
      try { 
        base64_0.decodeString("/,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Base64 base64_0 = new Base64();
      char[] charArray0 = new char[1];
      base64_0.characterBuffer = charArray0;
      // Undeclared exception!
      try { 
        base64_0.decodeString("The wildcard must not be null");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Base64 base64_0 = new Base64();
      PipedReader pipedReader0 = new PipedReader(6);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(4669);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      try { 
        base64_0.decodeStream(pipedReader0, dataOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error converting from base 64
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Base64 base64_0 = new Base64();
      File file0 = MockFile.createTempFile("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0, 2282);
      // Undeclared exception!
      try { 
        base64_0.decodeStream((Reader) null, bufferedOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Base64 base64_0 = new Base64();
      PipedReader pipedReader0 = new PipedReader();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      try { 
        base64_0.decodeNextWord(pipedReader0, mockFileOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error converting from base 64
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Base64 base64_0 = new Base64();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("|SARIg9?Ye&p@LumaEW", true);
      // Undeclared exception!
      try { 
        base64_0.decodeNextWord((Reader) null, mockFileOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      base64_0.encodeStream(byteArrayInputStream0, mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 117);
      byteArrayInputStream0.read();
      MockFileWriter mockFileWriter0 = new MockFileWriter("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      base64_0.encodeNextWord(byteArrayInputStream0, mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-73), 0);
      MockFile mockFile0 = new MockFile("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      base64_0.encodeNextWord(byteArrayInputStream0, mockPrintWriter0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Base64 base64_0 = new Base64();
      StringReader stringReader0 = new StringReader("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      base64_0.decodeStream(stringReader0, mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Base64 base64_0 = new Base64();
      StringReader stringReader0 = new StringReader("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $");
      PipedInputStream pipedInputStream0 = new PipedInputStream(927);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, false);
      base64_0.decodeNextWord(stringReader0, mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[7];
      base64_0.byteBuffer = byteArray0;
      // Undeclared exception!
      try { 
        base64_0.encodeByteArray(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Should never get here
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 117);
      MockFileWriter mockFileWriter0 = new MockFileWriter("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $", true);
      base64_0.encodeNextWord(byteArrayInputStream0, mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("@(#)$Id: Base64.java 988245 2010-08-23 18:39:35Z kwright $", true);
      base64_0.encodeNextWord(byteArrayInputStream0, mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Base64 base64_0 = new Base64();
      String string0 = "8Kx#E\\u1DYf~cy5=J6B";
      base64_0.decodeString(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Base64 base64_0 = new Base64();
      byte[] byteArray0 = base64_0.decodeString("");
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Base64 base64_0 = new Base64();
      try { 
        base64_0.decodeString("com.google.common.base.Predicates$NotPredicate");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected end of base64 input
         //
         verifyException("org.apache.manifoldcf.core.common.Base64", e);
      }
  }
}
