/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:19:46 GMT 2022
 */

package org.apache.manifoldcf.core.system;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.security.InvalidParameterException;
import java.security.MessageDigest;
import java.util.Enumeration;
import java.util.Stack;
import org.apache.manifoldcf.core.interfaces.IDBInterface;
import org.apache.manifoldcf.core.interfaces.IThreadContext;
import org.apache.manifoldcf.core.interfaces.ManifoldCFConfiguration;
import org.apache.manifoldcf.core.system.ManifoldCF;
import org.apache.manifoldcf.core.threadcontext.ThreadContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ManifoldCF_ESTest extends ManifoldCF_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-58);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(9, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte) (-58), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      float float0 = ManifoldCF.readfloat(byteArrayInputStream0);
      assertEquals(1.8183428E-38F, float0, 0.01F);
      assertEquals(5, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte) (-58), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(9, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)11, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      float float0 = ManifoldCF.readfloat(byteArrayInputStream0);
      assertEquals(3.946E-42F, float0, 0.01F);
      assertEquals(5, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)11, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(8, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)106, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(8, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      int int0 = ManifoldCF.readWord(byteArrayInputStream0);
      assertEquals(27136, int0);
      assertEquals(6, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)106, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(8, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      char char0 = ManifoldCF.writeNibble(24);
      assertEquals('O', char0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ManifoldCF.ShutdownThread manifoldCF_ShutdownThread0 = new ManifoldCF.ShutdownThread();
      assertNotNull(manifoldCF_ShutdownThread0);
      
      manifoldCF_ShutdownThread0.run();
      assertFalse(manifoldCF_ShutdownThread0.isDaemon());
      assertFalse(manifoldCF_ShutdownThread0.isInterrupted());
      assertEquals(0, manifoldCF_ShutdownThread0.countStackFrames());
      
      ThreadContext threadContext0 = new ThreadContext();
      assertNotNull(threadContext0);
      
      ManifoldCF.resetEnvironment((IThreadContext) threadContext0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ManifoldCF.OverrideableManifoldCFConfiguration manifoldCF_OverrideableManifoldCFConfiguration0 = new ManifoldCF.OverrideableManifoldCFConfiguration();
      assertEquals(0, manifoldCF_OverrideableManifoldCFConfiguration0.getChildCount());
      assertNotNull(manifoldCF_OverrideableManifoldCFConfiguration0);
      
      String string0 = manifoldCF_OverrideableManifoldCFConfiguration0.getProperty("com.google.common.hash.BloomFilter");
      assertEquals(0, manifoldCF_OverrideableManifoldCFConfiguration0.getChildCount());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(47);
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedOutputStream0);
      
      ManifoldCF.writefloat(pipedOutputStream0, 1.0F);
      assertEquals(4, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("WPZ#:i!e6R;siJ");
      assertNotNull(mockFileOutputStream0);
      
      ManifoldCF.writeDword(mockFileOutputStream0, 1325);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ManifoldCF.sleep(255L);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro/lcf/properties.xml");
      byte[] byteArray0 = new byte[6];
      boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      assertTrue(boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(6, byteArray0.length);
      
      try { 
        ManifoldCF.initializeEnvironment();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Initialization failed: Could not read configuration file '/home/pedro/lcf/properties.xml'
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      char char0 = ManifoldCF.writeNibble((-2189));
      assertEquals('\uF7A3', char0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      char char0 = ManifoldCF.writeNibble(6);
      assertEquals('6', char0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = ManifoldCF.safeFileName("");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("acx{]H6L`y=");
      byte[] byteArray0 = new byte[9];
      boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      assertTrue(boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      
      File file0 = ManifoldCF.resolvePath("acx{]H6L`y=");
      assertFalse(file0.isAbsolute());
      assertEquals("acx{]H6L`y=", file0.toString());
      assertEquals(1392409281320L, file0.lastModified());
      assertNull(file0.getParent());
      assertEquals(0L, file0.getTotalSpace());
      assertFalse(file0.isDirectory());
      assertTrue(file0.canWrite());
      assertTrue(file0.canExecute());
      assertEquals(0L, file0.getFreeSpace());
      assertEquals(9L, file0.length());
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isHidden());
      assertTrue(file0.isFile());
      assertTrue(file0.canRead());
      assertTrue(file0.exists());
      assertEquals("acx{]H6L`y=", file0.getName());
      assertNotNull(file0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-58);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(9, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte) (-58), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      float float0 = ManifoldCF.readfloat(byteArrayInputStream0);
      assertEquals((-8192.0F), float0, 0.01F);
      assertEquals(5, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte) (-58), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)56;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(7, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)56, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(7, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      int int0 = ManifoldCF.readSdword(byteArrayInputStream0);
      assertEquals(56, int0);
      assertEquals(3, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)56, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(7, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(8, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(8, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      int int0 = ManifoldCF.readByte(byteArrayInputStream0);
      assertEquals(0, int0);
      assertEquals(7, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(8, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = ManifoldCF.obfuscate((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      boolean boolean0 = ManifoldCF.isFolder("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = ManifoldCF.encrypt("yF", "org.apache.manifoldcf.configuration.change.command", "Nyh<K;v3Z-YQ*bzs`");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      System.setCurrentTimeMillis((-2551L));
      File file0 = ManifoldCF.createTempDir("a", "WZJwV5.o!F");
      assertEquals((-2551L), file0.lastModified());
      assertEquals(0L, file0.getUsableSpace());
      assertTrue(file0.exists());
      assertEquals("/tmp", file0.getParent());
      assertTrue(file0.isAbsolute());
      assertFalse(file0.isFile());
      assertTrue(file0.canRead());
      assertTrue(file0.canExecute());
      assertFalse(file0.isHidden());
      assertEquals("a81889WZJwV5.o!F", file0.getName());
      assertEquals(0L, file0.getTotalSpace());
      assertTrue(file0.isDirectory());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.canWrite());
      assertEquals(0L, file0.length());
      assertEquals("/tmp/a81889WZJwV5.o!F", file0.toString());
      assertNotNull(file0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.writeString((OutputStream) null, "1>hdw9H7[C ;5L");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      try { 
        ManifoldCF.writeString(pipedOutputStream0, "l*");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.writeSdword((OutputStream) null, (byte)110);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.writeByte((OutputStream) null, 2486);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.safeFileName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.resolvePath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.registerConnectorServices();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.readfloat((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(0, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      try { 
        ManifoldCF.readfloat(byteArrayInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected EOF
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.readWord((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Stack<InputStream> stack0 = new Stack<InputStream>();
      assertEquals(0, stack0.size());
      assertTrue(stack0.empty());
      assertTrue(stack0.isEmpty());
      assertEquals(10, stack0.capacity());
      assertEquals("[]", stack0.toString());
      assertNotNull(stack0);
      
      Enumeration<InputStream> enumeration0 = stack0.elements();
      assertEquals(0, stack0.size());
      assertTrue(stack0.empty());
      assertTrue(stack0.isEmpty());
      assertEquals(10, stack0.capacity());
      assertEquals("[]", stack0.toString());
      assertNotNull(enumeration0);
      
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      assertEquals(0, stack0.size());
      assertTrue(stack0.empty());
      assertTrue(stack0.isEmpty());
      assertEquals(10, stack0.capacity());
      assertEquals("[]", stack0.toString());
      assertNotNull(sequenceInputStream0);
      
      try { 
        ManifoldCF.readWord(sequenceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected EOF
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.readString((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2063), 61);
      assertEquals(61, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      // Undeclared exception!
      try { 
        ManifoldCF.readString(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Stack<InputStream> stack0 = new Stack<InputStream>();
      assertTrue(stack0.isEmpty());
      assertEquals("[]", stack0.toString());
      assertEquals(10, stack0.capacity());
      assertEquals(0, stack0.size());
      assertTrue(stack0.empty());
      assertNotNull(stack0);
      
      Enumeration<InputStream> enumeration0 = stack0.elements();
      assertTrue(stack0.isEmpty());
      assertEquals("[]", stack0.toString());
      assertEquals(10, stack0.capacity());
      assertEquals(0, stack0.size());
      assertTrue(stack0.empty());
      assertNotNull(enumeration0);
      
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      assertTrue(stack0.isEmpty());
      assertEquals("[]", stack0.toString());
      assertEquals(10, stack0.capacity());
      assertEquals(0, stack0.size());
      assertTrue(stack0.empty());
      assertNotNull(sequenceInputStream0);
      
      try { 
        ManifoldCF.readString(sequenceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected EOF
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.readSdword((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.readLong((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      File file0 = ManifoldCF.resolvePath("MQ8Q/Yl<SY| /");
      assertEquals(0L, file0.length());
      assertEquals("MQ8Q", file0.getParent());
      assertEquals(0L, file0.getTotalSpace());
      assertFalse(file0.canWrite());
      assertEquals("Yl<SY| ", file0.getName());
      assertFalse(file0.isAbsolute());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getFreeSpace());
      assertEquals(0L, file0.lastModified());
      assertFalse(file0.isHidden());
      assertEquals(0L, file0.getUsableSpace());
      assertEquals("MQ8Q/Yl<SY| ", file0.toString());
      assertFalse(file0.canExecute());
      assertFalse(file0.canRead());
      assertFalse(file0.exists());
      assertTrue(file0.isFile());
      assertNotNull(file0);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      assertNotNull(mockFileOutputStream0);
      
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      assertNotNull(mockFileInputStream0);
      
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      assertTrue(file0.exists());
      assertEquals(0L, file0.length());
      assertEquals("MQ8Q", file0.getParent());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals("Yl<SY| ", file0.getName());
      assertFalse(file0.isAbsolute());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.canWrite());
      assertFalse(file0.isHidden());
      assertTrue(file0.canExecute());
      assertEquals(0L, file0.getUsableSpace());
      assertEquals("MQ8Q/Yl<SY| ", file0.toString());
      assertTrue(file0.canRead());
      assertTrue(file0.isFile());
      assertEquals(0, mockFileInputStream0.available());
      assertNotNull(dataInputStream0);
      
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0, 58);
      assertTrue(file0.exists());
      assertEquals(0L, file0.length());
      assertEquals("MQ8Q", file0.getParent());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals("Yl<SY| ", file0.getName());
      assertFalse(file0.isAbsolute());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.canWrite());
      assertFalse(file0.isHidden());
      assertTrue(file0.canExecute());
      assertEquals(0L, file0.getUsableSpace());
      assertEquals("MQ8Q/Yl<SY| ", file0.toString());
      assertTrue(file0.canRead());
      assertTrue(file0.isFile());
      assertEquals(0, mockFileInputStream0.available());
      assertNotNull(bufferedInputStream0);
      
      // Undeclared exception!
      try { 
        ManifoldCF.readBytes(bufferedInputStream0, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.readByteArray((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(2, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
      assertEquals(2, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
      assertEquals(2, byteArray0.length);
      assertNotNull(pushbackInputStream0);
      
      try { 
        ManifoldCF.readByteArray(pushbackInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected EOF
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = ManifoldCF.getSecureRandom();
      assertEquals(16, byteArray0.length);
      assertNotNull(byteArray0);
      
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1180), (-1180));
      assertEquals((-1180), byteArrayInputStream0.available());
      assertEquals(16, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      try { 
        ManifoldCF.readByte(byteArrayInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected EOF
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.noteConfigurationChange();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.isFolder((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      assertNotNull(threadContext0);
      
      // Undeclared exception!
      try { 
        ManifoldCF.getSaltValue(threadContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      try { 
        ManifoldCF.getHashValue((MessageDigest) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't encrypt: null
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        ManifoldCF.getCipher("&t[", 0, "&t[", byteArray0);
        fail("Expecting exception: InvalidParameterException");
      
      } catch(InvalidParameterException e) {
         //
         // Invalid operation mode
         //
         verifyException("javax.crypto.Cipher", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.getCipher("n'OkH", 960, "n'OkH", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.crypto.spec.IvParameterSpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.getCipher("", 1978, "REk{\"<EOY\"", (byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // the salt parameter must not be empty
         //
         verifyException("javax.crypto.spec.PBEKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      try { 
        ManifoldCF.ensureFolder((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't make folder
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.encrypt("", "_/=KARcjP3:", ";!/{]IKj)'c0(+!6f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // the salt parameter must not be empty
         //
         verifyException("javax.crypto.spec.PBEKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.deleteFolder((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.checkProperties();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.checkMaintenanceUnderway();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      try { 
        ManifoldCF.addToHash((MessageDigest) null, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't encrypt: null
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      assertNotNull(threadContext0);
      
      ManifoldCF.cleanUpEnvironment((IThreadContext) threadContext0);
      ManifoldCF.DatabaseShutdown manifoldCF_DatabaseShutdown0 = new ManifoldCF.DatabaseShutdown();
      assertNotNull(manifoldCF_DatabaseShutdown0);
      
      manifoldCF_DatabaseShutdown0.finalize();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(8, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(8, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      ManifoldCF.readBytes(byteArrayInputStream0, byteArray0);
      assertEquals(0, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(8, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("AES/CBC/PKCS5Padding");
      assertNotNull(mockPrintStream0);
      
      byte[] byteArray0 = new byte[4];
      ManifoldCF.writeByteArray(mockPrintStream0, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(4, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      try { 
        ManifoldCF.decrypt("PBKDF2WithHmacSHA1", "name", "_>u`znT|");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // String can't be decrypted: too short
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = ManifoldCF.decrypt("HDA^;n)$~-NN<ujAc", "", "");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = ManifoldCF.decrypt((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.encrypt((String) null, (String) null, "R");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String string0 = ManifoldCF.encrypt((String) null, (String) null, "");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      MessageDigest messageDigest0 = ManifoldCF.startHash();
      assertEquals("SHA", messageDigest0.getAlgorithm());
      assertEquals("SHA Message Digest from SUN, <initialized>\n", messageDigest0.toString());
      assertNotNull(messageDigest0);
      
      String string0 = ManifoldCF.getHashValue(messageDigest0);
      assertEquals("DA39A3EE5E6B4B0D3255BFEF95601890AFD80709", string0);
      assertEquals("SHA", messageDigest0.getAlgorithm());
      assertEquals("SHA Message Digest from SUN, <initialized>\n", messageDigest0.toString());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      File file0 = ManifoldCF.resolvePath("org.apache.manifoldcf.fileresources");
      assertEquals("org.apache.manifoldcf.fileresources", file0.getName());
      assertNull(file0.getParent());
      assertEquals(0L, file0.getTotalSpace());
      assertFalse(file0.canExecute());
      assertFalse(file0.canRead());
      assertEquals(0L, file0.length());
      assertFalse(file0.isAbsolute());
      assertFalse(file0.exists());
      assertTrue(file0.isFile());
      assertEquals("org.apache.manifoldcf.fileresources", file0.toString());
      assertFalse(file0.isHidden());
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.canWrite());
      assertEquals(0L, file0.lastModified());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getFreeSpace());
      assertNotNull(file0);
      
      ManifoldCF.recursiveDelete(file0);
      assertEquals("org.apache.manifoldcf.fileresources", file0.getName());
      assertNull(file0.getParent());
      assertEquals(0L, file0.getTotalSpace());
      assertFalse(file0.canExecute());
      assertFalse(file0.canRead());
      assertEquals(0L, file0.length());
      assertFalse(file0.isAbsolute());
      assertFalse(file0.exists());
      assertTrue(file0.isFile());
      assertEquals("org.apache.manifoldcf.fileresources", file0.toString());
      assertFalse(file0.isHidden());
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.canWrite());
      assertEquals(0L, file0.lastModified());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getFreeSpace());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ManifoldCF.ShutdownThread manifoldCF_ShutdownThread0 = new ManifoldCF.ShutdownThread();
      assertNotNull(manifoldCF_ShutdownThread0);
      
      manifoldCF_ShutdownThread0.run();
      assertFalse(manifoldCF_ShutdownThread0.isDaemon());
      assertEquals(0, manifoldCF_ShutdownThread0.countStackFrames());
      assertFalse(manifoldCF_ShutdownThread0.isInterrupted());
      
      ThreadContext threadContext0 = new ThreadContext();
      assertNotNull(threadContext0);
      
      ManifoldCF.initializeEnvironment((IThreadContext) threadContext0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      assertNotNull(threadContext0);
      
      try { 
        ManifoldCF.initializeEnvironment((IThreadContext) threadContext0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Initialization failed: Could not read configuration file '/home/pedro/lcf/properties.xml'
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      assertNotNull(threadContext0);
      
      ManifoldCF.resetEnvironment((IThreadContext) threadContext0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = ManifoldCF.getMasterDatabasePassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.getProperty("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.getStringProperty("", "CREATE ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-16), (byte)0);
      assertEquals(0, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(5, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      try { 
        ManifoldCF.readSdword(byteArrayInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected EOF
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      MessageDigest messageDigest0 = ManifoldCF.startHash();
      assertEquals("SHA", messageDigest0.getAlgorithm());
      assertEquals("SHA Message Digest from SUN, <initialized>\n", messageDigest0.toString());
      assertNotNull(messageDigest0);
      
      ManifoldCF.addToHash(messageDigest0, "org.apache.manifoldcf.authimplementationclass");
      assertEquals("SHA", messageDigest0.getAlgorithm());
      assertEquals("SHA Message Digest from SUN, <in progress>\n", messageDigest0.toString());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = ManifoldCF.getMasterDatabaseName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("~0[)tI#jA", true);
      assertNotNull(mockFileOutputStream0);
      
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      assertNotNull(dataOutputStream0);
      
      ManifoldCF.writeBytes(dataOutputStream0, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(4, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = ManifoldCF.getMasterDatabaseUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ManifoldCF.ShutdownThread manifoldCF_ShutdownThread0 = new ManifoldCF.ShutdownThread();
      assertNotNull(manifoldCF_ShutdownThread0);
      
      manifoldCF_ShutdownThread0.run();
      assertFalse(manifoldCF_ShutdownThread0.isInterrupted());
      assertFalse(manifoldCF_ShutdownThread0.isDaemon());
      assertEquals(0, manifoldCF_ShutdownThread0.countStackFrames());
      
      ManifoldCF.DatabaseShutdown manifoldCF_DatabaseShutdown0 = new ManifoldCF.DatabaseShutdown();
      assertNotNull(manifoldCF_DatabaseShutdown0);
      
      manifoldCF_DatabaseShutdown0.closeDatabase();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ManifoldCF.FileTrack manifoldCF_FileTrack0 = new ManifoldCF.FileTrack();
      assertNotNull(manifoldCF_FileTrack0);
      
      ThreadContext threadContext0 = new ThreadContext();
      assertNotNull(threadContext0);
      
      File file0 = ManifoldCF.resolvePath("");
      assertTrue(file0.canExecute());
      assertTrue(file0.canRead());
      assertEquals("", file0.getName());
      assertTrue(file0.isDirectory());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals("", file0.toString());
      assertEquals(0L, file0.getTotalSpace());
      assertTrue(file0.canWrite());
      assertEquals(0L, file0.getFreeSpace());
      assertEquals(0L, file0.length());
      assertFalse(file0.isAbsolute());
      assertEquals(0L, file0.getUsableSpace());
      assertNull(file0.getParent());
      assertTrue(file0.exists());
      assertFalse(file0.isHidden());
      assertFalse(file0.isFile());
      assertNotNull(file0);
      
      manifoldCF_FileTrack0.addFile(file0);
      assertTrue(file0.canExecute());
      assertTrue(file0.canRead());
      assertEquals("", file0.getName());
      assertTrue(file0.isDirectory());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals("", file0.toString());
      assertEquals(0L, file0.getTotalSpace());
      assertTrue(file0.canWrite());
      assertEquals(0L, file0.getFreeSpace());
      assertEquals(0L, file0.length());
      assertFalse(file0.isAbsolute());
      assertEquals(0L, file0.getUsableSpace());
      assertNull(file0.getParent());
      assertTrue(file0.exists());
      assertFalse(file0.isHidden());
      assertFalse(file0.isFile());
      
      manifoldCF_FileTrack0.doCleanup(threadContext0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      assertNotNull(threadContext0);
      
      ManifoldCF.pollAll(threadContext0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(1, byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      try { 
        ManifoldCF.readLong(byteArrayInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected EOF
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.manifoldcf.database.name");
      assertNotNull(mockPrintStream0);
      
      ManifoldCF.writeByteArray(mockPrintStream0, (byte[]) null);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("AES/CBC/PKCS5Padding");
      assertNotNull(mockPrintStream0);
      
      ManifoldCF.writeString(mockPrintStream0, "c:sxQ+Ky");
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.writeLong((OutputStream) null, (Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("AES/CBC/PKCS5Padding");
      assertNotNull(mockPrintStream0);
      
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      ManifoldCF.writeLong(mockPrintStream0, long0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 49);
      assertNotNull(bufferedOutputStream0);
      
      // Undeclared exception!
      try { 
        ManifoldCF.writeDword(bufferedOutputStream0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attempt to use an unsigned operator to write a signed value
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.writeDword((OutputStream) null, 1170);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/ORDER BY 44731139724645");
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, "ORDER BY ");
      assertTrue(boolean0);
      
      File file0 = ManifoldCF.createTempDir("ORDER BY ", "");
      assertTrue(file0.isAbsolute());
      assertTrue(file0.canExecute());
      assertEquals("/tmp", file0.getParent());
      assertFalse(file0.isFile());
      assertEquals(0L, file0.getUsableSpace());
      assertTrue(file0.isDirectory());
      assertFalse(file0.isHidden());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.canWrite());
      assertEquals(0L, file0.length());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals("/tmp/ORDER BY 44731139724646", file0.toString());
      assertEquals("ORDER BY 44731139724646", file0.getName());
      assertTrue(file0.canRead());
      assertTrue(file0.exists());
      assertEquals(1392409281320L, file0.lastModified());
      assertNotNull(file0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      try { 
        ManifoldCF.createTempDir("com.google.common.base.Functions$PredicateFunction", "`u3H6#p6XNP/bZR");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Temporary directory appears to be unwritable
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = ManifoldCF.readNibble('1');
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      try { 
        ManifoldCF.readNibble('R');
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Bad hexadecimal value
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = ManifoldCF.readNibble('D');
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      try { 
        ManifoldCF.readNibble('!');
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Bad hexadecimal value
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      try { 
        ManifoldCF.deobfuscate("acx{]H6L`y=");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // String can't be decrypted: too short
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      try { 
        ManifoldCF.decrypt("org.apache.manifoldcf.configfile", "", "Could not find connectorcommon main class: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // javax.crypto.IllegalBlockSizeException: Input length must be multiple of 16 when decrypting with padded cipher
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = ManifoldCF.deobfuscate((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = ManifoldCF.encrypt((String) null, "", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = ManifoldCF.hash("d7\"ZmQrv");
      assertEquals("A1726EAA3EF4EE9F5224F91E6C83CF25CADBA13F", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = ManifoldCF.safeFileName("&q=`N32%!RbTc");
      assertEquals("&38!q&61!`N32%!RbTc", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = ManifoldCF.safeFileName(":");
      assertEquals("&58!", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = ManifoldCF.safeFileName("PPTpx,z,~N$(");
      assertEquals("PPTpx&44!z&44!~N$(", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String string0 = ManifoldCF.safeFileName("1u`He^\"VWzJ2]!8B!~L");
      assertEquals("1u`He^&34!VWzJ2&93!!8B!~L", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = ManifoldCF.safeFileName("]S^?Ju4x`A/&}?z");
      assertEquals("&93!S^?Ju4x`A&47!&38!}?z", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String string0 = ManifoldCF.safeFileName("t#+vzf@ ");
      assertEquals("t#&43!vzf@ ", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      // Undeclared exception!
      try { 
        ManifoldCF.recursiveDelete(mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.FSObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      File file0 = ManifoldCF.resolvePath("gp<T/WqSqv");
      File file1 = MockFile.createTempFile("gp<T/WqSqv", "|^RQGFqB%}G'8I", file0);
      ManifoldCF.recursiveDelete(file1);
      assertEquals(0L, file1.lastModified());
      assertEquals("gp<T/WqSqv", file0.toString());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ManifoldCF.ensureFolder("Could not read configuration file '");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ManifoldCF.ensureFolder("");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ManifoldCF.FileTrack manifoldCF_FileTrack0 = new ManifoldCF.FileTrack();
      manifoldCF_FileTrack0.finalize();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ManifoldCF.FileTrack manifoldCF_FileTrack0 = new ManifoldCF.FileTrack();
      MockFile mockFile0 = new MockFile("f>O/FC#c/9", "85#$Q>Bs\u0002#9Na");
      manifoldCF_FileTrack0.deleteFile(mockFile0);
      assertFalse(mockFile0.exists());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ManifoldCF.DatabaseConnectionReleaseThread manifoldCF_DatabaseConnectionReleaseThread0 = new ManifoldCF.DatabaseConnectionReleaseThread();
      manifoldCF_DatabaseConnectionReleaseThread0.run();
      assertTrue(manifoldCF_DatabaseConnectionReleaseThread0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ManifoldCF.DatabaseShutdown manifoldCF_DatabaseShutdown0 = new ManifoldCF.DatabaseShutdown();
      try { 
        manifoldCF_DatabaseShutdown0.finalize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ManifoldCF.DatabaseShutdown manifoldCF_DatabaseShutdown0 = new ManifoldCF.DatabaseShutdown();
      // Undeclared exception!
      try { 
        manifoldCF_DatabaseShutdown0.doCleanup((IThreadContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ManifoldCF.CachePoll manifoldCF_CachePoll0 = new ManifoldCF.CachePoll();
      ThreadContext threadContext0 = new ThreadContext();
      // Undeclared exception!
      try { 
        manifoldCF_CachePoll0.doPoll(threadContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      // Undeclared exception!
      try { 
        ManifoldCF.createSystemDatabase(threadContext0, "Kfu^iHHi:<%", "_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.getDoubleProperty("properties.xml", 2812.278);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.writefloat((OutputStream) null, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("%vJ^0)-pa5");
      ManifoldCF.writeWord(mockFileOutputStream0, 59);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, true);
      ManifoldCF.writeSdword(mockPrintStream0, 178);
      assertEquals(4, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.getBooleanProperty("Error during system shutdown: ", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ManifoldCF.deleteFolder("Type coercer");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.findClass("org.apache.manifoldcf.database.username");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.getChildDatabaseName((IDBInterface) null, "A1726EAA3EF4EE9F5224F91E6C83CF25CADBA13F");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.createResourceLoader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      File file0 = MockFile.createTempFile("Unknown exception type: ", "Unknown exception type: ");
      // Undeclared exception!
      try { 
        ManifoldCF.addFile(file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ManifoldCF.DatabaseShutdown manifoldCF_DatabaseShutdown0 = new ManifoldCF.DatabaseShutdown();
      ManifoldCF.addShutdownHook(manifoldCF_DatabaseShutdown0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      File file0 = ManifoldCF.createTempDir(".", "I96feTt");
      // Undeclared exception!
      try { 
        ManifoldCF.deleteFile(file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        ManifoldCF.getCipher(threadContext0, 15, "org.apache.manifoldcf.lockmanagerclass", byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String string0 = ManifoldCF.obfuscate("INITIALIZING");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.getIntProperty("Invalid IOCase name: ", (-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Stack<InputStream> stack0 = new Stack<InputStream>();
      Enumeration<InputStream> enumeration0 = stack0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        ManifoldCF.readDword(sequenceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected EOF
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = ManifoldCF.getProcessID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ManifoldCF manifoldCF0 = new ManifoldCF();
      assertNull(manifoldCF0.getProcessID());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      boolean boolean0 = ManifoldCF.isFolder("org.apache.manifoldcf.configuration.change.command");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ManifoldCF.readWord(byteArrayInputStream0);
      try { 
        ManifoldCF.readBytes(byteArrayInputStream0, byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected EOF
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String string0 = ManifoldCF.deobfuscate("");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      float float0 = ManifoldCF.readfloat(byteArrayInputStream0);
      assertEquals(5, byteArrayInputStream0.available());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      try { 
        ManifoldCF.hash((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't encrypt: null
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ManifoldCFConfiguration manifoldCFConfiguration0 = ManifoldCF.getConfiguration();
      assertNull(manifoldCFConfiguration0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ManifoldCF.cleanUpEnvironment();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("AES/CBC/PKCS5Padding");
      ManifoldCF.writeByte(mockPrintStream0, 0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        ManifoldCF.readByte(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      String string0 = ManifoldCF.getMcfVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.getLongProperty("manifoldcf", 2068L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ManifoldCF.CachePoll manifoldCF_CachePoll0 = new ManifoldCF.CachePoll();
      ManifoldCF.addPollingHook(manifoldCF_CachePoll0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      String string0 = ManifoldCF.obfuscate("");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.getFileProperty("q6O#z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ManifoldCF.resetEnvironment();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      // Undeclared exception!
      try { 
        ManifoldCF.sleep((-329L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout value is negative
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      // Undeclared exception!
      try { 
        ManifoldCF.dropSystemDatabase(threadContext0, "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ManifoldCF.ShutdownThread manifoldCF_ShutdownThread0 = new ManifoldCF.ShutdownThread();
      manifoldCF_ShutdownThread0.run();
      ManifoldCF.initializeEnvironment();
  }
}
