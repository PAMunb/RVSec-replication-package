/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:25:50 GMT 2022
 */

package org.apache.manifoldcf.core.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.manifoldcf.core.util.Converter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Converter_ESTest extends Converter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Float float0 = new Float(0.0F);
      double double0 = Converter.asDouble(float0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        Converter.asLong("O'B8\"TVy");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"O'B8\"TVy\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double double0 = new Double(0.0);
      long long0 = Converter.asLong(double0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Long long0 = new Long(1L);
      long long1 = Converter.asLong(long0);
      assertEquals(1L, long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Float float0 = new Float((-5910.2676F));
      long long0 = Converter.asLong(float0);
      assertEquals((-5910L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long(1L);
      double double0 = Converter.asDouble(long0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Float float0 = new Float((-5910.2676F));
      double double0 = Converter.asDouble(float0);
      assertEquals((-5910.267578125), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Converter.asDouble("@(#)$Id$");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = new Double((-5910L));
      double double1 = Converter.asDouble(double0);
      assertEquals((-5910.0), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      try { 
        Converter.asDouble((Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't convert to double
         //
         verifyException("org.apache.manifoldcf.core.util.Converter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Converter converter0 = new Converter();
      try { 
        Converter.asLong(converter0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't convert to long
         //
         verifyException("org.apache.manifoldcf.core.util.Converter", e);
      }
  }
}
