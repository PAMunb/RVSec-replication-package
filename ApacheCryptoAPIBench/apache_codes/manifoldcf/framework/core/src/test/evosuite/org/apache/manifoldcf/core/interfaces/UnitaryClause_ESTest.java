/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:04:53 GMT 2022
 */

package org.apache.manifoldcf.core.interfaces;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.manifoldcf.core.interfaces.UnitaryClause;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnitaryClause_ESTest extends UnitaryClause_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnitaryClause unitaryClause0 = new UnitaryClause(")o%iq3", ")o%iq3");
      unitaryClause0.values = null;
      unitaryClause0.getValues();
      assertEquals(")o%iq3", unitaryClause0.getColumnName());
      assertEquals("=", unitaryClause0.getOperation());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UnitaryClause unitaryClause0 = new UnitaryClause("ZFqkqIwJbEhi#QCN", "(", "ZFqkqIwJbEhi#QCN");
      unitaryClause0.operationName = "";
      unitaryClause0.operationName = "R#;3c";
      unitaryClause0.operationName = "S";
      assertEquals("S", unitaryClause0.getOperation());
      
      unitaryClause0.operationName = null;
      unitaryClause0.getOperation();
      assertEquals("ZFqkqIwJbEhi#QCN", unitaryClause0.getColumnName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UnitaryClause unitaryClause0 = new UnitaryClause("", "", "");
      String string0 = unitaryClause0.getOperation();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals("", unitaryClause0.getColumnName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UnitaryClause unitaryClause0 = new UnitaryClause(")o%iq3", ")o%iq3");
      unitaryClause0.columnName = ")o%iq3";
      assertEquals(")o%iq3", unitaryClause0.getColumnName());
      
      unitaryClause0.columnName = null;
      unitaryClause0.getColumnName();
      assertEquals("=", unitaryClause0.getOperation());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UnitaryClause unitaryClause0 = new UnitaryClause("", "", "");
      String string0 = unitaryClause0.getColumnName();
      assertEquals("", unitaryClause0.getOperation());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UnitaryClause unitaryClause0 = new UnitaryClause(")o%iq3", ")o%iq3");
      unitaryClause0.getValues();
      assertEquals(")o%iq3", unitaryClause0.getColumnName());
      assertEquals("=", unitaryClause0.getOperation());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UnitaryClause unitaryClause0 = new UnitaryClause(")o%iq3", ")o%iq3");
      unitaryClause0.getJoinColumnName();
      assertEquals(")o%iq3", unitaryClause0.getColumnName());
      assertEquals("=", unitaryClause0.getOperation());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      UnitaryClause unitaryClause0 = new UnitaryClause(")o%iq3", ")o%iq3");
      String string0 = unitaryClause0.getColumnName();
      assertEquals("=", unitaryClause0.getOperation());
      assertNotNull(string0);
      assertEquals(")o%iq3", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      UnitaryClause unitaryClause0 = new UnitaryClause("kD5ULhH.eY!i2sP6u", "kD5ULhH.eY!i2sP6u");
      String string0 = unitaryClause0.getOperation();
      assertEquals("=", string0);
      assertEquals("kD5ULhH.eY!i2sP6u", unitaryClause0.getColumnName());
      assertNotNull(string0);
  }
}
