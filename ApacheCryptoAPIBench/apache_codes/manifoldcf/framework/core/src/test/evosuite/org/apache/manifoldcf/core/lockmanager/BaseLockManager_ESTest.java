/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 16:41:31 GMT 2022
 */

package org.apache.manifoldcf.core.lockmanager;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.ClientInfoStatus;
import java.sql.SQLClientInfoException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLTransientException;
import java.util.Map;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.apache.log4j.Priority;
import org.apache.manifoldcf.core.interfaces.ILockManager;
import org.apache.manifoldcf.core.interfaces.IServiceCleanup;
import org.apache.manifoldcf.core.interfaces.IServiceDataAcceptor;
import org.apache.manifoldcf.core.interfaces.IThreadContext;
import org.apache.manifoldcf.core.interfaces.ManifoldCFConfiguration;
import org.apache.manifoldcf.core.lockmanager.BaseLockManager;
import org.apache.manifoldcf.core.lockmanager.LocalLock;
import org.apache.manifoldcf.core.lockmanager.LocalLockPool;
import org.apache.manifoldcf.core.lockmanager.LockGate;
import org.apache.manifoldcf.core.lockmanager.LockObject;
import org.apache.manifoldcf.core.lockmanager.LockObjectFactory;
import org.apache.manifoldcf.core.lockmanager.LockPool;
import org.apache.manifoldcf.core.system.Logging;
import org.apache.manifoldcf.core.system.ManifoldCF;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockRuntimeException;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseLockManager_ESTest extends BaseLockManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      logger0.getChainedPriority();
      Logging.lock = logger0;
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.deleteServiceData("CYAN", "xf9^cZMjO>;7_< ");
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager1.registerServiceBeginServiceActivity("-:", "TtMp+}.>h-", iServiceCleanup0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "@(#)$Id$";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "-:";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "CYAN";
      stringArray0[6] = "TtMp+}.>h-";
      stringArray0[7] = "4_-/;)_h:U";
      stringArray0[8] = "TtMp+}.>h-";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[1] = "CYAN";
      stringArray1[2] = "TtMp+}.>h-";
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.enter((Long) null, stringArray0, stringArray1, stringArray1, ">@rp K(q|'^oM=}!S", localLockPool0, lockPool0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected exception
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      LocalLockPool localLockPool0 = new LocalLockPool();
      Long long0 = baseLockManager1.threadID;
      String[] stringArray0 = new String[1];
      LockPool lockPool0 = BaseLockManager.myLocks;
      MockRuntimeException mockRuntimeException0 = new MockRuntimeException();
      LockGate lockGate0 = lockPool0.getObject((Object) null);
      lockPool0.releaseObject(mockRuntimeException0, lockGate0);
      // Undeclared exception!
      try { 
        BaseLockManager.enterNoWait((Long) null, stringArray0, stringArray0, stringArray0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected exception
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.readData("~Nb");
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      baseLockManager1.registerServiceBeginServiceActivity("", "Waiting for time ", (byte[]) null, (IServiceCleanup) null);
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWriteNoWait((Long) null, "Waiting for time ", "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      LockPool lockPool0 = BaseLockManager.myLocks;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = " Reard ";
      stringArray0[3] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "Ibrm/hrrqZYAM{aCK";
      stringArray1[1] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[2] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[3] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[4] = "Ibrm/hrrqZYAM{aCK";
      stringArray1[5] = "Ibrm/hrrqZYAM{aCK";
      stringArray1[6] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[7] = "~Nb";
      Long long0 = new Long((-1018L));
      LocalLockPool localLockPool0 = new LocalLockPool();
      try { 
        BaseLockManager.enterNoWait(long0, stringArray1, stringArray0, stringArray0, "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      baseLockManager0.getGlobalLockPool();
      baseLockManager0.retrieveServiceData("W5 5@G", "xqScbv");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Long long0 = baseLockManager1.threadID;
      LocalLockPool localLockPool0 = baseLockManager1.localSections;
      baseLockManager1.getSharedConfiguration();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id$";
      stringArray0[2] = "value";
      stringArray0[3] = "JsonInput has already been used and may not be modified";
      stringArray0[4] = "name";
      stringArray0[5] = "value";
      stringArray0[6] = "xqScbv";
      stringArray0[7] = "xqScbv";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "@(#)$Id: ManifoldCFConfiguration.java 988245 2010-08-23 18:39:35Z kwright $";
      LockPool lockPool0 = BaseLockManager.mySections;
      BaseLockManager.enterNoWait(long0, stringArray0, stringArray1, stringArray1, (String) null, localLockPool0, lockPool0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Level level0 = logger0.getEffectiveLevel();
      Level level1 = Level.toLevel("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0);
      logger0.isEnabledFor(level1);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.constructUniqueServiceName("The keyStoreConfiguration s null");
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockPool lockPool0 = BaseLockManager.myLocks;
      Long long0 = baseLockManager0.threadID;
      String[] stringArray0 = null;
      String[] stringArray1 = new String[3];
      stringArray1[0] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[1] = "5S_";
      stringArray1[2] = "@(#)$Id$";
      BaseLockManager.enter(long0, stringArray0, stringArray1, stringArray0, stringArray1[0], localLockPool0, lockPool0);
      String string0 = "1cC&QAz,.";
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)28;
      byteArray0[0] = byte0;
      byteArray0[1] = byteArray0[0];
      byte byte1 = (byte)57;
      byteArray0[2] = byte1;
      byteArray0[3] = byte0;
      byte byte2 = (byte) (-8);
      byteArray0[4] = byte2;
      byte byte3 = (byte) (-76);
      byteArray0[5] = byte3;
      byte byte4 = (byte)31;
      byteArray0[6] = byte4;
      byte byte5 = (byte)65;
      byteArray0[7] = byte5;
      try { 
        baseLockManager1.updateServiceData(string0, stringArray1[1], byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service '5S_' of type '1cC&QAz,.' is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = new LocalLockPool();
      localLockPool0.getLocalLock("e#");
      String string0 = null;
      baseLockManager0.constructUniqueServiceName((String) null);
      LocalLockPool localLockPool1 = baseLockManager0.localLocks;
      LockPool lockPool0 = BaseLockManager.myLocks;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.cleanupInactiveService("_ANON_0", iServiceCleanup0);
      Long long0 = new Long(852L);
      String string1 = ",O`jfv Bq5TV";
      BaseLockManager.enterRead(long0, string0, string1, localLockPool1, lockPool0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.retrieveServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      baseLockManager0.scanServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", iServiceDataAcceptor0);
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager0.countActiveServices("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.leaveWrite("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "", localLockPool0, lockPool0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000023
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.getGlobalLockPool();
      baseLockManager0.readData("~Nb");
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      String string0 = null;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager0.registerServiceBeginServiceActivity((String) null, "FtzE40X@C_m", (byte[]) null, iServiceCleanup0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.deleteServiceData(",RU$", "C-wObz0I)Bsl&]Vc");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)7;
      baseLockManager1.registerServiceBeginServiceActivity("eNrkZmg/g|", "eNrkZmg/g|", byteArray0, (IServiceCleanup) null);
      baseLockManager0.registerServiceBeginServiceActivity(",RU$", ",RU$", (IServiceCleanup) null);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      logger0.getPriority();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.countActiveServices("_ANON_0");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "~Nb";
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte)10;
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      baseLockManager0.scanServiceData("~Nb", iServiceDataAcceptor0);
      byteArray0[5] = (byte) (-16);
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity(",6jRU$", "", byteArray0, iServiceCleanup0);
      baseLockManager0.registerServiceBeginServiceActivity("ltz0%]f:1{aV", "_ANON_0", (IServiceCleanup) null);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      logger0.getPriority();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.countActiveServices("_ANON_0");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      logger0.getPriority();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.countActiveServices("_JmON_0");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "_JmON_0";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "_JmON_0";
      stringArray0[5] = "~Nb";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[1] = "_JmON_0";
      stringArray1[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[4] = "";
      stringArray1[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[6] = "_JmON_0";
      stringArray1[7] = "_JmON_0";
      // Undeclared exception!
      try { 
        baseLockManager1.leaveLocks(stringArray0, stringArray1, stringArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000019
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Level level0 = Level.ALL;
      logger0.forcedLog("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0, baseLockManager0, (Throwable) null);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.deleteServiceData((String) null, "{%2hVjE.+^sCUTJ_");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)7;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager1.registerServiceBeginServiceActivity("Waiting for time ", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", byteArray0, iServiceCleanup0);
      String string0 = "Waiting for time ";
      IServiceCleanup iServiceCleanup1 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager1.registerServiceBeginServiceActivity(baseLockManager0._rcsid, string0, iServiceCleanup1);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Level level0 = Level.ALL;
      logger0.forcedLog("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0, baseLockManager0, (Throwable) null);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.deleteServiceData((String) null, "{%2hVjE.+^sCUTJ_");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)7;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      try { 
        baseLockManager1.registerServiceBeginServiceActivity("Waiting for time ", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", byteArray0, iServiceCleanup0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service '@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $' of type 'Waiting for time ' is already active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Level level0 = Level.ALL;
      logger0.forcedLog("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0, baseLockManager0, (Throwable) null);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager2.enterReadLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[6] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[7] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager1.leaveLocks(stringArray0, stringArray1, stringArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000018
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      baseLockManager0.retrieveServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager0.enterReadLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      baseLockManager1.getSharedConfiguration();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Level level0 = Level.ALL;
      logger0.forcedLog("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0, baseLockManager0, (Throwable) null);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      localLockPool0.getLocalLock("z^=*lbX1uK'tR");
      baseLockManager1.constructUniqueServiceName("The keyStoreConfiguration s null");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      LocalLockPool localLockPool1 = baseLockManager2.localLocks;
      LockPool lockPool0 = BaseLockManager.myLocks;
      BaseLockManager.clear(" or non-ex write ", localLockPool0, lockPool0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger.getLogger("!@Y!tC");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      localLockPool0.getLocalLock((String) null);
      baseLockManager1.constructUniqueServiceName("g5gU~AR|pJ8");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.clear("@(#)$Id$", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[0];
      baseLockManager0.leaveLocks(stringArray0, stringArray0, stringArray0);
      assertEquals(0, stringArray0.length);
      
      BaseLockManager.getSortedUniqueLocks(stringArray0, stringArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = new LocalLockPool();
      baseLockManager1.checkServiceActive("<'ygK!", "^MRT");
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.enterWrite((Long) null, "~R!LrlLD$';]bS@ki", "[k<^J5{4I9`s", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager1.cleanupInactiveService("", iServiceCleanup0);
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      BaseLockManager baseLockManager2 = new BaseLockManager();
      Long long0 = baseLockManager2.threadID;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "@(#)$Id$";
      stringArray0[1] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      BaseLockManager.enterNoWait(long0, stringArray0, stringArray0, stringArray0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
      baseLockManager1.enterNonExWriteLockNoWait("~Nb");
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadLock("j4H0)RY");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000028
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      LockPool lockPool0 = BaseLockManager.myLocks;
      String string0 = "Entering non-ex write ";
      baseLockManager0.retrieveServiceData("Entering non-ex write ", "Entering non-ex write ");
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      try { 
        BaseLockManager.enterNonExWriteNoWait(long0, (String) null, (String) null, localLockPool0, lockPool0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      String[] stringArray0 = new String[10];
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = baseLockManager1.getGlobalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.enterNoWait((Long) null, stringArray0, stringArray0, stringArray0, "~Nb", localLockPool0, lockPool0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected exception
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      String string0 = "{%2hVjE.+^sCUTJ_";
      baseLockManager0.deleteServiceData("{%2hVjE.+^sCUTJ_", "{%2hVjE.+^sCUTJ_");
      String string1 = "";
      String string2 = ",6jRU$";
      String string3 = "e#";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteLock("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000008
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      LockPool lockPool0 = BaseLockManager.myLocks;
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      BaseLockManager.clear("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      LockPool lockPool0 = BaseLockManager.myLocks;
      baseLockManager0.retrieveServiceData("Entering non-ex write ", "Entering non-ex write ");
      LocalLockPool localLockPool0 = new LocalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.leaveNonExWrite((String) null, "Ia\"(}e[@n%)|t:K", localLockPool0, lockPool0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000012
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      LockPool lockPool0 = BaseLockManager.mySections;
      String[] stringArray0 = null;
      LocalLockPool localLockPool1 = baseLockManager0.localSections;
      Long long0 = new Long(0L);
      try { 
        BaseLockManager.enterNonExWriteNoWait(long0, "@(#)$Id$", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadLockNoWait("Unexpected exception");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager0.enterReadLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        baseLockManager2.leaveNonExWriteLock("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000015
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Level level0 = Level.ALL;
      logger0.forcedLog("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0, baseLockManager0, (Throwable) null);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      LockPool lockPool0 = BaseLockManager.mySections;
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      baseLockManager0.scanServiceData("@(#)$Id$", iServiceDataAcceptor0);
      String[] stringArray0 = new String[7];
      Long long0 = new Long(40000);
      localLockPool0.getLocalLock("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager.enterNoWait(long0, stringArray0, stringArray0, stringArray0, "Leaving read ", localLockPool0, lockPool0);
      stringArray0[0] = "4\"oxBNKc3&/6=/U";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "com.google.common.cache.ForwardingCache";
      stringArray0[6] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      baseLockManager1.enterLocksNoWait(stringArray0, (String[]) null, (String[]) null);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.retrieveServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iServiceDataAcceptor0).acceptServiceData(anyString() , any(byte[].class));
      baseLockManager0.scanServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", iServiceDataAcceptor0);
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager0.enterReadLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.retrieveServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iServiceDataAcceptor0).acceptServiceData(anyString() , any(byte[].class));
      baseLockManager0.scanServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", iServiceDataAcceptor0);
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager0.enterReadLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String string0 = "}";
      // Undeclared exception!
      try { 
        baseLockManager0.scanServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (IServiceDataAcceptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager baseLockManager3 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      Long long0 = baseLockManager3.threadID;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id$";
      stringArray0[2] = "";
      stringArray0[3] = "@(#)$Id$";
      stringArray0[4] = "qe!puRw@|sc;$e}";
      stringArray0[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      LocalLockPool localLockPool1 = new LocalLockPool();
      BaseLockManager.enterNoWait(long0, stringArray0, stringArray0, stringArray0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool1, lockPool0);
      try { 
        baseLockManager2.enterNonExWriteLockNoWait((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      LockPool lockPool0 = BaseLockManager.myLocks;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity("@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", "q2/Xt[pRP`k=6;", iServiceCleanup0);
      BaseLockManager.buildServiceTypeLockName("<'ygK!");
      Long long0 = baseLockManager0.threadID;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localSections;
      BaseLockManager.enterNonExWrite(long0, "n<;Q)?%hMnuFh", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      baseLockManager0.enterNonExWriteLock(lockPool0._rcsid);
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String string0 = null;
      baseLockManager1.countActiveServices(string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.timedWait(42);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      Long long0 = baseLockManager1.threadID;
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      BaseLockManager.enterNonExWriteNoWait(long0, "~Nb", " sequence: Write ", localLockPool0, lockPool0);
      baseLockManager1.getSharedConfiguration();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logger.getRootLogger();
      Logging.lock = logger0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      Long long0 = baseLockManager0.threadID;
      String[] stringArray1 = new String[8];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[6] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[7] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      BaseLockManager.enterNoWait(long0, stringArray1, stringArray1, stringArray0, ">d>E@)BQ", localLockPool0, lockPool0);
      baseLockManager1.enterNonExWriteLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadLock(" Successfully obtained multiple ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000017
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Long long0 = new Long(0L);
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWriteNoWait(long0, "e#", "e#", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager1.enterWriteLockNoWait(" ");
      LockPool lockPool0 = BaseLockManager.myLocks;
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      LocalLockPool localLockPool0 = new LocalLockPool();
      Long long0 = baseLockManager0.threadID;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id$";
      // Undeclared exception!
      try { 
        BaseLockManager.enter(long0, stringArray0, stringArray0, stringArray0, (String) null, localLockPool0, (LockPool) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected exception
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LockPool lockPool0 = BaseLockManager.myLocks;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      baseLockManager0.enterLocksNoWait((String[]) null, (String[]) null, (String[]) null);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      baseLockManager1.enterLocksNoWait((String[]) null, (String[]) null, (String[]) null);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadCriticalSection("`");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Level level0 = Level.ALL;
      logger0.setPriority(level0);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String string0 = "Ibrm/hrrq\\ZYAM{aCK";
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      try { 
        baseLockManager2.enterWriteLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.clearGlobalFlag("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      try { 
        baseLockManager0.enterWriteLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localSections;
      baseLockManager1.getGlobalLockPool();
      Long long0 = baseLockManager1.threadID;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      LockPool lockPool0 = BaseLockManager.mySections;
      try { 
        BaseLockManager.enterNoWait(long0, stringArray0, stringArray0, stringArray0, "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger.getLogger("e#");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager2.localLocks;
      LockPool lockPool0 = BaseLockManager.mySections;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "e#";
      stringArray0[1] = "e#";
      stringArray0[2] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, (String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager2.localLocks;
      baseLockManager2.getGlobalLockPool();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, (String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.timedWait(3);
      baseLockManager0.checkGlobalFlag((String) null);
      BaseLockManager.makeActiveServiceFlagName((String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager baseLockManager3 = new BaseLockManager();
      baseLockManager3.enterReadLock("O=m");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte) (-2);
      try { 
        baseLockManager2.updateServiceData("java.vm.name", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service '@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $' of type 'java.vm.name' is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager baseLockManager3 = new BaseLockManager();
      BaseLockManager baseLockManager4 = new BaseLockManager();
      baseLockManager2.countActiveServices("YzBp>XGboap*z");
      // Undeclared exception!
      try { 
        baseLockManager4.leaveWriteCriticalSection("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000027
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      LockPool lockPool0 = BaseLockManager.mySections;
      Long long0 = new Long(728L);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      BaseLockManager.enterWrite(long0, "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", "-", localLockPool0, lockPool0);
      baseLockManager1.deleteServiceData("2b", "h8S/y/fG[nA-PFj");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      try { 
        baseLockManager0.enterWriteLockNoWait("@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      // Undeclared exception!
      try { 
        baseLockManager0.timedWait((-1572));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout value is negative
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager0.enterReadLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        baseLockManager1.leaveWriteCriticalSection("F:I");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000015
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "~ONb";
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager0.enterReadLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        baseLockManager1.leaveWriteCriticalSection("e#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000015
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.timedWait(3);
      String string0 = ILockManager._rcsid;
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.enterReadNoWait((Long) null, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", ": ", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.deleteServiceData("{%2hVjE.+^sCUTJ_", "{%2hVjE.+^sCUTJ_");
      String string0 = ",RU$";
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager0.registerServiceBeginServiceActivity(",RU$", "e#", iServiceCleanup0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.deleteServiceData(",6jRU$", ",6jRU$");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.enterWriteLockNoWait("~ONb");
      LockPool lockPool0 = BaseLockManager.myLocks;
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "~ONb";
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      int int0 = BaseLockManager.TYPE_WRITENONEX;
      LocalLockPool localLockPool0 = baseLockManager2.localSections;
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.leaveWrite("6s", "org.apache.logging.log4j.spi.DefaultThreadContextMap", localLockPool0, lockPool0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000013
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager1.leaveLocks(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000014
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager2.countActiveServices("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.myLocks;
      BaseLockManager.leave((String[]) null, (String[]) null, (String[]) null, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
      baseLockManager1.retrieveServiceData("com.google.common.primitives.Ints$IntConverter", ",6jRU$");
      try { 
        baseLockManager2.endServiceActivity("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "~ONb");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service '~ONb' of type '@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $ is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.clearLocks();
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "~Nb";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "~Nb";
      stringArray0[4] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[6] = "";
      stringArray0[7] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[8] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        BaseLockManager.enter(long0, stringArray0, stringArray0, stringArray0, "", (LocalLockPool) null, lockPool0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected exception
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id$";
      // Undeclared exception!
      try { 
        baseLockManager0.enterCriticalSections(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.countActiveServices("_ANON_0");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "~Nb";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      try { 
        BaseLockManager.enter(long0, stringArray0, stringArray0, stringArray0, "CJ<T,*kJ~f$wir8", localLockPool0, lockPool0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Illegal CJ<T,*kJ~f$wir8 sequence: Write CJ<T,*kJ~f$wir8 can't be within read CJ<T,*kJ~f$wir8 or non-ex write CJ<T,*kJ~f$wir8
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      LocalLockPool localLockPool0 = new LocalLockPool();
      Long long0 = baseLockManager1.threadID;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id$";
      baseLockManager1.enterCriticalSections(stringArray0, stringArray0, stringArray0);
      LockPool lockPool0 = BaseLockManager.mySections;
      baseLockManager1.leaveLocks(stringArray0, stringArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.scanServiceData("~ONb", (IServiceDataAcceptor) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      String string0 = "<'ygK!";
      Long.getLong("oN,+Mv%@_^(Fgr");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "~ONb";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "oN,+Mv%@_^(Fgr";
      stringArray0[3] = "<'ygK!";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      LocalLockPool localLockPool0 = new LocalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.enter((Long) null, stringArray0, stringArray0, stringArray1, "", localLockPool0, (LockPool) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected exception
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.scanServiceData("~ONb", (IServiceDataAcceptor) null);
      baseLockManager0.enterReadLockNoWait("d@&tWA");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterLocksNoWait((String[]) null, (String[]) null, (String[]) null);
      LockPool lockPool0 = baseLockManager1.getGlobalLockPool();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      // Undeclared exception!
      try { 
        BaseLockManager.enterWriteNoWait((Long) null, "NzNIRtA-v", (String) null, localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      try { 
        baseLockManager2.enterWriteLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      try { 
        baseLockManager1.enterWriteLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.deleteServiceData("{%2hVjE.+^sCUTJ_", "{%2hVjE.+^sCUTJ_");
      baseLockManager0.enterReadLockNoWait("{%2hVjE.+^sCUTJ_");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterLocksNoWait((String[]) null, (String[]) null, (String[]) null);
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      lockPool0.getObject(baseLockManager0);
      Long long0 = baseLockManager1.threadID;
      LocalLockPool localLockPool0 = baseLockManager1.localSections;
      try { 
        BaseLockManager.enterWriteNoWait(long0, "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", "Entering non-ex write ", localLockPool0, lockPool0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      logger0.error((Object) baseLockManager0);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager baseLockManager3 = new BaseLockManager();
      baseLockManager1.timedWait(188);
      LockPool lockPool0 = BaseLockManager.myLocks;
      BaseLockManager.makeActiveServiceFlagName("Ibrm/hrrqZYAM{aCK", "[J$FTa\"/Q[04J");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.timedWait(3);
      LockPool lockPool0 = BaseLockManager.myLocks;
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      baseLockManager0.constructUniqueServiceName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LockPool lockPool0 = BaseLockManager.myLocks;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Ibrm/hrrqZYAM{aCK";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[1] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "Ibrm/hrrqZYAM{aCK";
      stringArray0[5] = "Ibrm/hrrqZYAM{aCK";
      stringArray0[6] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[7] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      baseLockManager1.timedWait(3);
      BaseLockManager.buildServiceTypeLockName("Infinite loop in property interpolation of ");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logger.getLogger(", noAnsi=");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "&N3V52XoI.'4N'z{#?p";
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteLock("&N3V52XoI.'4N'z{#?p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager1.countActiveServices("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      try { 
        baseLockManager2.enterNonExWriteLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager1.countActiveServices("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        baseLockManager2.leaveWriteCriticalSection("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000025
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager2.countActiveServices("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      try { 
        baseLockManager2.endServiceActivity("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "~ONb");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service '~ONb' of type '@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $ is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000011
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Priority priority0 = logger0.getChainedPriority();
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) baseLockManager0;
      objectArray0[2] = (Object) "Waiting for time ";
      objectArray0[3] = (Object) priority0;
      objectArray0[4] = (Object) "~ONb";
      objectArray0[5] = (Object) baseLockManager0;
      objectArray0[6] = (Object) "Waiting for time ";
      objectArray0[7] = (Object) baseLockManager0;
      objectArray0[8] = (Object) baseLockManager0;
      SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException("~ AM3;)7|f.%$cY1-1R", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (-1461), (Map<String, ClientInfoStatus>) null);
      logger0.l7dlog(priority0, "Waiting for time ", objectArray0, (Throwable) sQLClientInfoException0);
      Logging.lock = logger0;
      baseLockManager0.scanServiceData("~ONb", (IServiceDataAcceptor) null);
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[3];
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray1, stringArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      logger0.isInfoEnabled();
      Logging.lock = logger0;
      baseLockManager0.deleteServiceData("{%2hVjE.+^sCUTJ_", "{%2hVjE.+^sCUTJ_");
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity("", ",6jRU$", iServiceCleanup0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Level level0 = Level.ALL;
      logger0.forcedLog("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0, baseLockManager0, (Throwable) null);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.deleteServiceData((String) null, "{%2hVjE.+^sCUTJ_");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-72);
      baseLockManager0.registerServiceBeginServiceActivity("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", byteArray0, (IServiceCleanup) null);
      baseLockManager0.registerServiceBeginServiceActivity("@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (IServiceCleanup) null);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.scanServiceData("~ONb", (IServiceDataAcceptor) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "~ONb";
      stringArray1[1] = "~ONb";
      stringArray1[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[3] = "";
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity("", "", iServiceCleanup0);
      String string0 = "";
      String string1 = "zj";
      IServiceCleanup iServiceCleanup1 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity(string0, string1, iServiceCleanup1);
      String string2 = "";
      BaseLockManager.makeServiceCounterName(string2);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.scanServiceData("~ONb", (IServiceDataAcceptor) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      baseLockManager0.checkServiceActive("$", "");
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.cleanupInactiveService("8(*", iServiceCleanup0);
      baseLockManager0.enterWriteLock("Unexpected exception");
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.registerServiceBeginServiceActivity("_ANON_2", "_ANON_2", (byte[]) null, (IServiceCleanup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "gP2S,'}`q,i38MKC\"M;";
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)81;
      byteArray0[3] = (byte)9;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager0.registerServiceBeginServiceActivity((String) null, "gP2S,'}`q,i38MKC\"M;", byteArray0, iServiceCleanup0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.scanServiceData("~ONb", (IServiceDataAcceptor) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "~ONb";
      stringArray1[1] = "~ONb";
      stringArray1[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[3] = "";
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      try { 
        baseLockManager0.registerServiceBeginServiceActivity("", "", iServiceCleanup0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service '' of type '' is already active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      baseLockManager0.deleteServiceData("{%2hVjE.+^sCUTJ_", "{%2hVjE.+^sCUTJ_");
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      try { 
        baseLockManager0.registerServiceBeginServiceActivity("", ",6jRU$", iServiceCleanup0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service ',6jRU$' of type '' is already active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.deleteServiceData(",6jRU$", ",6jRU$");
      baseLockManager0.registerServiceBeginServiceActivity(",RU$", ",6jRU$", (IServiceCleanup) null);
      BaseLockManager.buildServiceTypeLockName(",RU$");
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager1.cleanupInactiveService("", iServiceCleanup0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "~Nb";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "Ibrm/hrrqZYAM{aCK";
      stringArray0[4] = "/";
      String[] stringArray1 = new String[5];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[1] = "/";
      stringArray1[2] = "Ibrm/hrrqZYAM{aCK";
      stringArray1[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[4] = "";
      try { 
        baseLockManager1.enterLocksNoWait(stringArray0, stringArray1, stringArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.constructUniqueServiceName("");
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockPool lockPool0 = BaseLockManager.myLocks;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.cleanupInactiveService("@(#)$Id$", iServiceCleanup0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager1.countActiveServices("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      boolean boolean0 = baseLockManager0.checkGlobalFlag("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      logger0.getPriority();
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.countActiveServices("_ANON_0");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager2.registerServiceBeginServiceActivity("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (String) null, (IServiceCleanup) null);
      baseLockManager1.leaveReadLock((String) null);
      String string0 = "<'ygK!";
      String string1 = "', lock exception";
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.leaveRead(string0, string1, localLockPool0, lockPool0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000024
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.clearGlobalFlag("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager baseLockManager3 = new BaseLockManager();
      byte[] byteArray0 = new byte[0];
      baseLockManager0.updateServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", byteArray0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager baseLockManager3 = new BaseLockManager();
      byte[] byteArray0 = new byte[0];
      try { 
        baseLockManager1.updateServiceData("qe!puRw@|sc;$e}", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service '@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $' of type 'qe!puRw@|sc;$e}' is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte) (-15);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = " Message=";
      stringArray0[1] = "d5mA{h.1@$W<t0%<1)S";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.updateServiceData("^J`+ ,)vpm*Qz9Ufy5j", "d5mA{h.1@$W<t0%<1)S", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Level level0 = Level.ALL;
      logger0.forcedLog("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0, baseLockManager0, (Throwable) null);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "@(#)$Id$";
      stringArray0[1] = "The keyStoreConfiguration s null";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "The keyStoreConfiguration s null";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      String[] stringArray1 = new String[0];
      try { 
        baseLockManager2.enterLocksNoWait(stringArray0, stringArray0, stringArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Level level0 = Level.ALL;
      logger0.forcedLog("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0, baseLockManager0, (Throwable) null);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = " Couldn't get ";
      stringArray0[6] = "jBL{dOv+9ZvlL(w-nV";
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, (String[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.clearGlobalFlag("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      String[] stringArray0 = new String[0];
      BaseLockManager baseLockManager3 = new BaseLockManager();
      String[] stringArray1 = new String[3];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      baseLockManager3.enterLocksNoWait(stringArray1, stringArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      baseLockManager0.constructUniqueServiceName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LockPool lockPool0 = BaseLockManager.myLocks;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "_ANON_0";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = " Reard ";
      stringArray0[3] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "Ibrm/hrrqZYAM{aCK";
      stringArray1[1] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[2] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[3] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[4] = "Ibrm/hrrqZYAM{aCK";
      stringArray1[5] = "Ibrm/hrrqZYAM{aCK";
      stringArray1[6] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[7] = "~Nb";
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadLock("&.P#\">Yj=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.constructUniqueServiceName((String) null);
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockPool lockPool0 = BaseLockManager.mySections;
      MockDate mockDate0 = new MockDate(1, 1, (-1051), (-485), 0, (-16777216));
      lockPool0.getObject(mockDate0);
      long long0 = (-1L);
      Long long1 = new Long((-1L));
      // Undeclared exception!
      try { 
        BaseLockManager.enterRead(long1, "value", "_ANON_3", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      baseLockManager0.clearLocks();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteCriticalSection(";9%&<cZg");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000008
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      baseLockManager0.constructUniqueServiceName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LockPool lockPool0 = BaseLockManager.myLocks;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "_ANON_2";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = " Reard ";
      stringArray0[3] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      baseLockManager1.cleanupInactiveService("~Nb", (IServiceCleanup) null);
      baseLockManager0.registerServiceBeginServiceActivity("", "<'ygK!", (IServiceCleanup) null);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity("C-wObz0I)Bsl&]Vc", "C-wObz0I)Bsl&]Vc", iServiceCleanup0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager1.cleanupInactiveService("", iServiceCleanup0);
      IServiceCleanup iServiceCleanup1 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager1.registerServiceBeginServiceActivity("Entering write ", (String) null, iServiceCleanup1);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager0.enterReadLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      baseLockManager0.cleanupInactiveService("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (IServiceCleanup) null);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.scanServiceData("~ONb", (IServiceDataAcceptor) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "";
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.cleanupInactiveService("s no wait:", iServiceCleanup0);
      IServiceCleanup iServiceCleanup1 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity("NQu", "~ONb", iServiceCleanup1);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager1.clearLocks();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger.getLogger("~ONb");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-36);
      byteArray0[5] = (byte) (-36);
      byteArray0[6] = (byte) (-15);
      byteArray0[7] = (byte) (-15);
      byteArray0[8] = (byte) (-36);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.mySections;
      String[] stringArray0 = new String[0];
      BaseLockManager.leave(stringArray0, stringArray0, stringArray0, "7BI:+Bq7,ait1{a)qt4", localLockPool0, lockPool0);
      // Undeclared exception!
      try { 
        baseLockManager0.checkServiceActive("7BI:+Bq7,ait1{a)qt4", "&Ww$<#O@HTU0`q)G");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock(baseLockManager0._rcsid);
      Long long0 = baseLockManager1.threadID;
      String string0 = " sequence: Write ";
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      BaseLockManager.enterNonExWriteNoWait(long0, baseLockManager0._rcsid, string0, localLockPool0, lockPool0);
      baseLockManager1.getSharedConfiguration();
      LockPool lockPool1 = BaseLockManager.myLocks;
      int int0 = 61;
      baseLockManager0.timedWait(int0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = " sequence: Write ";
      baseLockManager0.readData(" sequence: Write ");
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteLock(" sequence: Write ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000008
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      baseLockManager0.constructUniqueServiceName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteLock(" Read ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000012
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "~ONb";
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.mySections;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        BaseLockManager.leave(stringArray0, stringArray0, stringArray0, "", localLockPool0, lockPool0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000007
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, stringArray0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.enterNonExWriteLockNoWait("~ONb");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadCriticalSection("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.deleteServiceData("{%2hVjE.+^sCUTJ_", "{%2hVjE.+^sCUTJ_");
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadCriticalSection("{%2hVjE.+^sCUTJ_");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000007
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LockPool lockPool0 = BaseLockManager.myLocks;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[6] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[7] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      baseLockManager1.enterLocksNoWait(stringArray0, (String[]) null, (String[]) null);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.scanServiceData("~ONb", (IServiceDataAcceptor) null);
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray1[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[2] = "";
      String[] stringArray2 = new String[6];
      stringArray2[0] = "~ONb";
      stringArray2[1] = "~ONb";
      stringArray2[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray2[3] = "";
      stringArray2[4] = "";
      stringArray2[5] = "";
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray1, stringArray2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[9];
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.leaveRead("h188shMy", (String) null, localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadLock("@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager1.enterLocks((String[]) null, (String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.enterNonExWriteLockNoWait("; throwing LockException");
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("~Nb");
      baseLockManager1.countActiveServices("_ANON_0");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "~Nb";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      try { 
        baseLockManager1.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.clearGlobalFlag("Ibrm/hrrqZYAM{aCK");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      String[] stringArray0 = new String[0];
      baseLockManager1.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
      BaseLockManager.buildServiceTypeLockName("Ibrm/hrrqZYAM{aCK");
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = baseLockManager2.localLocks;
      LockPool lockPool0 = baseLockManager1.getGlobalLockPool();
      BaseLockManager.enterNonExWriteNoWait(long0, "Ibrm/hrrqZYAM{aCK", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "RK R\"/*htt!P*";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.scanServiceData("~ONb", (IServiceDataAcceptor) null);
      LockPool lockPool0 = BaseLockManager.mySections;
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~Nb";
      stringArray0[1] = "~Nb";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      String[] stringArray0 = new String[2];
      baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "q";
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.clear("q", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      String string0 = "H";
      String[] stringArray0 = new String[14];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.enterLocksNoWait((String[]) null, (String[]) null, (String[]) null);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LockPool lockPool0 = BaseLockManager.myLocks;
      LockPool lockPool1 = BaseLockManager.myLocks;
      baseLockManager0.retrieveServiceData("@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", " Could not non-ex write ");
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.checkServiceActive("~ONb", "The suffix must not be null");
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "#}%.fqXP4D;pX\"RrY\"g";
      int int0 = 0;
      String string1 = "dxQ8o<R";
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadCriticalSection("dxQ8o<R");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.clearLocks();
      baseLockManager0.getGlobalLockPool();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "q";
      String[] stringArray0 = new String[14];
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.clear("q", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteCriticalSection("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[9];
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte) (-118);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Long long0 = new Long(1660L);
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      lockObjectFactory0.newLockObject(lockPool0, lockPool0);
      LockPool lockPool1 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWrite(long0, "", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.clearGlobalFlag("bJ&{oJ$-:1,Wg2d");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      try { 
        baseLockManager1.endServiceActivity("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service '@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $' of type '@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $ is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager baseLockManager3 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteCriticalSection("X[\"({{{t");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000018
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~Nb");
      Logging.lock = logger0;
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteCriticalSection(";9%&<cZg");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000007
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager1.countActiveServices("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.deleteServiceData("{%2hVjE.+^sCUTJ_", "{%2hVjE.+^sCUTJ_");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      try { 
        baseLockManager1.endServiceActivity("{%2hVjE.+^sCUTJ_", "oN\"b:G%2EPe");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service 'oN\"b:G%2EPe' of type '{%2hVjE.+^sCUTJ_ is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Logger.getRootLogger();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        baseLockManager0.enterCriticalSections(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterCriticalSections((String[]) null, (String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      // Undeclared exception!
      try { 
        BaseLockManager.clear(" or non-ex write ", localLockPool0, (LockPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "q";
      String[] stringArray0 = new String[14];
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.clear("q", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocksNoWait((String[]) null, (String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "q";
      String[] stringArray0 = new String[14];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.enterWriteNoWait(long0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool1 = baseLockManager0.localLocks;
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      BaseLockManager.enter(long0, (String[]) null, (String[]) null, (String[]) null, "8rIKh>g;oP", localLockPool1, lockPool0);
      baseLockManager0.constructUniqueServiceName("The keyStoreConfiguration s null");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@(#)$Id$");
      LocalLockPool localLockPool2 = baseLockManager0.localLocks;
      LockPool lockPool1 = BaseLockManager.myLocks;
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.deleteServiceData("{%2hVjE.+^sCUTJ_", "{%2hVjE.+^sCUTJ_");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      baseLockManager0.enterLocks((String[]) null, (String[]) null, (String[]) null);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        baseLockManager0.enterCriticalSections((String[]) null, (String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Long long0 = new Long((-489L));
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.enterWrite(long0, "^T 0", "^T 0", (LocalLockPool) null, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.leaveWrite("Entering multiple ", "}#~EP3,l.QCSj%BIZ", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.leaveNonExWrite("&X$3", "L2XOg4(KD=!)]&l)23", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      LockPool lockPool0 = BaseLockManager.mySections;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "@(#)$Id$";
      stringArray0[1] = "@(#)$Id$";
      stringArray0[2] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id$";
      stringArray0[4] = "@(#)$Id$";
      stringArray0[5] = "\"v_b<^^L+Lc^Dn\"|";
      stringArray0[6] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager1.leaveLocks((String[]) null, stringArray0, (String[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000017
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LockPool lockPool0 = BaseLockManager.myLocks;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      BaseLockManager.buildServiceTypeLockName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      try { 
        baseLockManager1.endServiceActivity("Unexpected exception", "Unexpected exception");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service 'Unexpected exception' of type 'Unexpected exception is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.clearGlobalFlag("bJ&{oJ$-:1,Wg2d");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      try { 
        baseLockManager1.endServiceActivity("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service '@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $' of type '@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $ is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteCriticalSection("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteLock("AepT7'@:,<e&v(<k");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.deleteServiceData("{%2hVjE.+^sCUTJ_", "{%2hVjE.+^sCUTJ_");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String string0 = "org.apache.logging.log4j.core.util.ShutdownCallbackRegistry";
      baseLockManager1.enterWriteCriticalSection("org.apache.logging.log4j.core.util.ShutdownCallbackRegistry");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager2.leaveNonExWriteLock("f}M");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000017
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "";
      baseLockManager0.clearGlobalFlag("");
      baseLockManager0.constructUniqueServiceName((String) null);
      Long long0 = baseLockManager0.threadID;
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.enterReadNoWait(long0, "", (String) null, (LocalLockPool) null, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteCriticalSection("VF=8.5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = " Q#N/rG7!l-k7aM<";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " Q#N/rG7!l-k7aM<");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)5;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteCriticalSection("s:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.mySections;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cv?-3";
      // Undeclared exception!
      try { 
        BaseLockManager.leave(stringArray0, stringArray0, stringArray0, "|g{Hgj(A4C", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, stringArray1, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte) (-15);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = " Message=";
      stringArray0[1] = "d5mA{h.1@$W<t0%<1)S";
      stringArray0[2] = "Line Sep";
      stringArray0[3] = "Entering write ";
      stringArray0[4] = "hitCount";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "Entering write ";
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.leave(stringArray0, stringArray0, stringArray1, "", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.writeServiceName("", "");
      Logger.getRootLogger();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteCriticalSection("e#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteCriticalSection("aJ{(G$gJ?(UK1)!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[14];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "hq";
      stringArray0[3] = "hq";
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteCriticalSection("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.makeServiceCounterName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadLockNoWait("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("~ONb");
      Logging.lock = logger0;
      baseLockManager0.deleteServiceData("{%2hVjE.+^sCUTJ_", "{%2hVjE.+^sCUTJ_");
      baseLockManager0.enterReadLockNoWait("{%2hVjE.+^sCUTJ_");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.leaveCriticalSections((String[]) null, (String[]) null, (String[]) null);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      baseLockManager0.setGlobalFlag((String) null);
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      Object object0 = new Object();
      lockObjectFactory0.newLockObject(lockPool0, object0);
      LocalLockPool localLockPool1 = baseLockManager0.localLocks;
      Object object1 = new Object();
      lockObjectFactory0.newLockObject(lockPool0, object1);
      LockObjectFactory lockObjectFactory1 = new LockObjectFactory();
      LockPool lockPool1 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteLockNoWait("org.apache.logging.log4j.core.filter.MapFilter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager baseLockManager3 = new BaseLockManager();
      String string0 = baseLockManager3.registerServiceBeginServiceActivity("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "Q`O;d0]|5jwF@`e", (IServiceCleanup) null);
      assertEquals("Q`O;d0]|5jwF@`e", string0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      baseLockManager0.readServiceName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      String[] stringArray1 = new String[6];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        BaseLockManager.getSortedUniqueLocks(stringArray0, stringArray0, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      baseLockManager0.writeServiceName("BZuf@P{)QLX\"&0Y['$X", "fj");
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      BaseLockManager.LockDescription[] baseLockManager_LockDescriptionArray0 = BaseLockManager.getSortedUniqueLocks(stringArray0, stringArray0, stringArray0);
      assertEquals(1, baseLockManager_LockDescriptionArray0.length);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, stringArray0, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      baseLockManager0.readServiceName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      String[] stringArray1 = new String[6];
      baseLockManager0.writeServiceName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (String) null);
      BaseLockManager.LockDescription[] baseLockManager_LockDescriptionArray0 = BaseLockManager.getSortedUniqueLocks(stringArray1, stringArray1, stringArray1);
      assertEquals(1, baseLockManager_LockDescriptionArray0.length);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "";
      baseLockManager0.clearGlobalFlag("");
      String string1 = null;
      baseLockManager0.constructUniqueServiceName((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "";
      String string2 = "(qr";
      // Undeclared exception!
      try { 
        baseLockManager0.timedWait((-788));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.clearGlobalFlag("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      baseLockManager0.constructUniqueServiceName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockPool lockPool0 = BaseLockManager.myLocks;
      assertNotNull(lockPool0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.enterReadNoWait(long0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      LockPool lockPool0 = BaseLockManager.mySections;
      Object object0 = new Object();
      Object object1 = new Object();
      LockObject lockObject0 = new LockObject(lockPool0, object1);
      MockRuntimeException mockRuntimeException0 = new MockRuntimeException("org.apache.manifoldcf.core.lockmanager.BaseLockManager");
      LockObject lockObject1 = new LockObject(lockPool0, "org.apache.manifoldcf.core.lockmanager.BaseLockManager");
      String string0 = "'";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.writeServiceCounter("@(#)$Id: LockObject.java 988245 2010-08-23 18:39:35Z kwright $", (-202));
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteLock("@(#)$Id: LockObject.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      baseLockManager0.constructUniqueServiceName("");
      LocalLockPool localLockPool1 = baseLockManager0.localLocks;
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        baseLockManager0.cleanupInactiveService("@(#)$Id$", (IServiceCleanup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.clearGlobalFlag("A}");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-39);
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)84;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)117;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager0.cleanupInactiveService("", iServiceCleanup0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteLock("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[3];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteLock("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)23;
      byteArray0[4] = (byte) (-7);
      byteArray0[5] = (byte) (-72);
      baseLockManager0.writeServiceData("}", "}", byteArray0);
      assertEquals(6, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.makeRegisteredServiceFlagName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.makeRegisteredServiceFlagName("w`&fI;Z@zamH", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadLockNoWait("a,U? $>iXn_lI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.checkGlobalFlag("_");
      baseLockManager0.writeData(" Couldn't get ", (byte[]) null);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "]U}[v:/S!";
      stringArray0[1] = "";
      stringArray0[2] = "Qs67L:8C(u.}pPk.K";
      stringArray0[3] = "Unexpected exception";
      stringArray0[4] = "|Qp";
      stringArray0[5] = "";
      stringArray0[6] = "QU,/e$ 'cGZjod";
      stringArray0[7] = " Could not read ";
      stringArray0[8] = "8~p1bZS7BY{O_3cuC";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        baseLockManager0.leaveCriticalSections(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.buildServiceListEntry("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", 3522);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveCriticalSections(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      LockPool lockPool0 = BaseLockManager.mySections;
      String string0 = BaseLockManager.buildServiceListEntry("@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", 0);
      assertEquals("_SERVICELIST_@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $_0", string0);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      String string0 = BaseLockManager.serviceDataPrefix;
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.scanServiceData("Suppressed: ", (IServiceDataAcceptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "]U}[v:/S!";
      stringArray0[1] = "";
      stringArray0[2] = "Qs67L:8C(u.}pPk.K";
      stringArray0[3] = "Unexpected exception";
      stringArray0[4] = "|Qp";
      stringArray0[5] = "";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager0.scanServiceData("]U}[v:/S!", iServiceDataAcceptor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteLockNoWait((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "/t1Z";
      baseLockManager0.readServiceCounter("/t1Z");
      String string1 = "Tj2Io\"1H/0dQneQxg";
      String string2 = "";
      baseLockManager0.readServiceData("Tj2Io\"1H/0dQneQxg", "");
      String string3 = null;
      Long long0 = new Long((-3366L));
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      localLockPool0.releaseLocalLock("");
      localLockPool0.getLocalLock((String) null);
      LockPool lockPool0 = null;
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWriteNoWait(long0, "Tj2Io\"1H/0dQneQxg", "/t1Z", localLockPool0, (LockPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "_";
      baseLockManager0.checkGlobalFlag("_");
      String string1 = "";
      int int0 = 0;
      // Undeclared exception!
      try { 
        baseLockManager0.timedWait(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadLock(" or non-ex write ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.clearGlobalFlag("");
      baseLockManager0.constructUniqueServiceName((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[2] = "(qr";
      stringArray0[3] = "";
      stringArray0[4] = null;
      stringArray0[5] = null;
      baseLockManager0.writeServiceName("", (String) null);
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        BaseLockManager.getSortedUniqueLocks(stringArray1, stringArray1, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ComparableTimSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      BaseLockManager.getSortedUniqueLocks(stringArray0, stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadLock("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      ManifoldCFConfiguration manifoldCFConfiguration0 = baseLockManager0.getSharedConfiguration();
      assertNull(manifoldCFConfiguration0);
      
      BaseLockManager.makeServiceDataName(" Write ", " Write ");
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager0.registerServiceBeginServiceActivity("a?#\"Y5#", "a?#\"Y5#", iServiceCleanup0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadCriticalSection((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadCriticalSection("w`&fI;Z@zamH");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "$";
      stringArray0[2] = "$";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveCriticalSections((String[]) null, (String[]) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-118);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LockPool lockPool0 = BaseLockManager.myLocks;
      lockPool0.getObject((Object) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "DX0]lNA$6]F)";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "DX0]lNA$6]F)";
      stringArray0[4] = "DX0]lNA$6]F)";
      stringArray0[5] = "DX0]lNA$6]F)";
      stringArray0[6] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[7] = "DX0]lNA$6]F)";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[2] = "";
      stringArray1[3] = "DX0]lNA$6]F)";
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      // Undeclared exception!
      try { 
        BaseLockManager.leave(stringArray0, stringArray1, stringArray1, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveCriticalSections(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LockPool lockPool0 = BaseLockManager.mySections;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Long long0 = baseLockManager1.threadID;
      Long long1 = baseLockManager0.threadID;
      // Undeclared exception!
      try { 
        BaseLockManager.enterNoWait(long1, (String[]) null, (String[]) null, (String[]) null, "s!", (LocalLockPool) null, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "]U}[v:/S!";
      stringArray0[1] = "";
      stringArray0[2] = "Qs67L:8C(u.}pPk.K";
      stringArray0[3] = "Unexpected exception";
      stringArray0[4] = "|Qp";
      stringArray0[5] = "";
      stringArray0[6] = "QU,/e$ 'cGZjod";
      stringArray0[7] = " Could not read ";
      stringArray0[8] = "8~p1bZS7BY{O_3cuC";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.enterNoWait(long0, stringArray0, stringArray0, stringArray0, (String) null, localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.makeActiveServiceFlagName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "com.google.common.hash.AbstractCompositeHashFunction");
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadCriticalSection("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      String string0 = "_SERVICE_";
      BaseLockManager.makeActiveServiceFlagName("_SERVICE_", "_SERVICE_");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      IThreadContext iThreadContext0 = mock(IThreadContext.class, new ViolatedAssumptionAnswer());
      try { 
        ManifoldCF.initializeEnvironment(iThreadContext0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Initialization failed: Could not read configuration file '/home/pedro/lcf/properties.xml'
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte) (-20);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)46;
      baseLockManager0.writeData("B)x:rm&$&?yy6K0D[", byteArray0);
      assertEquals(9, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.timedWait(42);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      String string0 = "";
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription((-958), "");
      baseLockManager_LockDescription0.lockType = (-958);
      baseLockManager_LockDescription0.set(0);
      baseLockManager_LockDescription0.set((-958));
      baseLockManager_LockDescription0.lockKey = "";
      baseLockManager_LockDescription0.getKey();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.timedWait(baseLockManager_LockDescription0.lockType);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[0];
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = new LocalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.enter(long0, stringArray0, stringArray0, stringArray0, "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.leaveRead((String) null, "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      localLockPool0.releaseLocalLock("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LocalLock localLock0 = localLockPool0.getLocalLock("");
      LockPool lockPool0 = BaseLockManager.mySections;
      Object object0 = new Object();
      Object object1 = new Object();
      LockObject lockObject0 = new LockObject(lockPool0, object1);
      LockGate lockGate0 = new LockGate(localLock0, lockObject0, lockPool0);
      lockPool0.releaseObject(object0, lockGate0);
      MockRuntimeException mockRuntimeException0 = new MockRuntimeException("org.apache.manifoldcf.core.lockmanager.BaseLockManager");
      LockObject lockObject1 = new LockObject(lockPool0, "org.apache.manifoldcf.core.lockmanager.BaseLockManager");
      LockGate lockGate1 = new LockGate("", lockObject1, lockPool0);
      lockPool0.releaseObject(mockRuntimeException0, lockGate1);
      // Undeclared exception!
      try { 
        BaseLockManager.leaveRead("", "", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.retrieveServiceData("no", "]b\"OA2n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "}";
      String string1 = "";
      // Undeclared exception!
      try { 
        baseLockManager0.checkServiceActive("}", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = null;
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteLock(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteLock("&+UPo7IOg7G#P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.updateServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "[`*j*g)3b!9|Ud", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-24);
      byteArray0[4] = (byte) (-47);
      byteArray0[5] = (byte)0;
      baseLockManager0.readServiceData("", "");
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)0;
      // Undeclared exception!
      try { 
        baseLockManager0.updateServiceData("", "", byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LockPool lockPool0 = BaseLockManager.myLocks;
      byte[] byteArray0 = baseLockManager0.readServiceData("@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $");
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager1.enterReadLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.deleteServiceData((String) null, "h7>y[m1");
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.deleteServiceData("{%21hVjE.+^sCUTJ_", "{%21hVjE.+^sCUTJ_");
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadLockNoWait("{%21hVjE.+^sCUTJ_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "";
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteLockNoWait(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "";
      baseLockManager0.getSharedConfiguration();
      String string1 = "";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteCriticalSection("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "#}%.fqXP4D;pX\"RrY\"g";
      baseLockManager0.writeServiceCounter("#}%.fqXP4D;pX\"RrY\"g", 0);
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteLock("#}%.fqXP4D;pX\"RrY\"g");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      baseLockManager0.getGlobalLockPool();
      String string0 = null;
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteLock(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "Fx]|2U<CvA";
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteLock("Fx]|2U<CvA");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.enterRead(long0, (String) null, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      LocalLockPool localLockPool0 = new LocalLockPool();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.enterWrite((Long) null, ",RU$", ",RU$", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.countActiveServices("T/K7?Rc");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "";
      // Undeclared exception!
      try { 
        baseLockManager0.countActiveServices("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.leaveLocks((String[]) null, (String[]) null, (String[]) null);
      // Undeclared exception!
      try { 
        baseLockManager0.endServiceActivity("marker", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.checkServiceActive("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.registerServiceBeginServiceActivity("IS_FILE", "IS_FILE", (IServiceCleanup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      String string0 = "!Tv4";
      BaseLockManager.buildServiceTypeLockName("!Tv4");
      String string1 = ":G8<nTg~";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      // Undeclared exception!
      try { 
        baseLockManager0.endServiceActivity("!Tv4", "_SERVICELOCK_!Tv4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LockPool lockPool0 = BaseLockManager.mySections;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Long long0 = baseLockManager1.threadID;
      Long long1 = baseLockManager0.threadID;
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWrite(long0, "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", (LocalLockPool) null, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = new LocalLockPool();
      localLockPool0.getLocalLock("J");
      localLockPool0.getLocalLock("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWrite(long0, baseLockManager0._rcsid, baseLockManager0._rcsid, localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.leaveCriticalSections((String[]) null, (String[]) null, (String[]) null);
      assertNotSame(baseLockManager1, baseLockManager0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.clearGlobalFlag("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LockPool lockPool0 = BaseLockManager.mySections;
      String string0 = ILockManager._rcsid;
      assertEquals("@(#)$Id: ILockManager.java 988245 2010-08-23 18:39:35Z kwright $", string0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.clearGlobalFlag("");
      baseLockManager0.constructUniqueServiceName((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "";
      stringArray0[2] = "(qr";
      stringArray0[3] = "";
      stringArray0[4] = null;
      stringArray0[5] = null;
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ComparableTimSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = baseLockManager0.constructUniqueServiceName(" Could not write ");
      assertEquals("_ANON_0", string0);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.leaveNonExWrite((String) null, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = baseLockManager0.readServiceName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription((-345), "");
      baseLockManager_LockDescription0.lockType = (-931);
      baseLockManager_LockDescription0.getType();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "rK5f_5~z";
      baseLockManager0.readServiceName("rK5f_5~z");
      String string1 = null;
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.leaveNonExWrite((String) null, "@zN.94>> tx/$", (LocalLockPool) null, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteCriticalSection(";9%&<cZg");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteCriticalSection("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.clearLocks();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager1.enterLocks((String[]) null, (String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription(329, (String) null);
      baseLockManager_LockDescription0.set(65280);
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "Suppliers.memoizeWithExpiration(";
      stringArray0[3] = null;
      stringArray0[4] = "";
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocks(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      // Undeclared exception!
      try { 
        Logging.initializeLoggers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.Logging", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWriteNoWait(long0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Long long0 = new Long(0L);
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      MockDate mockDate0 = new MockDate(0L);
      LockGate lockGate0 = lockPool0.getObject(lockObjectFactory0);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("0#5:kuP'WR$3");
      SQLTransientException sQLTransientException0 = new SQLTransientException("{dEV_)_I%u", "@(#)$Id$", sQLInvalidAuthorizationSpecException0);
      MockRuntimeException mockRuntimeException0 = new MockRuntimeException(sQLTransientException0);
      lockPool0.releaseObject(mockRuntimeException0, lockGate0);
      lockPool0.releaseObject(mockDate0, lockGate0);
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWriteNoWait(long0, "7hB0(><o=", "7hB0(><o=", (LocalLockPool) null, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }
}
