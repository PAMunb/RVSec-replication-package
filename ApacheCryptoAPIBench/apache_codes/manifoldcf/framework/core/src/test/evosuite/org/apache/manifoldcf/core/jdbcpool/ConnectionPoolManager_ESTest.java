/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 16:46:59 GMT 2022
 */

package org.apache.manifoldcf.core.jdbcpool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.atomic.AtomicBoolean;
import org.apache.manifoldcf.core.jdbcpool.ConnectionPool;
import org.apache.manifoldcf.core.jdbcpool.ConnectionPoolManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConnectionPoolManager_ESTest extends ConnectionPoolManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 5;
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(5, false);
      String string0 = "KsvRoWZC";
      String string1 = "Um^;@s.Yzzms*m]~HfV";
      String string2 = "h/rO";
      connectionPoolManager0.shutdown();
      String string3 = null;
      AtomicBoolean atomicBoolean0 = connectionPoolManager0.shuttingDown;
      connectionPoolManager0.shuttingDown = atomicBoolean0;
      // Undeclared exception!
      try { 
        connectionPoolManager0.addAlias("W^8Ha{$::la!TL<Ys%", (String) null, ">F d,OnG(7qC=E+LEg", "[\"wJ(ggo16.%}A;", "", 0, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(284, true);
      AtomicBoolean atomicBoolean0 = connectionPoolManager0.shuttingDown;
      connectionPoolManager0.shuttingDown = atomicBoolean0;
      connectionPoolManager0.flush();
      connectionPoolManager0.cleanupExpiredConnections(284);
      connectionPoolManager0.cleanupExpiredConnections((-535L));
      connectionPoolManager0.flush();
      connectionPoolManager0.getPool("");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(0, false);
      connectionPoolManager0.shutdown();
      ConnectionPoolManager.ConnectionCloserThread connectionPoolManager_ConnectionCloserThread0 = connectionPoolManager0.new ConnectionCloserThread();
      connectionPoolManager_ConnectionCloserThread0.getContextClassLoader();
      ConnectionPoolManager connectionPoolManager1 = new ConnectionPoolManager(0, false);
      ConnectionPoolManager connectionPoolManager2 = new ConnectionPoolManager(0, false);
      connectionPoolManager_ConnectionCloserThread0.run();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(1, false);
      connectionPoolManager0.shutdown();
      connectionPoolManager0.shutdown();
      connectionPoolManager0.cleanupExpiredConnections(1);
      connectionPoolManager0.cleanupExpiredConnections(1);
      ConnectionPoolManager.ConnectionCloserThread connectionPoolManager_ConnectionCloserThread0 = connectionPoolManager0.new ConnectionCloserThread();
      MockThread.interrupted();
      connectionPoolManager0.shutdown();
      MockThread.interrupted();
      MockThread.getAllStackTraces();
      connectionPoolManager_ConnectionCloserThread0.run();
      connectionPoolManager_ConnectionCloserThread0.run();
      MockThread.dumpStack();
      connectionPoolManager0.shutdown();
      connectionPoolManager0.cleanupExpiredConnections(0L);
      connectionPoolManager_ConnectionCloserThread0.run();
      try { 
        connectionPoolManager0.addAlias("qt", "qt", "qt", "qt", "", 4220, 0L);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(1, false);
      connectionPoolManager0.cleanupExpiredConnections(1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(0, true);
      AtomicBoolean atomicBoolean0 = connectionPoolManager0.shuttingDown;
      connectionPoolManager0.cleanupExpiredConnections(0);
      connectionPoolManager0.cleanupExpiredConnections(0);
      connectionPoolManager0.flush();
      connectionPoolManager0.getPool("$X;^Bb");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 0;
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(0, false);
      connectionPoolManager0.flush();
      String string0 = "Pool already closed";
      try { 
        connectionPoolManager0.addAlias("Gz~P0!nd?HK@", "Gz~P0!nd?HK@", "Pool already closed", "", "02>5wMi@4hXjYC4", 0, 0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(0, false);
      assertNotNull(connectionPoolManager0);
      
      connectionPoolManager0.shutdown();
      ConnectionPoolManager.ConnectionCloserThread connectionPoolManager_ConnectionCloserThread0 = connectionPoolManager0.new ConnectionCloserThread();
      assertNotNull(connectionPoolManager_ConnectionCloserThread0);
      
      ClassLoader classLoader0 = connectionPoolManager_ConnectionCloserThread0.getContextClassLoader();
      assertNotNull(classLoader0);
      assertEquals(0, connectionPoolManager_ConnectionCloserThread0.countStackFrames());
      assertFalse(connectionPoolManager_ConnectionCloserThread0.isInterrupted());
      assertTrue(connectionPoolManager_ConnectionCloserThread0.isDaemon());
      
      ClassLoader classLoader1 = connectionPoolManager_ConnectionCloserThread0.getContextClassLoader();
      assertNotNull(classLoader1);
      assertSame(classLoader1, classLoader0);
      assertEquals(0, connectionPoolManager_ConnectionCloserThread0.countStackFrames());
      assertFalse(connectionPoolManager_ConnectionCloserThread0.isInterrupted());
      assertTrue(connectionPoolManager_ConnectionCloserThread0.isDaemon());
      
      try { 
        connectionPoolManager0.addAlias("", "org.apache.manifoldcf.core.jdbcpool.ConnectionPoolManager", "TAClOn>),-q", "B", "TAClOn>),-q", (-1), (-1));
        fail("Expecting exception: InstantiationException");
      
      } catch(InstantiationException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(2676, false);
      assertNotNull(connectionPoolManager0);
      
      boolean boolean0 = MockThread.interrupted();
      assertFalse(boolean0);
      
      try { 
        connectionPoolManager0.addAlias("zu#|wHNP1S-1c\"|lnZ6", "org.apache.manifoldcf.core.jdbcpool.WrappedConnection", "zu#|wHNP1S-1c\"|lnZ6", "org.apache.manifoldcf.core.jdbcpool.WrappedConnection", "Released a connection that wasn't tracked!!", 1, (-1L));
        fail("Expecting exception: InstantiationException");
      
      } catch(InstantiationException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(0, false);
      assertNotNull(connectionPoolManager0);
      
      connectionPoolManager0.shutdown();
      connectionPoolManager0.cleanupExpiredConnections(0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 7690;
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(7690, true);
      connectionPoolManager0.shutdown();
      try { 
        connectionPoolManager0.addAlias("org.apache.manifoldcf.core.interfaces.ManifoldCFException", "org.apache.manifoldcf.core.interfaces.ManifoldCFException", (String) null, "-0s(H)l", "org.apache.manifoldcf.core.interfaces.ManifoldCFException", 7690, 0L);
        fail("Expecting exception: InstantiationException");
      
      } catch(InstantiationException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConnectionPoolManager connectionPoolManager0 = null;
      try {
        connectionPoolManager0 = new ConnectionPoolManager((-37), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -37
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 0;
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(0, true);
      try { 
        connectionPoolManager0.addAlias("Pool already closed", "Pool already closed", "Pool already closed", "/]gA", "Pool already closed", 0, 0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(0, true);
      try { 
        connectionPoolManager0.addAlias("XT8.=\"$<>k;bGO`B", "XT8.=\"$<>k;bGO`B", "", "z(Vh", "XT8.=\"$<>k;bGO`B", 0, 0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConnectionPoolManager connectionPoolManager0 = new ConnectionPoolManager(0, false);
      try { 
        connectionPoolManager0.addAlias("  yUH %z%bDgF)r2", "", "", "", "}c%Q`LF7~#)?:?:K I", 0, 311L);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }
}
