/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Apr 18 12:29:16 GMT 2022
 */

package org.apache.manifoldcf.core.interfaces;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class CacheManagerFactory_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.manifoldcf.core.interfaces.CacheManagerFactory"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/manifoldcf/framework/core"); 
    java.lang.System.setProperty("user.home", "/home/pedro"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "pedro"); 
    java.lang.System.setProperty("user.timezone", ""); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CacheManagerFactory_ESTest_scaffolding.class.getClassLoader() ,
      "com.google.common.collect.AllEqualOrdering",
      "org.apache.manifoldcf.core.interfaces.ICacheHandle",
      "org.apache.manifoldcf.core.interfaces.ClauseDescription",
      "com.google.common.math.LongMath$1",
      "org.apache.manifoldcf.core.system.ManifoldCF",
      "com.google.common.collect.ImmutableCollection",
      "org.apache.manifoldcf.core.interfaces.IPollingHook",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache",
      "com.google.common.hash.BloomFilterStrategies",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache$ExpirationTreeNode",
      "com.google.common.hash.BloomFilter$Strategy",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache$ObjectRecord",
      "com.google.common.hash.BloomFilterStrategies$1",
      "org.apache.manifoldcf.core.interfaces.IHierarchyParent",
      "com.google.common.hash.BloomFilterStrategies$2",
      "org.apache.manifoldcf.core.interfaces.ManifoldCFConfiguration",
      "org.apache.manifoldcf.core.interfaces.IThreadContext",
      "org.apache.manifoldcf.core.interfaces.IShutdownHook",
      "com.google.common.base.Converter",
      "org.apache.manifoldcf.core.interfaces.ManifoldCFException",
      "com.google.common.collect.NullsLastOrdering",
      "com.google.common.base.Function",
      "com.google.common.collect.ComparatorOrdering",
      "com.google.common.collect.Range",
      "org.apache.manifoldcf.core.interfaces.LockManagerFactory",
      "org.apache.manifoldcf.core.system.ManifoldCF$DatabaseConnectionReleaseThread",
      "com.google.common.math.LongMath",
      "com.google.common.collect.ByFunctionOrdering",
      "com.google.common.primitives.Ints$IntConverter",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache$ObjectClassRecord",
      "org.apache.manifoldcf.core.system.ManifoldCF$ShutdownThread",
      "com.google.common.hash.Funnel",
      "org.apache.manifoldcf.core.cachemanager.CacheManager",
      "org.apache.manifoldcf.core.interfaces.ICacheDescription",
      "org.apache.manifoldcf.core.interfaces.ICacheCreateHandle",
      "com.google.common.base.Predicate",
      "com.google.common.collect.ExplicitOrdering",
      "com.google.common.collect.LexicographicalOrdering",
      "com.google.common.collect.BoundType",
      "com.google.common.collect.Cut$AboveValue",
      "org.apache.manifoldcf.core.system.ManifoldCFResourceLoader",
      "org.apache.manifoldcf.core.interfaces.ILockManager",
      "com.google.common.hash.BloomFilterStrategies$BitArray",
      "org.apache.manifoldcf.core.interfaces.ResultSpecification",
      "com.google.common.primitives.Booleans",
      "com.google.common.collect.Range$2",
      "com.google.common.collect.NullsFirstOrdering",
      "org.apache.manifoldcf.core.interfaces.Configuration$JSONWriter",
      "com.google.common.collect.Range$1",
      "org.apache.manifoldcf.core.interfaces.ConfigurationNode",
      "com.google.common.collect.Cut$BelowValue",
      "com.google.common.collect.CompoundOrdering",
      "org.apache.manifoldcf.core.interfaces.ICacheManager",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.ReverseOrdering",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache$InvalidationTable",
      "com.google.common.collect.UsingToStringOrdering",
      "com.google.common.collect.DiscreteDomain",
      "com.google.common.collect.Range$RangeLexOrdering",
      "org.apache.manifoldcf.core.threadcontext.ThreadContext",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache$ExpirationTree",
      "org.apache.manifoldcf.core.interfaces.IndexDescription",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache$ObjectRecordTable",
      "com.google.common.collect.Cut",
      "org.apache.manifoldcf.core.interfaces.ICacheExecutor",
      "com.google.common.collect.Cut$BelowAll",
      "com.google.common.hash.BloomFilter",
      "org.apache.manifoldcf.core.interfaces.CacheManagerFactory",
      "com.google.common.primitives.Ints",
      "org.apache.manifoldcf.core.interfaces.Configuration",
      "org.apache.manifoldcf.core.common.XMLDoc",
      "org.apache.manifoldcf.core.interfaces.StringSet",
      "com.google.common.collect.Ordering",
      "org.apache.manifoldcf.core.interfaces.Configuration$JSONReader",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache$ObjectClassTable",
      "com.google.common.collect.NaturalOrdering",
      "org.apache.manifoldcf.core.interfaces.IResultSet",
      "com.google.common.base.Preconditions",
      "org.apache.manifoldcf.core.system.ManifoldCF$OverrideableManifoldCFConfiguration",
      "org.apache.manifoldcf.core.interfaces.ThreadContextFactory",
      "com.google.common.collect.Cut$AboveAll",
      "org.apache.manifoldcf.core.interfaces.IDBInterface",
      "org.apache.manifoldcf.core.interfaces.ILimitChecker"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CacheManagerFactory_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.manifoldcf.core.interfaces.CacheManagerFactory",
      "org.apache.manifoldcf.core.threadcontext.ThreadContext",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache$ObjectRecordTable",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache$InvalidationTable",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache$ObjectClassTable",
      "org.apache.manifoldcf.core.cachemanager.GeneralCache$ExpirationTree",
      "org.apache.manifoldcf.core.cachemanager.CacheManager",
      "org.apache.manifoldcf.core.interfaces.LockManagerFactory",
      "org.apache.manifoldcf.core.system.ManifoldCF$ShutdownThread",
      "org.apache.manifoldcf.core.system.ManifoldCF",
      "org.apache.manifoldcf.core.interfaces.ThreadContextFactory",
      "org.apache.manifoldcf.core.interfaces.StringSet",
      "org.apache.manifoldcf.core.interfaces.ResultSpecification",
      "com.google.common.hash.BloomFilter",
      "com.google.common.hash.BloomFilterStrategies",
      "com.google.common.base.Preconditions",
      "com.google.common.hash.BloomFilterStrategies$BitArray",
      "com.google.common.math.LongMath",
      "com.google.common.math.LongMath$1",
      "com.google.common.primitives.Ints",
      "com.google.common.collect.Range$1",
      "com.google.common.collect.Range$2",
      "com.google.common.collect.Ordering",
      "com.google.common.collect.Range$RangeLexOrdering",
      "com.google.common.collect.Cut",
      "com.google.common.collect.Cut$BelowAll",
      "com.google.common.collect.Cut$AboveAll",
      "com.google.common.collect.Range",
      "com.google.common.collect.Cut$AboveValue",
      "com.google.common.collect.Cut$BelowValue",
      "com.google.common.primitives.Booleans"
    );
  }
}
