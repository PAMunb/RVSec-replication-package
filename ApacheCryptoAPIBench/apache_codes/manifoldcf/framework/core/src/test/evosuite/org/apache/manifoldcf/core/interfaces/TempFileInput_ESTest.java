/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 16:42:56 GMT 2022
 */

package org.apache.manifoldcf.core.interfaces;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.sql.SQLSyntaxErrorException;
import org.apache.manifoldcf.core.interfaces.BinaryInput;
import org.apache.manifoldcf.core.interfaces.IThreadContext;
import org.apache.manifoldcf.core.interfaces.TempFileInput;
import org.apache.manifoldcf.core.system.ManifoldCF;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockIOException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TempFileInput_ESTest extends TempFileInput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      File file0 = null;
      String string0 = "u$";
      MockFile mockFile0 = new MockFile("Ud8sbuo^1O", "Ud8sbuo^1O");
      MockFile mockFile1 = new MockFile("Ud8sbuo^1O", "u$");
      File file1 = MockFile.createTempFile("Cannot determine base class", "Ud8sbuo^1O");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file1);
      TempFileInput tempFileInput0 = new TempFileInput(mockFileInputStream0, (-1171L));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("O/Fx^#(_}*2q;aWmVzZ.0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      TempFileInput tempFileInput0 = new TempFileInput();
      tempFileInput0.getStream();
      MockFile mockFile0 = new MockFile("O");
      tempFileInput0.transfer();
      MockFile mockFile1 = new MockFile(mockFile0, "Fx^#(_}*2q;aWmVzZ.0");
      MockFile.createTempFile("@(#)$Id: TempFileInput.java 988245 2010-08-23 18:39:35Z kwright $", "O");
      tempFileInput0.file = (File) mockFile1;
      tempFileInput0.getStream();
      tempFileInput0.transfer();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-369), 1384);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TempFileInput tempFileInput0 = new TempFileInput();
      tempFileInput0.getStream();
      MockFile mockFile0 = new MockFile("O");
      tempFileInput0.file = (File) mockFile0;
      try { 
        tempFileInput0.getStream();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't create stream: null
         //
         verifyException("org.apache.manifoldcf.core.interfaces.TempFileInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = new TempFileInput(byteArrayInputStream0);
      TempFileInput tempFileInput1 = new TempFileInput(byteArrayInputStream0, 65536L, 501);
      tempFileInput1.doneWithStream();
      tempFileInput0.calculateLength();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)43;
      byteArray0[3] = (byte) (-6);
      byteArray0[4] = (byte) (-62);
      byteArray0[5] = (byte) (-107);
      byteArray0[6] = (byte) (-15);
      byteArray0[7] = (byte) (-62);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2147450858), (byte)43);
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(byteArrayInputStream0, 7L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = new TempFileInput(byteArrayInputStream0);
      tempFileInput0.getStream();
      TempFileInput tempFileInput1 = null;
      try {
        tempFileInput1 = new TempFileInput(byteArrayInputStream0, 2862933555777941757L, (-12931));
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // IO exception while creating backing file: Simulated IOException
         //
         verifyException("org.apache.manifoldcf.core.interfaces.BinaryInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = new TempFileInput(byteArrayInputStream0);
      tempFileInput0.getStream();
      int int0 = (-12931);
      TempFileInput tempFileInput1 = null;
      try {
        tempFileInput1 = new TempFileInput(byteArrayInputStream0, 2862933555777941757L, (-12931));
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // IO exception while creating backing file: Simulated IOException
         //
         verifyException("org.apache.manifoldcf.core.interfaces.BinaryInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(pipedInputStream0, (-447L));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(8192);
      pipedInputStream0.close();
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(pipedInputStream0, 9223372036854775807L, 8192);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)70;
      byteArray0[5] = (byte)70;
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = new TempFileInput(byteArrayInputStream0, (byte)70);
      byteArrayInputStream0.reset();
      tempFileInput0.transfer();
      tempFileInput0.transfer();
      TempFileInput tempFileInput1 = new TempFileInput(byteArrayInputStream0, (byte)70, (byte)70);
      tempFileInput1.calculateLength();
      byteArrayInputStream0.close();
      tempFileInput0.calculateLength();
      MockFile mockFile0 = new MockFile("com.google.common.base.CharMatcher$JavaLowerCase", "");
      MockFile.createTempFile("v{.m6~&X/U4 ZxUiy", "_nw+xi,]d{'no6", (File) mockFile0);
      tempFileInput1.discard();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      TempFileInput tempFileInput2 = null;
      try {
        tempFileInput2 = new TempFileInput(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = new TempFileInput(byteArrayInputStream0);
      tempFileInput0.calculateLength();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte byte0 = (byte)106;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)106;
      byteArray0[1] = (byte)106;
      byteArray0[2] = (byte)106;
      byte byte1 = (byte)1;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)106;
      byteArray0[5] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readChar();
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(dataInputStream0, (-1L), (-186));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)83;
      byteArray0[3] = (byte)34;
      byteArray0[4] = (byte)62;
      byteArray0[5] = (byte)70;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)44;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = new TempFileInput(byteArrayInputStream0, 64L);
      byteArrayInputStream0.reset();
      tempFileInput0.transfer();
      tempFileInput0.transfer();
      tempFileInput0.calculateLength();
      byteArrayInputStream0.close();
      tempFileInput0.calculateLength();
      MockFile mockFile0 = new MockFile(":#?D4pHFldh7", "@(#)$Id$");
      MockFile mockFile1 = (MockFile)MockFile.createTempFile("@(#)$Id$", "", (File) mockFile0);
      tempFileInput0.file = (File) mockFile1;
      // Undeclared exception!
      try { 
        tempFileInput0.discard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TempFileInput tempFileInput0 = new TempFileInput();
      tempFileInput0.getStream();
      MockFile mockFile0 = new MockFile("@(#)$Id$", "@(#)$Id: BinaryInput.java 988245 2010-08-23 18:39:35Z kwright $");
      MockFile mockFile1 = new MockFile(mockFile0, "Fx^#(_}*2q;aWmVzZ.0");
      MockFile.createTempFile("@(#)$Id: TempFileInput.java 988245 2010-08-23 18:39:35Z kwright $", "O");
      tempFileInput0.file = (File) mockFile1;
      // Undeclared exception!
      try { 
        tempFileInput0.discard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(59);
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(pipedInputStream0, 59, 59);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = new TempFileInput(byteArrayInputStream0);
      tempFileInput0.openStream();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readChar();
      TempFileInput tempFileInput0 = new TempFileInput(dataInputStream0, 185L, 8192);
      tempFileInput0.transfer();
      tempFileInput0.getStream();
      try { 
        dataInputStream0.readByte();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)83;
      byteArray0[3] = (byte)34;
      byteArray0[4] = (byte)62;
      byteArray0[5] = (byte)70;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)44;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = new TempFileInput(byteArrayInputStream0, 64L);
      byteArrayInputStream0.reset();
      tempFileInput0.transfer();
      tempFileInput0.transfer();
      tempFileInput0.calculateLength();
      byteArrayInputStream0.close();
      tempFileInput0.calculateLength();
      MockFile mockFile0 = new MockFile(":#?D4pHFldh7", "@(#)$Id$");
      File file0 = MockFile.createTempFile("@(#)$Id$", "", (File) mockFile0);
      tempFileInput0.file = file0;
      tempFileInput0.calculateLength();
      tempFileInput0.calculateLength();
      tempFileInput0.transfer();
      tempFileInput0.calculateLength();
      tempFileInput0.transfer();
      tempFileInput0.discard();
      tempFileInput0.discard();
      tempFileInput0.transfer();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)65;
      byteArray0[4] = (byte)62;
      byteArray0[5] = (byte) (-63);
      byteArray0[7] = (byte)44;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = new TempFileInput(byteArrayInputStream0, (byte)0);
      byteArrayInputStream0.reset();
      BinaryInput binaryInput0 = tempFileInput0.transfer();
      binaryInput0.doneWithStream();
      tempFileInput0.transfer();
      byteArrayInputStream0.close();
      tempFileInput0.calculateLength();
      MockFile mockFile0 = new MockFile(":#?D4pHFldh7", "@(#)$Id$");
      File file0 = MockFile.createTempFile("@(#)$Id$", "", (File) mockFile0);
      byteArrayInputStream0.mark((byte)0);
      tempFileInput0.file = file0;
      tempFileInput0.calculateLength();
      tempFileInput0.transfer();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TempFileInput tempFileInput0 = new TempFileInput();
      tempFileInput0.getStream();
      MockFile mockFile0 = new MockFile("O");
      mockFile0.toPath();
      MockFile mockFile1 = new MockFile(mockFile0, "Fx^#(_}*2q;aWmVzZ.0");
      tempFileInput0.file = (File) mockFile1;
      try { 
        tempFileInput0.getStream();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't create stream: null
         //
         verifyException("org.apache.manifoldcf.core.interfaces.TempFileInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)31;
      byteArray0[3] = (byte)112;
      byteArray0[4] = (byte)41;
      byteArray0[5] = (byte) (-97);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)93);
      TempFileInput tempFileInput0 = new TempFileInput(byteArrayInputStream0, (byte)41);
      tempFileInput0.stream = (InputStream) byteArrayInputStream0;
      TempFileInput tempFileInput1 = (TempFileInput)tempFileInput0.transfer();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      tempFileInput1.openStream();
      tempFileInput1.discard();
      tempFileInput1.transfer();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TempFileInput tempFileInput0 = new TempFileInput();
      tempFileInput0.openStream();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)31;
      byteArray0[3] = (byte)112;
      byteArray0[4] = (byte)41;
      byteArray0[5] = (byte) (-97);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)93);
      TempFileInput tempFileInput0 = new TempFileInput(byteArrayInputStream0, (byte)41);
      tempFileInput0.stream = (InputStream) byteArrayInputStream0;
      tempFileInput0.transfer();
      tempFileInput0.stream = (InputStream) byteArrayInputStream0;
      tempFileInput0.calculateLength();
      byteArrayInputStream0.reset();
      tempFileInput0.discard();
      tempFileInput0.discard();
      tempFileInput0.openStream();
      tempFileInput0.discard();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TempFileInput tempFileInput0 = new TempFileInput();
      tempFileInput0.getStream();
      TempFileInput tempFileInput1 = null;
      try {
        tempFileInput1 = new TempFileInput((InputStream) null, (-3588L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.TempFileInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      long long0 = (-1503L);
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput((InputStream) null, (-1503L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.TempFileInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(byteArrayInputStream0, (-35), (-35));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(bufferedInputStream0, (-218L), 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TempFileInput tempFileInput0 = new TempFileInput();
      tempFileInput0.discard();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TempFileInput tempFileInput0 = new TempFileInput();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-122);
      byteArray0[1] = (byte) (-53);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte) (-33);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)6;
      tempFileInput0.inMemoryBuffer = byteArray0;
      tempFileInput0.discard();
      tempFileInput0.discard();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput((InputStream) null, (-2815L), (-2147450036));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.TempFileInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(byteArrayInputStream0, (-9223372036854775808L), (-1459));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(byteArrayInputStream0, (-1L), (-214));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(185);
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(pipedInputStream0, 185);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-57);
      byteArray0[4] = (byte) (-97);
      byteArray0[5] = (byte)106;
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readChar();
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(dataInputStream0, (byte)0, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockFile.createTempFile("j!9m'Y", "SVp$vcAmW4|mk<'UY");
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput((InputStream) null, 9223372036854775807L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.TempFileInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.TempFileInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TempFileInput tempFileInput0 = new TempFileInput();
      BinaryInput binaryInput0 = tempFileInput0.transfer();
      assertNotSame(binaryInput0, tempFileInput0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-46);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TempFileInput tempFileInput0 = new TempFileInput(byteArrayInputStream0);
      BinaryInput binaryInput0 = tempFileInput0.transfer();
      assertNotSame(binaryInput0, tempFileInput0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TempFileInput tempFileInput0 = new TempFileInput();
      tempFileInput0.calculateLength();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TempFileInput tempFileInput0 = new TempFileInput();
      MockIOException mockIOException0 = new MockIOException("@(#)$Id: TempFileInput.java 988245 2010-08-23 18:39:35Z kwright $");
      StackTraceElement[] stackTraceElementArray0 = mockIOException0.getStackTrace();
      mockIOException0.setStackTrace(stackTraceElementArray0);
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException((String) null, "");
      mockIOException0.addSuppressed(sQLSyntaxErrorException0);
      mockIOException0.getLocalizedMessage();
      mockIOException0.getSuppressed();
      mockIOException0.getLocalizedMessage();
      mockIOException0.getSuppressed();
      tempFileInput0.getLength();
      try { 
        BinaryInput.handleIOException(mockIOException0, "@(#)$Id: BinaryInput.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO exception while @(#)$Id: BinaryInput.java 988245 2010-08-23 18:39:35Z kwright $: @(#)$Id: TempFileInput.java 988245 2010-08-23 18:39:35Z kwright $
         //
         verifyException("org.apache.manifoldcf.core.interfaces.BinaryInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MockFile mockFile0 = new MockFile("i^v<sJS93]");
      mockFile0.delete();
      mockFile0.createNewFile();
      mockFile0.setWritable(true, false);
      TempFileInput tempFileInput0 = null;
      try {
        tempFileInput0 = new TempFileInput(mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }
}
