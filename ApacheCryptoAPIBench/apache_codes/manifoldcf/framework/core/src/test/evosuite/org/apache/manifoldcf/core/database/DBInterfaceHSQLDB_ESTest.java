/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:22:05 GMT 2022
 */

package org.apache.manifoldcf.core.database;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.sql.SQLRecoverableException;
import java.util.Stack;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.apache.manifoldcf.core.database.DBInterfaceHSQLDB;
import org.apache.manifoldcf.core.interfaces.ColumnDescription;
import org.apache.manifoldcf.core.interfaces.IThreadContext;
import org.apache.manifoldcf.core.interfaces.IndexDescription;
import org.apache.manifoldcf.core.interfaces.StringSet;
import org.apache.manifoldcf.core.threadcontext.ThreadContext;
import org.apache.xerces.impl.xs.XSDeclarationPool;
import org.apache.xerces.impl.xs.XSElementDecl;
import org.apache.xerces.xs.XSNamedMap;
import org.apache.xml.dtm.ref.IncrementalSAXSource_Filter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBInterfaceHSQLDB_ESTest extends DBInterfaceHSQLDB_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext0, "GL&',4", "<d$&8peV", "iSWG-SY{t^|e5}F&!a");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/manifoldcf/framework/core");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "@(#)$id: threadcontext.java 988245 2010-08-23 18:39:35z kwright $");
      MockFile mockFile0 = new MockFile("");
      mockFile0.toPath();
      mockFile0.setReadable(true, false);
      MockFile mockFile1 = new MockFile("", "");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/manifoldcf/framework/core");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      mockFile1.toPath();
      mockFile1.renameTo(mockFile0);
      mockFile0.setWritable(false);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/manifoldcf/framework/core");
      FileSystemHandling.createFolder(evoSuiteFile2);
      DBInterfaceHSQLDB.singleDelete(mockFile0);
      DBInterfaceHSQLDB.recursiveDelete(mockFile0);
      ThreadContext threadContext0 = new ThreadContext();
      DBInterfaceHSQLDB.recursiveDelete(mockFile1);
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext0, "", (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("H:xZ$:gEl?9@(", "p#s#phms");
      mockFile0.toPath();
      mockFile0.mkdir();
      mockFile0.getCanonicalFile();
      mockFile0.setReadable(true, true);
      mockFile0.getAbsolutePath();
      String string0 = null;
      MockFile.createTempFile("H:xZ$:gEl?9@(", (String) null, (File) mockFile0);
      mockFile0.getAbsolutePath();
      DBInterfaceHSQLDB.recursiveDelete(mockFile0);
      IThreadContext iThreadContext0 = null;
      String string1 = null;
      String string2 = "";
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB((IThreadContext) null, (String) null, (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.LockManagerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileUtil fileUtil0 = FileUtil.getFileUtil();
      String string0 = "9mZ.,/L['dt$wRb";
      fileUtil0.canonicalFile("9mZ.,/L['dt$wRb");
      String string1 = "org.apache.wml.dom.WMLPElementImpl";
      File file0 = fileUtil0.canonicalFile("org.apache.wml.dom.WMLPElementImpl");
      MockFile mockFile0 = new MockFile(file0, "org.apache.wml.dom.WMLPElementImpl");
      MockFile.createTempFile("9mZ.,/L['dt$wRb", (String) null, file0);
      mockFile0.setWritable(true);
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.singleDelete((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.database.DBInterfaceHSQLDB", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      mockFile0.setWritable(true, true);
      mockFile0.setReadOnly();
      mockFile0.setExecutable(true);
      mockFile0.toPath();
      mockFile0.setReadable(true, false);
      MockFile mockFile1 = new MockFile("", "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/manifoldcf/framework/core");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      mockFile1.toPath();
      mockFile0.setExecutable(true, false);
      mockFile1.setExecutable(true);
      mockFile0.setWritable(false);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/manifoldcf/framework/core");
      FileSystemHandling.createFolder(evoSuiteFile1);
      mockFile0.renameTo(mockFile1);
      DBInterfaceHSQLDB.singleDelete(mockFile0);
      DBInterfaceHSQLDB.recursiveDelete(mockFile0);
      String string0 = "";
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.getFullDatabasePath("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      File file0 = MockFile.createTempFile("T.m7a9fneo)4PN:3", "T.m7a9fneo)4PN:3");
      DBInterfaceHSQLDB.recursiveDelete(file0);
      ThreadContext threadContext0 = new ThreadContext();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String[] stringArray0 = new String[7];
      stringArray0[1] = "Zd2TM(\"#{x-w.";
      stringArray0[2] = "<l}#a]ix)\"q\"4e";
      stringArray0[3] = "subquery in check constraint";
      stringArray0[4] = "T.m7a9fneo)4PN:3";
      stringArray0[5] = "T.m7a9fneo)4PN:3";
      stringArray0[6] = "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $";
      DBInterfaceHSQLDB.recursiveDelete(file0);
      StringSet stringSet0 = new StringSet("<l}#a]ix)\"q\"4e");
      StringBuilder stringBuilder0 = new StringBuilder("");
      ColumnDescription columnDescription0 = new ColumnDescription("<l}#a]ix)\"q\"4e", true, false, "Zd2TM(\"#{x-w.", "<l}#a]ix)\"q\"4e", false);
      DBInterfaceHSQLDB.appendDescription(stringBuilder0, "longtext", columnDescription0, false);
      String string0 = " null";
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext0, " null", "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      File file0 = MockFile.createTempFile("T.m7a9fneo)4PN:3", "T.m7a9fneo)4PN:3");
      DBInterfaceHSQLDB.recursiveDelete(file0);
      ThreadContext threadContext0 = new ThreadContext();
      String string0 = "subquery in check constraint";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String string1 = "Zd2TM(\"#{x-w.";
      file0.setWritable(true, true);
      String[] stringArray0 = new String[7];
      stringArray0[2] = "<l}#a]ix)\"q\"4e";
      stringArray0[3] = "subquery in check constraint";
      stringArray0[4] = "T.m7a9fneo)4PN:3";
      stringArray0[5] = "T.m7a9fneo)4PN:3";
      stringArray0[6] = "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $";
      String string2 = "&*.iCR:(tt4):OJK";
      DBInterfaceHSQLDB.recursiveDelete(file0);
      StringSet stringSet0 = new StringSet("<l}#a]ix)\"q\"4e");
      StringBuilder stringBuilder0 = new StringBuilder(992);
      ColumnDescription columnDescription0 = new ColumnDescription("<l}#a]ix)\"q\"4e", true, true, stringArray0[1], "SELECT table_name FROM INFORMATION_SCHEMA.TABLES WHERE table_schema=?", true);
      DBInterfaceHSQLDB.appendDescription(stringBuilder0, "longtext", columnDescription0, true);
      ThreadContext threadContext1 = new ThreadContext();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      delayQueue0.poll(0L, timeUnit0);
      // Undeclared exception!
      try { 
        threadContext1.save((Object) null, threadContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "T.m7a9fneo)4PN:3";
      File file0 = MockFile.createTempFile("T.m7a9fneo)4PN:3", "T.m7a9fneo)4PN:3");
      DBInterfaceHSQLDB.recursiveDelete(file0);
      ThreadContext threadContext0 = new ThreadContext();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String[] stringArray0 = new String[7];
      stringArray0[1] = "Zd2TM(\"#{x-w.";
      stringArray0[2] = "<l}#a]ix)\"q\"4e";
      stringArray0[3] = "subquery in check constraint";
      stringArray0[4] = "T.m7a9fneo)4PN:3";
      stringArray0[5] = "T.m7a9fneo)4PN:3";
      stringArray0[6] = "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $";
      DBInterfaceHSQLDB.recursiveDelete(file0);
      StringSet stringSet0 = new StringSet("<l}#a]ix)\"q\"4e");
      StringBuilder stringBuilder0 = new StringBuilder("");
      ColumnDescription columnDescription0 = new ColumnDescription("<l}#a]ix)\"q\"4e", true, true, "Zd2TM(\"#{x-w.", "SELECT table_name FROM INFORMATION_SCHEMA.TABLES WHERE table_schema=?", true);
      DBInterfaceHSQLDB.appendDescription(stringBuilder0, "longtext", columnDescription0, false);
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext0, "yevwlsu", "ASSERTIONS", "&nH");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      File file0 = MockFile.createTempFile("kbb", "kbb");
      file0.setReadOnly();
      DBInterfaceHSQLDB.singleDelete(file0);
      DBInterfaceHSQLDB.recursiveDelete(file0);
      ThreadContext threadContext0 = new ThreadContext();
      String string0 = "SvL/>axVF1VNm/";
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext0, "", "SvL/>axVF1VNm/", "Exception ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      File file0 = MockFile.createTempFile("T.m7a9fneo)4PN:3", "T.m7a9fneo)4PN:3");
      DBInterfaceHSQLDB.recursiveDelete(file0);
      ThreadContext threadContext0 = new ThreadContext();
      boolean boolean0 = new Boolean("T.m7a9fneo)4PN:3");
      String string0 = "Zd2TM(\"#{x-w.";
      String[] stringArray0 = new String[7];
      stringArray0[1] = "Zd2TM(\"#{x-w.";
      stringArray0[2] = "<l}#a]ix)\"q\"4e";
      stringArray0[3] = "subquery in check constraint";
      stringArray0[4] = "T.m7a9fneo)4PN:3";
      stringArray0[5] = "T.m7a9fneo)4PN:3";
      stringArray0[6] = "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $";
      DBInterfaceHSQLDB.recursiveDelete(file0);
      StringSet stringSet0 = new StringSet("<l}#a]ix)\"q\"4e");
      StringBuilder stringBuilder0 = new StringBuilder(992);
      ColumnDescription columnDescription0 = new ColumnDescription("<l}#a]ix)\"q\"4e", false, true, "Zd2TM(\"#{x-w.", "SELECT table_name FROM INFORMATION_SCHEMA.TABLES WHERE table_schema=?", true);
      DBInterfaceHSQLDB.appendDescription(stringBuilder0, "longtext", columnDescription0, true);
      ThreadContext threadContext1 = new ThreadContext();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(992, threadFactory0, threadPoolExecutor_CallerRunsPolicy0);
      IncrementalSAXSource_Filter incrementalSAXSource_Filter0 = new IncrementalSAXSource_Filter();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      ScheduledFuture<?> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule((Runnable) incrementalSAXSource_Filter0, 0L, timeUnit0);
      delayQueue0.add((Delayed) scheduledFuture0);
      TimeUnit timeUnit1 = TimeUnit.NANOSECONDS;
      Delayed delayed0 = delayQueue0.poll(0L, timeUnit1);
      threadContext1.save(delayed0, threadContext0);
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext1, "subquery in check constraint", "%C Zr$s7sOI0AKV<]zs", "&*.iCR:(tt4):OJK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      File file0 = MockFile.createTempFile("T.m7a9fneo)4PN:3", "T.m7a9fneo)4PN:3");
      DBInterfaceHSQLDB.recursiveDelete(file0);
      ThreadContext threadContext0 = new ThreadContext();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String string0 = "Zd2TM(\"#{x-w.";
      String[] stringArray0 = new String[7];
      stringArray0[1] = "Zd2TM(\"#{x-w.";
      stringArray0[2] = "<l}#a]ix)\"q\"4e";
      stringArray0[3] = "subquery in check constraint";
      stringArray0[4] = "T.m7a9fneo)4PN:3";
      stringArray0[5] = "T.m7a9fneo)4PN:3";
      stringArray0[6] = "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $";
      DBInterfaceHSQLDB.recursiveDelete(file0);
      StringSet stringSet0 = new StringSet("<l}#a]ix)\"q\"4e");
      StringBuilder stringBuilder0 = new StringBuilder(992);
      ColumnDescription columnDescription0 = new ColumnDescription("<l}#a]ix)\"q\"4e", true, true, "Zd2TM(\"#{x-w.", "SELECT table_name FROM INFORMATION_SCHEMA.TABLES WHERE table_schema=?", true);
      DBInterfaceHSQLDB.appendDescription(stringBuilder0, "longtext", columnDescription0, true);
      ThreadContext threadContext1 = new ThreadContext();
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext1, "subquery in check constraint", "%C Zr$s7sOI0AKV<]zs", "&*.iCR:(tt4):OJK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      File file0 = MockFile.createTempFile("T.m7a9fneo)4PN:3", "T.m7a9fneo)4PN:3");
      DBInterfaceHSQLDB.recursiveDelete(file0);
      ThreadContext threadContext0 = new ThreadContext();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String[] stringArray0 = new String[7];
      stringArray0[1] = "Zd2TM(\"#{x-w.";
      stringArray0[2] = "<l}#a]ix)\"q\"4e";
      stringArray0[3] = "subquery in check constraint";
      stringArray0[4] = "T.m7a9fneo)4PN:3";
      stringArray0[5] = "T.m7a9fneo)4PN:3";
      stringArray0[6] = "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $";
      DBInterfaceHSQLDB.recursiveDelete(file0);
      StringSet stringSet0 = new StringSet("<l}#a]ix)\"q\"4e");
      StringBuilder stringBuilder0 = new StringBuilder("");
      ColumnDescription columnDescription0 = new ColumnDescription("<l}#a]ix)\"q\"4e", true, false, "Zd2TM(\"#{x-w.", "SELECT table_name FROM INFORMATION_SCHEMA.TABLES WHERE table_schema=?", false);
      DBInterfaceHSQLDB.appendDescription(stringBuilder0, "longtext", columnDescription0, true);
      assertEquals("longtext <l}#a]ix)\"q\"4e NULL PRIMARY KEY REFERENCES Zd2TM(\"#{x-w.(SELECT table_name FROM INFORMATION_SCHEMA.TABLES WHERE table_schema=?) ON DELETE RESTRICT", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileUtil fileUtil0 = FileUtil.getFileUtil();
      File file0 = fileUtil0.canonicalFile("z*v[.$*o;<;(<$X/ Z");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-41);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockFile mockFile0 = new MockFile(file0, "z*v[.$*o;<;(<$X/ Z");
      DBInterfaceHSQLDB.recursiveDelete(mockFile0);
      DBInterfaceHSQLDB.mapType("<l}#A]Ix)\"Q\"4e");
      String string0 = DBInterfaceHSQLDB.mapType("=txxx3.");
      assertEquals("=txxx3.", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      XSDeclarationPool xSDeclarationPool0 = new XSDeclarationPool();
      XSElementDecl xSElementDecl0 = xSDeclarationPool0.getElementDecl();
      xSDeclarationPool0.getElementDecl();
      XSNamedMap xSNamedMap0 = xSElementDecl0.getIdentityConstraints();
      StringSet stringSet0 = new StringSet(xSNamedMap0);
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.recursiveDelete((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.database.DBInterfaceHSQLDB", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = false;
      String string0 = "";
      ColumnDescription columnDescription0 = new ColumnDescription("", false, false, "", "", true);
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.appendDescription((StringBuilder) null, "", columnDescription0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.database.DBInterfaceHSQLDB", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(0);
      StringBuffer stringBuffer0 = new StringBuffer(".lck");
      StringBuilder stringBuilder1 = stringBuilder0.append(stringBuffer0);
      StringBuilder stringBuilder2 = stringBuilder1.append(false);
      Object object0 = new Object();
      StringBuilder stringBuilder3 = stringBuilder2.insert(0, object0);
      StringBuilder stringBuilder4 = stringBuilder3.append((Object) ".lck");
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.appendDescription(stringBuilder4, "namespace", (ColumnDescription) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.database.DBInterfaceHSQLDB", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = ")";
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.getFullDatabasePath(")");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      File file0 = MockFile.createTempFile("kbb", "kbb");
      DBInterfaceHSQLDB.singleDelete(file0);
      DBInterfaceHSQLDB.recursiveDelete(file0);
      ThreadContext threadContext0 = new ThreadContext();
      String string0 = "SvL/>axVF1VNm/";
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext0, "", "SvL/>axVF1VNm/", "Exception ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      String string0 = "|T/bCEaS=Z";
      SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException("@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", "|T/bCEaS=Z");
      boolean boolean0 = true;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|T/bCEaS=Z";
      IndexDescription indexDescription0 = new IndexDescription(true, stringArray0);
      threadContext0.save(sQLRecoverableException0, indexDescription0);
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.getJDBCString(threadContext0, "nE%aF,1`o5.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.mapType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBInterfaceHSQLDB.mapType("");
      ThreadContext threadContext0 = new ThreadContext();
      String string0 = "";
      // Undeclared exception!
      try { 
        threadContext0.save((Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.getDatabaseString(threadContext0, "b=U7uq>6#Gun$k'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "T.m7a9fneo)4PN:3";
      File file0 = MockFile.createTempFile("T.m7a9fneo)4PN:3", "T.m7a9fneo)4PN:3");
      DBInterfaceHSQLDB.recursiveDelete(file0);
      ThreadContext threadContext0 = new ThreadContext();
      String string1 = "subquery in check constraint";
      String string2 = ".script";
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext0, "subquery in check constraint", ".script", "ASSERTIONS");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileUtil fileUtil0 = FileUtil.getFileUtil();
      File file0 = fileUtil0.canonicalFile("org.apache.log4j.Level");
      DBInterfaceHSQLDB.recursiveDelete(file0);
      assertFalse(file0.exists());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      mockFile0.setWritable(true, true);
      mockFile0.setReadOnly();
      mockFile0.setExecutable(false);
      mockFile0.toPath();
      mockFile0.setReadable(false, false);
      MockFile mockFile1 = new MockFile("", "");
      mockFile1.toPath();
      mockFile0.setExecutable(true, false);
      mockFile1.setExecutable(true);
      mockFile0.setWritable(false);
      mockFile0.renameTo(mockFile1);
      mockFile0.getCanonicalFile();
      DBInterfaceHSQLDB.singleDelete(mockFile0);
      String string0 = "";
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.getFullDatabasePath("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileUtil fileUtil0 = FileUtil.getFileUtil();
      fileUtil0.canonicalFile("9mZ.,/L['t$wRb ");
      File file0 = fileUtil0.canonicalFile("org.apache.wml.dom.WMLPElementImpl");
      MockFile mockFile0 = new MockFile(file0, "org.apache.wml.dom.WMLPElementImpl");
      MockFile.createTempFile("9mZ.,/L['t$wRb ", (String) null, file0);
      mockFile0.setWritable(true);
      DBInterfaceHSQLDB.singleDelete(mockFile0);
      ThreadContext threadContext0 = new ThreadContext();
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext0, "9mZ.,/L['t$wRb ", "9mZ.,/L['t$wRb ", "org.apache.wml.dom.WMLPElementImpl");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      String[] stringArray0 = new String[0];
      IndexDescription indexDescription0 = new IndexDescription(true, stringArray0);
      ColumnDescription columnDescription0 = new ColumnDescription("\"Rn(", true, true, "38Rw}8]S&))I8} hch", "\"Rn(", false);
      threadContext0.save(indexDescription0, columnDescription0);
      threadContext0.save("align", "align");
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext0, "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", "align", " AND ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext0, "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile("H:xZ$:gEl?9@(", "p#s#phms");
      mockFile0.toPath();
      mockFile0.mkdir();
      mockFile0.getCanonicalFile();
      mockFile0.setReadable(true, true);
      mockFile0.getCanonicalPath();
      MockFile.createTempFile("H:xZ$:gEl?9@(", (String) null, (File) mockFile0);
      mockFile0.getAbsolutePath();
      DBInterfaceHSQLDB.recursiveDelete(mockFile0);
      assertFalse(mockFile0.canExecute());
      assertEquals(0L, mockFile0.lastModified());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      File file0 = MockFile.createTempFile("kbb", "kbb");
      DBInterfaceHSQLDB.singleDelete(file0);
      Stack<String> stack0 = new Stack<String>();
      StringSet stringSet0 = new StringSet(stack0);
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.getFullDatabasePath("org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      File file0 = MockFile.createTempFile("T.m7a9fneo)4PN:3", "T.m7a9fneo)4PN:3");
      DBInterfaceHSQLDB.recursiveDelete(file0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String[] stringArray0 = new String[7];
      stringArray0[2] = "<l}#a]ix)\"q\"4e";
      stringArray0[4] = "T.m7a9fneo)4PN:3";
      stringArray0[5] = "T.m7a9fneo)4PN:3";
      DBInterfaceHSQLDB.recursiveDelete(file0);
      StringSet stringSet0 = new StringSet("<l}#a]ix)\"q\"4e");
      StringBuilder stringBuilder0 = new StringBuilder("");
      ColumnDescription columnDescription0 = new ColumnDescription("<l}#a]ix)\"q\"4e", true, true, stringArray0[1], "SELECT table_name FROM INFORMATION_SCHEMA.TABLES WHERE table_schema=?", true);
      DBInterfaceHSQLDB.appendDescription(stringBuilder0, "longtext", columnDescription0, false);
      assertEquals("longtext <l}#a]ix)\"q\"4e NULL PRIMARY KEY", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[7];
      stringArray0[1] = "wlsj'::^h5r7%sjn,";
      stringArray0[2] = "<l}#a]ix)\"q\"4e";
      stringArray0[3] = "subquery in check constraint";
      stringArray0[4] = "T.m7a9fneo)4PN:3";
      stringArray0[5] = "T.m7a9fneo)4PN:3";
      StringSet stringSet0 = new StringSet("<l}#a]ix)\"q\"4e");
      StringBuilder stringBuilder0 = new StringBuilder(992);
      ColumnDescription columnDescription0 = new ColumnDescription("<l}#a]ix)\"q\"4e", false, true, "wlsj'::^h5r7%sjn,", "SELECT table_name FROM INFORMATION_SCHEMA.TABLES WHERE table_schema=?", true);
      DBInterfaceHSQLDB.appendDescription(stringBuilder0, "longtext", columnDescription0, true);
      ThreadContext threadContext1 = new ThreadContext();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      delayQueue0.poll(0L, timeUnit0);
      // Undeclared exception!
      try { 
        threadContext1.save((Object) null, threadContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileUtil fileUtil0 = FileUtil.getFileUtil();
      File file0 = fileUtil0.canonicalFile("org.apache.wml.dom.WMLPElementImpl");
      MockFile mockFile0 = new MockFile(file0, "org.apache.wml.dom.WMLPElementImpl");
      DBInterfaceHSQLDB.singleDelete(mockFile0);
      assertFalse(mockFile0.exists());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      File file0 = MockFile.createTempFile("T.m7a9fneo)4PN:3", "T.m7a9fneo)4PN:3");
      DBInterfaceHSQLDB.recursiveDelete(file0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/T.m7a9fneo)4PN:30T.m7a9fneo)4PN:3");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String[] stringArray0 = new String[7];
      stringArray0[1] = "Zd2TM(\"#{x-w.";
      stringArray0[2] = "P#S#phmS";
      stringArray0[3] = "Zd2TM(\"#{x-w.";
      stringArray0[4] = "T.m7a9fneo)4PN:3";
      stringArray0[5] = "T.m7a9fneo)4PN:3";
      DBInterfaceHSQLDB.recursiveDelete(file0);
      assertEquals(0L, file0.lastModified());
      
      StringSet stringSet0 = new StringSet("P#S#phmS");
      StringBuilder stringBuilder0 = new StringBuilder("");
      ColumnDescription columnDescription0 = new ColumnDescription("P#S#phmS", true, false, "Zd2TM(\"#{x-w.", "P#S#phmS", false);
      DBInterfaceHSQLDB.appendDescription(stringBuilder0, "longtext", columnDescription0, false);
      assertEquals("longtext P#S#phmS NOT NULL PRIMARY KEY REFERENCES Zd2TM(\"#{x-w.(P#S#phmS) ON DELETE RESTRICT", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.getDatabaseString(threadContext0, "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }
}
