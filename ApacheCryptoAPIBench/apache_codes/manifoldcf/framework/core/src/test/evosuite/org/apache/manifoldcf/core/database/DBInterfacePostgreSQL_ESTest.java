/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 16:36:31 GMT 2022
 */

package org.apache.manifoldcf.core.database;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.manifoldcf.core.database.DBInterfacePostgreSQL;
import org.apache.manifoldcf.core.interfaces.ColumnDescription;
import org.apache.manifoldcf.core.threadcontext.ThreadContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DBInterfacePostgreSQL_ESTest extends DBInterfacePostgreSQL_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = DBInterfacePostgreSQL.mapType("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBInterfacePostgreSQL.mapType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("T/pJ=e*jL#\"*o-2OM", false, false, "T/pJ=e*jL#\"*o-2OM", "?0ipAcV)", false);
      // Undeclared exception!
      try { 
        DBInterfacePostgreSQL.appendDescription((StringBuilder) null, "T/pJ=e*jL#\"*o-2OM", columnDescription0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.database.DBInterfacePostgreSQL", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = DBInterfacePostgreSQL.mapType("blob");
      assertEquals("bytea", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = DBInterfacePostgreSQL.mapType("longtext");
      assertEquals("text", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "ROLLBACK");
      ColumnDescription columnDescription0 = new ColumnDescription("ROLLBACK", true, true, (String) null, "lO\"F", false);
      DBInterfacePostgreSQL.appendDescription(stringBuilder0, (String) null, columnDescription0, true);
      assertEquals("ROLLBACKnull ROLLBACK NULL PRIMARY KEY", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $");
      ColumnDescription columnDescription0 = new ColumnDescription("'r?,=_~4_3ywf`gy", false, false, "'r?,=_~4_3ywf`gy", "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", true);
      DBInterfacePostgreSQL.appendDescription(stringBuilder0, "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", columnDescription0, false);
      assertEquals("@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $ 'r?,=_~4_3ywf`gy NOT NULL REFERENCES 'r?,=_~4_3ywf`gy(@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $) ON DELETE CASCADE", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      ColumnDescription columnDescription0 = new ColumnDescription("v", true, true, "V+4,oNb\u0010", "v", false);
      DBInterfacePostgreSQL.appendDescription(stringBuilder0, "v", columnDescription0, false);
      assertEquals("v v NULL PRIMARY KEY REFERENCES V+4,oNb\u0010(v) ON DELETE RESTRICT", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBInterfacePostgreSQL.TableStatistics dBInterfacePostgreSQL_TableStatistics0 = new DBInterfacePostgreSQL.TableStatistics();
      int int0 = dBInterfacePostgreSQL_TableStatistics0.getEventCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBInterfacePostgreSQL.TableStatistics dBInterfacePostgreSQL_TableStatistics0 = new DBInterfacePostgreSQL.TableStatistics();
      dBInterfacePostgreSQL_TableStatistics0.add(2451);
      assertEquals(2451, dBInterfacePostgreSQL_TableStatistics0.getEventCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBInterfacePostgreSQL.TableStatistics dBInterfacePostgreSQL_TableStatistics0 = new DBInterfacePostgreSQL.TableStatistics();
      dBInterfacePostgreSQL_TableStatistics0.reset();
      assertEquals(0, dBInterfacePostgreSQL_TableStatistics0.getEventCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      DBInterfacePostgreSQL dBInterfacePostgreSQL0 = null;
      try {
        dBInterfacePostgreSQL0 = new DBInterfacePostgreSQL(threadContext0, "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }
}
