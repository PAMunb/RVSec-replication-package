/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:20:06 GMT 2022
 */

package org.apache.manifoldcf.core.lockmanager;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection;
import org.apache.zookeeper.KeeperException;
import org.apache.zookeeper.WatchedEvent;
import org.apache.zookeeper.Watcher;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ZooKeeperConnection_ESTest extends ZooKeeperConnection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = ZooKeeperConnection.zooKeeperSafeName("saslClient is unexpectedly null. Cannot respond to server's SASL message; ignoring.");
      assertEquals("saslClient is unexpectedly null. Cannot respond to server's SASL message; ignoring.", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection(",HNrWg0Q ]WSKr7Co@", 0);
      assertNotNull(zooKeeperConnection0);
      
      zooKeeperConnection0.nodePath = "88B7DSP^}+gnukx%/L#";
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainNonExWriteLock("'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("12nN$$AC>!QNP0DT~6", 43);
      assertNotNull(zooKeeperConnection0);
      
      zooKeeperConnection0.nodePath = "12nN$$AC>!QNP0DT~6";
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainNonExWriteLockNoWait("12nN$$AC>!QNP0DT~6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("child-", 103);
      assertNotNull(zooKeeperConnection0);
      
      zooKeeperConnection0.nodePath = "child-";
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainWriteLock("' already open; can't open '");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection(";|6z", 0);
      assertNotNull(zooKeeperConnection0);
      
      zooKeeperConnection0.createSession();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        ZooKeeperConnection.zooKeeperSafeName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ZooKeeperConnection.zooKeeperDecodeSafeName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("G+U%cb_f~nNxf", 5131);
      assertNotNull(zooKeeperConnection0);
      
      zooKeeperConnection0.zookeeper = null;
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        zooKeeperConnection0.writeData("8f;yq~K", byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("7!264h", 424);
      assertNotNull(zooKeeperConnection0);
      
      KeeperException.InvalidACLException keeperException_InvalidACLException0 = new KeeperException.InvalidACLException();
      assertNotNull(keeperException_InvalidACLException0);
      
      try { 
        zooKeeperConnection0.handleEphemeralNodeKeeperException(keeperException_InvalidACLException0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // KeeperErrorCode = InvalidACL
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 243);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.getChildren("7Bur0_Ha!!K1$`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", (-2975));
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.deleteNodeChildren("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path length must be > 0
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("widx=", 841);
      assertNotNull(zooKeeperConnection0);
      
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        zooKeeperConnection0.createPersistentPath(".^Kz", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("saslClient is unexpectedly null. Cannot respond to server's SASL message; ignoring.", 160);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.checkNodeExists("saslClient is unexpectedly null. Cannot respond to server's SASL message; ignoring.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("=", 0);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.checkGlobalFlag("Can't delete ephemeral node that isn't registered: '");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = null;
      try {
        zooKeeperConnection0 = new ZooKeeperConnection(":UeZZv\"0Nk8 TH{U?z", 1441);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"UeZZv\"0Nk8 TH{U?z\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = null;
      try {
        zooKeeperConnection0 = new ZooKeeperConnection((String) null, 681);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.zookeeper.client.ConnectStringParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 1577);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.readData("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path length must be > 0
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = ZooKeeperConnection.zooKeeperDecodeSafeName("@(#)$Id$");
      assertEquals("@(#)$Id$", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = ZooKeeperConnection.zooKeeperDecodeSafeName("");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = ZooKeeperConnection.zooKeeperSafeName("\u0004(fJEW1");
      assertEquals("\\68(fJEW1", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = ZooKeeperConnection.zooKeeperSafeName("=?/}V6");
      assertEquals("=?\\0}V6", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = ZooKeeperConnection.zooKeeperSafeName("gMC'CJ^b60'");
      assertEquals("gM\\1C'CJ^b60'", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 0);
      assertNotNull(zooKeeperConnection0);
      
      KeeperException.ConnectionLossException keeperException_ConnectionLossException0 = new KeeperException.ConnectionLossException();
      assertNotNull(keeperException_ConnectionLossException0);
      
      zooKeeperConnection0.handleKeeperException(keeperException_ConnectionLossException0, true);
      assertNull(keeperException_ConnectionLossException0.getPath());
      assertEquals(KeeperException.Code.CONNECTIONLOSS, keeperException_ConnectionLossException0.code());
      assertEquals((-4), keeperException_ConnectionLossException0.getCode());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 1054);
      assertNotNull(zooKeeperConnection0);
      
      KeeperException.AuthFailedException keeperException_AuthFailedException0 = new KeeperException.AuthFailedException();
      assertNotNull(keeperException_AuthFailedException0);
      
      try { 
        zooKeeperConnection0.handleKeeperException(keeperException_AuthFailedException0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // KeeperErrorCode = AuthFailed
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 1108);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.handleEphemeralNodeKeeperException((KeeperException) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("8+\"-w&yDb <KZ\"N\u0007rn", (-62));
      zooKeeperConnection0.lockNode = "8+\"-w&yDb <KZ\"N\u0007rn";
      // Undeclared exception!
      try { 
        zooKeeperConnection0.close();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not be closing handles that have open locks!  Locknode: '8+\"-w&yDb <KZ\"N\u0007rn'
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("G+U%cb_f~nNxf", 5131);
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        zooKeeperConnection0.writeData("8f;yq~K", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 0);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.releaseLock();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can't release lock we don't hold
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("^", 2410);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainReadLock("^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("com.google.common.base.CharMatcher$JavaUpperCase", 2584);
      zooKeeperConnection0.lockNode = "com.google.common.base.CharMatcher$JavaUpperCase";
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainReadLockNoWait("com.google.common.base.CharMatcher$JavaUpperCase");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Already have a lock in place: 'com.google.common.base.CharMatcher$JavaUpperCase'; can't also read lock 'com.google.common.base.CharMatcher$JavaUpperCase'
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("org.apache.zookeeper.server.NettyServerCnxn$SendBufferWriter", 49);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainReadLockNoWait("org.apache.zookeeper.server.NettyServerCnxn$SendBufferWriter");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection(" eVW", 0);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainWriteLockNoWait(" eVW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("'; can't also read lock '", 0);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.deleteNode();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can't delete ephemeral node that isn't registered: 'null'
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 32);
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        zooKeeperConnection0.setNodeData(byteArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can't set data for a node path we did not create: 'null'
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 0);
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        zooKeeperConnection0.createNode("Should not be closing handles that have open locks!  Locknode: '", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 0);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.createSequentialChild("R1 RL", "options");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 1);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.clearGlobalFlag("8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection$ZooKeeperWatcher", (-3621));
      // Undeclared exception!
      try { 
        zooKeeperConnection0.createChild("&_bzNQ5w#^2ww", "org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection$ZooKeeperWatcher");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("2&D$q;^iMk;%", 48);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.deleteChild("2&D$q;^iMk;%", "Type was not an enum: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 826);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.getNodeData("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path length must be > 0
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ZooKeeperConnection.ExistsWatcher zooKeeperConnection_ExistsWatcher0 = new ZooKeeperConnection.ExistsWatcher();
      zooKeeperConnection_ExistsWatcher0.process((WatchedEvent) null);
      zooKeeperConnection_ExistsWatcher0.waitForEvent();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ZooKeeperConnection.ZooKeeperWatcher zooKeeperConnection_ZooKeeperWatcher0 = new ZooKeeperConnection.ZooKeeperWatcher();
      Watcher.Event.EventType watcher_Event_EventType0 = Watcher.Event.EventType.NodeChildrenChanged;
      Watcher.Event.KeeperState watcher_Event_KeeperState0 = Watcher.Event.KeeperState.Unknown;
      WatchedEvent watchedEvent0 = new WatchedEvent(watcher_Event_EventType0, watcher_Event_KeeperState0, "e(9)a%bZI)$");
      zooKeeperConnection_ZooKeeperWatcher0.process(watchedEvent0);
      assertEquals(Watcher.Event.KeeperState.Unknown, watchedEvent0.getState());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", (-1));
      // Undeclared exception!
      try { 
        zooKeeperConnection0.setGlobalFlag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path length must be > 0
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }
}
