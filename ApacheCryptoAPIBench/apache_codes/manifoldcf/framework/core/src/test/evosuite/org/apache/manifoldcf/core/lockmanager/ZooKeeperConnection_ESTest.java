/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 16:36:33 GMT 2022
 */

package org.apache.manifoldcf.core.lockmanager;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection;
import org.apache.zookeeper.KeeperException;
import org.apache.zookeeper.WatchedEvent;
import org.apache.zookeeper.Watcher;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ZooKeeperConnection_ESTest extends ZooKeeperConnection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("31;1h'", 92);
      assertNotNull(zooKeeperConnection0);
      
      zooKeeperConnection0.nodePath = "31;1h'";
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainReadLock("CONNECTED");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 0);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainNonExWriteLockNoWait("hdr");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("vlS", 0);
      assertNotNull(zooKeeperConnection0);
      
      zooKeeperConnection0.createSession();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = ZooKeeperConnection.zooKeeperSafeName("");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        ZooKeeperConnection.zooKeeperSafeName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        ZooKeeperConnection.zooKeeperDecodeSafeName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("org.apache.zookeeper.Environment", 73);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.handleKeeperException((KeeperException) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection$ZooKeeperWatcher", 972);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.handleEphemeralNodeKeeperException((KeeperException) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("5Mg*2Cm0V@=IW", 578);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.getChildren("=}OVy36*s(@%+VF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("31;1h'", 92);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.deleteNodeChildren("31;1h'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection$ZooKeeperWatcher", 972);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.createSequentialChild("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection$ZooKeeperWatcher", "org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection$ZooKeeperWatcher");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("INSENSITIVE", 1974);
      assertNotNull(zooKeeperConnection0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        zooKeeperConnection0.createPersistentPath("e!f4?(hg3 WK&I|w_Q", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("=}OVy36*s(@%+VF", 105);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.checkNodeExists("=}OVy36*s(@%+VF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("RH<>`X DS", 354);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.checkGlobalFlag("RH<>`X DS");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = null;
      try {
        zooKeeperConnection0 = new ZooKeeperConnection("Can't set data for a node path we did not create: '", (-614));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \" '\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = null;
      try {
        zooKeeperConnection0 = new ZooKeeperConnection((String) null, (-995));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.zookeeper.client.ConnectStringParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = null;
      try {
        zooKeeperConnection0 = new ZooKeeperConnection("tXv//x6t&/L^8(M", 192);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid path string \"//x6t&/L^8(M\" caused by empty node name specified @1
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("Can't release lock we don't hold", 0);
      assertNotNull(zooKeeperConnection0);
      
      // Undeclared exception!
      try { 
        zooKeeperConnection0.readData("c@j)a_8u0y9C");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = ZooKeeperConnection.zooKeeperDecodeSafeName("~tCGJ:4sOy].%QfI(");
      assertNotNull(string0);
      assertEquals("~tCGJ:4sOy].%QfI(", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = ZooKeeperConnection.zooKeeperDecodeSafeName("");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = ZooKeeperConnection.zooKeeperSafeName("]U)juv=LI%E");
      assertNotNull(string0);
      assertEquals("]U)juv=LI%E", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = ZooKeeperConnection.zooKeeperSafeName("w}+b'jI");
      assertNotNull(string0);
      assertEquals("\\1w}+b'jI", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = ZooKeeperConnection.zooKeeperSafeName("Path must not end with / character");
      assertNotNull(string0);
      assertEquals("Path must not end with \\0 character", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", (-808));
      assertNotNull(zooKeeperConnection0);
      
      KeeperException.ConnectionLossException keeperException_ConnectionLossException0 = new KeeperException.ConnectionLossException();
      assertNotNull(keeperException_ConnectionLossException0);
      
      zooKeeperConnection0.handleKeeperException(keeperException_ConnectionLossException0, true);
      assertEquals((-4), keeperException_ConnectionLossException0.getCode());
      assertEquals(KeeperException.Code.CONNECTIONLOSS, keeperException_ConnectionLossException0.code());
      assertNull(keeperException_ConnectionLossException0.getPath());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("=}OVy36*s(@%+VF", 49);
      assertNotNull(zooKeeperConnection0);
      
      KeeperException.NoAuthException keeperException_NoAuthException0 = new KeeperException.NoAuthException();
      assertNotNull(keeperException_NoAuthException0);
      
      try { 
        zooKeeperConnection0.handleKeeperException(keeperException_NoAuthException0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // KeeperErrorCode = NoAuth
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection$ZooKeeperWatcher", 1628);
      KeeperException.UnimplementedException keeperException_UnimplementedException0 = new KeeperException.UnimplementedException();
      try { 
        zooKeeperConnection0.handleEphemeralNodeKeeperException(keeperException_UnimplementedException0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // KeeperErrorCode = Unimplemented
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("", 1292);
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        zooKeeperConnection0.writeData(";h=zF[", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("]U)juv=LI%E", (-1198));
      // Undeclared exception!
      try { 
        zooKeeperConnection0.releaseLock();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can't release lock we don't hold
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("mC", 924);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainReadLockNoWait("mC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("com.google.common.collect.Range$RangeLexOrdering", (-155));
      zooKeeperConnection0.lockNode = "com.google.common.collect.Range$RangeLexOrdering";
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainNonExWriteLock("com.google.common.collect.Range$RangeLexOrdering");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Already have a lock in place: 'com.google.common.collect.Range$RangeLexOrdering'; can't also non-ex write lock 'com.google.common.collect.Range$RangeLexOrdering'
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("u)l", 73);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainNonExWriteLock("J*a7c!+Xb");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("vlS", 0);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainWriteLock(".3&ZJH \";j?\")T(");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("#KzALHPA(sh]>_?]", 127);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.obtainWriteLockNoWait("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("O<>oq)v=GGoIL`H", 605);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.deleteNode();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can't delete ephemeral node that isn't registered: 'null'
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection(".andThen(", 893);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.setNodeData((byte[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can't set data for a node path we did not create: 'null'
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection$ExistsWatcher", 588);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        zooKeeperConnection0.createNode("tI0a", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ZooKeeperConnection.ZooKeeperWatcher zooKeeperConnection_ZooKeeperWatcher0 = new ZooKeeperConnection.ZooKeeperWatcher();
      Watcher.Event.EventType watcher_Event_EventType0 = Watcher.Event.EventType.NodeDataChanged;
      Watcher.Event.KeeperState watcher_Event_KeeperState0 = Watcher.Event.KeeperState.Expired;
      WatchedEvent watchedEvent0 = new WatchedEvent(watcher_Event_EventType0, watcher_Event_KeeperState0, "Oz`?V8'Uh");
      zooKeeperConnection_ZooKeeperWatcher0.process(watchedEvent0);
      assertEquals(Watcher.Event.EventType.NodeDataChanged, watchedEvent0.getType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("Ssm6/)1Ku=M:*C", 0);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.setGlobalFlag("Ssm6/)1Ku=M:*C");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("&e", (byte) (-1));
      // Undeclared exception!
      try { 
        zooKeeperConnection0.clearGlobalFlag("P_H<? &x$Kn");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("wD#9h.p0&o3.", 0);
      // Undeclared exception!
      try { 
        zooKeeperConnection0.deleteChild("g\"!>QX_N+x~XC&/\"", "g\"!>QX_N+x~XC&/\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ZooKeeperConnection zooKeeperConnection0 = new ZooKeeperConnection("e>yxmg:", (-1099));
      // Undeclared exception!
      try { 
        zooKeeperConnection0.getNodeData("7E`GRFk6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must start with / character
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ZooKeeperConnection.ExistsWatcher zooKeeperConnection_ExistsWatcher0 = new ZooKeeperConnection.ExistsWatcher();
      zooKeeperConnection_ExistsWatcher0.process((WatchedEvent) null);
      zooKeeperConnection_ExistsWatcher0.waitForEvent();
  }
}
