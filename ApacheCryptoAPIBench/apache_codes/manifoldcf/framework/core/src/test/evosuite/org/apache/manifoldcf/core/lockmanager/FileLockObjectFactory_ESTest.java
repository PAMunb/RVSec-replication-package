/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 16:53:20 GMT 2022
 */

package org.apache.manifoldcf.core.lockmanager;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.manifoldcf.core.lockmanager.FileLockObjectFactory;
import org.apache.manifoldcf.core.lockmanager.LockObject;
import org.apache.manifoldcf.core.lockmanager.LockPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileLockObjectFactory_ESTest extends FileLockObjectFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).toString();
      FileLockObjectFactory fileLockObjectFactory0 = new FileLockObjectFactory(file0);
      // Undeclared exception!
      try { 
        fileLockObjectFactory0.newLockObject((LockPool) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileLockObjectFactory fileLockObjectFactory0 = new FileLockObjectFactory((File) null);
      LockObject lockObject0 = fileLockObjectFactory0.newLockObject((LockPool) null, (Object) null);
      assertNotNull(lockObject0);
  }
}
