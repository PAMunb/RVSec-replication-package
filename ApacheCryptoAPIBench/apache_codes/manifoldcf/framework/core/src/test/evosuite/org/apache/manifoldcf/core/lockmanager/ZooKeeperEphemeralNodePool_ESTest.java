/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:28:31 GMT 2022
 */

package org.apache.manifoldcf.core.lockmanager;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection;
import org.apache.manifoldcf.core.lockmanager.ZooKeeperConnectionPool;
import org.apache.manifoldcf.core.lockmanager.ZooKeeperEphemeralNodePool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ZooKeeperEphemeralNodePool_ESTest extends ZooKeeperEphemeralNodePool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ZooKeeperConnectionPool zooKeeperConnectionPool0 = new ZooKeeperConnectionPool((String) null, 151);
      ZooKeeperEphemeralNodePool zooKeeperEphemeralNodePool0 = new ZooKeeperEphemeralNodePool(zooKeeperConnectionPool0);
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        zooKeeperEphemeralNodePool0.createNode("ridx=", byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.zookeeper.client.ConnectStringParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ZooKeeperConnectionPool zooKeeperConnectionPool0 = new ZooKeeperConnectionPool("org.apache.manifoldcf.core.lockmanager.ZooKeeperEphemeralNodePool", (-1));
      ZooKeeperEphemeralNodePool zooKeeperEphemeralNodePool0 = new ZooKeeperEphemeralNodePool(zooKeeperConnectionPool0);
      zooKeeperConnectionPool0.release((ZooKeeperConnection) null);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        zooKeeperEphemeralNodePool0.createNode("org.apache.manifoldcf.core.lockmanager.ZooKeeperEphemeralNodePool", byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperEphemeralNodeObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ZooKeeperConnectionPool zooKeeperConnectionPool0 = new ZooKeeperConnectionPool("org.apache.manifoldcf.core.lockmanager.ZooKeeperEphemeralNodePool", 910);
      ZooKeeperEphemeralNodePool zooKeeperEphemeralNodePool0 = new ZooKeeperEphemeralNodePool(zooKeeperConnectionPool0);
      zooKeeperEphemeralNodePool0.getObject("");
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        zooKeeperEphemeralNodePool0.createNode("", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path length must be > 0
         //
         verifyException("org.apache.zookeeper.common.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ZooKeeperEphemeralNodePool zooKeeperEphemeralNodePool0 = new ZooKeeperEphemeralNodePool((ZooKeeperConnectionPool) null);
      zooKeeperEphemeralNodePool0.deleteAll();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ZooKeeperConnectionPool zooKeeperConnectionPool0 = new ZooKeeperConnectionPool("Failed to fetch acls for ", 2498);
      ZooKeeperEphemeralNodePool zooKeeperEphemeralNodePool0 = new ZooKeeperEphemeralNodePool(zooKeeperConnectionPool0);
      zooKeeperEphemeralNodePool0.getObject("Failed to fetch acls for ");
      // Undeclared exception!
      try { 
        zooKeeperEphemeralNodePool0.deleteAll();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can't delete node 'Failed to fetch acls for ' that we don't own
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperEphemeralNodeObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ZooKeeperConnectionPool zooKeeperConnectionPool0 = new ZooKeeperConnectionPool("org.apache.manifoldcf.core.lockmanager.ZooKeeperEphemeralNodePool", 1);
      ZooKeeperEphemeralNodePool zooKeeperEphemeralNodePool0 = new ZooKeeperEphemeralNodePool(zooKeeperConnectionPool0);
      zooKeeperEphemeralNodePool0.deleteNode("org.apache.manifoldcf.core.lockmanager.ZooKeeperEphemeralNodePool");
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ZooKeeperConnectionPool zooKeeperConnectionPool0 = new ZooKeeperConnectionPool("bRp >x%;o:(SFT~vjl", (-1));
      ZooKeeperEphemeralNodePool zooKeeperEphemeralNodePool0 = new ZooKeeperEphemeralNodePool(zooKeeperConnectionPool0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        zooKeeperEphemeralNodePool0.createNode(",eK]Zw", byteArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"(SFT~vjl\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ZooKeeperConnectionPool zooKeeperConnectionPool0 = new ZooKeeperConnectionPool("org.apache.commons.io.filefilter.SuffixFileFilter", 0);
      ZooKeeperEphemeralNodePool zooKeeperEphemeralNodePool0 = new ZooKeeperEphemeralNodePool(zooKeeperConnectionPool0);
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        zooKeeperEphemeralNodePool0.setNodeData("@(#)$Id$", byteArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node not yet created for node path '@(#)$Id$'
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.ZooKeeperEphemeralNodeObject", e);
      }
  }
}
