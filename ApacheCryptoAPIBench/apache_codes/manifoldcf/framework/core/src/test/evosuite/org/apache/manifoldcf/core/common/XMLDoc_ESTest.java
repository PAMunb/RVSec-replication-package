/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:22:27 GMT 2022
 */

package org.apache.manifoldcf.core.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.ArrayList;
import java.util.Enumeration;
import javax.xml.transform.ErrorListener;
import org.apache.html.dom.HTMLAnchorElementImpl;
import org.apache.html.dom.HTMLButtonElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLLegendElementImpl;
import org.apache.html.dom.HTMLMapElementImpl;
import org.apache.html.dom.HTMLObjectElementImpl;
import org.apache.html.dom.HTMLOptionElementImpl;
import org.apache.html.dom.HTMLScriptElementImpl;
import org.apache.html.dom.HTMLStyleElementImpl;
import org.apache.html.dom.HTMLTableSectionElementImpl;
import org.apache.html.dom.HTMLUListElementImpl;
import org.apache.manifoldcf.core.common.XMLDoc;
import org.apache.wml.dom.WMLAccessElementImpl;
import org.apache.wml.dom.WMLBrElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLEmElementImpl;
import org.apache.wml.dom.WMLFieldsetElementImpl;
import org.apache.wml.dom.WMLHeadElementImpl;
import org.apache.wml.dom.WMLPostfieldElementImpl;
import org.apache.wml.dom.WMLTimerElementImpl;
import org.apache.wml.dom.WMLUElementImpl;
import org.apache.xalan.processor.ProcessorExsltFunction;
import org.apache.xalan.processor.ProcessorInclude;
import org.apache.xalan.processor.StylesheetHandler;
import org.apache.xalan.processor.TransformerFactoryImpl;
import org.apache.xalan.processor.XSLTSchema;
import org.apache.xalan.templates.ElemAttributeSet;
import org.apache.xalan.templates.ElemExsltFuncResult;
import org.apache.xalan.templates.ElemFallback;
import org.apache.xalan.templates.ElemMessage;
import org.apache.xalan.templates.ElemUnknown;
import org.apache.xalan.templates.StylesheetRoot;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Node;
import org.xml.sax.InputSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLDoc_ESTest extends XMLDoc_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ArrayList<WMLBrElementImpl> arrayList0 = new ArrayList<WMLBrElementImpl>();
      int int0 = xMLDoc0.searchArrayForAttribute(arrayList0, 32, "vybqL%b3$%P/$ 5", "vybqL%b3$%P/$ 5");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "ER_REQUIRED_ELEM_NOT_FOUND");
      xMLDoc0.setAttribute(hTMLLegendElementImpl0, "ER_REQUIRED_ELEM_NOT_FOUND", "");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ArrayList<HTMLTableSectionElementImpl> arrayList0 = new ArrayList<HTMLTableSectionElementImpl>();
      int int0 = xMLDoc0.searchArrayForAttribute(arrayList0, 0, "v)OG'_+u, ?~o)", "Error setting up parser: ");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLStyleElementImpl hTMLStyleElementImpl0 = new HTMLStyleElementImpl(hTMLDocumentImpl0, "@(#)$Id: XMLDoc.java 988245 2010-08-23 18:39:35Z kwright $");
      String string0 = xMLDoc0.getValue(hTMLStyleElementImpl0, "3S7");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLUElementImpl wMLUElementImpl0 = new WMLUElementImpl(wMLDocumentImpl0, "");
      String string0 = xMLDoc0.getNodeName(wMLUElementImpl0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      xMLDoc0.setDocument((Object) null);
      Object object0 = xMLDoc0.getDocument();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLObjectElementImpl hTMLObjectElementImpl0 = new HTMLObjectElementImpl(hTMLDocumentImpl0, "@(#)$Id: XMLDoc.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        xMLDoc0.setDocument(hTMLObjectElementImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.html.dom.HTMLObjectElementImpl cannot be cast to org.w3c.dom.Document
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(pSVIDocumentImpl0, "y5Ec)`48i-4e");
      XMLDoc xMLDoc0 = new XMLDoc((XMLDoc) null, entityImpl0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "<?xml version='1.0' encoding='UTF-8'?>");
      // Undeclared exception!
      try { 
        xMLDoc0.setAttribute(hTMLAnchorElementImpl0, "", "y5Ec)`48i-4e");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ProcessorInclude processorInclude0 = new ProcessorInclude();
      // Undeclared exception!
      try { 
        xMLDoc0.setAttribute(processorInclude0, "", ")X:~q");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ElemTemplateElement error: Function not supported!
         //
         verifyException("org.apache.xalan.templates.ElemTemplateElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.setAttribute((Object) null, ".)", ".)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.searchArrayForAttribute((ArrayList) null, 751, "'IqpT", "[]p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ElemMessage elemMessage0 = new ElemMessage();
      // Undeclared exception!
      try { 
        xMLDoc0.processPath((ArrayList) null, "/fi@5Jg<|3'-e tRa", (Object) elemMessage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.processPath("/~=KnOtjGiH:", (Object) "/~=KnOtjGiH:");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.processPath((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.processPath("dapI6^;v8DNVEHBjm", (Object) "dapI6^;v8DNVEHBjm");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ElemAttributeSet elemAttributeSet0 = new ElemAttributeSet();
      // Undeclared exception!
      try { 
        xMLDoc0.getValue(elemAttributeSet0, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ElemTemplateElement error: Function not supported!
         //
         verifyException("org.apache.xalan.templates.ElemTemplateElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.getValue((Object) null, "z:bzueK(F/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.getRoot((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(deferredDocumentImpl0, "@(#)$Id: XMLDoc.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        xMLDoc0.getRoot((Object) commentImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.CommentImpl cannot be cast to org.w3c.dom.Document
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      xMLDoc0.setDocument((Object) null);
      // Undeclared exception!
      try { 
        xMLDoc0.getRoot();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.getNodeName((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.getNodeName("C/@E 7/}RsET0a,3(<0");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      xMLDoc0.setDocument((Object) null);
      // Undeclared exception!
      try { 
        xMLDoc0.getElement((Object) null, "@(#)$Id: XMLDoc.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XMLDoc.MyEntityResolver xMLDoc_MyEntityResolver0 = new XMLDoc.MyEntityResolver();
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.getElement(xMLDoc_MyEntityResolver0, "qbD!:=wArtuLx");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.manifoldcf.core.common.XMLDoc$MyEntityResolver cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.getData((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.getData("UC%U)qP1]q`[");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ProcessorExsltFunction processorExsltFunction0 = new ProcessorExsltFunction();
      // Undeclared exception!
      try { 
        xMLDoc0.getAttributes(processorExsltFunction0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ElemTemplateElement error: Function not supported!
         //
         verifyException("org.apache.xalan.templates.ElemTemplateElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, (String) null);
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(documentTypeImpl0, true);
      CommentImpl commentImpl0 = new CommentImpl(coreDocumentImpl0, "");
      // Undeclared exception!
      try { 
        xMLDoc0.getAttributes(commentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.getAttributes("<?xml version='1.0' encoding='UTF-8'?>");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ElemFallback elemFallback0 = new ElemFallback();
      // Undeclared exception!
      try { 
        xMLDoc0.duplicateNode(elemFallback0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ElemTemplateElement error: Function not supported!
         //
         verifyException("org.apache.xalan.templates.ElemTemplateElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.duplicateNode((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      HTMLObjectElementImpl hTMLObjectElementImpl0 = new HTMLObjectElementImpl((HTMLDocumentImpl) null, "@(#)$Id: XMLDoc.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        xMLDoc0.createText(hTMLObjectElementImpl0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.createText("<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "+_2l");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      XMLDoc xMLDoc0 = new XMLDoc();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "appenders");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLAccessElementImpl wMLAccessElementImpl0 = new WMLAccessElementImpl(wMLDocumentImpl0, "@(#)$Id: XMLDoc.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        xMLDoc0.createElement(wMLAccessElementImpl0, "appenders");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.addDocumentElement(xMLDoc0, (XMLDoc) null, xMLDoc0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.manifoldcf.core.common.XMLDoc cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      byte[] byteArray0 = xMLDoc0.toByteArray();
      assertEquals(38, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      String string0 = xMLDoc0.getXML();
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Node node0 = xMLDoc0.duplicateNode(hTMLDocumentImpl0);
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(pSVIDocumentImpl0, "y5Ec)`48i-4e");
      XMLDoc xMLDoc0 = new XMLDoc((XMLDoc) null, entityImpl0);
      Node node0 = xMLDoc0.duplicateNode(entityImpl0);
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "@(#)$Id: XMLDoc.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        xMLDoc0.duplicateNode(hTMLScriptElementImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.createText((Object) null, "");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "z:bzueK(F");
      HTMLOptionElementImpl hTMLOptionElementImpl0 = new HTMLOptionElementImpl(hTMLDocumentImpl0, "");
      hTMLOptionElementImpl0.setText("rmd");
      // Undeclared exception!
      try { 
        xMLDoc0.addDocumentElement(hTMLButtonElementImpl0, xMLDoc0, hTMLOptionElementImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.addDocumentElement((Object) null, (XMLDoc) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "z:bzueK(F");
      HTMLOptionElementImpl hTMLOptionElementImpl0 = new HTMLOptionElementImpl(hTMLDocumentImpl0, "");
      xMLDoc0.addDocumentElement(hTMLButtonElementImpl0, xMLDoc0, hTMLOptionElementImpl0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.createElement("", "ER_COULD_NOT_FIND_VAR");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ArrayList<WMLBrElementImpl> arrayList0 = new ArrayList<WMLBrElementImpl>();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "}>usEeXJtjCO7");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      xMLDoc0.processPath((ArrayList) arrayList0, "}>usEeXJtjCO7", (Object) wMLDocumentImpl0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      Object object0 = xMLDoc0.getElement((Object) null, (String) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "ub1LlS3oR", "ub1LlS3oR", "X/;S~i");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLHeadElementImpl wMLHeadElementImpl0 = new WMLHeadElementImpl(wMLDocumentImpl0, "@(#)$Id: XMLDoc.java 988245 2010-08-23 18:39:35Z kwright $");
      ArrayList arrayList0 = xMLDoc0.getAttributes(wMLHeadElementImpl0);
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getLinks();
      String string0 = xMLDoc0.getData(hTMLDocumentImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLUElementImpl wMLUElementImpl0 = new WMLUElementImpl(wMLDocumentImpl0, "r2=Kz+~{=i");
      String string0 = xMLDoc0.getNodeName(wMLUElementImpl0);
      assertNotNull(string0);
      assertEquals("r2=Kz+~{=i", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      TransformerFactoryImpl transformerFactoryImpl0 = new TransformerFactoryImpl();
      StylesheetHandler stylesheetHandler0 = new StylesheetHandler(transformerFactoryImpl0);
      XSLTSchema xSLTSchema0 = stylesheetHandler0.getSchema();
      ErrorListener errorListener0 = transformerFactoryImpl0.getErrorListener();
      StylesheetRoot stylesheetRoot0 = new StylesheetRoot(xSLTSchema0, errorListener0);
      String string0 = xMLDoc0.getNodeName(stylesheetRoot0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XMLDoc xMLDoc0 = null;
      try {
        xMLDoc0 = new XMLDoc((XMLDoc) null, (Object) null);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Error setting up parser: null
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ArrayList<HTMLUListElementImpl> arrayList0 = new ArrayList<HTMLUListElementImpl>();
      // Undeclared exception!
      try { 
        xMLDoc0.searchArrayForAttribute(arrayList0, (-796), "", "Appender {} ignoring SSL configuration for {} protocol");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ArrayList<WMLPostfieldElementImpl> arrayList0 = new ArrayList<WMLPostfieldElementImpl>();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "@(#)$Id: XMLDoc.java 988245 2010-08-23 18:39:35Z kwright $");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLEmElementImpl wMLEmElementImpl0 = new WMLEmElementImpl(wMLDocumentImpl0, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
      xMLDoc0.processPath((ArrayList) arrayList0, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>", (Object) wMLEmElementImpl0);
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ArrayList<HTMLMapElementImpl> arrayList0 = new ArrayList<HTMLMapElementImpl>();
      // Undeclared exception!
      try { 
        xMLDoc0.processPath((ArrayList) arrayList0, "/", (Object) "/");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ArrayList<WMLTimerElementImpl> arrayList0 = new ArrayList<WMLTimerElementImpl>();
      // Undeclared exception!
      try { 
        xMLDoc0.processPath((ArrayList) arrayList0, "Mo@xpm\"e@o!=S", (Object) "Mo@xpm\"e@o!=S");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ArrayList<WMLFieldsetElementImpl> arrayList0 = new ArrayList<WMLFieldsetElementImpl>();
      ElemUnknown elemUnknown0 = new ElemUnknown();
      xMLDoc0.processPath((ArrayList) arrayList0, "+^AGi9)SKokXn%<ge3/", (Object) elemUnknown0);
      assertNull(elemUnknown0.getSystemId());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XMLDoc.MyEntityResolver xMLDoc_MyEntityResolver0 = new XMLDoc.MyEntityResolver();
      InputSource inputSource0 = xMLDoc_MyEntityResolver0.resolveEntity("+^AGi9)SKokXn%<ge3", "");
      assertNotNull(inputSource0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      Object object0 = xMLDoc0.getRoot();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        xMLDoc0.setAttribute(object0, "qO'", "org.openqa.selenium.json.NumberCoercer");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      XMLDoc xMLDoc0 = null;
      try {
        xMLDoc0 = new XMLDoc(stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ArrayList arrayList0 = xMLDoc0.processPath("", (Object) "wS!6[");
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XMLDoc xMLDoc0 = null;
      try {
        xMLDoc0 = new XMLDoc("@(#)$Id: XMLDoc.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      String string0 = xMLDoc0.getXMLNoEntityPreamble();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      // Undeclared exception!
      try { 
        xMLDoc0.getValue("ub1LlS3oR", "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      XMLDoc xMLDoc0 = null;
      try {
        xMLDoc0 = new XMLDoc(sequenceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      Object object0 = xMLDoc0.getDocument();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      ElemExsltFuncResult elemExsltFuncResult0 = new ElemExsltFuncResult();
      Object object0 = xMLDoc0.getRoot((Object) elemExsltFuncResult0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      XMLDoc xMLDoc0 = new XMLDoc();
      xMLDoc0.setDocument((Object) null);
      // Undeclared exception!
      try { 
        xMLDoc0.createElement("org.openqa.selenium.json.NumberCoercer", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }
}
