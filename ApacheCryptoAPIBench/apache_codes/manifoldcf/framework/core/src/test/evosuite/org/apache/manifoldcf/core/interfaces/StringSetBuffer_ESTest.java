/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:57:45 GMT 2022
 */

package org.apache.manifoldcf.core.interfaces;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.function.BiFunction;
import java.util.function.Function;
import org.apache.manifoldcf.core.interfaces.StringSet;
import org.apache.manifoldcf.core.interfaces.StringSetBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringSetBuffer_ESTest extends StringSetBuffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      assertEquals(0, stringSetBuffer0.size());
      
      stringSetBuffer0.hashtable = null;
      String[] stringArray0 = new String[0];
      stringSetBuffer0.add(stringArray0);
      stringSetBuffer0.add(stringArray0, "/vI3#%2>{{<Nkc~");
      // Undeclared exception!
      try { 
        stringSetBuffer0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      String[] stringArray0 = new String[5];
      stringSetBuffer0.hashtable = null;
      String string0 = null;
      // Undeclared exception!
      try { 
        stringSetBuffer0.getArray((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      Iterator<Object> iterator0 = (Iterator<Object>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iterator0).hasNext();
      doReturn(stringSetBuffer0).when(iterator0).next();
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      // Undeclared exception!
      try { 
        stringSetBuffer0.add(stringSet0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.manifoldcf.core.interfaces.StringSetBuffer cannot be cast to java.lang.String
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      stringSetBuffer0.hashtable = null;
      // Undeclared exception!
      try { 
        stringSetBuffer0.getKeys();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      int int0 = stringSetBuffer0.size();
      assertEquals(0, int0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "={v!I[M&PpRRPPxk";
      stringSetBuffer0.add(stringArray0);
      Iterator iterator0 = stringSetBuffer0.getKeys();
      stringSetBuffer0.add(stringArray0);
      stringSetBuffer0.add(stringArray0, "w");
      stringSetBuffer0.getArray(".converterTo(");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.getArray("");
      stringSetBuffer0.getKeys();
      stringSetBuffer0.getArray("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      stringSetBuffer0.size();
      // Undeclared exception!
      try { 
        stringSetBuffer0.add(stringSet0, "");
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringSetBuffer0.add(stringArray0);
      String string0 = "TYx>DOm";
      stringSetBuffer0.getKeys();
      stringSetBuffer0.add(stringArray0, "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      StringSetBuffer stringSetBuffer1 = new StringSetBuffer();
      stringSetBuffer1.getArray("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      stringSetBuffer1.hashtable = null;
      // Undeclared exception!
      try { 
        stringSetBuffer1.add("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      // Undeclared exception!
      try { 
        stringSetBuffer0.add((Map) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      stringSetBuffer0.size();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "={v!I[M&PpRRPPxk";
      stringSetBuffer0.add(stringArray0);
      Iterator iterator0 = stringSetBuffer0.getKeys();
      stringSetBuffer0.add(stringArray0);
      stringSetBuffer0.add(stringArray0, "");
      stringSetBuffer0.getArray(".converterTo(");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.contains(stringSet0);
      stringSetBuffer0.getArray("");
      stringSetBuffer0.getKeys();
      stringSetBuffer0.getArray("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      stringSetBuffer0.size();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "={v!I[M&PpRRPPxk";
      stringSetBuffer0.add(stringArray0);
      String[] stringArray1 = new String[0];
      Iterator iterator0 = stringSetBuffer0.getKeys();
      String[] stringArray2 = new String[8];
      stringArray2[0] = "TYx>DOm";
      stringArray2[1] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray2[3] = "TYx>DOm";
      stringArray2[4] = "TYx>DOm";
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      stringSetBuffer0.hashtable = hashMap0;
      stringArray2[5] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray2[6] = "TYx>DOm";
      stringArray2[7] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringSetBuffer0.add(stringArray2, "TYx>DOm");
      stringSetBuffer0.add(stringArray1, "");
      stringSetBuffer0.getArray(".converterTo(");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.contains(stringSet0);
      stringSetBuffer0.getArray("");
      stringSetBuffer0.getKeys();
      stringSetBuffer0.add(stringArray1, "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      stringSetBuffer0.size();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "={v!I[M&PpRRPPxk";
      stringSetBuffer0.add(stringArray0);
      Iterator iterator0 = stringSetBuffer0.getKeys();
      stringSetBuffer0.add(stringArray0);
      stringSetBuffer0.add(stringArray0, "");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      // Undeclared exception!
      try { 
        stringSetBuffer0.contains(stringSet0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      String[] stringArray0 = new String[6];
      stringSetBuffer0.add(stringArray0);
      stringArray0[1] = "5i*F6kcsK|VK;";
      stringArray0[3] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      Iterator<Object> iterator0 = (Iterator<Object>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(iterator0).hasNext();
      doReturn((Object) null).when(iterator0).next();
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.contains(stringSet0);
      stringSetBuffer0.add(stringArray0, stringArray0[5]);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      Iterator iterator0 = stringSetBuffer0.getKeys();
      hashMap0.put((String) null, "k");
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn("").when(function0).apply(any());
      hashMap0.computeIfAbsent(" Cc", function0);
      String string0 = hashMap0.put((String) null, "<anonymous class>");
      hashMap0.put("M=_(RkPh^iGD", "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      hashMap0.entrySet();
      stringSetBuffer0.add((Map) hashMap0);
      hashMap0.put("<anonymous class>", "");
      stringSetBuffer0.add((String) null);
      stringSetBuffer0.contains("");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.add(stringSet0);
      Iterator<String> iterator1 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(iterator1).hasNext();
      doReturn((Object) null).when(iterator1).next();
      StringSet stringSet1 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator1).when(stringSet1).getKeys();
      stringSetBuffer0.add(stringSet1, "k");
      stringSetBuffer0.clear();
      String[] stringArray0 = new String[7];
      stringArray0[0] = stringSet1._rcsid;
      stringArray0[1] = string0;
      stringSetBuffer0.add(stringArray0, stringSet0._rcsid);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      stringSetBuffer0.add((Map) hashMap0, "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(iterator0).hasNext();
      doReturn((Object) null).when(iterator0).next();
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.add(stringSet0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      Iterator<Object> iterator0 = (Iterator<Object>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(iterator0).hasNext();
      doReturn((Object) null).when(iterator0).next();
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.add(stringSet0);
      String[] stringArray0 = new String[4];
      Map<Object, String> map0 = null;
      String string0 = "\"xE7!:U|rnN";
      // Undeclared exception!
      try { 
        stringSetBuffer0.add(map0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      stringSetBuffer0.size();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "={v!I[M&PpRRPPxk";
      stringSetBuffer0.add(stringArray0);
      Iterator iterator0 = stringSetBuffer0.getKeys();
      stringSetBuffer0.add(stringArray0);
      stringSetBuffer0.add(stringArray0, "");
      stringSetBuffer0.getArray(".converterTo(");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.getArray("");
      stringSetBuffer0.getArray("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      stringSetBuffer0.size();
      stringSetBuffer0.add(stringSet0, "");
      assertEquals(2, stringSetBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      stringSetBuffer0.size();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "={v!I[M&PpRRPPxk";
      stringSetBuffer0.add(stringArray0);
      String[] stringArray1 = new String[0];
      Iterator iterator0 = stringSetBuffer0.getKeys();
      stringSetBuffer0.add(stringArray1);
      stringSetBuffer0.add(stringArray1, "");
      stringSetBuffer0.getArray(".converterTo(");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.contains(stringSet0);
      stringSetBuffer0.getArray("");
      stringSetBuffer0.getKeys();
      assertEquals(2, stringSetBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      String[] stringArray0 = new String[6];
      stringSetBuffer0.add(stringArray0);
      stringArray0[1] = "5i*F6kcsK|VK;";
      stringArray0[3] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      Iterator<Object> iterator0 = (Iterator<Object>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.contains(stringSet0);
      stringSetBuffer0.add(stringArray0, stringArray0[5]);
      assertEquals(3, stringSetBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      stringSetBuffer0.size();
      String[] stringArray0 = new String[0];
      Iterator iterator0 = stringSetBuffer0.getKeys();
      stringSetBuffer0.add(stringArray0);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "TYx>DOm";
      stringArray1[1] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[2] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[3] = "TYx>DOm";
      stringArray1[4] = "TYx>DOm";
      stringArray1[5] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[6] = "TYx>DOm";
      stringArray1[7] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringSetBuffer0.add(stringArray1, "TYx>DOm");
      stringSetBuffer0.add(stringArray0, "");
      stringSetBuffer0.add("TYx>DOm", (String) null);
      stringSetBuffer0.getArray(".converterTo(");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      boolean boolean0 = stringSetBuffer0.contains(stringSet0);
      assertEquals(3, stringSetBuffer0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      String[] stringArray0 = new String[14];
      stringSetBuffer0.add(stringArray0, stringArray0[0]);
      stringSetBuffer0.getArray((String) null);
      assertEquals(1, stringSetBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      // Undeclared exception!
      try { 
        stringSetBuffer0.add((Map) null, "9r8MH8~iec[LZNWC.Lv");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      Iterator iterator0 = stringSetBuffer0.getKeys();
      hashMap0.put((String) null, "k");
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn("").when(function0).apply(any());
      hashMap0.computeIfAbsent(" Cc", function0);
      hashMap0.put((String) null, "<anonymous class>");
      hashMap0.put("M=_(RkPh^iGD", "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      hashMap0.entrySet();
      stringSetBuffer0.add((Map) hashMap0);
      hashMap0.put("<anonymous class>", "");
      stringSetBuffer0.add((String) null);
      stringSetBuffer0.contains("");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.add(stringSet0);
      Iterator<String> iterator1 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator1).hasNext();
      StringSet stringSet1 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator1).when(stringSet1).getKeys();
      stringSetBuffer0.add(stringSet1, "k");
      stringSetBuffer0.clear();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "@(#)$Id: StringSet.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "k";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[4] = null;
      stringArray0[5] = "<anonymous class>";
      stringArray0[6] = "~sZC SewLC(K";
      stringSetBuffer0.add(stringArray0);
      stringSetBuffer0.getArray("<anonymous class>");
      assertEquals(6, stringSetBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      hashMap0.put(stringSetBuffer0, stringSetBuffer0);
      // Undeclared exception!
      try { 
        stringSetBuffer0.add((Map) hashMap0, (String) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.manifoldcf.core.interfaces.StringSetBuffer cannot be cast to java.lang.String
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      stringSetBuffer0.hashtable = hashMap0;
      stringSetBuffer0.getKeys();
      hashMap0.put(stringSetBuffer0, stringSetBuffer0.hashtable);
      stringSetBuffer0.add((String) null);
      stringSetBuffer0.contains("");
      stringSetBuffer0.add("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      stringSetBuffer0.size();
      // Undeclared exception!
      try { 
        stringSetBuffer0.getArray((String) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.manifoldcf.core.interfaces.StringSetBuffer cannot be cast to java.lang.String
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      Iterator iterator0 = stringSetBuffer0.getKeys();
      assertNotNull(iterator0);
      
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.add(stringSet0, "@(#)$Id: StringSet.java 988245 2010-08-23 18:39:35Z kwright $");
      assertEquals(0, stringSetBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      HashMap<Object, Object> hashMap1 = new HashMap<Object, Object>();
      stringSetBuffer0.getKeys();
      String[] stringArray0 = stringSetBuffer0.getArray("com.google.common.collect.Interners$InternerFunction");
      stringSetBuffer0.add("BaA&B+}=p<;h3AVA$C'");
      stringSetBuffer0.contains("BaA&B+}=p<;h3AVA$C'");
      stringSetBuffer0.add("[a1[fT0;");
      stringSetBuffer0.add(stringArray0);
      stringSetBuffer0.getArray("$AjK6[:$m4LnJucA");
      assertEquals(2, stringSetBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      Iterator iterator0 = stringSetBuffer0.getKeys();
      hashMap0.put((String) null, "k");
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn("").when(function0).apply(any());
      hashMap0.computeIfAbsent(" Cc", function0);
      hashMap0.put((String) null, "<anonymous class>");
      String string0 = "M=_(RkPh^iGD";
      hashMap0.put("M=_(RkPh^iGD", "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      hashMap0.entrySet();
      stringSetBuffer0.add((Map) hashMap0);
      hashMap0.put("<anonymous class>", "");
      stringSetBuffer0.add((String) null);
      stringSetBuffer0.contains("");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.add(stringSet0);
      StringSet stringSet1 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(stringSet1).getKeys();
      // Undeclared exception!
      try { 
        stringSetBuffer0.add(stringSet1, "k");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      // Undeclared exception!
      try { 
        stringSetBuffer0.add((String[]) null, "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      stringSetBuffer0.add("\"q8", "\"q8");
      String string0 = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringSetBuffer0.remove("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      stringSetBuffer0.add((Map) hashMap0, "4");
      stringSetBuffer0.getArray("");
      stringSetBuffer0.getKeys();
      HashMap<Object, String> hashMap1 = new HashMap<Object, String>();
      hashMap1.put("\"q8", "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(biFunction0).apply(any() , any());
      hashMap1.put("", "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      hashMap1.replaceAll(biFunction0);
      String string1 = "";
      stringSetBuffer0.add((Map) hashMap1, "");
      StringSet stringSet0 = null;
      // Undeclared exception!
      try { 
        stringSetBuffer0.add((StringSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      stringSetBuffer0.getKeys();
      hashMap0.put((String) null, "k");
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      hashMap0.computeIfAbsent(" Cc", function0);
      hashMap0.put((String) null, "<anonymous class>");
      String string0 = "M=_(RkPh^iGD";
      hashMap0.put("M=_(RkPh^iGD", "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      hashMap0.entrySet();
      stringSetBuffer0.add((Map) hashMap0);
      hashMap0.put("<anonymous class>", "");
      stringSetBuffer0.add((String) null);
      stringSetBuffer0.contains("");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(stringSet0).getKeys();
      // Undeclared exception!
      try { 
        stringSetBuffer0.add(stringSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      hashMap0.put(stringSetBuffer0, stringSetBuffer0);
      // Undeclared exception!
      try { 
        stringSetBuffer0.add((Map) hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.manifoldcf.core.interfaces.StringSetBuffer cannot be cast to java.lang.String
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      hashMap0.put(stringSetBuffer0, "");
      stringSetBuffer0.add((Map) hashMap0, (String) null);
      assertEquals(1, stringSetBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      // Undeclared exception!
      try { 
        stringSetBuffer0.add((StringSet) null, "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      // Undeclared exception!
      try { 
        stringSetBuffer0.add((StringSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      String string0 = "y[";
      stringSetBuffer0.add((Map) hashMap0, "y[");
      stringSetBuffer0.clear();
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(stringSet0).getKeys();
      // Undeclared exception!
      try { 
        stringSetBuffer0.add(stringSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      String string0 = null;
      stringSetBuffer0.add((Map) hashMap0, (String) null);
      String string1 = "";
      stringSetBuffer0.add("");
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      HashMap<String, Object> hashMap2 = new HashMap<String, Object>();
      String string2 = null;
      hashMap2.put((String) null, hashMap0);
      hashMap2.put("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $", hashMap0);
      hashMap1.putAll(hashMap2);
      hashMap1.put((String) null, stringSetBuffer0);
      // Undeclared exception!
      try { 
        stringSetBuffer0.add((Map) hashMap1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.manifoldcf.core.interfaces.StringSetBuffer cannot be cast to java.lang.String
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      stringSetBuffer0.clear();
      Iterator iterator0 = stringSetBuffer0.getKeys();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      stringSetBuffer0.add((Map) hashMap0);
      Iterator iterator0 = stringSetBuffer0.getKeys();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      stringSetBuffer0.remove((String) null);
      int int0 = stringSetBuffer0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "$VoDX";
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      stringSetBuffer0.getArray("$VoDX");
      stringSetBuffer0.add((Map) hashMap0, "?i");
      stringArray0[1] = "org.apache.manifoldcf.core.interfaces.StringSetBuffer";
      stringArray0[2] = "$VoDX";
      stringArray0[3] = "org.apache.manifoldcf.core.interfaces.StringSetBuffer";
      stringArray0[4] = "fileName";
      stringSetBuffer0.add(stringArray0, "org.apache.manifoldcf.core.interfaces.StringSetBuffer");
      String[] stringArray1 = stringSetBuffer0.getArray("org.apache.manifoldcf.core.interfaces.StringSetBuffer");
      stringSetBuffer0.clear();
      stringSetBuffer0.remove("$VoDX");
      stringSetBuffer0.getKeys();
      stringSetBuffer0.add((String) null);
      stringSetBuffer0.add(stringArray1);
      stringSetBuffer0.add((Map) hashMap0);
      stringSetBuffer0.add((Map) hashMap0, (String) null);
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(stringSet0).getKeys();
      // Undeclared exception!
      try { 
        stringSetBuffer0.contains(stringSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      // Undeclared exception!
      try { 
        stringSetBuffer0.contains((StringSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      String[] stringArray0 = new String[1];
      stringSetBuffer0.add(stringArray0, stringArray0[0]);
      assertEquals(1, stringSetBuffer0.size());
      
      stringSetBuffer0.getArray("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      assertEquals(1, stringSetBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      Iterator iterator0 = stringSetBuffer0.getKeys();
      hashMap0.put((String) null, "k");
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn("").when(function0).apply(any());
      hashMap0.computeIfAbsent(" Cc", function0);
      hashMap0.put((String) null, "<anonymous class>");
      hashMap0.put("M=_(RkPh^iGD", "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      hashMap0.entrySet();
      stringSetBuffer0.add((Map) hashMap0);
      hashMap0.put("<anonymous class>", "h,Vm2x`XMXyU!WH`p");
      stringSetBuffer0.add((String) null);
      stringSetBuffer0.contains("");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet0).getKeys();
      stringSetBuffer0.add(stringSet0);
      StringSet stringSet1 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(stringSet1).getKeys();
      stringSetBuffer0.add(stringSet1);
      stringSetBuffer0.getArray((String) null);
      assertEquals(4, stringSetBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      String[] stringArray0 = new String[1];
      stringSetBuffer0.add(stringArray0, "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      assertEquals(1, stringSetBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      stringSetBuffer0.size();
      String[] stringArray0 = new String[0];
      stringSetBuffer0.getKeys();
      stringSetBuffer0.add(stringArray0);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "TYx>DOm";
      stringArray1[1] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[2] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[3] = "TYx>DOm";
      stringArray1[4] = "TYx>DOm";
      stringArray1[5] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[6] = "TYx>DOm";
      stringArray1[7] = "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $";
      stringSetBuffer0.add(stringArray1, "TYx>DOm");
      String string0 = "";
      stringSetBuffer0.add(stringArray0, "");
      String string1 = null;
      stringSetBuffer0.add("TYx>DOm", (String) null);
      stringSetBuffer0.getArray(".converterTo(");
      StringSet stringSet0 = mock(StringSet.class, new ViolatedAssumptionAnswer());
      doReturn((Iterator) null).when(stringSet0).getKeys();
      // Undeclared exception!
      try { 
        stringSetBuffer0.contains(stringSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      String[] stringArray0 = stringSetBuffer0.getArray((String) null);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      boolean boolean0 = stringSetBuffer0.contains("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      stringSetBuffer0.add("");
      Iterator iterator0 = stringSetBuffer0.getKeys();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      stringSetBuffer0.hashtable = hashMap0;
      stringSetBuffer0.getKeys();
      String[] stringArray0 = stringSetBuffer0.getArray("");
      stringSetBuffer0.add((String) null);
      stringSetBuffer0.contains("[a1[fT0;");
      stringSetBuffer0.add("@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $");
      stringSetBuffer0.size();
      stringSetBuffer0.add(stringArray0);
      assertEquals(2, stringSetBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      // Undeclared exception!
      try { 
        stringSetBuffer0.add((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.StringSetBuffer", e);
      }
  }
}
