/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:59:39 GMT 2022
 */

package org.apache.manifoldcf.core.interfaces;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import org.apache.manifoldcf.core.interfaces.CharacterInput;
import org.apache.manifoldcf.core.interfaces.NullCharacterInput;
import org.apache.manifoldcf.core.interfaces.TempFileCharacterInput;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterInput_ESTest extends CharacterInput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      Reader reader0 = nullCharacterInput0.getStream();
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput(reader0, 2437L, 130);
      tempFileCharacterInput0.discard();
      assertEquals(0L, tempFileCharacterInput0.getUtf8StreamLength());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      Reader reader0 = nullCharacterInput0.getStream();
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput(reader0, 2437L, 130);
      TempFileCharacterInput tempFileCharacterInput1 = (TempFileCharacterInput)tempFileCharacterInput0.transfer();
      tempFileCharacterInput1.stream = reader0;
      tempFileCharacterInput1.closeStream();
      assertEquals(0L, tempFileCharacterInput1.getUtf8StreamLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      CharacterInput characterInput0 = nullCharacterInput0.transfer();
      assertNotSame(nullCharacterInput0, characterInput0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      long long0 = nullCharacterInput0.getUtf8StreamLength();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput();
      byte[] byteArray0 = new byte[1];
      tempFileCharacterInput0.inMemoryBuffer = byteArray0;
      long long0 = tempFileCharacterInput0.getUtf8StreamLength();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      Reader reader0 = nullCharacterInput0.getStream();
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput(reader0, 1L);
      tempFileCharacterInput0.transfer();
      InputStream inputStream0 = tempFileCharacterInput0.getUtf8Stream();
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      InputStream inputStream0 = nullCharacterInput0.getUtf8Stream();
      assertEquals(0, inputStream0.available());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput();
      Reader reader0 = tempFileCharacterInput0.getStream();
      assertNull(reader0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      Reader reader0 = nullCharacterInput0.getStream();
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput(reader0);
      String string0 = tempFileCharacterInput0.getHashValue();
      assertEquals("DA39A3EE5E6B4B0D3255BFEF95601890AFD80709", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput();
      byte[] byteArray0 = new byte[1];
      tempFileCharacterInput0.inMemoryBuffer = byteArray0;
      long long0 = tempFileCharacterInput0.getCharacterLength();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput();
      tempFileCharacterInput0.charLength = (-1507L);
      long long0 = tempFileCharacterInput0.getCharacterLength();
      assertEquals((-1507L), long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharacterInput.handleIOException((IOException) null, "@(#)$Id: CharacterInput.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.CharacterInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn("@(#)$Id: TempFileCharacterInput.java 988245 2010-08-23 18:39:35Z kwright $").when(file0).getAbsolutePath();
      tempFileCharacterInput0.file = file0;
      try { 
        tempFileCharacterInput0.getUtf8Stream();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No such file: null
         //
         verifyException("org.apache.manifoldcf.core.interfaces.TempFileCharacterInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput();
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).getAbsolutePath();
      tempFileCharacterInput0.file = file0;
      // Undeclared exception!
      try { 
        tempFileCharacterInput0.getUtf8Stream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      Reader reader0 = nullCharacterInput0.getStream();
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput(reader0, 2437L, 130);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      tempFileCharacterInput0.file = file0;
      // Undeclared exception!
      try { 
        tempFileCharacterInput0.discard();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      Reader reader0 = nullCharacterInput0.getStream();
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput(reader0, 2437L, 130);
      // Undeclared exception!
      try { 
        tempFileCharacterInput0.closeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.CharacterInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      Reader reader0 = nullCharacterInput0.getStream();
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput(reader0, 2437L, 130);
      tempFileCharacterInput0.doneWithStream();
      assertEquals(0L, tempFileCharacterInput0.getUtf8StreamLength());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IOException iOException0 = mock(IOException.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iOException0).getMessage();
      try { 
        CharacterInput.handleIOException(iOException0, "D+CF");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO exception while D+CF: null
         //
         verifyException("org.apache.manifoldcf.core.interfaces.CharacterInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      Reader reader0 = nullCharacterInput0.getStream();
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput(reader0, 2437L, 130);
      tempFileCharacterInput0.transfer();
      // Undeclared exception!
      try { 
        tempFileCharacterInput0.getHashValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput();
      tempFileCharacterInput0.hashValue = "";
      String string0 = tempFileCharacterInput0.getHashValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput();
      // Undeclared exception!
      try { 
        tempFileCharacterInput0.getCharacterLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      Reader reader0 = nullCharacterInput0.getStream();
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput(reader0, 2437L, 130);
      long long0 = tempFileCharacterInput0.getCharacterLength();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      Reader reader0 = nullCharacterInput0.getStream();
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput(reader0, 0L);
      Reader reader1 = tempFileCharacterInput0.getStream();
      Reader reader2 = tempFileCharacterInput0.getStream();
      assertSame(reader2, reader1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NullCharacterInput nullCharacterInput0 = new NullCharacterInput();
      Reader reader0 = nullCharacterInput0.getStream();
      TempFileCharacterInput tempFileCharacterInput0 = new TempFileCharacterInput(reader0, 2437L, 130);
      CharacterInput characterInput0 = tempFileCharacterInput0.transfer();
      characterInput0.stream = reader0;
      characterInput0.doneWithStream();
      assertNotSame(characterInput0, tempFileCharacterInput0);
  }
}
