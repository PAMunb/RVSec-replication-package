/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:32:11 GMT 2022
 */

package org.apache.manifoldcf.core.jdbcpool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.SQLTransientConnectionException;
import org.apache.manifoldcf.core.jdbcpool.ConnectionPool;
import org.apache.manifoldcf.core.jdbcpool.WrappedConnection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Locator2Impl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WrappedConnection_ESTest extends WrappedConnection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", "", "", 0, 0L, false);
      WrappedConnection wrappedConnection0 = new WrappedConnection(connectionPool0, (Connection) null);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      SAXParseException sAXParseException0 = new SAXParseException("", locator2Impl0);
      wrappedConnection0.instantiationException = (Exception) sAXParseException0;
      Exception exception0 = wrappedConnection0.getInstantiationException();
      assertSame(exception0, sAXParseException0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("-.9", "", "org.apache.manifoldcf.core.jdbcpool.WrappedConnection", 1, 70L, true);
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("org.apache.manifoldcf.core.jdbcpool.WrappedConnection", "org.apache.manifoldcf.core.jdbcpool.WrappedConnection");
      WrappedConnection wrappedConnection0 = new WrappedConnection(connectionPool0, (Connection) null, sQLTransientConnectionException0);
      // Undeclared exception!
      try { 
        wrappedConnection0.release();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", "", "", 0, 0L, false);
      WrappedConnection wrappedConnection0 = new WrappedConnection(connectionPool0, (Connection) null);
      Connection connection0 = wrappedConnection0.getConnection();
      assertNull(connection0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", "", "", 0, 0L, false);
      WrappedConnection wrappedConnection0 = new WrappedConnection(connectionPool0, (Connection) null);
      Exception exception0 = wrappedConnection0.getInstantiationException();
      assertNull(exception0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", "", "", 0, 0L, false);
      WrappedConnection wrappedConnection0 = new WrappedConnection(connectionPool0, (Connection) null);
      // Undeclared exception!
      try { 
        wrappedConnection0.release();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }
}
