/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:26:11 GMT 2022
 */

package org.apache.manifoldcf.core.connector;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import org.apache.manifoldcf.core.connector.BaseConnector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseConnector_ESTest extends BaseConnector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      assertNotNull(stack0);
      assertTrue(stack0.empty());
      assertEquals(10, stack0.capacity());
      assertEquals("[]", stack0.toString());
      assertEquals(0, stack0.size());
      assertTrue(stack0.isEmpty());
      
      int int0 = BaseConnector.unpackList(stack0, "X\"m;UU$AzuACE(3{ ", 0, 'n');
      assertFalse(stack0.contains("X\"m;UU$AzuACE(3{ "));
      assertTrue(stack0.empty());
      assertEquals(10, stack0.capacity());
      assertEquals("[]", stack0.toString());
      assertEquals(0, stack0.size());
      assertTrue(stack0.isEmpty());
      assertEquals(17, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[5];
      int int0 = BaseConnector.unpackFixedList(stringArray0, "L[", 0, '\'');
      assertEquals(2, int0);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      assertNotNull(stringBuilder0);
      assertEquals("", stringBuilder0.toString());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "com.google.common.cache.LocalCache$ManualSerializationProxy";
      // Undeclared exception!
      try { 
        BaseConnector.packFixedList(stringBuilder0, stringArray0, 't');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.connector.BaseConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(1);
      assertNotNull(stringBuilder0);
      assertEquals("", stringBuilder0.toString());
      
      BaseConnector.pack(stringBuilder0, "", '8');
      assertEquals("8", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      assertNotNull(stack0);
      assertTrue(stack0.empty());
      assertTrue(stack0.isEmpty());
      assertEquals("[]", stack0.toString());
      assertEquals(0, stack0.size());
      assertEquals(10, stack0.capacity());
      
      int int0 = BaseConnector.unpackList(stack0, "", 0, 'S');
      assertFalse(stack0.contains(""));
      assertTrue(stack0.empty());
      assertTrue(stack0.isEmpty());
      assertEquals("[]", stack0.toString());
      assertEquals(0, stack0.size());
      assertEquals(10, stack0.capacity());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[0];
      int int0 = BaseConnector.unpackFixedList(stringArray0, (String) null, (-7480), '6');
      assertEquals((-7480), int0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("SLOd in| ");
      assertNotNull(stringBuilder0);
      assertEquals("SLOd in| ", stringBuilder0.toString());
      
      int int0 = BaseConnector.unpack(stringBuilder0, "", 0, 'J');
      assertEquals("SLOd in| ", stringBuilder0.toString());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      assertNotNull(stringBuilder0);
      assertEquals("", stringBuilder0.toString());
      
      int int0 = BaseConnector.unpack(stringBuilder0, "'_di9T{\\", 1580, '2');
      assertEquals("", stringBuilder0.toString());
      assertEquals(1580, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      assertNotNull(arrayDeque0);
      assertTrue(arrayDeque0.isEmpty());
      assertEquals(0, arrayDeque0.size());
      
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) arrayDeque0, locale_FilteringMode0);
      assertNotNull(list0);
      assertEquals(0, linkedList0.size());
      assertTrue(arrayDeque0.isEmpty());
      assertEquals(0, arrayDeque0.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      
      // Undeclared exception!
      try { 
        BaseConnector.unpackList(list0, "%i,4-'WOY.w_@(", (-1), 'O');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode0);
      assertNotNull(list0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      
      // Undeclared exception!
      try { 
        BaseConnector.unpackList(list0, (String) null, (-276), '^');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        BaseConnector.unpackFixedList(stringArray0, "cA6", (-7021), 'z');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        BaseConnector.unpackFixedList((String[]) null, ">^5'|/7Q_a6D7>!", 1, 'c');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.connector.BaseConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        BaseConnector.unpack((StringBuilder) null, "3n,7Fv8C3!|kD+''ECr", (-108), 'H');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        BaseConnector.unpack((StringBuilder) null, (String) null, 1194, 'H');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      assertNotNull(charBuffer0);
      assertEquals(0, charBuffer0.arrayOffset());
      assertFalse(charBuffer0.isDirect());
      assertEquals(0, charBuffer0.length());
      assertTrue(charBuffer0.hasArray());
      assertEquals(0, charBuffer0.remaining());
      assertFalse(charBuffer0.isReadOnly());
      assertEquals(0, charBuffer0.position());
      assertFalse(charBuffer0.hasRemaining());
      assertEquals(0, charBuffer0.limit());
      assertEquals(0, charBuffer0.capacity());
      assertEquals("", charBuffer0.toString());
      
      StringBuilder stringBuilder0 = new StringBuilder(charBuffer0);
      assertNotNull(stringBuilder0);
      assertEquals(0, charBuffer0.arrayOffset());
      assertFalse(charBuffer0.isDirect());
      assertEquals(0, charBuffer0.length());
      assertTrue(charBuffer0.hasArray());
      assertEquals(0, charBuffer0.remaining());
      assertFalse(charBuffer0.isReadOnly());
      assertEquals(0, charBuffer0.position());
      assertFalse(charBuffer0.hasRemaining());
      assertEquals(0, charBuffer0.limit());
      assertEquals(0, charBuffer0.capacity());
      assertEquals("", charBuffer0.toString());
      assertEquals("", stringBuilder0.toString());
      
      // Undeclared exception!
      try { 
        BaseConnector.packList(stringBuilder0, (List<String>) null, 'F');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.connector.BaseConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        BaseConnector.pack((StringBuilder) null, "\"+m:x4oF06\"rq", 'b');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.connector.BaseConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      int int0 = BaseConnector.unpackList(linkedList0, "7", 0, '4');
      assertEquals(7, linkedList0.size());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "!Gd";
      stringArray0[5] = "";
      stringArray0[6] = "";
      BaseConnector.packList(stringBuilder0, stringArray0, '!');
      assertEquals("7!!!!!\\!Gd!!!", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.offer("org.apache.manifoldcf.core.interfaces.ConfigNode");
      BaseConnector.packList(stringBuilder0, linkedList0, 'O');
      assertEquals("1Oorg.apache.manifoldcf.core.interfaces.ConfigNodeO", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ",#&vL$b)Uwc;T;ci";
      stringArray0[1] = ",#&vL$b)Uwc;T;ci";
      stringArray0[2] = ",#&vL$b)Uwc;T;ci";
      stringArray0[3] = ",#&vL$b)Uwc;T;ci";
      stringArray0[4] = ",#&vL$b)Uwc;T;ci";
      BaseConnector.packFixedList(stringBuilder0, stringArray0, 'q');
      assertEquals(",#&vL$b)Uwc;T;ciq,#&vL$b)Uwc;T;ciq,#&vL$b)Uwc;T;ciq,#&vL$b)Uwc;T;ciq,#&vL$b)Uwc;T;ciq", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[4];
      int int0 = BaseConnector.unpackFixedList(stringArray0, "&&u^`NpGgM7u>", 0, '&');
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[6];
      int int0 = BaseConnector.unpackFixedList(stringArray0, "", 0, '!');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "!Gd";
      // Undeclared exception!
      try { 
        BaseConnector.packList(stringBuilder0, stringArray0, '!');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.connector.BaseConnector", e);
      }
  }
}
