/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 16:50:01 GMT 2022
 */

package org.apache.manifoldcf.core.threadcontext;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.manifoldcf.core.threadcontext.ThreadContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ThreadContext_ESTest extends ThreadContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      // Undeclared exception!
      try { 
        threadContext0.save((Object) null, threadContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      // Undeclared exception!
      try { 
        threadContext0.get((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      threadContext0.save(threadContext0, (Object) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      threadContext0.save(threadContext0, threadContext0);
      Object object0 = threadContext0.get(threadContext0);
      assertSame(threadContext0, object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      Object object0 = threadContext0.get(threadContext0);
      assertNull(object0);
  }
}
