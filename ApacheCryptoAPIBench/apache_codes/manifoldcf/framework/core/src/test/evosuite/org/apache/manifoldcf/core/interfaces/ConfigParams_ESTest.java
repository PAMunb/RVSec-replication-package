/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:26:04 GMT 2022
 */

package org.apache.manifoldcf.core.interfaces;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.SequenceInputStream;
import java.time.ZoneId;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import org.apache.manifoldcf.core.interfaces.ConfigNode;
import org.apache.manifoldcf.core.interfaces.ConfigParams;
import org.apache.manifoldcf.core.interfaces.ConfigurationNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConfigParams_ESTest extends ConfigParams_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.setObfuscatedParameter("suq7n.1I", "suq7n.1I");
      configParams0.setParameter("suq7n.1I", "name");
      assertEquals(1, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      ConfigParams configParams0 = new ConfigParams(map0);
      String string0 = configParams0.toXML();
      ConfigParams configParams1 = new ConfigParams(string0);
      assertEquals(28, configParams1.getChildCount());
      assertTrue(configParams1.equals((Object)configParams0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.setObfuscatedParameter("8", "8");
      configParams0.getParameter("8");
      assertEquals(1, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      ConfigParams configParams0 = new ConfigParams(map0);
      configParams0.createNew();
      assertEquals(28, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ConfigParams configParams0 = new ConfigParams(hashMap0);
      configParams0.readOnly = true;
      // Undeclared exception!
      try { 
        configParams0.setParameter("", "@(#)$Id: ConfigParams.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempt to change read-only object
         //
         verifyException("org.apache.manifoldcf.core.interfaces.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      ConfigParams configParams0 = new ConfigParams(map0);
      ConfigParams configParams1 = configParams0.duplicate();
      configParams1.params = map0;
      // Undeclared exception!
      try { 
        configParams1.setObfuscatedParameter("AYv", "@(#)$Id: ConfigurationNode.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.children = null;
      // Undeclared exception!
      try { 
        configParams0.setObfuscatedParameter("su7n.1I", "su7n.1I");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.makeReadOnly();
      // Undeclared exception!
      try { 
        configParams0.setObfuscatedParameter((String) null, "@(#)$Id: ConfigParams.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempt to change read-only object
         //
         verifyException("org.apache.manifoldcf.core.interfaces.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      // Undeclared exception!
      try { 
        configParams0.removeOuterNode((ConfigurationNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ConfigParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      // Undeclared exception!
      try { 
        configParams0.getChild(8232);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 8232, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      ConfigParams configParams0 = new ConfigParams(map0);
      ConfigNode configNode0 = configParams0.getChild(0);
      List<ConfigurationNode> list0 = configParams0.children;
      configNode0.children = list0;
      // Undeclared exception!
      configParams0.duplicate();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      ConfigParams configParams0 = new ConfigParams(map0);
      ConfigNode configNode0 = configParams0.getChild(1);
      configNode0.type = null;
      // Undeclared exception!
      try { 
        configParams0.duplicate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      ConfigParams configParams0 = new ConfigParams(map0);
      // Undeclared exception!
      try { 
        configParams0.addOuterNode((ConfigurationNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ConfigParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConfigParams configParams0 = null;
      try {
        configParams0 = new ConfigParams((Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ConfigParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.setParameter(">4em", (String) null);
      assertEquals(0, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.setObfuscatedParameter("6^)]", (String) null);
      assertEquals(0, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      ConfigParams configParams0 = new ConfigParams(map0);
      String string0 = configParams0.getObfuscatedParameter("<ESmG[@");
      assertNull(string0);
      assertEquals(28, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.setObfuscatedParameter("su7n.1I", "su7n.1I");
      configParams0.getObfuscatedParameter("su7n.1I");
      assertEquals(1, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      ConfigParams configParams0 = new ConfigParams(map0);
      configParams0.setParameter("", "@(#)$Id: Configuration.java 988245 2010-08-23 18:39:35Z kwright $");
      configParams0.setParameter("", "");
      assertEquals(29, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ConfigParams configParams0 = new ConfigParams(hashMap0);
      ConfigurationNode configurationNode0 = configParams0.createNewNode("'1p;3x6=scF[kR9yl");
      configParams0.removeOuterNode(configurationNode0);
      assertEquals("'1p;3x6=scF[kR9yl", configurationNode0.getType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("d)(M&% ", (String) null);
      ConfigParams configParams0 = new ConfigParams(hashMap0);
      assertEquals(1, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put((String) null, "");
      ConfigParams configParams0 = new ConfigParams(hashMap0);
      assertEquals(1, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ConfigParams configParams0 = new ConfigParams(hashMap0);
      ConfigurationNode configurationNode0 = configParams0.createNewNode("'1p;3x6=scF[kR9yl");
      configParams0.addOuterNode(configurationNode0);
      assertEquals("'1p;3x6=scF[kR9yl", configurationNode0.getType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.clearOuterNodes();
      assertEquals(0, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Stack<MockFileInputStream> stack0 = new Stack<MockFileInputStream>();
      Enumeration<MockFileInputStream> enumeration0 = stack0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ConfigParams configParams0 = null;
      try {
        configParams0 = new ConfigParams(sequenceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConfigParams configParams0 = null;
      try {
        configParams0 = new ConfigParams("{http://xml.apache.org/xalan}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      // Undeclared exception!
      try { 
        configParams0.getChild((-2135));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      Iterator iterator0 = configParams0.listParameters();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      ConfigParams configParams1 = configParams0.duplicate();
      assertNotSame(configParams0, configParams1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      String string0 = configParams0.getParameter("6^)]");
      assertNull(string0);
  }
}
