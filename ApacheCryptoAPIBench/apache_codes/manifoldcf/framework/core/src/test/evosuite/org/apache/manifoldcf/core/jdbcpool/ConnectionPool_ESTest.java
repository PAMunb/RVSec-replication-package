/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 16:42:04 GMT 2022
 */

package org.apache.manifoldcf.core.jdbcpool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.SQLException;
import org.apache.log4j.Logger;
import org.apache.manifoldcf.core.jdbcpool.ConnectionPool;
import org.apache.manifoldcf.core.jdbcpool.WrappedConnection;
import org.apache.manifoldcf.core.system.Logging;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConnectionPool_ESTest extends ConnectionPool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("T~aYp{", "", "T~aYp{", 318, 318, true);
      SQLException sQLException0 = new SQLException("T~aYp{", "T~aYp{", 1);
      WrappedConnection wrappedConnection0 = new WrappedConnection(connectionPool0, (Connection) null, sQLException0);
      Class<Object> class0 = Object.class;
      Logger logger0 = Logger.getLogger(class0);
      Logging.db = logger0;
      connectionPool0.releaseConnection(wrappedConnection0);
      wrappedConnection0.release();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", "", "", 1122, 1089L, true);
      connectionPool0.freePointer = 3125;
      connectionPool0.activeConnections = 1;
      // Undeclared exception!
      try { 
        connectionPool0.closePool();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", "", "", 1122, 1089L, true);
      connectionPool0.activeConnections = 1;
      connectionPool0.closePool();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("Mm#Hez5['2xy_F!{7E", (String) null, (String) null, 1276, 3395L, false);
      // Undeclared exception!
      try { 
        connectionPool0.releaseConnection((WrappedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", "Found a possibly leaked db connection", "k<E=1qNgZ+/R20wB", 259, 0L, true);
      WrappedConnection wrappedConnection0 = new WrappedConnection(connectionPool0, (Connection) null);
      // Undeclared exception!
      try { 
        connectionPool0.releaseConnection(wrappedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool((String) null, (String) null, (String) null, 0, 0, false);
      SQLException sQLException0 = new SQLException("", "", 1);
      WrappedConnection wrappedConnection0 = new WrappedConnection(connectionPool0, (Connection) null, sQLException0);
      // Undeclared exception!
      try { 
        connectionPool0.releaseConnection(wrappedConnection0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("k<E=1qNgZ+/R20wB", (String) null, "", 0, 4294967296L, false);
      // Undeclared exception!
      try { 
        connectionPool0.release((Connection) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConnectionPool connectionPool0 = null;
      try {
        connectionPool0 = new ConnectionPool("~C/3x?|M", "Out of db connections, list of outstanding ones follows.", "Out of db connections, list of outstanding ones follows.", (-1), (-1), false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool((String) null, "", "", 1314, 1314, true);
      connectionPool0.freePointer = 1314;
      // Undeclared exception!
      try { 
        connectionPool0.cleanupExpiredConnections(1314);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("KH+lqP;'q[4I", "", "", 0, 0L, true);
      connectionPool0.cleanupExpiredConnections((-964L));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("KH+lqP;'q[4I", "KH+lqP;'q[4I", "KH+lqP;'q[4I", 0, 1428L, true);
      connectionPool0.flushPool();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("Mm#Hez5['2xy_F!{7E", (String) null, (String) null, 1276, 1276, false);
      try { 
        connectionPool0.getConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // No suitable driver found for Mm#Hez5['2xy_F!{7E
         //
         verifyException("java.sql.DriverManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("@$Jp~}w\"", "7OSZLf", "@$Jp~}w\"", 4605, 4605, false);
      try { 
        connectionPool0.getConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // No suitable driver found for @$Jp~}w\"
         //
         verifyException("java.sql.DriverManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("T~aYp{", "", "T~aYp{", 318, 318, true);
      SQLException sQLException0 = new SQLException("T~aYp{", "T~aYp{", 1);
      WrappedConnection wrappedConnection0 = new WrappedConnection(connectionPool0, (Connection) null, sQLException0);
      Class<Object> class0 = Object.class;
      Logger logger0 = Logger.getLogger(class0);
      Logging.db = logger0;
      connectionPool0.releaseConnection(wrappedConnection0);
      // Undeclared exception!
      try { 
        connectionPool0.flushPool();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("KH+lqP;'q[4I", "", "", 0, 0L, true);
      // Undeclared exception!
      try { 
        connectionPool0.getConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }
}
