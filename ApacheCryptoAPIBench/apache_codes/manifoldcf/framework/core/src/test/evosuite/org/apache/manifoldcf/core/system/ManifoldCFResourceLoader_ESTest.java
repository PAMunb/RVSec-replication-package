/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 16:43:23 GMT 2022
 */

package org.apache.manifoldcf.core.system;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileFilter;
import java.util.ArrayList;
import org.apache.commons.io.filefilter.CanReadFileFilter;
import org.apache.commons.io.filefilter.TrueFileFilter;
import org.apache.manifoldcf.core.system.ManifoldCFResourceLoader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ManifoldCFResourceLoader_ESTest extends ManifoldCFResourceLoader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      File file0 = MockFile.createTempFile("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $");
      assertEquals("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $0@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", file0.getName());
      assertEquals(0L, file0.length());
      assertEquals(0L, file0.getFreeSpace());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.exists());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals("/tmp/@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $0@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", file0.toString());
      assertTrue(file0.canRead());
      assertTrue(file0.isFile());
      assertEquals("/tmp", file0.getParent());
      assertEquals(0L, file0.getUsableSpace());
      assertTrue(file0.canWrite());
      assertFalse(file0.isHidden());
      assertTrue(file0.canExecute());
      assertTrue(file0.isAbsolute());
      assertFalse(file0.isDirectory());
      assertNotNull(file0);
      
      boolean boolean0 = file0.createNewFile();
      assertEquals("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $0@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", file0.getName());
      assertEquals(0L, file0.length());
      assertEquals(0L, file0.getFreeSpace());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.exists());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals("/tmp/@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $0@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", file0.toString());
      assertTrue(file0.canRead());
      assertTrue(file0.isFile());
      assertEquals("/tmp", file0.getParent());
      assertEquals(0L, file0.getUsableSpace());
      assertTrue(file0.canWrite());
      assertFalse(file0.isHidden());
      assertTrue(file0.canExecute());
      assertTrue(file0.isAbsolute());
      assertFalse(file0.isDirectory());
      assertTrue(boolean0);
      
      manifoldCFResourceLoader0.addToClassPath(file0);
      assertEquals("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $0@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", file0.getName());
      assertEquals(0L, file0.length());
      assertEquals(0L, file0.getFreeSpace());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.exists());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals("/tmp/@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $0@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", file0.toString());
      assertTrue(file0.canRead());
      assertTrue(file0.isFile());
      assertEquals("/tmp", file0.getParent());
      assertEquals(0L, file0.getUsableSpace());
      assertTrue(file0.canWrite());
      assertFalse(file0.isHidden());
      assertTrue(file0.canExecute());
      assertTrue(file0.isAbsolute());
      assertFalse(file0.isDirectory());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      MockFile mockFile0 = new MockFile("");
      assertNotNull(mockFile0);
      
      TrueFileFilter trueFileFilter0 = (TrueFileFilter)TrueFileFilter.TRUE;
      assertNotNull(trueFileFilter0);
      
      manifoldCFResourceLoader0.addToClassPath((File) mockFile0, (FileFilter) trueFileFilter0);
      assertFalse(mockFile0.isHidden());
      assertEquals(0L, mockFile0.getUsableSpace());
      assertFalse(mockFile0.isFile());
      assertTrue(mockFile0.canExecute());
      assertEquals(0L, mockFile0.getTotalSpace());
      assertEquals(1392409281320L, mockFile0.lastModified());
      assertTrue(mockFile0.canRead());
      assertTrue(mockFile0.exists());
      assertEquals(0L, mockFile0.length());
      assertNull(mockFile0.getParent());
      assertEquals("", mockFile0.getName());
      assertFalse(mockFile0.isAbsolute());
      assertTrue(mockFile0.isDirectory());
      assertEquals("", mockFile0.toString());
      assertEquals(0L, mockFile0.getFreeSpace());
      assertTrue(mockFile0.canWrite());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      File[] fileArray0 = new File[0];
      FileFilter[] fileFilterArray0 = new FileFilter[1];
      manifoldCFResourceLoader0.addDirsToClassPath(fileArray0, fileFilterArray0);
      assertEquals(0, fileArray0.length);
      assertEquals(1, fileFilterArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader((ClassLoader) null);
      assertNotNull(manifoldCFResourceLoader0);
      
      ClassLoader classLoader0 = manifoldCFResourceLoader0.getClassLoader();
      assertNull(classLoader0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      Class class0 = manifoldCFResourceLoader0.findClass("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader$1");
      assertFalse(class0.isInterface());
      assertFalse(class0.isArray());
      assertFalse(class0.isPrimitive());
      assertEquals("class org.apache.manifoldcf.core.system.ManifoldCFResourceLoader$1", class0.toString());
      assertEquals(0, class0.getModifiers());
      assertFalse(class0.isAnnotation());
      assertFalse(class0.isEnum());
      assertFalse(class0.isSynthetic());
      assertNotNull(class0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      Class class0 = manifoldCFResourceLoader0.findClass("com.google.common.base.Predicates$ObjectPredicate");
      assertEquals(17416, class0.getModifiers());
      assertFalse(class0.isSynthetic());
      assertTrue(class0.isEnum());
      assertFalse(class0.isAnnotation());
      assertEquals("class com.google.common.base.Predicates$ObjectPredicate", class0.toString());
      assertFalse(class0.isInterface());
      assertFalse(class0.isArray());
      assertFalse(class0.isPrimitive());
      assertNotNull(class0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader((ClassLoader) null);
      assertNotNull(manifoldCFResourceLoader0);
      
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.setClassPath((ArrayList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add((Object) manifoldCFResourceLoader0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(boolean0);
      
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.setClassPath(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.manifoldcf.core.system.ManifoldCFResourceLoader cannot be cast to java.io.File
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      manifoldCFResourceLoader0.currentClasspath = null;
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.getClassLoader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      manifoldCFResourceLoader0.currentClasspath = arrayList0;
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(manifoldCFResourceLoader0.currentClasspath.isEmpty());
      assertEquals(0, manifoldCFResourceLoader0.currentClasspath.size());
      
      boolean boolean0 = arrayList0.add((Object) "' does not exist or is not readable");
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains("' does not exist or is not readable"));
      
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.getClassLoader();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.io.File
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.findClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      manifoldCFResourceLoader0.currentClasspath = null;
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.clearClassPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.addToClassPath((File) null, (FileFilter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.addToClassPath((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      File[] fileArray0 = new File[1];
      MockFile mockFile0 = new MockFile("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $");
      assertNotNull(mockFile0);
      
      fileArray0[0] = (File) mockFile0;
      try { 
        manifoldCFResourceLoader0.addDirsToClassPath(fileArray0, (FileFilter[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Supposed directory '@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $' is either not a directory, or is unreadable.
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      assertNotNull(classLoader0);
      
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      assertNotNull(manifoldCFResourceLoader0);
      
      File[] fileArray0 = new File[1];
      FileFilter[] fileFilterArray0 = new FileFilter[0];
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.addDirsToClassPath(fileArray0, fileFilterArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader((ClassLoader) null);
      ArrayList<File> arrayList0 = new ArrayList<File>();
      MockFile mockFile0 = new MockFile("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $");
      File file0 = MockFile.createTempFile("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", (File) mockFile0);
      arrayList0.add(file0);
      try { 
        manifoldCFResourceLoader0.setClassPath(arrayList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Supposed directory '/home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/manifoldcf/framework/core/@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $/@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $0@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $' is either not a directory, or is unreadable.
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      MockFile mockFile0 = new MockFile("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $");
      CanReadFileFilter canReadFileFilter0 = (CanReadFileFilter)CanReadFileFilter.CAN_READ;
      try { 
        manifoldCFResourceLoader0.addToClassPath((File) mockFile0, (FileFilter) canReadFileFilter0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Supposed directory '@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $' is either not a directory, or is unreadable.
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      File[] fileArray0 = new File[1];
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.addDirsToClassPath(fileArray0, (FileFilter[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      File file0 = MockFile.createTempFile("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $");
      manifoldCFResourceLoader0.addToClassPath(file0);
      ClassLoader classLoader1 = manifoldCFResourceLoader0.getClassLoader();
      assertFalse(classLoader1.equals((Object)classLoader0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      manifoldCFResourceLoader0.getClassLoader();
      ClassLoader classLoader1 = manifoldCFResourceLoader0.getClassLoader();
      assertSame(classLoader1, classLoader0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      MockFile mockFile0 = new MockFile("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $");
      try { 
        manifoldCFResourceLoader0.addToClassPath((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Path '/home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/manifoldcf/framework/core/@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $/@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $' does not exist or is not readable
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      manifoldCFResourceLoader0.clearClassPath();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      File file0 = MockFile.createTempFile("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $");
      manifoldCFResourceLoader0.addToClassPath(file0);
      manifoldCFResourceLoader0.clearClassPath();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      File file0 = MockFile.createTempFile("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $");
      manifoldCFResourceLoader0.addToClassPath(file0);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      manifoldCFResourceLoader0.setClassPath(arrayList0);
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      ArrayList<File> arrayList0 = new ArrayList<File>();
      MockFile mockFile0 = new MockFile("");
      arrayList0.add((File) mockFile0);
      manifoldCFResourceLoader0.setClassPath(arrayList0);
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      try { 
        manifoldCFResourceLoader0.findClass("");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }
}
