/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 18 12:24:44 GMT 2022
 */

package org.apache.manifoldcf.core.cachemanager;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.chrono.JapaneseDate;
import java.time.temporal.ChronoField;
import java.util.Iterator;
import java.util.Vector;
import org.apache.manifoldcf.core.cachemanager.GeneralCache;
import org.apache.manifoldcf.core.interfaces.StringSet;
import org.apache.manifoldcf.core.interfaces.StringSetBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeneralCache_ESTest extends GeneralCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      JapaneseDate japaneseDate0 = MockJapaneseDate.now();
      ChronoField chronoField0 = ChronoField.CLOCK_HOUR_OF_DAY;
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(japaneseDate0, chronoField0, (StringSet) null, (-4743L));
      generalCache0.expirationTree.addEntry(generalCache_ObjectRecord0);
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.expirationTree.root;
      generalCache0.expirationTree.setPointer(generalCache_ExpirationTreeNode0, false, generalCache_ExpirationTreeNode0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord1 = generalCache0.expirationTree.getOldestEntry();
      assertEquals((-4743L), generalCache_ObjectRecord1.getCreationTime());
      assertNotNull(generalCache_ObjectRecord1);
      assertEquals((-1L), generalCache_ObjectRecord1.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectRecordTable generalCache_ObjectRecordTable0 = generalCache0.hashtable;
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache_ObjectRecordTable0.lookup(generalCache0);
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.new ExpirationTreeNode(generalCache_ObjectRecord0);
      generalCache0.expirationTree.setPointer(generalCache_ExpirationTreeNode0, true, generalCache_ExpirationTreeNode0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.new ExpirationTreeNode((GeneralCache.ObjectRecord) null);
      // Undeclared exception!
      try { 
        generalCache0.expirationTree.addTreeToBranch((GeneralCache.ExpirationTreeNode) null, false, generalCache_ExpirationTreeNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.cachemanager.GeneralCache$ExpirationTreeNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      generalCache_ObjectClassTable0.addEntry(generalCache_ObjectRecord0);
      Integer integer0 = new Integer(1);
      generalCache_ObjectClassTable0.addEntry(generalCache_ObjectRecord0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord1 = generalCache0.new ObjectRecord((Object) null, integer0, stringSet0, 418L);
      generalCache_ObjectClassTable0.removeEntry(generalCache_ObjectRecord1);
      generalCache_ObjectClassTable0.removeEntry(generalCache_ObjectRecord0);
      assertEquals(913L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      generalCache_ObjectClassTable0.addEntry(generalCache_ObjectRecord0);
      Integer integer0 = new Integer(1);
      GeneralCache.ObjectRecord generalCache_ObjectRecord1 = generalCache0.new ObjectRecord((Object) null, integer0, stringSet0, 418L);
      generalCache_ObjectClassTable0.addEntry(generalCache_ObjectRecord1);
      generalCache_ObjectClassTable0.removeEntry(generalCache_ObjectRecord0);
      assertEquals(913L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      JapaneseDate japaneseDate0 = MockJapaneseDate.now();
      ChronoField chronoField0 = ChronoField.CLOCK_HOUR_OF_DAY;
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(japaneseDate0, chronoField0, (StringSet) null, (-4743L));
      generalCache_ObjectRecord0.setObjectExpiration(1592L);
      assertEquals(1592L, generalCache_ObjectRecord0.getObjectExpiration());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      JapaneseDate japaneseDate0 = MockJapaneseDate.now();
      ChronoField chronoField0 = ChronoField.CLOCK_HOUR_OF_DAY;
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(japaneseDate0, chronoField0, (StringSet) null, 1);
      generalCache_ObjectRecord0.setSameExpirationPrev(generalCache_ObjectRecord0);
      assertEquals(1L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectRecordTable generalCache_ObjectRecordTable0 = generalCache0.hashtable;
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      StringSet stringSet0 = new StringSet(stringSetBuffer0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectRecordTable0, generalCache_ObjectRecordTable0, stringSet0, (-1443L));
      generalCache_ObjectRecordTable0.remove(generalCache_ObjectRecord0);
      assertEquals((-1443L), generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getObjectExpiration());
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectRecordTable generalCache_ObjectRecordTable0 = generalCache0.hashtable;
      StringSet stringSet0 = new StringSet("@(#)$Id: GeneralCache.java 988245 2010-08-23 18:39:35Z kwright $");
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectRecordTable0, generalCache0, stringSet0, 1840L);
      generalCache_ObjectRecordTable0.add(generalCache_ObjectRecord0);
      assertEquals((-1L), generalCache_ObjectRecord0.getObjectExpiration());
      assertEquals(1840L, generalCache_ObjectRecord0.getCreationTime());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        generalCache0.setObject((Object) null, object0, (StringSet) null, (-2501L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.cachemanager.GeneralCache$InvalidationTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      // Undeclared exception!
      try { 
        generalCache0.invalidateKeys((StringSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.cachemanager.GeneralCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      Long long0 = new Long(0L);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(long0, "MG4}A&HOi(\"", (StringSet) null, 0L);
      // Undeclared exception!
      try { 
        generalCache0.deleteEntry(generalCache_ObjectRecord0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.cachemanager.GeneralCache$InvalidationTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.expirationTree.getOldestEntry();
      assertNull(generalCache_ObjectRecord0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassRecord generalCache_ObjectClassRecord0 = generalCache0.new ObjectClassRecord();
      Integer integer0 = new Integer((-1119));
      StringSet stringSet0 = new StringSet();
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(integer0, generalCache0, stringSet0, (-1119));
      generalCache_ObjectClassRecord0.addEntry(generalCache_ObjectRecord0);
      assertEquals(1, generalCache_ObjectClassRecord0.getCurrentMemberCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      Integer integer0 = new Integer(389);
      GeneralCache.ObjectClassRecord generalCache_ObjectClassRecord0 = generalCache0.new ObjectClassRecord();
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(integer0, "", (StringSet) null, 0);
      generalCache_ObjectClassRecord0.removeEntry(generalCache_ObjectRecord0);
      assertEquals((-1), generalCache_ObjectClassRecord0.getCurrentMemberCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Long long0 = new Long(0L);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(long0, "MG4}A&HOi(\"", (StringSet) null, 0L);
      generalCache_ObjectClassTable0.removeEntry(generalCache_ObjectRecord0);
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
      assertEquals(0L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getObjectExpiration());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.InvalidationTable generalCache_InvalidationTable0 = generalCache0.invalidationTable;
      generalCache_InvalidationTable0.removeObjectRecordFromKey("", (GeneralCache.ObjectRecord) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.InvalidationTable generalCache_InvalidationTable0 = generalCache0.invalidationTable;
      Iterator iterator0 = generalCache_InvalidationTable0.getObjectRecordsForKey("M&|*`zO@;");
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      StringSet stringSet0 = new StringSet("@(#)$Id: GeneralCache.java 988245 2010-08-23 18:39:35Z kwright $");
      GeneralCache.InvalidationTable generalCache_InvalidationTable0 = generalCache0.new InvalidationTable();
      generalCache_InvalidationTable0.addKeys(stringSet0, (GeneralCache.ObjectRecord) null);
      assertEquals(1, stringSet0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ExpirationTree generalCache_ExpirationTree0 = generalCache0.new ExpirationTree();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.InvalidationTable generalCache_InvalidationTable0 = generalCache0.new InvalidationTable();
      // Undeclared exception!
      try { 
        generalCache_InvalidationTable0.removeObjectRecord((GeneralCache.ObjectRecord) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.cachemanager.GeneralCache$InvalidationTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      generalCache_ObjectRecord0.setSameExpirationNext((GeneralCache.ObjectRecord) null);
      assertEquals(913L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      generalCache_ObjectRecord0.getObjectClass();
      assertEquals(913L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getObjectExpiration());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      generalCache_ObjectRecord0.getSameExpirationNext();
      assertEquals(913L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getObjectExpiration());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      StringSet stringSet0 = new StringSet("@(#)$Id: GeneralCache.java 988245 2010-08-23 18:39:35Z kwright $");
      Integer integer0 = new Integer(0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord((Object) null, integer0, stringSet0, 0);
      generalCache_ObjectRecord0.getNextLRU();
      assertEquals(0L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      StringSet stringSet0 = new StringSet("@(#)$Id: GeneralCache.java 988245 2010-08-23 18:39:35Z kwright $");
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache0, generalCache0, stringSet0, (-722L));
      generalCache_ObjectRecord0.getObjectDescription();
      assertEquals((-1L), generalCache_ObjectRecord0.getObjectExpiration());
      assertEquals((-722L), generalCache_ObjectRecord0.getCreationTime());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      StringSet stringSet0 = new StringSet((String) null);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache0, (Object) null, stringSet0, 0);
      generalCache_ObjectRecord0.setPrevLRU((GeneralCache.ObjectRecord) null);
      assertEquals((-1L), generalCache_ObjectRecord0.getObjectExpiration());
      assertEquals(0L, generalCache_ObjectRecord0.getCreationTime());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      generalCache_ObjectRecord0.setSameExpirationPrev((GeneralCache.ObjectRecord) null);
      assertEquals(913L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      ChronoField chronoField0 = ChronoField.MONTH_OF_YEAR;
      StringSet stringSet0 = new StringSet();
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(chronoField0, "@(#)$Id: GeneralCache.java 988245 2010-08-23 18:39:35Z kwright $", stringSet0, 410L);
      generalCache_ObjectRecord0.getPrevLRU();
      assertEquals(410L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectRecordTable generalCache_ObjectRecordTable0 = generalCache0.hashtable;
      StringSet stringSet0 = new StringSet("@(#)$Id: GeneralCache.java 988245 2010-08-23 18:39:35Z kwright $");
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectRecordTable0, generalCache0, stringSet0, 1840L);
      generalCache_ObjectRecord0.setNextLRU((GeneralCache.ObjectRecord) null);
      assertEquals(1840L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.new ExpirationTreeNode((GeneralCache.ObjectRecord) null);
      // Undeclared exception!
      try { 
        generalCache_ExpirationTreeNode0.getExpirationTime();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.cachemanager.GeneralCache$ExpirationTreeNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      long long0 = generalCache_ObjectRecord0.getExpirationTime();
      assertEquals((-1L), long0);
      assertEquals(913L, generalCache_ObjectRecord0.getCreationTime());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      Object object0 = new Object();
      Integer integer0 = new Integer((-406));
      StringSetBuffer stringSetBuffer0 = new StringSetBuffer();
      StringSet stringSet0 = new StringSet(stringSetBuffer0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(object0, integer0, stringSet0, 418L);
      generalCache_ObjectRecord0.getSameExpirationPrev();
      assertEquals(418L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      JapaneseDate japaneseDate0 = MockJapaneseDate.now();
      ChronoField chronoField0 = ChronoField.CLOCK_HOUR_OF_DAY;
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(japaneseDate0, chronoField0, (StringSet) null, (-4743L));
      generalCache_ObjectRecord0.getKeys();
      assertEquals((-4743L), generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getObjectExpiration());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.InvalidationTable generalCache_InvalidationTable0 = generalCache0.invalidationTable;
      generalCache_InvalidationTable0.removeKey("M&|*`zO@;");
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.new ExpirationTreeNode((GeneralCache.ObjectRecord) null);
      generalCache_ExpirationTreeNode0.setGreater(generalCache0.expirationTree.root);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectRecordTable generalCache_ObjectRecordTable0 = generalCache0.new ObjectRecordTable();
      // Undeclared exception!
      try { 
        generalCache_ObjectRecordTable0.remove((GeneralCache.ObjectRecord) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.cachemanager.GeneralCache$ObjectRecordTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.new ExpirationTreeNode((GeneralCache.ObjectRecord) null);
      generalCache0.expirationTree.setPointer(generalCache_ExpirationTreeNode0, true, (GeneralCache.ExpirationTreeNode) null);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      generalCache0.expirationTree.addTreeToBranch((GeneralCache.ExpirationTreeNode) null, false, (GeneralCache.ExpirationTreeNode) null);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      StringSet stringSet0 = new StringSet("@(#)$Id: GeneralCache.java 988245 2010-08-23 18:39:35Z kwright $");
      Integer integer0 = new Integer((-2005));
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(integer0, generalCache0, stringSet0, 0);
      generalCache0.expirationTree.removeEntry(generalCache_ObjectRecord0);
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
      assertEquals(0L, generalCache_ObjectRecord0.getCreationTime());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache_ObjectClassTable0.getOldestEntry("@(#)$Id: GeneralCache.java 988245 2010-08-23 18:39:35Z kwright $");
      assertNull(generalCache_ObjectRecord0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.objectClassTable;
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord((Object) null, (Object) null, stringSet0, 913L);
      generalCache_ObjectRecord0.objectClass = "@(#)$Id: StringSet.java 988245 2010-08-23 18:39:35Z kwright $";
      generalCache_ObjectClassTable0.addEntry(generalCache_ObjectRecord0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord1 = generalCache_ObjectClassTable0.getOldestEntry("@(#)$Id: StringSet.java 988245 2010-08-23 18:39:35Z kwright $");
      assertEquals(913L, generalCache_ObjectRecord1.getCreationTime());
      assertNotNull(generalCache_ObjectRecord1);
      assertEquals((-1L), generalCache_ObjectRecord1.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      int int0 = generalCache_ObjectClassTable0.getCurrentMemberCount("yb\"ohjJI=~;@D");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      StringSet stringSet0 = new StringSet("@(#)$Id: GeneralCache.java 988245 2010-08-23 18:39:35Z kwright $");
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      generalCache0.deleteEntry(generalCache_ObjectRecord0);
      assertEquals(913L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      boolean boolean0 = generalCache_ObjectRecord0.equals((Object) null);
      assertEquals(913L, generalCache_ObjectRecord0.getCreationTime());
      assertFalse(boolean0);
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      generalCache_ObjectRecord0.setObjectClass("Qt");
      generalCache0.deleteEntry(generalCache_ObjectRecord0);
      assertEquals(913L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getExpirationTime());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      generalCache0.expireRecords((-1L));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      Integer integer0 = new Integer((-2005));
      generalCache0.setObjectClass(integer0, "@(#)$Id: StringSetBuffer.java 988245 2010-08-23 18:39:35Z kwright $", (-2005));
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      ChronoField chronoField0 = ChronoField.NANO_OF_DAY;
      generalCache0.setObjectExpiration(chronoField0, 0L);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      generalCache0.deleteObject((Object) null);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      long long0 = generalCache0.getObjectExpirationTime((Object) null);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      Integer integer0 = Integer.valueOf(1346);
      StringSet stringSet0 = generalCache0.getObjectInvalidationKeys(integer0);
      assertNull(stringSet0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      Integer integer0 = new Integer((-2005));
      long long0 = generalCache0.getObjectCreationTime(integer0);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      Object object0 = generalCache0.lookup("@(#)$Id: GeneralCache.java 988245 2010-08-23 18:39:35Z kwright $");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectRecordTable generalCache_ObjectRecordTable0 = generalCache0.hashtable;
      generalCache_ObjectRecordTable0.remove((Object) null);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      StringSet stringSet0 = new StringSet("@(#)$Id: GeneralCache.java 988245 2010-08-23 18:39:35Z kwright $");
      generalCache0.invalidateKeys(stringSet0);
      assertEquals(1, stringSet0.size());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      long long0 = generalCache_ObjectRecord0.getObjectExpiration();
      assertEquals(913L, generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      JapaneseDate japaneseDate0 = MockJapaneseDate.now();
      ChronoField chronoField0 = ChronoField.CLOCK_HOUR_OF_DAY;
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(japaneseDate0, chronoField0, (StringSet) null, (-4743L));
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.new ExpirationTreeNode((GeneralCache.ObjectRecord) null);
      boolean boolean0 = generalCache_ExpirationTreeNode0.removeObjectRecord(generalCache_ObjectRecord0);
      assertTrue(boolean0);
      assertEquals((-4743L), generalCache_ObjectRecord0.getCreationTime());
      assertEquals((-1L), generalCache_ObjectRecord0.getObjectExpiration());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassRecord generalCache_ObjectClassRecord0 = generalCache0.new ObjectClassRecord();
      Object object0 = new Object();
      StringSet stringSet0 = new StringSet("@(#)$Id: GeneralCache.java 988245 2010-08-23 18:39:35Z kwright $");
      generalCache0.setObject(generalCache_ObjectClassRecord0, object0, stringSet0, 194L);
      generalCache0.setObject(object0, generalCache_ObjectClassRecord0, stringSet0, 2256L);
      assertEquals(0, generalCache_ObjectClassRecord0.getCurrentMemberCount());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      long long0 = generalCache_ObjectRecord0.getCreationTime();
      assertEquals(913L, long0);
      assertEquals((-1L), generalCache_ObjectRecord0.getObjectExpiration());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassTable generalCache_ObjectClassTable0 = generalCache0.new ObjectClassTable();
      Vector<Object> vector0 = new Vector<Object>();
      StringSet stringSet0 = new StringSet(vector0);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(generalCache_ObjectClassTable0, (Object) null, stringSet0, 913L);
      Object object0 = generalCache_ObjectRecord0.getObject();
      assertNull(object0);
      assertEquals((-1L), generalCache_ObjectRecord0.getObjectExpiration());
      assertEquals(913L, generalCache_ObjectRecord0.getCreationTime());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.new ExpirationTreeNode((GeneralCache.ObjectRecord) null);
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache_ExpirationTreeNode0.getOldest();
      assertNull(generalCache_ObjectRecord0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.new ExpirationTreeNode((GeneralCache.ObjectRecord) null);
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode1 = generalCache_ExpirationTreeNode0.getGreater();
      assertNull(generalCache_ExpirationTreeNode1);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectRecordTable generalCache_ObjectRecordTable0 = generalCache0.hashtable;
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache_ObjectRecordTable0.lookup(generalCache0);
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.new ExpirationTreeNode(generalCache_ObjectRecord0);
      generalCache0.expirationTree.setPointer(generalCache_ExpirationTreeNode0, false, generalCache_ExpirationTreeNode0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.new ExpirationTreeNode((GeneralCache.ObjectRecord) null);
      generalCache_ExpirationTreeNode0.setLesser((GeneralCache.ExpirationTreeNode) null);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.new ExpirationTreeNode((GeneralCache.ObjectRecord) null);
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode1 = generalCache_ExpirationTreeNode0.getLesser();
      assertNull(generalCache_ExpirationTreeNode1);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      JapaneseDate japaneseDate0 = MockJapaneseDate.now();
      ChronoField chronoField0 = ChronoField.CLOCK_HOUR_OF_DAY;
      GeneralCache.ObjectRecord generalCache_ObjectRecord0 = generalCache0.new ObjectRecord(japaneseDate0, chronoField0, (StringSet) null, (-4743L));
      generalCache0.expirationTree.addEntry(generalCache_ObjectRecord0);
      GeneralCache.ExpirationTreeNode generalCache_ExpirationTreeNode0 = generalCache0.expirationTree.root;
      assertNotNull(generalCache_ExpirationTreeNode0);
      
      generalCache_ExpirationTreeNode0.addObjectRecord(generalCache_ObjectRecord0);
      assertEquals((-1L), generalCache_ExpirationTreeNode0.getExpirationTime());
      assertEquals((-4743L), generalCache_ObjectRecord0.getCreationTime());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassRecord generalCache_ObjectClassRecord0 = generalCache0.new ObjectClassRecord();
      generalCache_ObjectClassRecord0.getOldestEntry();
      assertEquals(0, generalCache_ObjectClassRecord0.getCurrentMemberCount());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      GeneralCache generalCache0 = new GeneralCache();
      GeneralCache.ObjectClassRecord generalCache_ObjectClassRecord0 = generalCache0.new ObjectClassRecord();
      int int0 = generalCache_ObjectClassRecord0.getCurrentMemberCount();
      assertEquals(0, int0);
  }
}
