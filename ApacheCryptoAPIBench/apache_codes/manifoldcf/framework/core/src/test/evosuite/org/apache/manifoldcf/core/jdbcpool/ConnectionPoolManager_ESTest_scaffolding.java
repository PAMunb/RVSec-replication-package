/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Apr 18 12:27:47 GMT 2022
 */

package org.apache.manifoldcf.core.jdbcpool;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class ConnectionPoolManager_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.manifoldcf.core.jdbcpool.ConnectionPoolManager"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/manifoldcf/framework/core"); 
    java.lang.System.setProperty("user.home", "/home/pedro"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "pedro"); 
    java.lang.System.setProperty("user.timezone", "America/Sao_Paulo"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ConnectionPoolManager_ESTest_scaffolding.class.getClassLoader() ,
      "org.hsqldb.types.BlobInputStream",
      "org.hsqldb.server.HsqlSocketFactory",
      "org.hsqldb.result.Result",
      "org.hsqldb.map.BaseHashMap$BaseHashIterator",
      "org.hsqldb.ColumnBase",
      "org.hsqldb.types.BlobType",
      "org.hsqldb.types.Collation",
      "org.hsqldb.types.ClobType",
      "org.hsqldb.SortAndSlice",
      "org.hsqldb.RangeGroup",
      "org.hsqldb.SessionManager",
      "org.hsqldb.result.ResultLob",
      "org.hsqldb.types.BinaryData",
      "org.hsqldb.rowio.RowOutputBinary",
      "org.hsqldb.TableBase",
      "org.hsqldb.lib.Set",
      "org.hsqldb.lib.HsqlByteArrayOutputStream",
      "org.hsqldb.types.CharacterType",
      "org.hsqldb.types.BooleanType",
      "org.hsqldb.types.BlobDataID",
      "org.hsqldb.lib.HsqlList",
      "org.apache.manifoldcf.core.interfaces.ManifoldCFException",
      "org.hsqldb.types.ClobDataID",
      "org.hsqldb.lib.ReaderInputStream",
      "org.hsqldb.rights.User",
      "org.hsqldb.types.NullType",
      "org.hsqldb.Row",
      "org.hsqldb.lib.IntKeyHashMap",
      "org.hsqldb.persist.HsqlProperties",
      "org.hsqldb.rowio.RowOutputBase",
      "org.hsqldb.navigator.RangeIterator",
      "org.hsqldb.navigator.RowIterator",
      "org.hsqldb.types.IntervalMonthData",
      "org.hsqldb.types.OtherType",
      "org.hsqldb.Table",
      "org.hsqldb.lib.Collection",
      "org.hsqldb.types.TimestampData",
      "org.hsqldb.Schema",
      "org.hsqldb.navigator.RowSetNavigator",
      "org.hsqldb.SessionInterface",
      "org.hsqldb.StatementResultUpdate",
      "org.hsqldb.HsqlDateTime",
      "org.hsqldb.resources.ResourceBundleHandler",
      "org.hsqldb.lib.StringUtil",
      "org.hsqldb.rights.GranteeManager",
      "org.hsqldb.map.ValuePoolHashMap",
      "org.hsqldb.result.ResultMetaData",
      "org.hsqldb.SchemaObjectSet",
      "org.hsqldb.map.BitMap",
      "org.hsqldb.types.DateTimeType",
      "org.hsqldb.ExpressionColumn",
      "org.hsqldb.rights.Right",
      "org.hsqldb.error.Error",
      "org.hsqldb.jdbc.JDBCConnection$1",
      "org.hsqldb.Routine",
      "org.hsqldb.lib.LongLookup",
      "org.hsqldb.persist.CachedObject",
      "org.hsqldb.types.Charset",
      "org.hsqldb.types.ArrayType",
      "org.hsqldb.types.ClobInputStream",
      "org.hsqldb.types.NumberType",
      "org.hsqldb.jdbc.JDBCConnection",
      "org.hsqldb.HsqlNameManager$HsqlName",
      "org.hsqldb.navigator.RowSetNavigatorClient",
      "org.hsqldb.QueryExpression",
      "org.apache.manifoldcf.core.jdbcpool.ConnectionPool",
      "org.hsqldb.Statement",
      "org.hsqldb.lib.OrderedHashSet",
      "org.hsqldb.types.BlobData",
      "org.hsqldb.lib.IntValueHashMap",
      "org.hsqldb.HsqlNameManager",
      "org.hsqldb.types.ClobData",
      "org.hsqldb.lib.HashMap",
      "org.hsqldb.types.BinaryType",
      "org.hsqldb.lib.HashSet",
      "org.hsqldb.rowio.RowInputBinary",
      "org.hsqldb.lib.HsqlByteArrayInputStream",
      "org.hsqldb.lib.Iterator",
      "org.apache.manifoldcf.core.jdbcpool.ConnectionPoolManager$ConnectionCloserThread",
      "org.hsqldb.types.IntervalSecondData",
      "org.hsqldb.StatementSession",
      "org.hsqldb.rights.UserManager",
      "org.hsqldb.rowio.RowOutputInterface",
      "org.hsqldb.types.Type",
      "org.hsqldb.types.LobData",
      "org.hsqldb.types.DTIType",
      "org.hsqldb.lib.FileAccess",
      "org.hsqldb.lib.HsqlArrayList",
      "org.hsqldb.HsqlNameManager$SimpleName",
      "org.hsqldb.map.HashIndex",
      "org.hsqldb.persist.PersistentStore",
      "org.hsqldb.types.JavaObjectData",
      "org.hsqldb.SqlInvariants",
      "org.hsqldb.HsqlException",
      "org.hsqldb.rowio.RowInputInterface",
      "org.hsqldb.QuerySpecification",
      "org.hsqldb.types.Type$TypedComparator",
      "org.hsqldb.Database$TimeoutRunner",
      "org.hsqldb.ExpressionOp",
      "org.hsqldb.persist.HsqlDatabaseProperties",
      "org.hsqldb.lib.MultiValueHashMap",
      "org.hsqldb.lib.OrderedIntHashSet",
      "org.hsqldb.lib.BaseList",
      "org.hsqldb.Scanner",
      "org.hsqldb.Expression",
      "org.hsqldb.server.HsqlSocketFactorySecure",
      "org.hsqldb.types.TimeData",
      "org.hsqldb.Token",
      "org.hsqldb.types.BitType",
      "org.hsqldb.StatementCompound",
      "org.hsqldb.StatementDML",
      "org.hsqldb.map.BaseHashMap",
      "org.hsqldb.types.IntervalType",
      "org.hsqldb.lib.HashMappedList",
      "org.hsqldb.SchemaObject",
      "org.hsqldb.rowio.RowInputBase",
      "org.apache.manifoldcf.core.jdbcpool.ConnectionPoolManager",
      "org.hsqldb.RowAction",
      "org.hsqldb.TransactionManager",
      "org.hsqldb.ClientConnection",
      "org.hsqldb.lib.HashMap$Values",
      "org.hsqldb.rights.Grantee",
      "org.hsqldb.map.ValuePool",
      "org.hsqldb.lib.ObjectComparator",
      "org.hsqldb.lib.DataOutputStream",
      "org.hsqldb.lib.IntKeyIntValueHashMap",
      "org.hsqldb.Database",
      "org.hsqldb.RowActionBase",
      "org.apache.manifoldcf.core.jdbcpool.WrappedConnection",
      "org.hsqldb.HsqlNameManager$1",
      "org.hsqldb.index.Index",
      "org.hsqldb.Session",
      "org.hsqldb.StatementDMQL"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ConnectionPoolManager_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.manifoldcf.core.jdbcpool.ConnectionPoolManager",
      "org.apache.manifoldcf.core.jdbcpool.ConnectionPoolManager$ConnectionCloserThread",
      "org.apache.manifoldcf.core.jdbcpool.ConnectionPool",
      "org.hsqldb.Schema",
      "org.hsqldb.ClientConnection",
      "org.hsqldb.lib.HsqlByteArrayOutputStream",
      "org.hsqldb.rowio.RowOutputBase",
      "org.hsqldb.rowio.RowOutputBinary",
      "org.hsqldb.lib.HsqlByteArrayInputStream",
      "org.hsqldb.rowio.RowInputBase",
      "org.hsqldb.rowio.RowInputBinary",
      "org.hsqldb.HsqlNameManager$SimpleName",
      "org.hsqldb.HsqlNameManager$HsqlName",
      "org.hsqldb.HsqlNameManager",
      "org.hsqldb.SqlInvariants",
      "org.hsqldb.types.Charset",
      "org.hsqldb.map.BaseHashMap",
      "org.hsqldb.lib.HashMap",
      "org.hsqldb.map.HashIndex",
      "org.hsqldb.lib.HashMap$Values",
      "org.hsqldb.map.BaseHashMap$BaseHashIterator",
      "org.hsqldb.types.Collation",
      "org.hsqldb.result.ResultMetaData",
      "org.hsqldb.ColumnBase",
      "org.hsqldb.types.NullType",
      "org.hsqldb.types.CharacterType",
      "org.hsqldb.types.ClobType",
      "org.hsqldb.types.BinaryType",
      "org.hsqldb.types.BitType",
      "org.hsqldb.types.BlobType",
      "org.hsqldb.types.OtherType",
      "org.hsqldb.types.BooleanType",
      "org.hsqldb.types.NumberType",
      "org.hsqldb.lib.IntKeyIntValueHashMap",
      "org.hsqldb.types.DTIType",
      "org.hsqldb.HsqlDateTime",
      "org.hsqldb.types.TimestampData",
      "org.hsqldb.types.DateTimeType",
      "org.hsqldb.types.IntervalType",
      "org.hsqldb.types.ArrayType",
      "org.hsqldb.lib.IntValueHashMap",
      "org.hsqldb.lib.IntKeyHashMap",
      "org.hsqldb.types.Type",
      "org.hsqldb.navigator.RowSetNavigator",
      "org.hsqldb.navigator.RowSetNavigatorClient",
      "org.hsqldb.result.Result",
      "org.hsqldb.server.HsqlSocketFactory",
      "org.hsqldb.server.HsqlSocketFactorySecure",
      "org.hsqldb.lib.BaseList",
      "org.hsqldb.lib.HsqlArrayList",
      "org.hsqldb.resources.ResourceBundleHandler",
      "org.hsqldb.error.Error",
      "org.hsqldb.lib.StringUtil",
      "org.hsqldb.HsqlException",
      "org.apache.manifoldcf.core.jdbcpool.WrappedConnection"
    );
  }
}
