/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:59:32 GMT 2022
 */

package org.apache.manifoldcf.core.database;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import org.apache.manifoldcf.core.database.ConnectionFactory;
import org.apache.manifoldcf.core.jdbcpool.ConnectionPool;
import org.apache.manifoldcf.core.jdbcpool.WrappedConnection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hsqldb.jdbc.JDBCPool;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConnectionFactory_ESTest extends ConnectionFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      try { 
        ConnectionFactory.getConnection("", (String) null, "", "", (String) null, 3, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to load database driver: null
         //
         verifyException("org.apache.manifoldcf.core.database.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConnectionPool connectionPool0 = mock(ConnectionPool.class, new ViolatedAssumptionAnswer());
      doReturn((WrappedConnection) null).when(connectionPool0).getConnection();
      WrappedConnection wrappedConnection0 = ConnectionFactory.getConnectionWithRetries(connectionPool0);
      assertNull(wrappedConnection0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConnectionFactory.getConnectionWithRetries((ConnectionPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.database.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionFactory.ConnectionTracker connectionFactory_ConnectionTracker0 = new ConnectionFactory.ConnectionTracker(connection0);
      boolean boolean0 = connectionFactory_ConnectionTracker0.hasExpired(0L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = "Error getting connection: ";
      int int0 = 0;
      try { 
        ConnectionFactory.getConnection("org.hsqldb.lib.DoubleIntIndex", "org.hsqldb.lib.DoubleIntIndex", "org.apache.manifoldcf.core.database.ConnectionFactory", "Error getting connection: ", "*FwxyG_ph%", 0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal error getting connection: org.hsqldb.lib.DoubleIntIndex
         //
         verifyException("org.apache.manifoldcf.core.database.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ConnectionFactory.checkConnections((-720L));
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ConnectionFactory.releaseAll();
      ConnectionFactory.flush();
      ConnectionFactory.releaseAll();
      JDBCPool jDBCPool0 = new JDBCPool(197);
      // Undeclared exception!
      try { 
        jDBCPool0.getConnection("U", "U");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.DatabaseURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      try { 
        ConnectionFactory.getConnection("org.hsqldb.lib.DoubleIntIndex", "org.hsqldb.lib.DoubleIntIndex", "org.apache.manifoldcf.core.database.ConnectionFactory", "Error getting connection: ", "*FwxyG_ph%", 0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal error getting connection: org.hsqldb.lib.DoubleIntIndex
         //
         verifyException("org.apache.manifoldcf.core.database.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConnectionFactory.releaseConnection((WrappedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.database.ConnectionFactory", e);
      }
  }
}
