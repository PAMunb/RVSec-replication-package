/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:49:06 GMT 2022
 */

package org.apache.manifoldcf.core.database;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.manifoldcf.core.database.DBInterfaceHSQLDB;
import org.apache.manifoldcf.core.interfaces.ColumnDescription;
import org.apache.manifoldcf.core.threadcontext.ThreadContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.jdbc.JDBCBlobFile;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DBInterfaceHSQLDB_ESTest extends DBInterfaceHSQLDB_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = DBInterfaceHSQLDB.mapType("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.singleDelete((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.database.DBInterfaceHSQLDB", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.mapType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.getJDBCString(threadContext0, "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.getFullDatabasePath("#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.getDatabaseString(threadContext0, "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", true, true, "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", true);
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.appendDescription((StringBuilder) null, "@(#)$Id: ColumnDescription.java 988245 2010-08-23 18:39:35Z kwright $", columnDescription0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.database.DBInterfaceHSQLDB", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ThreadContext threadContext0 = new ThreadContext();
      DBInterfaceHSQLDB dBInterfaceHSQLDB0 = null;
      try {
        dBInterfaceHSQLDB0 = new DBInterfaceHSQLDB(threadContext0, "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ThreadContext.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCF", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileUtil fileUtil0 = FileUtil.getFileUtil();
      File file0 = fileUtil0.canonicalFile("");
      DBInterfaceHSQLDB.singleDelete(file0);
      assertFalse(file0.canExecute());
      assertFalse(file0.canWrite());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      DBInterfaceHSQLDB.singleDelete(mockFile0);
      assertEquals(0L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("/");
      DBInterfaceHSQLDB.recursiveDelete(mockFile0);
      assertEquals(0L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile("/");
      // Undeclared exception!
      try { 
        DBInterfaceHSQLDB.recursiveDelete(mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDBCBlobFile jDBCBlobFile0 = new JDBCBlobFile(false);
      File file0 = jDBCBlobFile0.getFile();
      DBInterfaceHSQLDB.recursiveDelete(file0);
      assertEquals(0L, file0.lastModified());
      assertFalse(file0.canRead());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileUtil fileUtil0 = FileUtil.getFileUtil();
      File file0 = fileUtil0.canonicalFile(",nLXnb!iWz7QL9?pB");
      DBInterfaceHSQLDB.recursiveDelete(file0);
      assertEquals("/home/pedro/projects/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/manifoldcf/framework/core/,nLXnb!iWz7QL9?pB", file0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = DBInterfaceHSQLDB.mapType("longtext");
      assertEquals("longvarchar", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("X");
      ColumnDescription columnDescription0 = new ColumnDescription("qO}G", true, true, "HX-#\"*", "CmIQJfP", true);
      DBInterfaceHSQLDB.appendDescription(stringBuilder0, "X", columnDescription0, false);
      assertEquals("XX qO}G NULL PRIMARY KEY REFERENCES HX-#\"*(CmIQJfP) ON DELETE CASCADE", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("HX-#\"*", false, false, "ebqhp|ewwul/ex(.", "qO}G", false);
      StringBuilder stringBuilder0 = new StringBuilder(".lHmog");
      DBInterfaceHSQLDB.appendDescription(stringBuilder0, "'+\"oGqH%jzK", columnDescription0, false);
      assertEquals(".lHmog'+\"oGqH%jzK HX-#\"* NOT NULL REFERENCES ebqhp|ewwul/ex(.(qO}G) ON DELETE RESTRICT", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      ColumnDescription columnDescription0 = new ColumnDescription("SsGjvOWN", true, true, (String) null, "SsGjvOWN", true);
      DBInterfaceHSQLDB.appendDescription(stringBuilder0, (String) null, columnDescription0, true);
      assertEquals("null SsGjvOWN NULL PRIMARY KEY", stringBuilder0.toString());
  }
}
