/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:56:08 GMT 2022
 */

package org.apache.manifoldcf.core.system;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileFilter;
import java.util.ArrayList;
import org.apache.commons.io.filefilter.CanReadFileFilter;
import org.apache.commons.io.filefilter.OrFileFilter;
import org.apache.commons.io.filefilter.WildcardFileFilter;
import org.apache.manifoldcf.core.system.ManifoldCFResourceLoader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ManifoldCFResourceLoader_ESTest extends ManifoldCFResourceLoader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassLoader classLoader0 = mock(ClassLoader.class, new ViolatedAssumptionAnswer());
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      File[] fileArray0 = new File[0];
      FileFilter[] fileFilterArray0 = new FileFilter[6];
      manifoldCFResourceLoader0.addDirsToClassPath(fileArray0, fileFilterArray0);
      assertEquals(6, fileFilterArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader((ClassLoader) null);
      ClassLoader classLoader0 = manifoldCFResourceLoader0.getClassLoader();
      assertNull(classLoader0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      Class class0 = manifoldCFResourceLoader0.findClass("com.google.common.collect.Maps$EntryFunction");
      assertFalse(class0.isInterface());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      Class class0 = manifoldCFResourceLoader0.findClass("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader");
      assertFalse(class0.isPrimitive());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.setClassPath(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.io.File
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      manifoldCFResourceLoader0.currentClasspath = null;
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.getClassLoader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.findClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      manifoldCFResourceLoader0.currentClasspath = null;
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.clearClassPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      WildcardFileFilter wildcardFileFilter0 = new WildcardFileFilter("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.addToClassPath((File) null, (FileFilter) wildcardFileFilter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.addToClassPath((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      File[] fileArray0 = new File[6];
      FileFilter[] fileFilterArray0 = new FileFilter[0];
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.addDirsToClassPath(fileArray0, fileFilterArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      manifoldCFResourceLoader0.getClassLoader();
      ClassLoader classLoader1 = manifoldCFResourceLoader0.getClassLoader();
      assertSame(classLoader0, classLoader1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      MockFile mockFile0 = new MockFile("", "");
      OrFileFilter orFileFilter0 = new OrFileFilter();
      manifoldCFResourceLoader0.addToClassPath((File) mockFile0, (FileFilter) orFileFilter0);
      assertEquals("", mockFile0.getName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassLoader classLoader0 = mock(ClassLoader.class, new ViolatedAssumptionAnswer());
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(file0).canRead();
      doReturn(true).when(file0).isDirectory();
      doReturn((File[]) null).when(file0).listFiles(any(java.io.FileFilter.class));
      FileFilter fileFilter0 = mock(FileFilter.class, new ViolatedAssumptionAnswer());
      manifoldCFResourceLoader0.addToClassPath(file0, fileFilter0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      File file0 = MockFile.createTempFile("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $");
      CanReadFileFilter canReadFileFilter0 = (CanReadFileFilter)CanReadFileFilter.CAN_READ;
      try { 
        manifoldCFResourceLoader0.addToClassPath(file0, (FileFilter) canReadFileFilter0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Supposed directory '/tmp/@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $0@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $' is either not a directory, or is unreadable.
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      File[] fileArray0 = new File[2];
      MockFile mockFile0 = new MockFile("@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $");
      fileArray0[0] = (File) mockFile0;
      try { 
        manifoldCFResourceLoader0.addDirsToClassPath(fileArray0, (FileFilter[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Supposed directory '@(#)$Id: ManifoldCFResourceLoader.java 988245 2010-08-23 18:39:35Z kwright $' is either not a directory, or is unreadable.
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      File[] fileArray0 = new File[2];
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.addDirsToClassPath(fileArray0, (FileFilter[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      manifoldCFResourceLoader0.getClassLoader();
      Class class0 = manifoldCFResourceLoader0.findClass("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader$1");
      assertFalse(class0.isInterface());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassLoader classLoader0 = mock(ClassLoader.class, new ViolatedAssumptionAnswer());
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(file0).canRead();
      doReturn((String) null).when(file0).toString();
      try { 
        manifoldCFResourceLoader0.addToClassPath(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Path 'null' does not exist or is not readable
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassLoader classLoader0 = mock(ClassLoader.class, new ViolatedAssumptionAnswer());
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      manifoldCFResourceLoader0.clearClassPath();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassLoader classLoader0 = mock(ClassLoader.class, new ViolatedAssumptionAnswer());
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      File[] fileArray0 = new File[2];
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(file0).canRead();
      doReturn(true).when(file0).isDirectory();
      doReturn(fileArray0).when(file0).listFiles(any(java.io.FileFilter.class));
      manifoldCFResourceLoader0.addToClassPath(file0, (FileFilter) null);
      manifoldCFResourceLoader0.clearClassPath();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassLoader classLoader0 = mock(ClassLoader.class, new ViolatedAssumptionAnswer());
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add((String) null);
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.setClassPath(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader((ClassLoader) null);
      MockFile mockFile0 = new MockFile("", "");
      manifoldCFResourceLoader0.addToClassPath((File) mockFile0, (FileFilter) null);
      // Undeclared exception!
      try { 
        manifoldCFResourceLoader0.setClassPath((ArrayList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.system.ManifoldCFResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      manifoldCFResourceLoader0.setClassPath(arrayList0);
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      MockFile mockFile0 = new MockFile("");
      File file0 = mockFile0.getAbsoluteFile();
      manifoldCFResourceLoader0.addToClassPath(file0);
      assertTrue(mockFile0.equals((Object)file0));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      MockFile mockFile0 = new MockFile("", "");
      manifoldCFResourceLoader0.addToClassPath((File) mockFile0, (FileFilter) null);
      ClassLoader classLoader1 = manifoldCFResourceLoader0.getClassLoader();
      assertFalse(classLoader1.equals((Object)classLoader0));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassLoader classLoader0 = mock(ClassLoader.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(classLoader0).loadClass(anyString());
      doReturn((String) null).when(classLoader0).toString();
      ManifoldCFResourceLoader manifoldCFResourceLoader0 = new ManifoldCFResourceLoader(classLoader0);
      try { 
        manifoldCFResourceLoader0.findClass("CharMatcher.digit()");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }
}
