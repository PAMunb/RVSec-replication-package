/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:07:20 GMT 2022
 */

package org.apache.manifoldcf.core.interfaces;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.manifoldcf.core.interfaces.ColumnDescription;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ColumnDescription_ESTest extends ColumnDescription_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription(",jUq;OFr'r(M>84ah", false, false, ",jUq;OFr'r(M>84ah", ",jUq;OFr'r(M>84ah", false);
      assertFalse(columnDescription0.getIsPrimaryKey());
      
      columnDescription0.isPrimaryKey = true;
      boolean boolean0 = columnDescription0.getIsPrimaryKey();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("", true, true, "@(#)$Id: ColumnDescription.java 988245 2010-08-23 18:39:35Z kwright $", "", false);
      assertTrue(columnDescription0.getIsPrimaryKey());
      assertFalse(columnDescription0.getReferenceCascade());
      assertEquals("@(#)$Id: ColumnDescription.java 988245 2010-08-23 18:39:35Z kwright $", columnDescription0.getReferenceTable());
      assertEquals("", columnDescription0.getTypeString());
      assertEquals("", columnDescription0.getReferenceColumn());
      assertTrue(columnDescription0.getIsNull());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription((String) null, false, false, (String) null, "%", false);
      String string0 = columnDescription0.getTypeString();
      assertFalse(columnDescription0.getIsNull());
      assertFalse(columnDescription0.getIsPrimaryKey());
      assertNull(string0);
      assertEquals("%", columnDescription0.getReferenceColumn());
      assertFalse(columnDescription0.getReferenceCascade());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("}llR!=\"Y?M?;", true, true, "}llR!=\"Y?M?;", "}llR!=\"Y?M?;", true);
      assertEquals("}llR!=\"Y?M?;", columnDescription0.getTypeString());
      
      columnDescription0.typeString = "";
      String string0 = columnDescription0.getTypeString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription((String) null, false, false, (String) null, "%", false);
      String string0 = columnDescription0.getReferenceTable();
      assertFalse(columnDescription0.getIsNull());
      assertEquals("%", columnDescription0.getReferenceColumn());
      assertNull(string0);
      assertFalse(columnDescription0.getReferenceCascade());
      assertFalse(columnDescription0.getIsPrimaryKey());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("F5Y/.!;`c^AxS5", true, false, "", "", true);
      assertEquals("", columnDescription0.getReferenceTable());
      
      columnDescription0.referenceTable = "F5Y/.!;`c^AxS5";
      String string0 = columnDescription0.getReferenceTable();
      assertEquals("F5Y/.!;`c^AxS5", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription((String) null, false, false, (String) null, "%", false);
      assertEquals("%", columnDescription0.getReferenceColumn());
      
      columnDescription0.referenceColumn = "@(#)$Id: ColumnDescription.java 988245 2010-08-23 18:39:35Z kwright $";
      columnDescription0.referenceColumn = "@(#)$Id: ColumnDescription.java 988245 2010-08-23 18:39:35Z kwright $";
      columnDescription0.referenceColumn = null;
      columnDescription0.getReferenceColumn();
      assertFalse(columnDescription0.getIsPrimaryKey());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("F5Y/.!;`c^AxS5", true, false, "", "", true);
      assertEquals("", columnDescription0.getReferenceColumn());
      
      columnDescription0.referenceColumn = "F5Y/.!;`c^AxS5";
      String string0 = columnDescription0.getReferenceColumn();
      assertEquals("F5Y/.!;`c^AxS5", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("F5Y/.!;`c^AxS5", true, false, "", "", true);
      assertTrue(columnDescription0.getReferenceCascade());
      
      columnDescription0.referenceCascade = false;
      boolean boolean0 = columnDescription0.getReferenceCascade();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("F5Y/.!;`c^AxS5", true, false, "", "", true);
      assertFalse(columnDescription0.getIsNull());
      
      columnDescription0.isNull = true;
      columnDescription0.getIsNull();
      assertTrue(columnDescription0.getReferenceCascade());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("_SVJ1 SB*}6m+:1", false, true, "_SVJ1 SB*}6m+:1", "_SVJ1 SB*}6m+:1", false);
      boolean boolean0 = columnDescription0.getIsPrimaryKey();
      assertEquals("_SVJ1 SB*}6m+:1", columnDescription0.getTypeString());
      assertEquals("_SVJ1 SB*}6m+:1", columnDescription0.getReferenceColumn());
      assertEquals("_SVJ1 SB*}6m+:1", columnDescription0.getReferenceTable());
      assertFalse(columnDescription0.getReferenceCascade());
      assertFalse(boolean0);
      assertTrue(columnDescription0.getIsNull());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("F5Y/.!;`c^AxS5", true, false, "", "", true);
      String string0 = columnDescription0.getReferenceColumn();
      assertEquals("F5Y/.!;`c^AxS5", columnDescription0.getTypeString());
      assertEquals("", columnDescription0.getReferenceTable());
      assertEquals("", string0);
      assertTrue(columnDescription0.getIsPrimaryKey());
      assertNotNull(string0);
      assertTrue(columnDescription0.getReferenceCascade());
      assertFalse(columnDescription0.getIsNull());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("F5Y/.!;`c^AxS5", true, false, "", "", true);
      boolean boolean0 = columnDescription0.getReferenceCascade();
      assertEquals("", columnDescription0.getReferenceColumn());
      assertTrue(columnDescription0.getIsPrimaryKey());
      assertEquals("", columnDescription0.getReferenceTable());
      assertEquals("F5Y/.!;`c^AxS5", columnDescription0.getTypeString());
      assertTrue(boolean0);
      assertFalse(columnDescription0.getIsNull());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("F5Y/.!;`c^AxS5", true, false, "", "", true);
      boolean boolean0 = columnDescription0.getIsNull();
      assertEquals("", columnDescription0.getReferenceColumn());
      assertTrue(columnDescription0.getReferenceCascade());
      assertEquals("", columnDescription0.getReferenceTable());
      assertTrue(columnDescription0.getIsPrimaryKey());
      assertFalse(boolean0);
      assertEquals("F5Y/.!;`c^AxS5", columnDescription0.getTypeString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("F5Y/.!;`c^AxS5", true, false, "", "", true);
      String string0 = columnDescription0.getTypeString();
      assertEquals("", columnDescription0.getReferenceTable());
      assertEquals("", columnDescription0.getReferenceColumn());
      assertTrue(columnDescription0.getReferenceCascade());
      assertFalse(columnDescription0.getIsNull());
      assertNotNull(string0);
      assertTrue(columnDescription0.getIsPrimaryKey());
      assertEquals("F5Y/.!;`c^AxS5", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ColumnDescription columnDescription0 = new ColumnDescription("F5Y/.!;`c^AxS5", true, false, "", "", true);
      String string0 = columnDescription0.getReferenceTable();
      assertEquals("F5Y/.!;`c^AxS5", columnDescription0.getTypeString());
      assertFalse(columnDescription0.getIsNull());
      assertTrue(columnDescription0.getIsPrimaryKey());
      assertEquals("", string0);
      assertNotNull(string0);
      assertTrue(columnDescription0.getReferenceCascade());
      assertEquals("", columnDescription0.getReferenceColumn());
  }
}
