/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:53:31 GMT 2022
 */

package org.apache.manifoldcf.core.lockmanager;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ResourceBundle;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.apache.log4j.Priority;
import org.apache.log4j.spi.LoggerFactory;
import org.apache.manifoldcf.core.interfaces.IServiceCleanup;
import org.apache.manifoldcf.core.interfaces.IServiceDataAcceptor;
import org.apache.manifoldcf.core.interfaces.IThreadContext;
import org.apache.manifoldcf.core.interfaces.ManifoldCFConfiguration;
import org.apache.manifoldcf.core.lockmanager.BaseLockManager;
import org.apache.manifoldcf.core.lockmanager.LocalLock;
import org.apache.manifoldcf.core.lockmanager.LocalLockPool;
import org.apache.manifoldcf.core.lockmanager.LockGate;
import org.apache.manifoldcf.core.lockmanager.LockObject;
import org.apache.manifoldcf.core.lockmanager.LockObjectFactory;
import org.apache.manifoldcf.core.lockmanager.LockPool;
import org.apache.manifoldcf.core.system.Logging;
import org.apache.manifoldcf.core.system.ManifoldCF;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockRuntimeException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseLockManager_ESTest extends BaseLockManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      byte[] byteArray0 = baseLockManager0.retrieveServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager baseLockManager3 = new BaseLockManager();
      BaseLockManager baseLockManager4 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      baseLockManager4.getSharedConfiguration();
      try { 
        baseLockManager1.updateServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service '@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $' of type '@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $' is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      String string0 = BaseLockManager.makeServiceCounterName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockObjectFactory lockObjectFactory1 = new LockObjectFactory();
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.myLocks;
      BaseLockManager.enter(long0, stringArray0, stringArray0, stringArray0, string0, localLockPool0, lockPool0);
      String string1 = "Interrupted";
      String string2 = " sequence: Write ";
      BaseLockManager.makeActiveServiceFlagName(string1, string2);
      // Undeclared exception!
      try { 
        baseLockManager1.leaveReadLock(lockObjectFactory0._rcsid);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000030
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      BaseLockManager.makeServiceCounterName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockObjectFactory lockObjectFactory1 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory1);
      baseLockManager1.readServiceCounter("");
      baseLockManager0.checkServiceActive("Ly5h\"%z", ";iAn84o+|");
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      baseLockManager0.scanServiceData("Ly5h\"%z", iServiceDataAcceptor0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level.toLevel(3985);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager.makeRegisteredServiceFlagName("nxS*Hx", "Ly5h\"%z");
      baseLockManager2.checkGlobalFlag("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-4);
      byteArray0[1] = (byte) (-96);
      byteArray0[2] = (byte)118;
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte)0;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity("", "Ly5h\"%z", byteArray0, iServiceCleanup0);
      baseLockManager1.timedWait(363);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "Ly5h\"%z";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "nxS*Hx";
      stringArray0[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[6] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[7] = "";
      stringArray0[8] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      LockPool lockPool0 = BaseLockManager.myLocks;
      BaseLockManager.leave(stringArray0, stringArray0, stringArray0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (LocalLockPool) null, lockPool0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      logger0.getChainedPriority();
      Level level0 = Level.toLevel(3985);
      Level.toLevel("", level0);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager.makeRegisteredServiceFlagName((String) null, "");
      baseLockManager0.leaveWriteLock("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      Long long0 = baseLockManager0.threadID;
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[0];
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      BaseLockManager.enterNoWait(long0, stringArray0, stringArray1, stringArray1, "+Wu#)i((6v'r[Ao_$b", localLockPool0, (LockPool) null);
      baseLockManager0.enterNonExWriteLock("CWF>4^J}K");
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity("Interrupted", "com.google.common.collect.DiscreteDomain$IntegerDomain", iServiceCleanup0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level.toLevel(3985);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager.makeRegisteredServiceFlagName((String) null, "");
      baseLockManager1.checkGlobalFlag("");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-81);
      byteArray0[1] = (byte) (-96);
      byteArray0[2] = (byte)118;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)93;
      byteArray0[5] = (byte) (-73);
      byteArray0[6] = (byte)60;
      byteArray0[7] = (byte)17;
      byteArray0[8] = (byte)125;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity("3',x\"Ah3Wq;Qnqeo0", "", byteArray0, iServiceCleanup0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3974);
      Level.toLevel("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      baseLockManager0.retrieveServiceData("", "");
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity("_SERVICECOUNTER_", "_ANON_4", iServiceCleanup0);
      baseLockManager0.enterReadCriticalSection("[d");
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.mySections;
      BaseLockManager.enterNonExWriteNoWait(long0, "_ANON_4", ".", localLockPool0, lockPool0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3985);
      Level.toLevel("xN$@i#3}tjr5v", level0);
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "xN$@i#3}tjr5v";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager.makeServiceDataName("", "_g2&]");
      BaseLockManager.makeRegisteredServiceFlagName((String) null, "xN$@i#3}tjr5v");
      baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager2.cleanupInactiveService("_g2&]", iServiceCleanup0);
      baseLockManager2.enterReadLockNoWait("_g2&]");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3985);
      Level.toLevel("", level0);
      Logging.lock = logger0;
      baseLockManager0.getSharedConfiguration();
      String[] stringArray0 = new String[0];
      baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3974);
      Level.toLevel("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      baseLockManager0.retrieveServiceData("", "");
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.enterWriteLockNoWait("_SERVICECOUNTER_");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = BaseLockManager.activePrefix;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "6L*dj(ay#carC'";
      stringArray0[1] = "_ACTIVE_";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, (String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock("CWF>4^J}K");
      baseLockManager0.enterWriteLockNoWait("'\"0Ol-E9M3k^j");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte) (-96);
      byteArray0[5] = (byte) (-73);
      byteArray0[6] = (byte) (-96);
      byteArray0[7] = (byte) (-96);
      byteArray0[8] = (byte)125;
      baseLockManager1.registerServiceBeginServiceActivity("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (String) null, byteArray0, (IServiceCleanup) null);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      logger0.isDebugEnabled();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager2.enterLocksNoWait((String[]) null, (String[]) null, (String[]) null);
      baseLockManager0.enterReadLock("Q@^rSdDu>w");
      try { 
        baseLockManager0.enterWriteLockNoWait("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager1.getSharedConfiguration();
      Long long0 = baseLockManager1.threadID;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "name";
      LocalLockPool localLockPool0 = baseLockManager1.localSections;
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      BaseLockManager.enterNoWait(long0, stringArray0, stringArray0, stringArray0, "B/#ZO", localLockPool0, lockPool0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      baseLockManager0.retrieveServiceData("", "");
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      baseLockManager0.scanServiceData("", iServiceDataAcceptor0);
      baseLockManager0.readData("7");
      BaseLockManager.makeActiveServiceFlagName("7", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      baseLockManager0.getGlobalLockPool();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = BaseLockManager.activePrefix;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String string1 = "Unknown level style: ";
      baseLockManager1.readServiceData("Unknown level style: ", "xF/a0H\"}v");
      String string2 = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      LocalLockPool localLockPool0 = null;
      Long long0 = baseLockManager0.threadID;
      String[] stringArray0 = new String[0];
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.enter(long0, stringArray0, stringArray0, stringArray0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (LocalLockPool) null, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      Long long0 = baseLockManager0.threadID;
      IServiceCleanup iServiceCleanup1 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", iServiceCleanup1);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      logger0.log((Priority) level0, (Object) "Y6*Yg;nN<", (Throwable) null);
      Logging.lock = logger0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      baseLockManager0.enterNonExWriteLockNoWait("Incorrect number of options on style. Expected at least 1, received ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      String string0 = "org.apache.manifoldcf.core.lockmanager.BaseLockManager";
      stringArray0[2] = "org.apache.manifoldcf.core.lockmanager.BaseLockManager";
      String[] stringArray1 = new String[1];
      Long long0 = baseLockManager1.threadID;
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = BaseLockManager.mySections;
      BaseLockManager.enterReadNoWait(long0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "xe)y6,`.iI9a", localLockPool0, lockPool0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = BaseLockManager.activePrefix;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "_ACTIVE_";
      stringArray0[2] = "4(+ZO$9Saa mX`:";
      stringArray0[3] = "_ACTIVE_";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[6] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[7] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager1.leaveLocks(stringArray0, (String[]) null, stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000014
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager1.enterNonExWriteLock(" sequence: Write ");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      Logging.lock = logger0;
      baseLockManager2.enterNonExWriteLockNoWait((String) null);
      baseLockManager2.enterNonExWriteLock("CWF>4^J}K");
      baseLockManager1.enterReadCriticalSection("!Z");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Long long0 = new Long((-1L));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Leaving write ";
      stringArray0[1] = "";
      stringArray0[2] = "Leaving write ";
      stringArray0[3] = "@(#)$Id:sLockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "6_9<3=DRxbJGTX_qT4";
      stringArray0[5] = "JY=Mk+n";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteLock("6_9<3=DRxbJGTX_qT4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3953);
      Level.toLevel("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0);
      Level.toLevel("#>", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      baseLockManager0.retrieveServiceData("#>", "#>");
      try { 
        baseLockManager0.enterWriteLockNoWait((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.leaveCriticalSections((String[]) null, (String[]) null, (String[]) null);
      // Undeclared exception!
      try { 
        baseLockManager0.timedWait((-283));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.timedWait(48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.enterRead(long0, "", "", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String string0 = "Suppliers.synchronizedSupplier(";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteCriticalSection("|/(hXUg^s_9v9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "The keystore fxle({}) is not found";
      baseLockManager0.readData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteLockNoWait("EdgJG+cs-i8/oW9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = ">lf3hd/ *";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      Long long0 = baseLockManager1.threadID;
      // Undeclared exception!
      try { 
        BaseLockManager.enter(long0, stringArray0, stringArray0, stringArray0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (LocalLockPool) null, (LockPool) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected exception
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      String string0 = "_g2&]";
      BaseLockManager.makeServiceDataName("", "_g2&]");
      BaseLockManager.makeRegisteredServiceFlagName((String) null, "");
      baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Long long0 = new Long((-1L));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Leaving write ";
      stringArray0[1] = "";
      stringArray0[2] = "Leaving write ";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.enterNonExWriteLock("uiX");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      logger0.log((Priority) level0, (Object) "Y6*Yg;nN<", (Throwable) null);
      Logging.lock = logger0;
      baseLockManager0.enterNonExWriteLockNoWait("Incorrect number of options on style. Expected at least 1, received ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "org.apache.manifoldcf.core.lockmanager.BaseLockManager";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "org.apache.manifoldcf.core.lockmanager.BaseLockManager";
      try { 
        baseLockManager1.enterLocksNoWait(stringArray0, stringArray1, stringArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      String[] stringArray0 = new String[4];
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = ">lf3hd/ *";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      Long long0 = baseLockManager0.threadID;
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.deleteServiceData("", "full");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "6";
      Class<Object> class0 = Object.class;
      Logger logger0 = Logger.getLogger(class0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      BaseLockManager.makeServiceCounterName(" with name ");
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.readServiceCounter((String) null);
      BaseLockManager.buildServiceListEntry("RF]~W|H", 3988);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      logger0.log((Priority) level0, (Object) "Y6*Yg;nN<", (Throwable) null);
      Logging.lock = logger0;
      baseLockManager0.enterNonExWriteLockNoWait("Incorrect number of options on style. Expected at least 1, received ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager1.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ComparableTimSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      baseLockManager0.retrieveServiceData("", "");
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      baseLockManager0.scanServiceData("", iServiceDataAcceptor0);
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockPool lockPool0 = new LockPool((LockObjectFactory) null);
      // Undeclared exception!
      try { 
        BaseLockManager.enterReadNoWait(long0, "", "_SERVICECOUNTER_", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", level0);
      logger0.getPriority();
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      baseLockManager0.retrieveServiceData("", "");
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      baseLockManager0.scanServiceData("", iServiceDataAcceptor0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.retrieveServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      Long long0 = baseLockManager2.threadID;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[6] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      String[] stringArray1 = new String[0];
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.enterNoWait(long0, stringArray0, stringArray0, stringArray1, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (LocalLockPool) null, lockPool0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected exception
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager2.registerServiceBeginServiceActivity("", "", iServiceCleanup0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      Logger.getRootLogger();
      baseLockManager1.registerServiceBeginServiceActivity("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", ">lf3d*", (IServiceCleanup) null);
      Long long0 = baseLockManager1.threadID;
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadLock("r`ABzj\"/_Vy");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000014
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "O";
      stringArray0[1] = ">jMznxg";
      stringArray0[2] = "";
      stringArray0[3] = "Unexpected EOF";
      stringArray0[3] = "uG_R3 Ql5u@/d}5";
      stringArray0[5] = "s";
      stringArray0[6] = "s";
      // Undeclared exception!
      try { 
        BaseLockManager.getSortedUniqueLocks(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ComparableTimSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.leaveRead("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "lKC#0", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      String string0 = null;
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.enterWriteNoWait(long0, (String) null, "Leaving non-ex write ", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level.toLevel(3985);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager.makeRegisteredServiceFlagName((String) null, "");
      baseLockManager1.checkGlobalFlag("");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-81);
      byteArray0[1] = (byte) (-96);
      byteArray0[2] = (byte)118;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)93;
      baseLockManager0.getSharedConfiguration();
      BaseLockManager.makeActiveServiceFlagName("@(#)$Id: ManifoldCFConfiguration.java 988245 2010-08-23 18:39:35Z kwright $", "_ANON_11");
      LocalLockPool localLockPool0 = baseLockManager1.localLocks;
      LockPool lockPool0 = BaseLockManager.myLocks;
      BaseLockManager.leaveNonExWrite((String) null, (String) null, localLockPool0, lockPool0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3985);
      Level.toLevel("", level0);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      // Undeclared exception!
      try { 
        baseLockManager1.leaveCriticalSections(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000013
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "6";
      baseLockManager0.readServiceName("fP!O4\"'FQOz'#MC[");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        baseLockManager0.timedWait(57);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      BaseLockManager.makeServiceCounterName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockObjectFactory lockObjectFactory1 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory1);
      baseLockManager1.readServiceCounter("");
      BaseLockManager.makeServiceCounterName("");
      LocalLockPool localLockPool0 = baseLockManager1.localSections;
      localLockPool0.getLocalLock("");
      // Undeclared exception!
      try { 
        BaseLockManager.enterNoWait((Long) null, stringArray0, stringArray0, stringArray0, "t>/^E-L!P@K9Ko", localLockPool0, lockPool0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected exception
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = ">lf3hd/ *";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      BaseLockManager.makeServiceCounterName("<I'%D>O\"1*,cd!)6");
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LocalLockPool localLockPool1 = baseLockManager0.localSections;
      LockPool lockPool1 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.enterNoWait((Long) null, stringArray0, stringArray0, stringArray0, ">lf3hd/ *", localLockPool1, lockPool1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected exception
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = BaseLockManager.activePrefix;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      int int0 = (-1);
      // Undeclared exception!
      try { 
        baseLockManager0.timedWait((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout value is negative
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      baseLockManager0.timedWait(698);
      baseLockManager1.getSharedConfiguration();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        baseLockManager2.timedWait((-3834));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout value is negative
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      String string0 = null;
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      String string1 = null;
      BaseLockManager.makeServiceDataName("", "_g2&]");
      BaseLockManager.makeRegisteredServiceFlagName((String) null, "");
      baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3985);
      Level.toLevel("", level0);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager.makeRegisteredServiceFlagName((String) null, "");
      baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.makeServiceCounterName("");
      baseLockManager0.checkGlobalFlag("contextName");
      String[] stringArray0 = new String[0];
      baseLockManager0.enterCriticalSections(stringArray0, stringArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logger.getLogger("", (LoggerFactory) null);
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      BaseLockManager.makeServiceCounterName("");
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      baseLockManager0.readServiceCounter((String) null);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Logger.getLogger("", (LoggerFactory) null);
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      BaseLockManager.makeServiceCounterName("");
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      baseLockManager0.readServiceCounter((String) null);
      BaseLockManager.makeServiceCounterName("|Ff*Z8A'L*");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      baseLockManager0.enterNonExWriteLock("CWF>4^J}K");
      try { 
        baseLockManager0.enterWriteLockNoWait("'\"0Ol-E9M3k^j");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLock((String) null);
      try { 
        baseLockManager0.enterWriteLockNoWait("'\"0Ol-E9M3k^j");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.retrieveServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager baseLockManager3 = new BaseLockManager();
      BaseLockManager baseLockManager4 = new BaseLockManager();
      baseLockManager4.getSharedConfiguration();
      baseLockManager1.updateServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (byte[]) null);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      logger0.log((Priority) level0, (Object) "Y6*Yg;nN<", (Throwable) null);
      Logging.lock = logger0;
      baseLockManager0.enterNonExWriteLockNoWait("Incorrect number of options on style. Expected at least 1, received ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager1.leaveNonExWriteLock("Incorrect number of options on style. Expected at least 1, received ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte) (-41);
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-94);
      byteArray0[7] = (byte)9;
      try { 
        baseLockManager1.updateServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "", byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service '' of type '@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $' is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "";
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      BaseLockManager.makeServiceCounterName("mXkLZpp'");
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      baseLockManager0.readServiceCounter("mXkLZpp'");
      Long long0 = new Long(10000);
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.enterWrite(long0, "CK", "", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level.toLevel(3985);
      Logging.lock = logger0;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager2.readServiceName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager.makeRegisteredServiceFlagName("com.google.common.collect.DiscreteDomain$IntegerDomain", (String) null);
      baseLockManager2.checkGlobalFlag((String) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte) (-52);
      byteArray0[5] = (byte)125;
      byteArray0[6] = (byte)17;
      byteArray0[7] = (byte)125;
      baseLockManager0.registerServiceBeginServiceActivity("", "", byteArray0, (IServiceCleanup) null);
      baseLockManager1.leaveWriteLock("4Oxv)[KM?<R)v");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "Interrupted";
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)3;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity("", "Interrupted", byteArray0, iServiceCleanup0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = BaseLockManager.activePrefix;
      baseLockManager0.checkGlobalFlag((String) null);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = ">lf3hd/ *";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      baseLockManager0.getSharedConfiguration();
      String[] stringArray1 = new String[5];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[1] = "property";
      stringArray1[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[4] = ">lf3hd/ *";
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray1, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "Leaving read ";
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteCriticalSection("Leaving read ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = " sequence: Write ";
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      // Undeclared exception!
      try { 
        baseLockManager0.retrieveServiceData(": ", ": ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager0.registerServiceBeginServiceActivity("Leaving read ", "Leaving read ", (IServiceCleanup) null);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = " sequence: Write ";
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager.buildServiceTypeLockName((String) null);
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        baseLockManager0.enterCriticalSections(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager1.registerServiceBeginServiceActivity("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", " ^;1v|U|Xs!OG=9i", iServiceCleanup0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = BaseLockManager.activePrefix;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager2.countActiveServices("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceCounter("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = new Long(0L);
      baseLockManager0.clearGlobalFlag("Pg,$^zJ$tUdU");
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      localLockPool0.getLocalLock("qj`jZ3.LzOU1E");
      LockPool lockPool0 = null;
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWrite(long0, "qj`jZ3.LzOU1E", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, (LockPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.makeServiceCounterName("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.leaveWrite("_SERVICECOUNTER_", "_SERVICECOUNTER_", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger.getRootLogger();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager2.enterLocks((String[]) null, (String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3985);
      Level.toLevel("", level0);
      ResourceBundle.clearCache();
      Logging.lock = logger0;
      Logger.getRootLogger();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.enterLocksNoWait((String[]) null, (String[]) null, (String[]) null);
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.registerServiceBeginServiceActivity("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", " sequence: Write ", iServiceCleanup0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      String string0 = null;
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      String string1 = null;
      BaseLockManager.makeServiceDataName("", "_g2&]");
      BaseLockManager.makeRegisteredServiceFlagName((String) null, "");
      baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)100;
      byteArray0[5] = (byte)18;
      byteArray0[6] = (byte) (-88);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.leaveLocks((String[]) null, (String[]) null, (String[]) null);
      baseLockManager0.checkServiceActive("PJ&", "");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager2.enterReadCriticalSection("");
      baseLockManager1.leaveWriteCriticalSection("");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "";
      String string1 = ".4\\C\\h6";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      localLockPool0.getLocalLock("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.leaveRead("", ".4Ch6", localLockPool0, lockPool0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000010
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Class<Object> class0 = Object.class;
      Logger logger0 = Logger.getLogger(class0);
      Logging.lock = logger0;
      baseLockManager0.leaveWriteLock("");
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      String string0 = "@>sKm,WOX:TZ?_bO";
      // Undeclared exception!
      try { 
        baseLockManager2.enterNonExWriteCriticalSection("@>sKm,WOX:TZ?_bO");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level.toLevel(3988);
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      Logger.getRootLogger();
      BaseLockManager.makeServiceCounterName("");
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockObjectFactory lockObjectFactory1 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory1);
      baseLockManager1.readServiceCounter("@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager.makeServiceCounterName("charset");
      LocalLockPool localLockPool0 = baseLockManager2.localSections;
      localLockPool0.getLocalLock("");
      String[] stringArray1 = new String[2];
      stringArray1[0] = "@(#)$Id$";
      stringArray1[1] = "@(#)$Id$";
      LocalLockPool localLockPool1 = new LocalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.enterNoWait((Long) null, stringArray0, stringArray0, stringArray1, "_SERVICECOUNTER_", localLockPool1, lockPool0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected exception
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      logger0.log((Priority) level0, (Object) "Y6*Yg;nN<", (Throwable) null);
      Logging.lock = logger0;
      baseLockManager0.enterNonExWriteLockNoWait("Incorrect number of options on style. Expected at least 1, received ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "org.apache.manifoldcf.core.lockmanager.BaseLockManager";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "org.apache.manifoldcf.core.lockmanager.BaseLockManager";
      try { 
        baseLockManager1.enterLocksNoWait(stringArray0, stringArray1, stringArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = ">lf3hd/ *";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      Level level0 = Level.FATAL;
      Level.toLevel("_SERVICE_Entering multiple _Entering multiple ", level0);
      Logger logger0 = Logger.getLogger("_SERVICE_Entering multiple _Entering multiple ");
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[1] = "Entering multiple ";
      stringArray0[2] = ">lf3hd/ *";
      stringArray0[3] = "Entering multiple ";
      stringArray0[4] = "Entering multiple ";
      stringArray0[5] = "Entering multiple ";
      stringArray0[6] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[7] = "Entering multiple ";
      String[] stringArray1 = new String[5];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[1] = "Entering multiple ";
      stringArray1[2] = "Entering multiple ";
      stringArray1[3] = ">lf3hd/ *";
      stringArray1[4] = "_SERVICE_Entering multiple _Entering multiple ";
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      baseLockManager0.enterNonExWriteLock("CWF>4^J}K");
      BaseLockManager.makeRegisteredServiceFlagName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager2.enterLocksNoWait((String[]) null, (String[]) null, (String[]) null);
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager0.cleanupInactiveService("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", iServiceCleanup0);
      baseLockManager1.enterReadLockNoWait("/mDX|k");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager.makeRegisteredServiceFlagName((String) null, "");
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      baseLockManager2.cleanupInactiveService((String) null, iServiceCleanup0);
      try { 
        baseLockManager2.enterReadLockNoWait((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[1] = "Entering multiple ";
      stringArray0[5] = "_SERVICE_Entering multiple _Entering multiple ";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteCriticalSection("_SERVICE_Entering multiple _Entering multiple ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000013
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager2.readServiceName("");
      // Undeclared exception!
      try { 
        baseLockManager2.leaveWriteCriticalSection("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000015
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BaseLockManager.getSortedUniqueLocks((String[]) null, (String[]) null, (String[]) null);
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      Object object0 = new Object();
      Object object1 = new Object();
      LockObject lockObject0 = lockObjectFactory0.newLockObject(lockPool0, "-u~oe");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LockPool lockPool1 = baseLockManager0.getGlobalLockPool();
      LockGate lockGate0 = new LockGate(object1, lockObject0, lockPool1);
      lockPool0.releaseObject(object0, lockGate0);
      // Undeclared exception!
      try { 
        BaseLockManager.clear("-u~oe", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      baseLockManager0.enterNonExWriteLock("");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      try { 
        baseLockManager2.enterReadLockNoWait((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      baseLockManager0.retrieveServiceData("", "");
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iServiceDataAcceptor0).acceptServiceData(anyString() , any(byte[].class));
      baseLockManager0.scanServiceData("", iServiceDataAcceptor0);
      BaseLockManager.makeServiceDataName((String) null, (String) null);
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteCriticalSection("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000028
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false).when(iServiceDataAcceptor0).acceptServiceData(anyString() , any(byte[].class));
      baseLockManager0.scanServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", iServiceDataAcceptor0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName("S(rial=g=?/T.Zf,");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[1] = "Entering multiple ";
      stringArray0[3] = "_SERVICE_Entering multiple _Entering multiple ";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("Entering multiple ");
      Logging.lock = logger0;
      LocalLockPool localLockPool0 = new LocalLockPool();
      localLockPool0.getLocalLock("_SERVICE_Entering multiple _Entering multiple ");
      localLockPool0.releaseLocalLock("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      baseLockManager0.scanServiceData((String) null, iServiceDataAcceptor0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Long long0 = new Long((-1L));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Leaving write ";
      stringArray0[1] = "";
      stringArray0[2] = "Leaving write ";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      String string0 = "6_9<3=DRxbJGTX_qT4";
      stringArray0[4] = "6_9<3=DRxbJGTX_qT4";
      stringArray0[5] = "JY=Mk+n";
      // Undeclared exception!
      try { 
        BaseLockManager.enter(long0, stringArray0, stringArray0, stringArray0, "JY=Mk+n", (LocalLockPool) null, (LockPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager.buildServiceTypeLockName((String) null);
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        baseLockManager0.clearLocks();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      logger0.log((Priority) level0, (Object) "Y6*Yg;nN<", (Throwable) null);
      Logging.lock = logger0;
      baseLockManager0.enterNonExWriteLockNoWait("Incorrect number of options on style. Expected at least 1, received ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager.buildServiceTypeLockName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "_SERVICELOCK_@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "Y6*Yg;nN<";
      stringArray0[4] = "Incorrect number of options on style. Expected at least 1, received ";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      baseLockManager0.enterCriticalSections(stringArray0, stringArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[1] = "Entering multiple ";
      stringArray0[3] = "_SERVICE_Entering multiple _Entering multiple ";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("Entering multiple ");
      Logging.lock = logger0;
      LocalLockPool localLockPool0 = new LocalLockPool();
      localLockPool0.getLocalLock("_SERVICE_Entering multiple _Entering multiple ");
      localLockPool0.releaseLocalLock("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      baseLockManager0.checkServiceActive("<th>Time</th>", "Entering multiple ");
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.leaveCriticalSections((String[]) null, (String[]) null, (String[]) null);
      ManifoldCFConfiguration manifoldCFConfiguration0 = baseLockManager0.getSharedConfiguration();
      assertNull(manifoldCFConfiguration0);
      
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteLock("name");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = BaseLockManager.activePrefix;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.readData((String) null);
      baseLockManager1.checkGlobalFlag("{u!2U:dI!CM");
      try { 
        baseLockManager1.enterReadLockNoWait((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadLockNoWait("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[1] = "Entering multiple ";
      stringArray0[3] = "_SERVICE_Entering multiple _Entering multiple ";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager1.enterNonExWriteLock((String) null);
      baseLockManager0.enterReadLockNoWait("_SERVICE_Entering multiple _Entering multiple ");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = ">lf3hd/ *";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      BaseLockManager baseLockManager2 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager2.localSections;
      LocalLockPool localLockPool1 = baseLockManager1.localSections;
      LockPool lockPool0 = BaseLockManager.myLocks;
      Long long0 = baseLockManager2.threadID;
      String[] stringArray1 = new String[1];
      stringArray1[0] = "@(#)$Id$";
      try { 
        BaseLockManager.enterNoWait(long0, stringArray0, stringArray1, stringArray1, "_ANON_9", localLockPool0, lockPool0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Locked by another thread in this JVM
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      logger0.log((Priority) level0, (Object) "Y6*Yg;nN<", (Throwable) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      String[] stringArray1 = new String[9];
      stringArray1[0] = "Y6*Yg;nN<";
      stringArray1[1] = "Y6*Yg;nN<";
      stringArray1[2] = "";
      stringArray1[3] = "Y6*Yg;nN<";
      stringArray1[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[5] = "";
      stringArray1[6] = "";
      stringArray1[8] = "";
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ComparableTimSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager2.enterLocksNoWait((String[]) null, (String[]) null, (String[]) null);
      Integer integer0 = new Integer((-2378));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[1] = "Entering multiple ";
      stringArray0[3] = "_SERVICE_Entering multiple _Entering multiple ";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      BaseLockManager.buildServiceTypeLockName("");
      String[] stringArray1 = new String[9];
      stringArray1[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray1[1] = "";
      stringArray1[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[4] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray1[5] = "Entering multiple ";
      stringArray1[3] = "Entering multiple ";
      stringArray1[7] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[8] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager1.enterCriticalSections(stringArray0, stringArray0, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      Long long0 = baseLockManager0.threadID;
      Long long1 = baseLockManager1.threadID;
      BaseLockManager.enter(long1, (String[]) null, (String[]) null, (String[]) null, ">lf3hd/ *", (LocalLockPool) null, (LockPool) null);
      BaseLockManager.makeActiveServiceFlagName(">lf3hd/ *", ":$<.#k[Pn5MpK");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.clearGlobalFlag((String) null);
      BaseLockManager.makeActiveServiceFlagName("}(#5Cx[E", "Entering multiple ");
      // Undeclared exception!
      try { 
        baseLockManager0.scanServiceData(" sequence: Write ", (IServiceDataAcceptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.countActiveServices("r$j");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      boolean boolean1 = true;
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.countActiveServices("GG");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription(65535, "1.}z=:p%?");
      baseLockManager_LockDescription0.getKey();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager baseLockManager2 = new BaseLockManager();
      String string0 = "}XY";
      baseLockManager2.writeServiceCounter("}XY", (-668));
      Logger.getRootLogger();
      int int0 = (-1513);
      baseLockManager0.writeServiceCounter("2)UiKT/", (-1513));
      // Undeclared exception!
      try { 
        baseLockManager1.clearLocks();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = null;
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteCriticalSection((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.makeServiceCounterName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      baseLockManager0.writeData("(xqF#k", (byte[]) null);
      // Undeclared exception!
      try { 
        baseLockManager0.scanServiceData("@(#)$Id$", (IServiceDataAcceptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription(0, "OK");
      Long long0 = new Long((-1700L));
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = BaseLockManager.myLocks;
      MockRuntimeException mockRuntimeException0 = new MockRuntimeException("OK");
      Object object0 = new Object();
      lockPool0.getObject(object0);
      Long long1 = new Long(0L);
      // Undeclared exception!
      try { 
        BaseLockManager.enterRead(long1, "OK", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = null;
      LockPool lockPool0 = BaseLockManager.mySections;
      Object object0 = new Object();
      LocalLockPool localLockPool1 = baseLockManager0.localLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.leaveNonExWrite(".T,l74f]:)VDtm", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool1, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "AMN)E}J";
      byte[] byteArray0 = null;
      Long long0 = new Long(0L);
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = new LockPool((LockObjectFactory) null);
      Long long1 = new Long(0L);
      // Undeclared exception!
      try { 
        BaseLockManager.enterWrite(long1, "@(#)$Id$", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = " is missing from the ";
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteLock(" is missing from the ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = null;
      String string1 = BaseLockManager.anonymousServiceTypeCounter;
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteLock((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager1.checkServiceActive("wo-j%wJV'zW%OK", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      baseLockManager0.retrieveServiceData(" sequence: Write ", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager1.checkServiceActive("Interrupted", "_SERVICECOUNTER_");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = BaseLockManager.activePrefix;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager0.countActiveServices("_ACTIVE_");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[1] = "Entering multiple ";
      stringArray0[3] = "_SERVICE_Entering multiple _Entering multiple ";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("Entering multiple ");
      Logging.lock = logger0;
      LocalLockPool localLockPool0 = new LocalLockPool();
      localLockPool0.getLocalLock("_SERVICE_Entering multiple _Entering multiple ");
      localLockPool0.releaseLocalLock("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      baseLockManager1.retrieveServiceData("-F>", "_SERVICE_Entering multiple _Entering multiple ");
      BaseLockManager.makeServiceDataName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "Entering multiple ");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager1.leaveReadCriticalSection("P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.mySections;
      lockPool0.getObject("y");
      // Undeclared exception!
      try { 
        BaseLockManager.enterRead(long0, "y", "y", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadCriticalSection((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadCriticalSection("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "_SERVICECOUNTER_";
      stringArray0[2] = "The list of suffixes must not be null";
      stringArray0[3] = null;
      stringArray0[4] = null;
      String[] stringArray1 = new String[1];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, stringArray1, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ComparableTimSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription(70, "OK");
      baseLockManager_LockDescription0.set(70);
      baseLockManager_LockDescription0.getKey();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      BaseLockManager.buildServiceTypeLockName("sqZqEm2l_eYjRhgsg_");
      String[] stringArray0 = new String[0];
      baseLockManager1.writeServiceName("", "sqZqEm2l_eYjRhgsg_");
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = new LockPool((LockObjectFactory) null);
      // Undeclared exception!
      try { 
        BaseLockManager.leaveWrite("' is already active", "", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.leaveCriticalSections((String[]) null, (String[]) null, (String[]) null);
      baseLockManager0.constructUniqueServiceName("NPZTO0%$[Qo");
      String string0 = "+R)^^/zzw|n?";
      Long.getLong("+R)^^/zzw|n?");
      LockPool lockPool0 = new LockPool((LockObjectFactory) null);
      // Undeclared exception!
      try { 
        lockPool0.getObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      try { 
        baseLockManager1.endServiceActivity("", "Interrupted");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service 'Interrupted' of type ' is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Logger logger0 = Logger.getLogger("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      Logging.lock = logger0;
      baseLockManager0.enterNonExWriteLock("CWF>4^J}K");
      try { 
        baseLockManager0.endServiceActivity(" sequence: Write ", " sequence: Write ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service ' sequence: Write ' of type ' sequence: Write  is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "y/%w}2QTWN\"'";
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteCriticalSection("y/%w}2QTWN\"'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[1] = "Entering multiple ";
      stringArray0[3] = "_SERVICE_Entering multiple _Entering multiple ";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      LocalLockPool localLockPool0 = new LocalLockPool();
      localLockPool0.releaseLocalLock("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      baseLockManager0.getGlobalLockPool();
      try { 
        baseLockManager1.endServiceActivity("Entering multiple ", " sequence: Write ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Service ' sequence: Write ' of type 'Entering multiple  is not active
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.checkGlobalFlag("wo-j%TwJV'zW%OK");
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "";
      String[] stringArray0 = new String[5];
      stringArray0[0] = "6";
      stringArray0[1] = "6";
      stringArray0[2] = "The list of suffixes must not be null";
      stringArray0[3] = "6";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, stringArray0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      BaseLockManager.buildServiceTypeLockName((String) null);
      String[] stringArray0 = new String[7];
      baseLockManager0.getSharedConfiguration();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.leave((String[]) null, stringArray0, (String[]) null, "_SERVICECOUNTER_", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveCriticalSections(stringArray0, (String[]) null, (String[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000011
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      String string0 = " Could not write ";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.clear(" Could not write ", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteCriticalSection("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      Logging.lock.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      baseLockManager0.retrieveServiceData("Interrupted", "Interrupted");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.checkServiceActive("", "Interrupted");
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.myLocks;
      BaseLockManager.clear("_SERVICECOUNTER_", localLockPool0, lockPool0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = BaseLockManager.activePrefix;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = baseLockManager1.getGlobalLockPool();
      BaseLockManager.clear("BA<!iG8)c?*8i}-#", localLockPool0, lockPool0);
      baseLockManager2.countActiveServices("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[1] = "Entering multiple ";
      stringArray0[3] = "_SERVICE_Entering multiple _Entering multiple ";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.writeServiceCounter("#R4vO=HkAR#+S", 47);
      baseLockManager0.clearLocks();
      baseLockManager1.deleteServiceData((String) null, "");
      BaseLockManager.buildServiceListEntry("", 47);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName("");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String string0 = "#R48O=HkR#+S";
      baseLockManager1.writeServiceCounter("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", 4066);
      BaseLockManager baseLockManager2 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager2.clearLocks();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager.buildServiceTypeLockName((String) null);
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        baseLockManager0.enterCriticalSections(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadCriticalSection("qp");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription(0, "OK");
      baseLockManager_LockDescription0.lockType = 0;
      baseLockManager_LockDescription0.lockType = 306654252;
      baseLockManager_LockDescription0.lockKey = "sqZqEm2l_eYjRhgsg_";
      baseLockManager_LockDescription0.lockKey = "sqZqEm2l_eYjRhgsg_";
      baseLockManager_LockDescription0.getKey();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.writeServiceCounter("", 0);
      BaseLockManager.buildServiceTypeLockName("sqZqEm2l_eYjRhgsg_");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "sqZqEm2l_eYjRhgsg_";
      stringArray0[1] = "sqZqEm2l_eYjRhgsg_";
      stringArray0[3] = "sqZqEm2l_eYjRhgsg_";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[6] = "sqZqEm2l_eYjRhgsg_";
      stringArray0[7] = "";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "_SERVICELOCK_sqZqEm2l_eYjRhgsg_";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveCriticalSections(stringArray1, stringArray1, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "6";
      stringArray0[1] = "6";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks((String[]) null, (String[]) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[1] = "Entering multiple ";
      stringArray0[3] = "_SERVICE_Entering multiple _Entering multiple ";
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.writeServiceCounter("#R4vO=HkAR#+S", 47);
      baseLockManager0.clearLocks();
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      baseLockManager0.enterNonExWriteLockNoWait("ZT;)");
      baseLockManager0.retrieveServiceData(" sequence: Write ", "_SERVICE_Entering multiple _Entering multiple ");
      baseLockManager0.readServiceData("_SERVICE_Entering multiple _Entering multiple ", "");
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3988);
      Level.toLevel(" or non-ex write ", level0);
      logger0.setLevel(level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      logger0.setResourceBundle((ResourceBundle) null);
      logger0.log((Priority) level0, (Object) "Y6*Yg;nN<", (Throwable) null);
      Logging.lock = logger0;
      baseLockManager0.enterNonExWriteLockNoWait("Incorrect number of options on style. Expected at least 1, received ");
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String[] stringArray0 = new String[3];
      stringArray0[0] = " or non-ex write ";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, (String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Level.toLevel(3988);
      Level level0 = Level.FATAL;
      logger0.getResourceBundle();
      ResourceBundle.clearCache();
      logger0.setResourceBundle((ResourceBundle) null);
      Logging.lock = logger0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger.getRootLogger();
      // Undeclared exception!
      try { 
        baseLockManager1.leaveLocks((String[]) null, stringArray0, (String[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000014
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteCriticalSection(stringArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      baseLockManager0.retrieveServiceData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      BaseLockManager baseLockManager2 = new BaseLockManager();
      baseLockManager1.enterNonExWriteLockNoWait("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "#}T&&-.4Oh-WA0";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM failure: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000017
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      BaseLockManager.makeServiceCounterName((String) null);
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "";
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteLockNoWait((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "";
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = "Y6*Yg;nN<";
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.toLevel(3960);
      Level.toLevel("", level0);
      logger0.getResourceBundle();
      logger0.setResourceBundle((ResourceBundle) null);
      logger0.log((Priority) level0, (Object) "Y6*Yg;nN<", (Throwable) null);
      Logging.lock = logger0;
      baseLockManager0.enterNonExWriteLockNoWait("Incorrect number of options on style. Expected at least 1, received ");
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteCriticalSection("Y6*Yg;nN<");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JVM error: Don't hold lock for object org.apache.manifoldcf.core.lockmanager.LockObject@0000000017
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.LockObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Long long0 = new Long(0L);
      LockPool lockPool0 = BaseLockManager.myLocks;
      BaseLockManager baseLockManager0 = new BaseLockManager();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte) (-68);
      byteArray0[5] = (byte)63;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-42);
      baseLockManager0.writeServiceData("@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", byteArray0);
      BaseLockManager baseLockManager1 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager1.localSections;
      // Undeclared exception!
      try { 
        BaseLockManager.leaveRead("JK_qd", "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      assertNotNull(lockPool0);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte)104;
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte)125;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager1.deleteServiceData("_SERVICEDATA_", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription((-5466), "");
      baseLockManager_LockDescription0.set((-68));
      baseLockManager_LockDescription0.set((-5466));
      baseLockManager_LockDescription0.getKey();
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocksNoWait((String[]) null, (String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      String[] stringArray0 = new String[3];
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      String string0 = "Le)ving no5-ex write ";
      stringArray0[1] = "Le)ving no5-ex write ";
      stringArray0[2] = "";
      LocalLockPool localLockPool0 = new LocalLockPool();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readData((String) null);
      BaseLockManager baseLockManager1 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager1.retrieveServiceData("org.apache.logging.log4j.core.impl.Log4jLogEvent$Builder", "Le)ving no5-ex write ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.makeServiceCounterName("");
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      baseLockManager0.readServiceCounter("_SERVICECOUNTER_");
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceCounter("-);!}");
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.makeServiceCounterName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      baseLockManager0.readServiceCounter(" or non-ex write ");
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.makeServiceDataName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceData("_ACTIVE_", (String) null);
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadLock("w+K^CE-BbmU6z!luI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      int int0 = (-438);
      BaseLockManager.buildServiceListEntry("XbR)iu~", (-438));
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = new Long(0L);
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.enterReadNoWait(long0, "CSd3*-", "_SERVICELIST_XbR)iu~_-438", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      BaseLockManager.buildServiceListEntry("Waiting for time ", 648);
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceData("Waiting for time ", "");
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      String string0 = "Entering multiple ";
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[1] = "Entering multiple ";
      stringArray0[2] = null;
      stringArray0[3] = null;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.writeServiceCounter("#R48O=HkR#+S", 47);
      // Undeclared exception!
      try { 
        baseLockManager0.clearLocks();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.clearLocks();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.retrieveServiceData((String) null, "_SERVICEDATA_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      BaseLockManager.makeServiceCounterName("_SERVICEDATA_");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.retrieveServiceData((String) null, "_SERVICEDATA_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "Interrupted";
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte)3;
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager0.registerServiceBeginServiceActivity("", "Interrupted", byteArray0, iServiceCleanup0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager0.cleanupInactiveService("d0J", iServiceCleanup0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "";
      Long long0 = baseLockManager0.threadID;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager0.cleanupInactiveService("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (IServiceCleanup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      String string0 = BaseLockManager.anonymousServiceTypeCounter;
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.writeServiceName("_SERVICECOUNTER_", "_SERVICECOUNTER_");
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteLock((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = null;
      baseLockManager0.writeServiceName((String) null, (String) null);
      baseLockManager0.writeServiceCounter((String) null, 14);
      // Undeclared exception!
      try { 
        Logger.getLogger((String) null, (LoggerFactory) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.deleteServiceData("qp", "qp");
      BaseLockManager.buildServiceListEntry("qp", 1002);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = null;
      baseLockManager0.writeServiceName((String) null, (String) null);
      baseLockManager0.writeServiceCounter((String) null, 22);
      // Undeclared exception!
      try { 
        Logger.getLogger((String) null, (LoggerFactory) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.scanServiceData("s:", (IServiceDataAcceptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      int int0 = 64;
      String string0 = "S`oPE;TLr( ";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string1 = "Functions.forPredicate(";
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager0.scanServiceData("Functions.forPredicate(", iServiceDataAcceptor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.getSharedConfiguration();
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription(0, " sequence: NonExWrite ");
      baseLockManager_LockDescription0.getType();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-88);
      byteArray0[3] = (byte) (-37);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      baseLockManager0.writeData("", byteArray0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteCriticalSection("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      lockPool0.getObject(baseLockManager0);
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteCriticalSection("@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockPool lockPool0 = null;
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWriteNoWait(long0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, (LockPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockPool lockPool0 = null;
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWriteNoWait(long0, (String) null, (String) null, localLockPool0, (LockPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.leaveRead("bWf:iD[<]Hz}1", "bWf:iD[<]Hz}1", (LocalLockPool) null, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[6] = "V[~':i0=oS}a%cy";
      stringArray0[7] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocks(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocks(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager1.enterWriteLockNoWait("wo-j%wJV'zW%OK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl";
      IServiceDataAcceptor iServiceDataAcceptor0 = mock(IServiceDataAcceptor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager0.enterWriteLockNoWait("org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = BaseLockManager.activePrefix;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "_ACTIVE_";
      stringArray0[1] = "_ACTIVE_";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "_ACTIVE_";
      stringArray0[4] = "_ACTIVE_";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveCriticalSections(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "";
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[5];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "";
      stringArray0[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[2] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray1[5] = "";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveCriticalSections(stringArray0, stringArray0, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName("wo-j%wJV'zW%OK");
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadLock("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadLock("iBh8+");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteLock((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      int int0 = 64;
      String string0 = "S`oPE;TLr( ";
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription(64, "S`oPE;TLr( ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteLock("Unavailable constructor for IConnector implementation '");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.enterNonExWriteLock("$u\\");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription(0, "OK");
      baseLockManager_LockDescription0.lockType = 306654252;
      baseLockManager_LockDescription0.lockKey = "sqZqEm2l_eYjRhgsg_";
      baseLockManager_LockDescription0.lockKey = "sqZqEm2l_eYjRhgsg_";
      baseLockManager_LockDescription0.getKey();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.writeServiceCounter("", 47);
      BaseLockManager.buildServiceTypeLockName("sqZqEm2l_eYjRhgsg_");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "sqZqEm2l_eYjRhgsg_";
      stringArray0[1] = "sqZqEm2l_eYjRhgsg_";
      stringArray0[2] = "sqZqEm2l_eYjRhgsg_";
      stringArray0[3] = "sqZqEm2l_eYjRhgsg_";
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[6] = "sqZqEm2l_eYjRhgsg_";
      stringArray0[7] = "";
      // Undeclared exception!
      try { 
        baseLockManager0.enterCriticalSections(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        baseLockManager0.enterCriticalSections(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.timedWait(7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.timedWait(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      BaseLockManager.makeRegisteredServiceFlagName("Rntering multipLe ", "Rntering multipLe ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadCriticalSection("0g#-=7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readData("5&rFz@V)wkl");
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[5];
      baseLockManager0.getSharedConfiguration();
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName("");
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      BaseLockManager.makeRegisteredServiceFlagName("Entering multiple ", "Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.readServiceName(" sequence: Write ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[1] = "Entering multiple ";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[5] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray0[6] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "";
      stringArray1[1] = " sequence: Write ";
      stringArray1[2] = null;
      stringArray1[3] = "Entering multiple ";
      stringArray1[4] = "AtJy ";
      stringArray1[5] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray1[6] = "_SERVICE_Entering multiple _Entering multiple ";
      stringArray1[7] = null;
      // Undeclared exception!
      try { 
        baseLockManager0.enterLocksNoWait(stringArray0, stringArray0, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      int int0 = 33;
      String string0 = "Reconfiguration started for context[name={}] at URI {} ({}) with optional ClassLoader: {}";
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription(33, "Reconfiguration started for context[name={}] at URI {} ({}) with optional ClassLoader: {}");
      baseLockManager_LockDescription0.getType();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.clear("CharMatcher.whitespace()", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = BaseLockManager.activePrefix;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Logger logger0 = Logger.getRootLogger();
      Logging.lock = logger0;
      BaseLockManager baseLockManager2 = new BaseLockManager();
      String string1 = baseLockManager0.registerServiceBeginServiceActivity("2c~", "_ACTIVE_", (IServiceCleanup) null);
      assertEquals("_ACTIVE_", string1);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = null;
      baseLockManager0.setGlobalFlag((String) null);
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockPool lockPool0 = BaseLockManager.mySections;
      // Undeclared exception!
      try { 
        BaseLockManager.clear((String) null, localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteLock("T}@/B7}0FjJ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.readData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      baseLockManager0.getSharedConfiguration();
      // Undeclared exception!
      try { 
        baseLockManager0.updateServiceData("@(#)$Id: ManifoldCFConfiguration.java 988245 2010-08-23 18:39:35Z kwright $", "The keystore fxle({}) is not found", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "T}@/B7}0FjJ";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveWriteLock("T}@/B7}0FjJ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.leaveWrite("/mDX|k", "/mDX|k", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.writeServiceCounter((String) null, 14);
      // Undeclared exception!
      try { 
        Logger.getLogger((String) null, (LoggerFactory) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      baseLockManager0.constructUniqueServiceName(":Yt]");
      // Undeclared exception!
      try { 
        baseLockManager0.scanServiceData("qM*TR{-}Jmg>KGqq%[", (IServiceDataAcceptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[0];
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.enterNoWait(long0, stringArray0, stringArray0, stringArray0, "/mDX|k", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Long long0 = new Long((-632L));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Jyu7)\"Vz9.%\"3hsJ";
      stringArray0[1] = "6?1~eC{S}nJG 7";
      stringArray0[2] = "_DJ";
      stringArray0[3] = "|wav'j`|q=";
      stringArray0[4] = "hyCeFy|$1WG6x";
      stringArray0[5] = "";
      stringArray0[6] = "Z^ixj5}bN=,G/X/";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.enterNoWait(long0, stringArray0, stringArray0, stringArray0, "_DJ", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      String string0 = "";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      localLockPool0.getLocalLock("");
      // Undeclared exception!
      try { 
        baseLockManager0.endServiceActivity("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      IThreadContext iThreadContext0 = mock(IThreadContext.class, new ViolatedAssumptionAnswer());
      ManifoldCF.resetEnvironment(iThreadContext0);
      String string0 = "nz?J@c%3` Dl`Lr,f>";
      // Undeclared exception!
      try { 
        baseLockManager0.enterReadLockNoWait("nz?J@c%3` Dl`Lr,f>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.makeServiceCounterName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWrite((Long) null, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      BaseLockManager.makeServiceCounterName("Entering multiple ");
      BaseLockManager baseLockManager0 = new BaseLockManager();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager.makeServiceCounterName("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.enterNonExWrite((Long) null, "", "rts|4Cg_R1", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      IServiceCleanup iServiceCleanup0 = mock(IServiceCleanup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        baseLockManager0.registerServiceBeginServiceActivity("hr[,5'0mc", "", iServiceCleanup0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "wo-j%wJV'zW%OK";
      // Undeclared exception!
      try { 
        baseLockManager0.registerServiceBeginServiceActivity("", "wo-j%wJV'zW%OK", (IServiceCleanup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      baseLockManager0.readData("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $");
      baseLockManager1.getSharedConfiguration();
      // Undeclared exception!
      try { 
        baseLockManager0.updateServiceData("@(#)$Id: ManifoldCFConfiguration.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.getGlobalLockPool();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte)104;
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte)125;
      // Undeclared exception!
      try { 
        baseLockManager0.updateServiceData("", "@(#)$Id: LockPool.java 988245 2010-08-23 18:39:35Z kwright $", byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "s:";
      // Undeclared exception!
      try { 
        baseLockManager0.endServiceActivity("s:", "s:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "O";
      stringArray0[1] = "org.apache.manifoldcf.core.lockmanager.BaseLockManager$LockDescription";
      stringArray0[2] = "";
      stringArray0[3] = "Unexpected EOF";
      stringArray0[4] = "uG_R3 Ql5u@/d}5";
      stringArray0[5] = "s";
      stringArray0[6] = "s";
      BaseLockManager.LockDescription[] baseLockManager_LockDescriptionArray0 = BaseLockManager.getSortedUniqueLocks(stringArray0, stringArray0, stringArray0);
      assertEquals(6, baseLockManager_LockDescriptionArray0.length);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.enterWriteNoWait(long0, "Zh", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      String string0 = "";
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.enterWriteNoWait(long0, "", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      BaseLockManager.makeServiceCounterName((String) null);
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteLock((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveNonExWriteLock("Entering non-ex write ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = "";
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.leaveNonExWrite("@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      LocalLockPool localLockPool0 = new LocalLockPool();
      LocalLock localLock0 = localLockPool0.getLocalLock("{");
      LockPool lockPool0 = BaseLockManager.myLocks;
      lockPool0.getObject(localLock0);
      // Undeclared exception!
      try { 
        BaseLockManager.leaveNonExWrite("'KAO4Sk~vtah;^", "'KAO4Sk~vtah;^", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = baseLockManager0.threadID;
      LocalLockPool localLockPool0 = baseLockManager0.localLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.enterReadNoWait(long0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", localLockPool0, (LockPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.checkServiceActive("wo-j%wJV'zW%OK", "wo-j%wJV'zW%OK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      BaseLockManager.LockDescription baseLockManager_LockDescription0 = new BaseLockManager.LockDescription((-4172), (String) null);
      baseLockManager_LockDescription0.lockType = (-668);
      baseLockManager_LockDescription0.lockKey = "";
      baseLockManager_LockDescription0.set((-4172));
      baseLockManager_LockDescription0.getKey();
      BaseLockManager.buildServiceTypeLockName("");
      Long long0 = new Long((-668));
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      LockPool lockPool0 = new LockPool(lockObjectFactory0);
      // Undeclared exception!
      try { 
        BaseLockManager.enterReadNoWait(long0, "", "", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Clearing all ";
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.leave(stringArray0, stringArray0, stringArray0, "JVHhdSO0 L0q", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      baseLockManager0.leaveCriticalSections((String[]) null, (String[]) null, (String[]) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)48;
      // Undeclared exception!
      try { 
        baseLockManager0.updateServiceData("AMN)E}J", (String) null, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      LockObjectFactory lockObjectFactory0 = new LockObjectFactory();
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[1] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = BaseLockManager.activePrefix;
      BaseLockManager baseLockManager1 = new BaseLockManager();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray0, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      String[] stringArray0 = new String[5];
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        baseLockManager0.leaveLocks(stringArray1, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "<fYi3U)8>~nj96!ueT";
      stringArray0[1] = "QF[.yN'01";
      stringArray0[2] = "z$;z(zph<Pne]BW2";
      stringArray0[3] = "9";
      stringArray0[4] = "Gc->RA,oPDDv)Q}";
      stringArray0[5] = "";
      stringArray0[6] = "";
      BaseLockManager baseLockManager0 = new BaseLockManager();
      LocalLockPool localLockPool0 = baseLockManager0.localSections;
      LockPool lockPool0 = BaseLockManager.myLocks;
      // Undeclared exception!
      try { 
        BaseLockManager.leave(stringArray0, stringArray0, stringArray0, "<fYi3U)8>~nj96!ueT", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      String string0 = BaseLockManager.makeActiveServiceFlagName("FP/pQ", "FP/pQ");
      assertEquals("_ACTIVE_FP/pQ_FP/pQ", string0);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      Long long0 = new Long(1L);
      LocalLockPool localLockPool0 = new LocalLockPool();
      LockPool lockPool0 = baseLockManager0.getGlobalLockPool();
      // Undeclared exception!
      try { 
        BaseLockManager.enterWrite(long0, "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $", "{E@-(gbpPjz(p", localLockPool0, lockPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      BaseLockManager baseLockManager1 = new BaseLockManager();
      // Undeclared exception!
      try { 
        BaseLockManager.enter((Long) null, (String[]) null, (String[]) null, (String[]) null, "Interrupted", (LocalLockPool) null, (LockPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Long long0 = new Long((-1L));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Leaving write ";
      stringArray0[1] = "";
      stringArray0[2] = "1w`hQJQ*ILXT\"\"HEKZ!";
      stringArray0[3] = "@(#)$Id: LockManager.java 988245 2010-08-23 18:39:35Z kwright $";
      stringArray0[4] = "6_9<3=DRxbJGTX_qT4";
      stringArray0[5] = "JY=Mk+n";
      // Undeclared exception!
      try { 
        BaseLockManager.enter(long0, stringArray0, stringArray0, stringArray0, "JY=Mk+n", (LocalLockPool) null, (LockPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadLock("}F $X`9'P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      BaseLockManager baseLockManager0 = new BaseLockManager();
      String string0 = null;
      // Undeclared exception!
      try { 
        baseLockManager0.leaveReadLock((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.lockmanager.BaseLockManager", e);
      }
  }
}
