/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:56:40 GMT 2022
 */

package org.apache.manifoldcf.core.interfaces;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.PipedInputStream;
import java.time.ZoneId;
import java.util.Iterator;
import java.util.Map;
import org.apache.manifoldcf.core.interfaces.ConfigNode;
import org.apache.manifoldcf.core.interfaces.ConfigParams;
import org.apache.manifoldcf.core.interfaces.Configuration;
import org.apache.manifoldcf.core.interfaces.ConfigurationNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConfigParams_ESTest extends ConfigParams_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.setObfuscatedParameter("'t7e", "@(#)$Id: ConfigurationNode.java 988245 2010-08-23 18:39:35Z kwright $");
      assertEquals(1, configParams0.getChildCount());
      
      ConfigNode configNode0 = configParams0.getChild(0);
      assertEquals("_PARAMETER_", configNode0.getType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.setParameter("@(#)$Id: ConfigParams.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ConfigParams.java 988245 2010-08-23 18:39:35Z kwright $");
      configParams0.duplicate();
      assertEquals(1, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      Configuration configuration0 = configParams0.createNew();
      assertTrue(configuration0.equals((Object)configParams0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.children = null;
      // Undeclared exception!
      try { 
        configParams0.setObfuscatedParameter("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.readOnly = true;
      // Undeclared exception!
      try { 
        configParams0.setObfuscatedParameter("[v!_&/?", "Mapper");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Attempt to change read-only object
         //
         verifyException("org.apache.manifoldcf.core.interfaces.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      ConfigurationNode configurationNode0 = configParams0.createNewNode((String) null);
      // Undeclared exception!
      try { 
        configParams0.removeOuterNode(configurationNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      // Undeclared exception!
      try { 
        configParams0.getChild((-1634757203));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      configParams0.params = map0;
      // Undeclared exception!
      try { 
        configParams0.clearOuterNodes();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      // Undeclared exception!
      try { 
        configParams0.addOuterNode((ConfigurationNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ConfigParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConfigParams configParams0 = null;
      try {
        configParams0 = new ConfigParams((Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ConfigParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.setParameter((String) null, (String) null);
      assertEquals(0, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      String string0 = configParams0.getParameter("lms");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.setObfuscatedParameter((String) null, (String) null);
      assertEquals(0, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.setParameter("@(#)$Id: ConfigParams.java 988245 2010-08-23 18:39:35Z kwright $", "@(#)$Id: ConfigParams.java 988245 2010-08-23 18:39:35Z kwright $");
      configParams0.setObfuscatedParameter("[v!_&/?", "@(#)$Id: Configuration.java 988245 2010-08-23 18:39:35Z kwright $");
      configParams0.setParameter("[v!_&/?", "@(#)$Id: Configuration.java 988245 2010-08-23 18:39:35Z kwright $");
      assertEquals(2, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.setParameter("~*AIC}vUrW1j~LG", "x}^)u)P-lcHTP:n Y");
      configParams0.getObfuscatedParameter("~*AIC}vUrW1j~LG");
      assertEquals(1, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      ConfigurationNode configurationNode0 = configParams0.createNewNode("_PARAMETER_");
      configParams0.removeOuterNode(configurationNode0);
      assertEquals("_PARAMETER_", configurationNode0.getType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      ConfigNode configNode0 = new ConfigNode("o11o=!d8ii6`p`,|");
      configParams0.removeOuterNode(configNode0);
      assertEquals(0, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      ConfigurationNode configurationNode0 = configParams0.createNewNode("_PARAMETER_");
      configParams0.addOuterNode(configurationNode0);
      assertEquals("_PARAMETER_", configurationNode0.getType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      ConfigNode configNode0 = new ConfigNode("#");
      configParams0.addOuterNode(configNode0);
      assertEquals("#", configNode0.getType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      configParams0.clearOuterNodes();
      assertEquals(0, configParams0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1422);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      ConfigParams configParams0 = null;
      try {
        configParams0 = new ConfigParams(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConfigParams configParams0 = null;
      try {
        configParams0 = new ConfigParams("@(#)$Id: Configuration.java 988245 2010-08-23 18:39:35Z kwright $");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.common.XMLDoc", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      ConfigParams configParams0 = new ConfigParams(map0);
      // Undeclared exception!
      try { 
        configParams0.getChild(2856);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2856, Size: 28
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      Iterator iterator0 = configParams0.listParameters();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      ConfigParams configParams1 = configParams0.duplicate();
      assertNotSame(configParams1, configParams0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConfigParams configParams0 = new ConfigParams();
      String string0 = configParams0.getObfuscatedParameter("@(#)$Id: ConfigParams.java 988245 2010-08-23 18:39:35Z kwright $");
      assertNull(string0);
  }
}
