/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:55:01 GMT 2022
 */

package org.apache.manifoldcf.core.jdbcpool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Properties;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.apache.log4j.Priority;
import org.apache.log4j.spi.LoggerFactory;
import org.apache.manifoldcf.core.jdbcpool.ConnectionPool;
import org.apache.manifoldcf.core.jdbcpool.WrappedConnection;
import org.apache.manifoldcf.core.system.Logging;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hsqldb.ClientConnectionHTTP;
import org.hsqldb.Database;
import org.hsqldb.Session;
import org.hsqldb.SessionManager;
import org.hsqldb.jdbc.JDBCConnection;
import org.hsqldb.jdbc.JDBCPool;
import org.hsqldb.jdbc.pool.JDBCPooledConnection;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConnectionPool_ESTest extends ConnectionPool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long long0 = 1648L;
      ConnectionPool connectionPool0 = new ConnectionPool("", "el", "el", 1, 1648L, false);
      Connection connection0 = null;
      connectionPool0.cleanupExpiredConnections(1111L);
      connectionPool0.closed = false;
      connectionPool0.cleanupExpiredConnections(3227L);
      connectionPool0.activeConnections = (-1799);
      connectionPool0.release((Connection) null);
      // Undeclared exception!
      try { 
        connectionPool0.getConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", "", "", 4475, 4475, false);
      connectionPool0.cleanupExpiredConnections(4475);
      connectionPool0.cleanupExpiredConnections(4475);
      System.setCurrentTimeMillis((-531L));
      connectionPool0.cleanupExpiredConnections(16L);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", "org.apache.manifoldcf.core.jdbcpool.ConnectionPool", "", 1757, 1757, false);
      connectionPool0.closePool();
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.TRACE;
      Level level1 = Level.WARN;
      Level level2 = Level.TRACE;
      Level level3 = Level.toLevel("K$", level1);
      ConnectionPool connectionPool1 = new ConnectionPool("K$", "K$", (String) null, 50000, 0L, false);
      WrappedConnection wrappedConnection0 = new WrappedConnection(connectionPool1, (Connection) null);
      logger0.log((Priority) level3, (Object) wrappedConnection0);
      ConnectionPool connectionPool2 = new ConnectionPool("", "YDG7g\"oLk", "@(#)$Id$", 1, 20000, false);
      connectionPool2.release((Connection) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", "", "", 0, (-2340L), false);
      connectionPool0.closePool();
      connectionPool0.closed = false;
      Class<WrappedConnection> class0 = WrappedConnection.class;
      Logger logger0 = Logger.getLogger(class0);
      Level level0 = Level.TRACE;
      Level level1 = Level.toLevel(0, level0);
      Level.toLevel("");
      Level level2 = Level.toLevel("", level1);
      logger0.log((Priority) level2, (Object) connectionPool0);
      Logging.db = logger0;
      connectionPool0.freePointer = 30000;
      ConnectionPool connectionPool1 = new ConnectionPool("co,", "D[O}$s_NqNwTto5%2", "", 10000, (-2340L), false);
      // Undeclared exception!
      try { 
        connectionPool0.getConnection();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 29999
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool((String) null, (String) null, "=vsD > ,XBqe", 8239, 0L, false);
      ConnectionPool connectionPool1 = new ConnectionPool("@(#)$Id$", "=vsD > ,XBqe", (String) null, 1, 1309L, false);
      try { 
        connectionPool0.getConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // The url cannot be null
         //
         verifyException("java.sql.DriverManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long long0 = 0L;
      Logger.getRootLogger();
      ConnectionPool connectionPool0 = new ConnectionPool("=vsD > ,XBqe", "=vsD > ,XBqe", ">P@P", 8239, 3294L, true);
      connectionPool0.flushPool();
      connectionPool0.flushPool();
      WrappedConnection wrappedConnection0 = null;
      // Undeclared exception!
      try { 
        connectionPool0.releaseConnection((WrappedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long long0 = (-2340L);
      ConnectionPool connectionPool0 = new ConnectionPool("", (String) null, (String) null, 0, (-2340L), false);
      connectionPool0.closePool();
      connectionPool0.closed = false;
      connectionPool0.flushPool();
      WrappedConnection wrappedConnection0 = null;
      // Undeclared exception!
      try { 
        connectionPool0.releaseConnection((WrappedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", "TuypsJ)x{Ngkm`jV4BG", "", 1413, 1413, false);
      LoggerFactory loggerFactory0 = mock(LoggerFactory.class, new ViolatedAssumptionAnswer());
      Logger logger0 = Logger.getLogger("");
      Logging.db = logger0;
      Logger.getRootLogger();
      connectionPool0.flushPool();
      connectionPool0.flushPool();
      WrappedConnection wrappedConnection0 = null;
      // Undeclared exception!
      try { 
        connectionPool0.releaseConnection((WrappedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = null;
      ConnectionPool connectionPool0 = new ConnectionPool("", (String) null, (String) null, 0, (-2340L), false);
      connectionPool0.closePool();
      connectionPool0.closed = false;
      Connection connection0 = null;
      Class<WrappedConnection> class0 = WrappedConnection.class;
      Logger logger0 = Logger.getLogger(class0);
      Level level0 = Level.TRACE;
      Level level1 = Level.toLevel((-1), level0);
      Level.toLevel("");
      Level level2 = Level.toLevel((String) null, level1);
      logger0.log((Priority) level2, (Object) connectionPool0);
      Logging.db = logger0;
      // Undeclared exception!
      try { 
        connectionPool0.release((Connection) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", (String) null, (String) null, 0, (-2340L), false);
      connectionPool0.closePool();
      connectionPool0.closed = false;
      Logger logger0 = Logger.getRootLogger();
      Level level0 = Level.TRACE;
      Level level1 = Level.WARN;
      Level level2 = Level.TRACE;
      Level level3 = Level.toLevel((String) null, level1);
      logger0.log((Priority) level3, (Object) connectionPool0);
      Logging.db = logger0;
      // Undeclared exception!
      try { 
        connectionPool0.release((Connection) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool((String) null, (String) null, "=vsD > ,XBqe", 8239, 0L, false);
      connectionPool0.closed = false;
      Logger logger0 = Logger.getRootLogger();
      Logging.db = logger0;
      connectionPool0.activeConnections = 1;
      connectionPool0.flushPool();
      connectionPool0.cleanupExpiredConnections(1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("s*Jc>OS?", "s*Jc>OS?", "s*Jc>OS?", 0, (-15773356800L), true);
      connectionPool0.flushPool();
      connectionPool0.flushPool();
      connectionPool0.cleanupExpiredConnections((-15773356800L));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "element-content-whitespace";
      int int0 = 0;
      ConnectionPool connectionPool0 = new ConnectionPool("element-content-whitespace", "element-content-whitespace", "element-content-whitespace", 0, 0, false);
      connectionPool0.flushPool();
      JDBCPool jDBCPool0 = new JDBCPool();
      // Undeclared exception!
      try { 
        jDBCPool0.getConnection("@(#)$Id$", "@(#)$Id$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.DatabaseURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "";
      int int0 = 0;
      ConnectionPool connectionPool0 = new ConnectionPool("", "", "", 0, 0, true);
      Logger logger0 = Logger.getRootLogger();
      logger0.isDebugEnabled();
      // Undeclared exception!
      try { 
        connectionPool0.getConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", (String) null, (String) null, 0, (-2340L), false);
      connectionPool0.closePool();
      connectionPool0.closed = false;
      Class<WrappedConnection> class0 = WrappedConnection.class;
      Logger logger0 = Logger.getLogger(class0);
      Level level0 = Level.TRACE;
      Level level1 = Level.toLevel((-1), level0);
      Level.toLevel("");
      Level level2 = Level.toLevel((String) null, level1);
      logger0.log((Priority) level2, (Object) connectionPool0);
      Logging.db = logger0;
      connectionPool0.freePointer = 30000;
      ConnectionPool connectionPool1 = new ConnectionPool("co,", "D[O}$s_NqNwTto5%2", "", 10000, (-2340L), false);
      // Undeclared exception!
      try { 
        connectionPool0.getConnection();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 29999
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("", "", "", 2140, 2140, false);
      try { 
        connectionPool0.getConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // No suitable driver found for 
         //
         verifyException("java.sql.DriverManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "";
      ConnectionPool connectionPool0 = new ConnectionPool("", "", "", 1862, 1718L, true);
      connectionPool0.activeConnections = 0;
      connectionPool0.cleanupExpiredConnections(1862);
      try { 
        connectionPool0.getConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // No suitable driver found for 
         //
         verifyException("java.sql.DriverManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("internal error", "P{A.en Y=iXW> /5wFk", "P{A.en Y=iXW> /5wFk", 1413, 1413, true);
      try { 
        connectionPool0.getConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // No suitable driver found for internal error
         //
         verifyException("java.sql.DriverManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool(":HI\"ha-&YY=_}", "mxe", ":HI\"ha-&YY=_}", 0, 0, false);
      connectionPool0.flushPool();
      connectionPool0.freePointer = 474;
      Logger.getRootLogger();
      ConnectionPool connectionPool1 = new ConnectionPool("U", ":HI\"ha-&YY=_}", "@(#)$Id$", 474, 474, false);
      // Undeclared exception!
      try { 
        connectionPool0.cleanupExpiredConnections(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("P{A.en Y=iXW> /5wFk", "P{A.en Y=iXW> /5wFk", "P{A.en Y=iXW> /5wFk", 0, 0, false);
      connectionPool0.closePool();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool(":HI\"ha-&YY=_}", "mxe", ":HI\"ha-&YY=_}", 0, 2585L, false);
      connectionPool0.flushPool();
      connectionPool0.freePointer = 474;
      Logger logger0 = Logger.getRootLogger();
      Logging.db = logger0;
      // Undeclared exception!
      try { 
        connectionPool0.flushPool();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 614;
      ConnectionPool connectionPool0 = new ConnectionPool("", "wOhCGw0LCs[+\"tM", "", 614, 614, true);
      connectionPool0.closePool();
      connectionPool0.cleanupExpiredConnections((-533L));
      connectionPool0.closed = true;
      connectionPool0.freePointer = 614;
      // Undeclared exception!
      try { 
        connectionPool0.flushPool();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConnectionPool connectionPool0 = null;
      try {
        connectionPool0 = new ConnectionPool("y9{=`mH~*T", "", "y9{=`mH~*T", (-98), (-98), true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ConnectionPool connectionPool0 = new ConnectionPool("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", "org.apache.manifoldcf.core.jdbcpool.ConnectionPool", "org.apache.manifoldcf.core.jdbcpool.ConnectionPool", 822, 422L, true);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "6EMuBT~STueO$aI>^u";
      String string1 = "";
      long long0 = 1L;
      boolean boolean0 = true;
      ConnectionPool connectionPool0 = null;
      try {
        connectionPool0 = new ConnectionPool("6EMuBT~STueO$aI>^u", "6EMuBT~STueO$aI>^u", "", (-16777216), 1L, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.jdbcpool.ConnectionPool", e);
      }
  }
}
