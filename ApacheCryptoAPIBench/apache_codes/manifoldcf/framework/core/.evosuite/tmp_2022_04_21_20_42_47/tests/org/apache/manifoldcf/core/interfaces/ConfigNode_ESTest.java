/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 21:07:46 GMT 2022
 */

package org.apache.manifoldcf.core.interfaces;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.manifoldcf.core.interfaces.ConfigNode;
import org.apache.manifoldcf.core.interfaces.ConfigurationNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConfigNode_ESTest extends ConfigNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConfigNode configNode0 = new ConfigNode("");
      ConfigNode configNode1 = new ConfigNode(configNode0);
      configNode0.addChild(0, configNode1);
      ConfigNode configNode2 = configNode0.getChild(0);
      assertNotSame(configNode0, configNode2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConfigNode configNode0 = new ConfigNode("");
      configNode0.addChild(0, configNode0);
      ConfigNode configNode1 = configNode0.getChild(0);
      assertEquals("", configNode1.getType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConfigNode configNode0 = new ConfigNode("");
      ConfigNode configNode1 = new ConfigNode(configNode0);
      configNode0.addChild(0, configNode1);
      ConfigNode configNode2 = configNode0.duplicate(true);
      assertEquals("", configNode2.getType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConfigNode configNode0 = new ConfigNode("jfO5>{D6<ItH]*KzHL:");
      configNode0.setAttribute("jfO5>{D6<ItH]*KzHL:", "jfO5>{D6<ItH]*KzHL:");
      ConfigNode configNode1 = configNode0.duplicate(false);
      assertEquals("jfO5>{D6<ItH]*KzHL:", configNode1.getType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConfigNode configNode0 = new ConfigNode("");
      ConfigNode configNode1 = new ConfigNode(configNode0);
      configNode0.addChild(0, configNode1);
      ConfigurationNode configurationNode0 = configNode0.createNewNode(configNode0);
      assertTrue(configurationNode0.equals((Object)configNode0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConfigNode configNode0 = new ConfigNode("");
      ConfigurationNode configurationNode0 = configNode0.createNewNode(configNode0);
      assertEquals(0, configurationNode0.getAttributeCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConfigNode configNode0 = new ConfigNode("jfO5>{D6<ItH]*KzHL:");
      configNode0.setAttribute("jfO5>{D6<ItH]*KzHL:", "jfO5>{D6<ItH]*KzHL:");
      ConfigurationNode configurationNode0 = configNode0.createNewNode(configNode0);
      assertEquals(1, configurationNode0.getAttributeCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConfigNode configNode0 = new ConfigNode("jfO5>{D6<ItH]*KzHL:");
      ConfigurationNode configurationNode0 = configNode0.createNewNode();
      assertEquals("jfO5>{D6<ItH]*KzHL:", configurationNode0.getType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConfigNode configNode0 = new ConfigNode("org.apache.manifoldcf.core.interfaces.ConfigurationNode");
      configNode0.addChild(0, configNode0);
      // Undeclared exception!
      try { 
        configNode0.getChild((-1359));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConfigNode configNode0 = new ConfigNode("'");
      // Undeclared exception!
      try { 
        configNode0.createNewNode((ConfigurationNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ConfigurationNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConfigNode configNode0 = null;
      try {
        configNode0 = new ConfigNode((ConfigurationNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ConfigurationNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConfigNode configNode0 = new ConfigNode("org.apache.manifoldcf.core.interfaces.ConfigurationNode");
      // Undeclared exception!
      try { 
        configNode0.getChild((-1359));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ConfigurationNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConfigNode configNode0 = new ConfigNode("");
      configNode0.addChild(0, configNode0);
      ConfigNode configNode1 = null;
      try {
        configNode1 = new ConfigNode(configNode0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
