/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 21 20:57:25 GMT 2022
 */

package org.apache.manifoldcf.core.interfaces;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.apache.manifoldcf.core.interfaces.ResultSpecification;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ResultSpecification_ESTest extends ResultSpecification_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultSpecification.ColumnSpecification resultSpecification_ColumnSpecification0 = new ResultSpecification.ColumnSpecification();
      resultSpecification_ColumnSpecification0.setForm((-748));
      ResultSpecification.ColumnSpecification resultSpecification_ColumnSpecification1 = new ResultSpecification.ColumnSpecification();
      boolean boolean0 = resultSpecification_ColumnSpecification1.equals(resultSpecification_ColumnSpecification0);
      assertEquals("-748", resultSpecification_ColumnSpecification0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.setForm("", 4769);
      resultSpecification0.setForm("", (-1707));
      assertEquals(1, ResultSpecification.FORM_STRING);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.setForm("0", 2608);
      resultSpecification0.setForm("OUAo|Q@E.Z4", (-1));
      String string0 = resultSpecification0.toString();
      assertEquals("2-0-2608-OUAo|Q@E.Z4--1", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      HashMap<ResultSpecification, ResultSpecification> hashMap0 = new HashMap<ResultSpecification, ResultSpecification>();
      resultSpecification0.columnSpecifications = hashMap0;
      resultSpecification0.setForm("0", (-3628));
      hashMap0.put(resultSpecification0, resultSpecification0);
      // Undeclared exception!
      try { 
        resultSpecification0.toString();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.manifoldcf.core.interfaces.ResultSpecification cannot be cast to java.lang.String
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ResultSpecification", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.setForm("", 4769);
      ResultSpecification resultSpecification1 = new ResultSpecification();
      boolean boolean0 = resultSpecification0.equals(resultSpecification1);
      assertFalse(resultSpecification1.equals((Object)resultSpecification0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.setForm("", (-1589));
      resultSpecification0.setForm("H_z=KGf[N2=Gx", 2);
      resultSpecification0.hashCode();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.setForm("dl-ii>7-mYN96V", (-621));
      int int0 = resultSpecification0.getForm("dl-ii>7-mYN96V");
      assertEquals((-621), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.columnSpecifications = null;
      // Undeclared exception!
      try { 
        resultSpecification0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ResultSpecification", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.columnSpecifications = null;
      // Undeclared exception!
      try { 
        resultSpecification0.setForm("9=L]", 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ResultSpecification", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      HashMap<Object, ResultSpecification> hashMap0 = new HashMap<Object, ResultSpecification>();
      hashMap0.put("j^&7", resultSpecification0);
      resultSpecification0.columnSpecifications = hashMap0;
      // Undeclared exception!
      try { 
        resultSpecification0.setForm("j^&7", (-1304));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.manifoldcf.core.interfaces.ResultSpecification cannot be cast to org.apache.manifoldcf.core.interfaces.ResultSpecification$ColumnSpecification
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ResultSpecification", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.columnSpecifications = null;
      // Undeclared exception!
      try { 
        resultSpecification0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ResultSpecification", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      HashMap<ResultSpecification, ResultSpecification> hashMap0 = new HashMap<ResultSpecification, ResultSpecification>();
      hashMap0.putIfAbsent(resultSpecification0, resultSpecification0);
      resultSpecification0.columnSpecifications = hashMap0;
      // Undeclared exception!
      try { 
        resultSpecification0.hashCode();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.manifoldcf.core.interfaces.ResultSpecification cannot be cast to java.lang.String
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ResultSpecification", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.columnSpecifications = null;
      // Undeclared exception!
      try { 
        resultSpecification0.equals(resultSpecification0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ResultSpecification", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Object object0 = new Object();
      hashMap0.put(resultSpecification0, object0);
      resultSpecification0.columnSpecifications = hashMap0;
      // Undeclared exception!
      try { 
        resultSpecification0.equals(resultSpecification0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.manifoldcf.core.interfaces.ResultSpecification cannot be cast to java.lang.String
         //
         verifyException("org.apache.manifoldcf.core.interfaces.ResultSpecification", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultSpecification.ColumnSpecification resultSpecification_ColumnSpecification0 = new ResultSpecification.ColumnSpecification();
      resultSpecification_ColumnSpecification0.setForm((-748));
      ResultSpecification.ColumnSpecification resultSpecification_ColumnSpecification1 = new ResultSpecification.ColumnSpecification();
      boolean boolean0 = resultSpecification_ColumnSpecification0.equals(resultSpecification_ColumnSpecification1);
      assertEquals((-748), resultSpecification_ColumnSpecification0.getForm());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultSpecification.ColumnSpecification resultSpecification_ColumnSpecification0 = new ResultSpecification.ColumnSpecification();
      boolean boolean0 = resultSpecification_ColumnSpecification0.equals(resultSpecification_ColumnSpecification0);
      assertEquals(0, resultSpecification_ColumnSpecification0.getForm());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultSpecification.ColumnSpecification resultSpecification_ColumnSpecification0 = new ResultSpecification.ColumnSpecification();
      int int0 = resultSpecification_ColumnSpecification0.getForm();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      HashMap<Object, ResultSpecification> hashMap0 = new HashMap<Object, ResultSpecification>();
      resultSpecification0.setForm("Om>^7", (-729));
      ResultSpecification resultSpecification1 = hashMap0.put(resultSpecification0.columnSpecifications, resultSpecification0);
      assertNull(resultSpecification1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultSpecification.ColumnSpecification resultSpecification_ColumnSpecification0 = new ResultSpecification.ColumnSpecification();
      String string0 = resultSpecification_ColumnSpecification0.toString();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      ResultSpecification.ColumnSpecification resultSpecification_ColumnSpecification0 = new ResultSpecification.ColumnSpecification();
      boolean boolean0 = resultSpecification_ColumnSpecification0.equals(resultSpecification0);
      assertFalse(boolean0);
      assertEquals("0", resultSpecification_ColumnSpecification0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      int int0 = resultSpecification0.getForm((String) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.setForm("m>^7", (-726));
      resultSpecification0.setForm("m>^7", 0);
      assertEquals(1, ResultSpecification.FORM_STRING);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.setForm("m>^7", 0);
      assertEquals(2, ResultSpecification.FORM_STREAM);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.setForm("me", (-12931));
      resultSpecification0.setForm("me", 2);
      assertEquals(0, ResultSpecification.FORM_DEFAULT);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.setForm("org.apache.manifoldcf.core.interfaces.ResultSpecification$ColumnSpecification", 2608);
      ResultSpecification resultSpecification1 = new ResultSpecification();
      resultSpecification1.setForm("org.apache.manifoldcf.core.interfaces.ResultSpecification$ColumnSpecification", 2);
      boolean boolean0 = resultSpecification1.equals(resultSpecification0);
      assertFalse(resultSpecification0.equals((Object)resultSpecification1));
      assertFalse(resultSpecification1.equals((Object)resultSpecification0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.setForm("org.apache.manifoldcf.core.interfaces.REsultSpecification", 146);
      ResultSpecification resultSpecification1 = new ResultSpecification();
      resultSpecification1.setForm("Collector", (-350));
      boolean boolean0 = resultSpecification0.equals(resultSpecification1);
      assertFalse(resultSpecification1.equals((Object)resultSpecification0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.setForm("Om>^7", (-729));
      boolean boolean0 = resultSpecification0.equals(resultSpecification0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      ResultSpecification resultSpecification1 = new ResultSpecification();
      assertTrue(resultSpecification1.equals((Object)resultSpecification0));
      
      resultSpecification1.setForm("", 1);
      boolean boolean0 = resultSpecification0.equals(resultSpecification1);
      assertFalse(resultSpecification1.equals((Object)resultSpecification0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      boolean boolean0 = resultSpecification0.equals("Om>^7");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultSpecification resultSpecification0 = new ResultSpecification();
      resultSpecification0.setForm("", 2);
      int int0 = resultSpecification0.getForm("");
      assertEquals(2, int0);
  }
}
