<?xml version="1.0" encoding="utf-8"?>
<BugCollection sequence='0' release='' analysisTimestamp='1650026850939' version='4.6.0' timestamp='1650026848812'><Project projectName='Wicket Util'><Jar>/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/wicket/wicket-util/target/classes</Jar><AuxClasspathEntry>/home/pedro/.m2/repository/junit/junit/4.12/junit-4.12.jar</AuxClasspathEntry><AuxClasspathEntry>/home/pedro/.m2/repository/commons-fileupload/commons-fileupload/1.3.3/commons-fileupload-1.3.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/pedro/.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar</AuxClasspathEntry><AuxClasspathEntry>/home/pedro/.m2/repository/org/apache/commons/commons-collections4/4.1/commons-collections4-4.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/pedro/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/pedro/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar</AuxClasspathEntry><AuxClasspathEntry>/home/pedro/.m2/repository/org/hamcrest/hamcrest-junit/2.0.0.0/hamcrest-junit-2.0.0.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/pedro/.m2/repository/org/hamcrest/java-hamcrest/2.0.0.0/java-hamcrest-2.0.0.0.jar</AuxClasspathEntry><Plugin id='com.h3xstream.findsecbugs' enabled='true'></Plugin><Plugin id='com.mebigfatguy.fbcontrib' enabled='true'></Plugin><SrcDir>/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/wicket/wicket-util/src/main/java</SrcDir><SrcDir>/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/wicket/wicket-util/target/generated-sources/annotations</SrcDir><WrkDir>/pedro/desenvolvimento/workspaces/workspaces-doutorado/workspace-rv/RVSec-replication-package/ApacheCryptoAPIBench/apache_codes/wicket/wicket-util/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='6e42e7de2258f7d9d8d1b8336e06a1b5' cweid='502' rank='15' abbrev='SECDESGAD' category='SECURITY' priority='3' type='DESERIALIZATION_GADGET' instanceOccurrenceMax='0'><ShortMessage>This class could be used as deserialization gadget</ShortMessage><LongMessage>This class could make application using serialization vulnerable</LongMessage><Class classname='org.apache.wicket.util.collections.ConcurrentHashSet' primary='true'><SourceLine classname='org.apache.wicket.util.collections.ConcurrentHashSet' start='45' end='221' sourcepath='org/apache/wicket/util/collections/ConcurrentHashSet.java' sourcefile='ConcurrentHashSet.java'><Message>At ConcurrentHashSet.java:[lines 45-221]</Message></SourceLine><Message>In class org.apache.wicket.util.collections.ConcurrentHashSet</Message></Class><SourceLine synthetic='true' classname='org.apache.wicket.util.collections.ConcurrentHashSet' start='45' end='221' sourcepath='org/apache/wicket/util/collections/ConcurrentHashSet.java' sourcefile='ConcurrentHashSet.java'><Message>At ConcurrentHashSet.java:[lines 45-221]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5d4b9716bcbdedd23bf70b01c4b5840c' cweid='502' rank='15' abbrev='SECDESGAD' category='SECURITY' priority='3' type='DESERIALIZATION_GADGET' instanceOccurrenceMax='0'><ShortMessage>This class could be used as deserialization gadget</ShortMessage><LongMessage>This class could make application using serialization vulnerable</LongMessage><Class classname='org.apache.wicket.util.collections.IntHashMap' primary='true'><SourceLine classname='org.apache.wicket.util.collections.IntHashMap' start='41' end='1178' sourcepath='org/apache/wicket/util/collections/IntHashMap.java' sourcefile='IntHashMap.java'><Message>At IntHashMap.java:[lines 41-1178]</Message></SourceLine><Message>In class org.apache.wicket.util.collections.IntHashMap</Message></Class><SourceLine synthetic='true' classname='org.apache.wicket.util.collections.IntHashMap' start='41' end='1178' sourcepath='org/apache/wicket/util/collections/IntHashMap.java' sourcefile='IntHashMap.java'><Message>At IntHashMap.java:[lines 41-1178]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='23339215a56169f295bc05d8f58260c5' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.crypt.AbstractCrypt' primary='true'><SourceLine classname='org.apache.wicket.util.crypt.AbstractCrypt' start='41' end='177' sourcepath='org/apache/wicket/util/crypt/AbstractCrypt.java' sourcefile='AbstractCrypt.java'><Message>At AbstractCrypt.java:[lines 41-177]</Message></SourceLine><Message>In class org.apache.wicket.util.crypt.AbstractCrypt</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.crypt.AbstractCrypt' signature='(Ljava/lang/String;)Ljava/lang/String;' name='decryptUrlSafe' primary='true'><SourceLine endBytecode='161' classname='org.apache.wicket.util.crypt.AbstractCrypt' start='66' end='72' sourcepath='org/apache/wicket/util/crypt/AbstractCrypt.java' sourcefile='AbstractCrypt.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.crypt.AbstractCrypt.decryptUrlSafe(String)</Message></Method><SourceLine endBytecode='47' classname='org.apache.wicket.util.crypt.AbstractCrypt' start='71' end='71' sourcepath='org/apache/wicket/util/crypt/AbstractCrypt.java' sourcefile='AbstractCrypt.java' startBytecode='47' primary='true'><Message>At AbstractCrypt.java:[line 71]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/crypt/AbstractCrypt.decryptUrlSafe(Ljava/lang/String;)Ljava/lang/String; parameter 0'><Message>Unknown source org/apache/wicket/util/crypt/AbstractCrypt.decryptUrlSafe(Ljava/lang/String;)Ljava/lang/String; parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String><SourceLine endBytecode='43' classname='org.apache.wicket.util.crypt.AbstractCrypt' start='71' end='71' sourcepath='org/apache/wicket/util/crypt/AbstractCrypt.java' sourcefile='AbstractCrypt.java' startBytecode='43'><Message>At AbstractCrypt.java:[line 71]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3048ce96eea77f7a0edaf30f1ce3982e' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.crypt.AbstractCrypt' primary='true'><SourceLine classname='org.apache.wicket.util.crypt.AbstractCrypt' start='41' end='177' sourcepath='org/apache/wicket/util/crypt/AbstractCrypt.java' sourcefile='AbstractCrypt.java'><Message>At AbstractCrypt.java:[lines 41-177]</Message></SourceLine><Message>In class org.apache.wicket.util.crypt.AbstractCrypt</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.crypt.AbstractCrypt' signature='(Ljava/lang/String;)Ljava/lang/String;' name='encryptUrlSafe' primary='true'><SourceLine endBytecode='273' classname='org.apache.wicket.util.crypt.AbstractCrypt' start='88' end='101' sourcepath='org/apache/wicket/util/crypt/AbstractCrypt.java' sourcefile='AbstractCrypt.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.crypt.AbstractCrypt.encryptUrlSafe(String)</Message></Method><SourceLine endBytecode='61' classname='org.apache.wicket.util.crypt.AbstractCrypt' start='95' end='95' sourcepath='org/apache/wicket/util/crypt/AbstractCrypt.java' sourcefile='AbstractCrypt.java' startBytecode='61' primary='true'><Message>At AbstractCrypt.java:[line 95]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/crypt/AbstractCrypt.encryptUrlSafe(Ljava/lang/String;)Ljava/lang/String; parameter 0'><Message>Unknown source org/apache/wicket/util/crypt/AbstractCrypt.encryptUrlSafe(Ljava/lang/String;)Ljava/lang/String; parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String><SourceLine endBytecode='49' classname='org.apache.wicket.util.crypt.AbstractCrypt' start='95' end='95' sourcepath='org/apache/wicket/util/crypt/AbstractCrypt.java' sourcefile='AbstractCrypt.java' startBytecode='49'><Message>At AbstractCrypt.java:[line 95]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='3048ce96eea77f7a0edaf30f1ce3982e' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.crypt.AbstractCrypt' primary='true'><SourceLine classname='org.apache.wicket.util.crypt.AbstractCrypt' start='41' end='177' sourcepath='org/apache/wicket/util/crypt/AbstractCrypt.java' sourcefile='AbstractCrypt.java'><Message>At AbstractCrypt.java:[lines 41-177]</Message></SourceLine><Message>In class org.apache.wicket.util.crypt.AbstractCrypt</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.crypt.AbstractCrypt' signature='(Ljava/lang/String;)Ljava/lang/String;' name='encryptUrlSafe' primary='true'><SourceLine endBytecode='273' classname='org.apache.wicket.util.crypt.AbstractCrypt' start='88' end='101' sourcepath='org/apache/wicket/util/crypt/AbstractCrypt.java' sourcefile='AbstractCrypt.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.crypt.AbstractCrypt.encryptUrlSafe(String)</Message></Method><SourceLine endBytecode='97' classname='org.apache.wicket.util.crypt.AbstractCrypt' start='100' end='100' sourcepath='org/apache/wicket/util/crypt/AbstractCrypt.java' sourcefile='AbstractCrypt.java' startBytecode='97' primary='true'><Message>At AbstractCrypt.java:[line 100]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/crypt/AbstractCrypt.encryptUrlSafe(Ljava/lang/String;)Ljava/lang/String; parameter 0'><Message>Unknown source org/apache/wicket/util/crypt/AbstractCrypt.encryptUrlSafe(Ljava/lang/String;)Ljava/lang/String; parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String><SourceLine endBytecode='93' classname='org.apache.wicket.util.crypt.AbstractCrypt' start='100' end='100' sourcepath='org/apache/wicket/util/crypt/AbstractCrypt.java' sourcefile='AbstractCrypt.java' startBytecode='93'><Message>At AbstractCrypt.java:[line 100]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a6a49417595767476d2bc7a1d0abdb08' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.crypt.ClassCryptFactory' primary='true'><SourceLine classname='org.apache.wicket.util.crypt.ClassCryptFactory' start='34' end='93' sourcepath='org/apache/wicket/util/crypt/ClassCryptFactory.java' sourcefile='ClassCryptFactory.java'><Message>At ClassCryptFactory.java:[lines 34-93]</Message></SourceLine><Message>In class org.apache.wicket.util.crypt.ClassCryptFactory</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.crypt.ClassCryptFactory' signature='()Lorg/apache/wicket/util/crypt/ICrypt;' name='newCrypt' primary='true'><SourceLine endBytecode='424' classname='org.apache.wicket.util.crypt.ClassCryptFactory' start='65' end='93' sourcepath='org/apache/wicket/util/crypt/ClassCryptFactory.java' sourcefile='ClassCryptFactory.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.crypt.ClassCryptFactory.newCrypt()</Message></Method><SourceLine endBytecode='23' classname='org.apache.wicket.util.crypt.ClassCryptFactory' start='66' end='66' sourcepath='org/apache/wicket/util/crypt/ClassCryptFactory.java' sourcefile='ClassCryptFactory.java' startBytecode='23' primary='true'><Message>At ClassCryptFactory.java:[line 66]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/Class.newInstance()Ljava/lang/Object;'><Message>Unknown source java/lang/Class.newInstance()Ljava/lang/Object;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='965a98786415840e24ad83c48ae30e60' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.warn(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.crypt.ClassCryptFactory' primary='true'><SourceLine classname='org.apache.wicket.util.crypt.ClassCryptFactory' start='34' end='93' sourcepath='org/apache/wicket/util/crypt/ClassCryptFactory.java' sourcefile='ClassCryptFactory.java'><Message>At ClassCryptFactory.java:[lines 34-93]</Message></SourceLine><Message>In class org.apache.wicket.util.crypt.ClassCryptFactory</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.crypt.ClassCryptFactory' signature='()Lorg/apache/wicket/util/crypt/ICrypt;' name='newCrypt' primary='true'><SourceLine endBytecode='424' classname='org.apache.wicket.util.crypt.ClassCryptFactory' start='65' end='93' sourcepath='org/apache/wicket/util/crypt/ClassCryptFactory.java' sourcefile='ClassCryptFactory.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.crypt.ClassCryptFactory.newCrypt()</Message></Method><SourceLine endBytecode='86' classname='org.apache.wicket.util.crypt.ClassCryptFactory' start='74' end='74' sourcepath='org/apache/wicket/util/crypt/ClassCryptFactory.java' sourcefile='ClassCryptFactory.java' startBytecode='86' primary='true'><Message>At ClassCryptFactory.java:[line 74]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.warn(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.warn(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/crypt/ClassCryptFactory.cryptClass'><Message>Unknown source org/apache/wicket/util/crypt/ClassCryptFactory.cryptClass</Message></String><SourceLine endBytecode='77' classname='org.apache.wicket.util.crypt.ClassCryptFactory' start='74' end='74' sourcepath='org/apache/wicket/util/crypt/ClassCryptFactory.java' sourcefile='ClassCryptFactory.java' startBytecode='77'><Message>At ClassCryptFactory.java:[line 74]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='31845840328090555fb0a054d61ebe40' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.warn(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.crypt.ClassCryptFactory' primary='true'><SourceLine classname='org.apache.wicket.util.crypt.ClassCryptFactory' start='34' end='93' sourcepath='org/apache/wicket/util/crypt/ClassCryptFactory.java' sourcefile='ClassCryptFactory.java'><Message>At ClassCryptFactory.java:[lines 34-93]</Message></SourceLine><Message>In class org.apache.wicket.util.crypt.ClassCryptFactory</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.crypt.ClassCryptFactory' signature='()Lorg/apache/wicket/util/crypt/ICrypt;' name='newCrypt' primary='true'><SourceLine endBytecode='424' classname='org.apache.wicket.util.crypt.ClassCryptFactory' start='65' end='93' sourcepath='org/apache/wicket/util/crypt/ClassCryptFactory.java' sourcefile='ClassCryptFactory.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.crypt.ClassCryptFactory.newCrypt()</Message></Method><SourceLine endBytecode='202' classname='org.apache.wicket.util.crypt.ClassCryptFactory' start='81' end='81' sourcepath='org/apache/wicket/util/crypt/ClassCryptFactory.java' sourcefile='ClassCryptFactory.java' startBytecode='202' primary='true'><Message>At ClassCryptFactory.java:[line 81]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.warn(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.warn(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/Exception.getMessage()Ljava/lang/String;'><Message>Unknown source java/lang/Exception.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='196' classname='org.apache.wicket.util.crypt.ClassCryptFactory' start='81' end='81' sourcepath='org/apache/wicket/util/crypt/ClassCryptFactory.java' sourcefile='ClassCryptFactory.java' startBytecode='196'><Message>At ClassCryptFactory.java:[line 81]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='becfcf09974e6bb80fd3f2d23056bb39' cweid='330' rank='12' abbrev='SECPR' category='SECURITY' priority='2' type='PREDICTABLE_RANDOM' instanceOccurrenceMax='0'><ShortMessage>Predictable pseudorandom number generator</ShortMessage><LongMessage>This random generator (java.util.Random) is predictable</LongMessage><Class classname='org.apache.wicket.util.diff.Diff' primary='true'><SourceLine classname='org.apache.wicket.util.diff.Diff' start='105' end='386' sourcepath='org/apache/wicket/util/diff/Diff.java' sourcefile='Diff.java'><Message>At Diff.java:[lines 105-386]</Message></SourceLine><Message>In class org.apache.wicket.util.diff.Diff</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.diff.Diff' signature='([Ljava/lang/Object;J)[Ljava/lang/Object;' name='randomEdit' primary='true'><SourceLine endBytecode='465' classname='org.apache.wicket.util.diff.Diff' start='306' end='326' sourcepath='org/apache/wicket/util/diff/Diff.java' sourcefile='Diff.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.diff.Diff.randomEdit(Object[], long)</Message></Method><SourceLine endBytecode='17' classname='org.apache.wicket.util.diff.Diff' start='307' end='307' sourcepath='org/apache/wicket/util/diff/Diff.java' sourcefile='Diff.java' startBytecode='17' primary='true'><Message>At Diff.java:[line 307]</Message></SourceLine><String value='java.util.Random'><Message>Value java.util.Random</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6b1c4ad878662453fe6679672c941fb1' cweid='330' rank='12' abbrev='SECPR' category='SECURITY' priority='2' type='PREDICTABLE_RANDOM' instanceOccurrenceMax='0'><ShortMessage>Predictable pseudorandom number generator</ShortMessage><LongMessage>This random generator (java.util.Random) is predictable</LongMessage><Class classname='org.apache.wicket.util.diff.Diff' primary='true'><SourceLine classname='org.apache.wicket.util.diff.Diff' start='105' end='386' sourcepath='org/apache/wicket/util/diff/Diff.java' sourcefile='Diff.java'><Message>At Diff.java:[lines 105-386]</Message></SourceLine><Message>In class org.apache.wicket.util.diff.Diff</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.diff.Diff' signature='(IJ)[Ljava/lang/Object;' name='randomSequence' primary='true'><SourceLine endBytecode='168' classname='org.apache.wicket.util.diff.Diff' start='380' end='386' sourcepath='org/apache/wicket/util/diff/Diff.java' sourcefile='Diff.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.diff.Diff.randomSequence(int, long)</Message></Method><SourceLine endBytecode='10' classname='org.apache.wicket.util.diff.Diff' start='381' end='381' sourcepath='org/apache/wicket/util/diff/Diff.java' sourcefile='Diff.java' startBytecode='10' primary='true'><Message>At Diff.java:[line 381]</Message></SourceLine><String value='java.util.Random'><Message>Value java.util.Random</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f139e47f5aace48c7098c5f029b1f2aa' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.encoding.UrlDecoder' primary='true'><SourceLine classname='org.apache.wicket.util.encoding.UrlDecoder' start='39' end='184' sourcepath='org/apache/wicket/util/encoding/UrlDecoder.java' sourcefile='UrlDecoder.java'><Message>At UrlDecoder.java:[lines 39-184]</Message></SourceLine><Message>In class org.apache.wicket.util.encoding.UrlDecoder</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.encoding.UrlDecoder' signature='(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' name='decode' primary='true'><SourceLine endBytecode='829' classname='org.apache.wicket.util.encoding.UrlDecoder' start='93' end='184' sourcepath='org/apache/wicket/util/encoding/UrlDecoder.java' sourcefile='UrlDecoder.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.encoding.UrlDecoder.decode(String, String)</Message></Method><SourceLine endBytecode='232' classname='org.apache.wicket.util.encoding.UrlDecoder' start='151' end='151' sourcepath='org/apache/wicket/util/encoding/UrlDecoder.java' sourcefile='UrlDecoder.java' startBytecode='232' primary='true'><Message>At UrlDecoder.java:[line 151]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/encoding/UrlDecoder.decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1'><Message>Unknown source org/apache/wicket/util/encoding/UrlDecoder.decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String><SourceLine endBytecode='6' classname='org.apache.wicket.util.encoding.UrlDecoder' start='80' end='80' sourcepath='org/apache/wicket/util/encoding/UrlDecoder.java' sourcefile='UrlDecoder.java' startBytecode='6'><Message>At UrlDecoder.java:[line 80]</Message></SourceLine><SourceLine endBytecode='3' classname='org.apache.wicket.util.file.Files' start='366' end='366' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='3'><Message>At Files.java:[line 366]</Message></SourceLine><SourceLine endBytecode='19' classname='org.apache.wicket.util.file.Files' start='367' end='367' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='19'><Message>At Files.java:[line 367]</Message></SourceLine><SourceLine endBytecode='1' classname='org.apache.wicket.util.io.Connections' start='50' end='50' sourcepath='org/apache/wicket/util/io/Connections.java' sourcefile='Connections.java' startBytecode='1'><Message>At Connections.java:[line 50]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2e97751326ba9ad91299eaafc3561480' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.encoding.UrlDecoder' primary='true'><SourceLine classname='org.apache.wicket.util.encoding.UrlDecoder' start='39' end='184' sourcepath='org/apache/wicket/util/encoding/UrlDecoder.java' sourcefile='UrlDecoder.java'><Message>At UrlDecoder.java:[lines 39-184]</Message></SourceLine><Message>In class org.apache.wicket.util.encoding.UrlDecoder</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.encoding.UrlDecoder' signature='(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' name='decode' primary='true'><SourceLine endBytecode='829' classname='org.apache.wicket.util.encoding.UrlDecoder' start='93' end='184' sourcepath='org/apache/wicket/util/encoding/UrlDecoder.java' sourcefile='UrlDecoder.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.encoding.UrlDecoder.decode(String, String)</Message></Method><SourceLine endBytecode='293' classname='org.apache.wicket.util.encoding.UrlDecoder' start='168' end='168' sourcepath='org/apache/wicket/util/encoding/UrlDecoder.java' sourcefile='UrlDecoder.java' startBytecode='293' primary='true'><Message>At UrlDecoder.java:[line 168]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/NumberFormatException.getMessage()Ljava/lang/String;'><Message>Unknown source java/lang/NumberFormatException.getMessage()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ceb3e25e84ef4efa0595c6f16950ea71' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.File' primary='true'><SourceLine classname='org.apache.wicket.util.file.File' start='60' end='327' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java'><Message>At File.java:[lines 60-327]</Message></SourceLine><Message>In class org.apache.wicket.util.file.File</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.File' signature='(Ljava/io/File;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='64' classname='org.apache.wicket.util.file.File' start='84' end='85' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.file.File(File)</Message></Method><SourceLine endBytecode='5' classname='org.apache.wicket.util.file.File' start='84' end='84' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='5' primary='true'><Message>At File.java:[line 84]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/File.getAbsolutePath()Ljava/lang/String;'><Message>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7f9c9c50b65cb1105653a7857de74030' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.File' primary='true'><SourceLine classname='org.apache.wicket.util.file.File' start='60' end='327' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java'><Message>At File.java:[lines 60-327]</Message></SourceLine><Message>In class org.apache.wicket.util.file.File</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.File' signature='(Ljava/io/File;Ljava/lang/String;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='72' classname='org.apache.wicket.util.file.File' start='73' end='74' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.file.File(File, String)</Message></Method><SourceLine endBytecode='3' classname='org.apache.wicket.util.file.File' start='73' end='73' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='3' primary='true'><Message>At File.java:[line 73]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V parameter 0'><Message>Unknown source org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3961c0d464c4fe1745b1deb336c6aec5' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.File' primary='true'><SourceLine classname='org.apache.wicket.util.file.File' start='60' end='327' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java'><Message>At File.java:[lines 60-327]</Message></SourceLine><Message>In class org.apache.wicket.util.file.File</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.File' signature='(Ljava/lang/String;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='61' classname='org.apache.wicket.util.file.File' start='95' end='96' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.file.File(String)</Message></Method><SourceLine endBytecode='2' classname='org.apache.wicket.util.file.File' start='95' end='95' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='2' primary='true'><Message>At File.java:[line 95]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;)V parameter 0'><Message>Unknown source org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;)V parameter 0</Message></String><SourceLine endBytecode='9' classname='org.apache.wicket.util.file.FileCleanerTrackerAdapter' start='57' end='57' sourcepath='org/apache/wicket/util/file/FileCleanerTrackerAdapter.java' sourcefile='FileCleanerTrackerAdapter.java' startBytecode='9'><Message>At FileCleanerTrackerAdapter.java:[line 57]</Message></SourceLine><SourceLine endBytecode='9' classname='org.apache.wicket.util.file.FileCleanerTrackerAdapter' start='63' end='63' sourcepath='org/apache/wicket/util/file/FileCleanerTrackerAdapter.java' sourcefile='FileCleanerTrackerAdapter.java' startBytecode='9'><Message>At FileCleanerTrackerAdapter.java:[line 63]</Message></SourceLine><SourceLine endBytecode='5' classname='org.apache.wicket.util.file.Folder' start='100' end='100' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='5'><Message>At Folder.java:[line 100]</Message></SourceLine><SourceLine endBytecode='2' classname='org.apache.wicket.util.file.Folder' start='111' end='111' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='2'><Message>At Folder.java:[line 111]</Message></SourceLine><SourceLine endBytecode='6' classname='org.apache.wicket.util.file.Path' start='43' end='43' sourcepath='org/apache/wicket/util/file/Path.java' sourcefile='Path.java' startBytecode='6'><Message>At Path.java:[line 43]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='80b35b4a5bc710bdc44de736b2603994' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.File' primary='true'><SourceLine classname='org.apache.wicket.util.file.File' start='60' end='327' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java'><Message>At File.java:[lines 60-327]</Message></SourceLine><Message>In class org.apache.wicket.util.file.File</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.File' signature='(Ljava/lang/String;Ljava/lang/String;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='72' classname='org.apache.wicket.util.file.File' start='108' end='109' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.file.File(String, String)</Message></Method><SourceLine endBytecode='3' classname='org.apache.wicket.util.file.File' start='108' end='108' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='3' primary='true'><Message>At File.java:[line 108]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V parameter 0'><Message>Unknown source org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String><SourceLine endBytecode='3' classname='org.apache.wicket.util.file.Folder' start='124' end='124' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='3'><Message>At Folder.java:[line 124]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3d15333b0a3e44166583ceca93776ab8' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (java/io/File.&lt;init&gt;(Ljava/net/URI;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.File' primary='true'><SourceLine classname='org.apache.wicket.util.file.File' start='60' end='327' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java'><Message>At File.java:[lines 60-327]</Message></SourceLine><Message>In class org.apache.wicket.util.file.File</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.File' signature='(Ljava/net/URI;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='61' classname='org.apache.wicket.util.file.File' start='119' end='120' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.file.File(URI)</Message></Method><SourceLine endBytecode='2' classname='org.apache.wicket.util.file.File' start='119' end='119' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='2' primary='true'><Message>At File.java:[line 119]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/net/URI;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/net/URI;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/net/URI;)V parameter 0'><Message>Unknown source org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/net/URI;)V parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String><SourceLine endBytecode='2' classname='org.apache.wicket.util.file.Folder' start='135' end='135' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='2'><Message>At Folder.java:[line 135]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='55032197e526bccae7896dcc5de8ce84' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.File' primary='true'><SourceLine classname='org.apache.wicket.util.file.File' start='60' end='327' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java'><Message>At File.java:[lines 60-327]</Message></SourceLine><Message>In class org.apache.wicket.util.file.File</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.File' signature='(Lorg/apache/wicket/util/file/File;Ljava/lang/String;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='72' classname='org.apache.wicket.util.file.File' start='60' end='61' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.file.File(File, String)</Message></Method><SourceLine endBytecode='3' classname='org.apache.wicket.util.file.File' start='60' end='60' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='3' primary='true'><Message>At File.java:[line 60]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/File.&lt;init&gt;(Lorg/apache/wicket/util/file/File;Ljava/lang/String;)V parameter 0'><Message>Unknown source org/apache/wicket/util/file/File.&lt;init&gt;(Lorg/apache/wicket/util/file/File;Ljava/lang/String;)V parameter 0</Message></String><SourceLine endBytecode='6' classname='org.apache.wicket.util.file.File' start='129' end='129' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='6'><Message>At File.java:[line 129]</Message></SourceLine><SourceLine endBytecode='3' classname='org.apache.wicket.util.file.Folder' start='89' end='89' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='3'><Message>At Folder.java:[line 89]</Message></SourceLine><SourceLine endBytecode='6' classname='org.apache.wicket.util.file.Folder' start='160' end='160' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='6'><Message>At Folder.java:[line 160]</Message></SourceLine><SourceLine endBytecode='9' classname='org.apache.wicket.util.file.Path' start='73' end='73' sourcepath='org/apache/wicket/util/file/Path.java' sourcefile='Path.java' startBytecode='9'><Message>At Path.java:[line 73]</Message></SourceLine><SourceLine endBytecode='103' classname='org.apache.wicket.util.resource.ZipResourceStream' start='143' end='143' sourcepath='org/apache/wicket/util/resource/ZipResourceStream.java' sourcefile='ZipResourceStream.java' startBytecode='103'><Message>At ZipResourceStream.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e1d322594b56eb408e2e28832e5112cf' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.File' primary='true'><SourceLine classname='org.apache.wicket.util.file.File' start='60' end='327' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java'><Message>At File.java:[lines 60-327]</Message></SourceLine><Message>In class org.apache.wicket.util.file.File</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.File' signature='()Lorg/apache/wicket/util/file/Folder;' name='getParentFolder' primary='true'><SourceLine endBytecode='53' classname='org.apache.wicket.util.file.File' start='150' end='150' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.file.File.getParentFolder()</Message></Method><SourceLine endBytecode='8' classname='org.apache.wicket.util.file.File' start='150' end='150' sourcepath='org/apache/wicket/util/file/File.java' sourcefile='File.java' startBytecode='8' primary='true'><Message>At File.java:[line 150]</Message></SourceLine><String role='Sink method' value='org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/File.getParent()Ljava/lang/String;'><Message>Unknown source org/apache/wicket/util/file/File.getParent()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f0d2a275cc28ce6be0ff787034c297aa' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.FileCleanerTrackerAdapter' primary='true'><SourceLine classname='org.apache.wicket.util.file.FileCleanerTrackerAdapter' start='38' end='64' sourcepath='org/apache/wicket/util/file/FileCleanerTrackerAdapter.java' sourcefile='FileCleanerTrackerAdapter.java'><Message>At FileCleanerTrackerAdapter.java:[lines 38-64]</Message></SourceLine><Message>In class org.apache.wicket.util.file.FileCleanerTrackerAdapter</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.FileCleanerTrackerAdapter' signature='(Ljava/lang/String;Ljava/lang/Object;)V' name='track' primary='true'><SourceLine endBytecode='84' classname='org.apache.wicket.util.file.FileCleanerTrackerAdapter' start='57' end='58' sourcepath='org/apache/wicket/util/file/FileCleanerTrackerAdapter.java' sourcefile='FileCleanerTrackerAdapter.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.file.FileCleanerTrackerAdapter.track(String, Object)</Message></Method><SourceLine endBytecode='9' classname='org.apache.wicket.util.file.FileCleanerTrackerAdapter' start='57' end='57' sourcepath='org/apache/wicket/util/file/FileCleanerTrackerAdapter.java' sourcefile='FileCleanerTrackerAdapter.java' startBytecode='9' primary='true'><Message>At FileCleanerTrackerAdapter.java:[line 57]</Message></SourceLine><String role='Sink method' value='org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/FileCleanerTrackerAdapter.track(Ljava/lang/String;Ljava/lang/Object;)V parameter 1'><Message>Unknown source org/apache/wicket/util/file/FileCleanerTrackerAdapter.track(Ljava/lang/String;Ljava/lang/Object;)V parameter 1</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='713396fa691a01296d277c18c51f4c0d' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.FileCleanerTrackerAdapter' primary='true'><SourceLine classname='org.apache.wicket.util.file.FileCleanerTrackerAdapter' start='38' end='64' sourcepath='org/apache/wicket/util/file/FileCleanerTrackerAdapter.java' sourcefile='FileCleanerTrackerAdapter.java'><Message>At FileCleanerTrackerAdapter.java:[lines 38-64]</Message></SourceLine><Message>In class org.apache.wicket.util.file.FileCleanerTrackerAdapter</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.FileCleanerTrackerAdapter' signature='(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V' name='track' primary='true'><SourceLine endBytecode='95' classname='org.apache.wicket.util.file.FileCleanerTrackerAdapter' start='63' end='64' sourcepath='org/apache/wicket/util/file/FileCleanerTrackerAdapter.java' sourcefile='FileCleanerTrackerAdapter.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.file.FileCleanerTrackerAdapter.track(String, Object, FileDeleteStrategy)</Message></Method><SourceLine endBytecode='9' classname='org.apache.wicket.util.file.FileCleanerTrackerAdapter' start='63' end='63' sourcepath='org/apache/wicket/util/file/FileCleanerTrackerAdapter.java' sourcefile='FileCleanerTrackerAdapter.java' startBytecode='9' primary='true'><Message>At FileCleanerTrackerAdapter.java:[line 63]</Message></SourceLine><String role='Sink method' value='org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/FileCleanerTrackerAdapter.track(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V parameter 2'><Message>Unknown source org/apache/wicket/util/file/FileCleanerTrackerAdapter.track(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V parameter 2</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c521ec47d16438076d832fab4f089c8' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.file.Files' primary='true'><SourceLine classname='org.apache.wicket.util.file.Files' start='44' end='462' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java'><Message>At Files.java:[lines 44-462]</Message></SourceLine><Message>In class org.apache.wicket.util.file.Files</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.file.Files' signature='(Ljava/io/File;)Z' name='mkdirs' primary='true'><SourceLine endBytecode='246' classname='org.apache.wicket.util.file.Files' start='442' end='462' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.file.Files.mkdirs(File)</Message></Method><SourceLine endBytecode='83' classname='org.apache.wicket.util.file.Files' start='461' end='461' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='83' primary='true'><Message>At Files.java:[line 461]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/Files.mkdirs(Ljava/io/File;)Z parameter 0'><Message>Unknown source org/apache/wicket/util/file/Files.mkdirs(Ljava/io/File;)Z parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String><SourceLine endBytecode='77' classname='org.apache.wicket.util.file.Files' start='461' end='461' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='77'><Message>At Files.java:[line 461]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4acf353550d938bc8e78957acd4005bd' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='1'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.Files' primary='true'><SourceLine classname='org.apache.wicket.util.file.Files' start='44' end='462' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java'><Message>At Files.java:[lines 44-462]</Message></SourceLine><Message>In class org.apache.wicket.util.file.Files</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.file.Files' signature='(Ljava/lang/String;)Ljava/io/File;' name='getLocalFileFromUrl' primary='true'><SourceLine endBytecode='216' classname='org.apache.wicket.util.file.Files' start='383' end='405' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.file.Files.getLocalFileFromUrl(String)</Message></Method><SourceLine endBytecode='32' classname='org.apache.wicket.util.file.Files' start='388' end='388' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='32' primary='true'><Message>At Files.java:[line 388]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/lang/Args.notNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; parameter 1'><Message>Unknown source org/apache/wicket/util/lang/Args.notNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/lang/Args.notNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;'><Message>Unknown source org/apache/wicket/util/lang/Args.notNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/Files.getLocalFileFromUrl(Ljava/lang/String;)Ljava/io/File; parameter 0'><Message>Unknown source org/apache/wicket/util/file/Files.getLocalFileFromUrl(Ljava/lang/String;)Ljava/io/File; parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String><SourceLine endBytecode='258' classname='org.apache.wicket.util.encoding.UrlDecoder' start='159' end='159' sourcepath='org/apache/wicket/util/encoding/UrlDecoder.java' sourcefile='UrlDecoder.java' startBytecode='258'><Message>At UrlDecoder.java:[line 159]</Message></SourceLine><SourceLine endBytecode='320' classname='org.apache.wicket.util.encoding.UrlDecoder' start='184' end='184' sourcepath='org/apache/wicket/util/encoding/UrlDecoder.java' sourcefile='UrlDecoder.java' startBytecode='320'><Message>At UrlDecoder.java:[line 184]</Message></SourceLine><SourceLine endBytecode='3' classname='org.apache.wicket.util.file.Files' start='366' end='366' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='3'><Message>At Files.java:[line 366]</Message></SourceLine><SourceLine endBytecode='22' classname='org.apache.wicket.util.file.Files' start='367' end='367' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='22'><Message>At Files.java:[line 367]</Message></SourceLine><SourceLine endBytecode='3' classname='org.apache.wicket.util.file.Files' start='383' end='383' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='3'><Message>At Files.java:[line 383]</Message></SourceLine><SourceLine endBytecode='29' classname='org.apache.wicket.util.file.Files' start='388' end='388' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='29'><Message>At Files.java:[line 388]</Message></SourceLine><SourceLine endBytecode='1' classname='org.apache.wicket.util.io.Connections' start='50' end='50' sourcepath='org/apache/wicket/util/io/Connections.java' sourcefile='Connections.java' startBytecode='1'><Message>At Connections.java:[line 50]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='4acf353550d938bc8e78957acd4005bd' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='1'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.Files' primary='true'><SourceLine classname='org.apache.wicket.util.file.Files' start='44' end='462' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java'><Message>At Files.java:[lines 44-462]</Message></SourceLine><Message>In class org.apache.wicket.util.file.Files</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.file.Files' signature='(Ljava/lang/String;)Ljava/io/File;' name='getLocalFileFromUrl' primary='true'><SourceLine endBytecode='216' classname='org.apache.wicket.util.file.Files' start='383' end='405' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.file.Files.getLocalFileFromUrl(String)</Message></Method><SourceLine endBytecode='79' classname='org.apache.wicket.util.file.Files' start='401' end='401' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='79' primary='true'><Message>At Files.java:[line 401]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/lang/Args.notNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; parameter 1'><Message>Unknown source org/apache/wicket/util/lang/Args.notNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/lang/Args.notNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;'><Message>Unknown source org/apache/wicket/util/lang/Args.notNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/Files.getLocalFileFromUrl(Ljava/lang/String;)Ljava/io/File; parameter 0'><Message>Unknown source org/apache/wicket/util/file/Files.getLocalFileFromUrl(Ljava/lang/String;)Ljava/io/File; parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String><SourceLine endBytecode='258' classname='org.apache.wicket.util.encoding.UrlDecoder' start='159' end='159' sourcepath='org/apache/wicket/util/encoding/UrlDecoder.java' sourcefile='UrlDecoder.java' startBytecode='258'><Message>At UrlDecoder.java:[line 159]</Message></SourceLine><SourceLine endBytecode='320' classname='org.apache.wicket.util.encoding.UrlDecoder' start='184' end='184' sourcepath='org/apache/wicket/util/encoding/UrlDecoder.java' sourcefile='UrlDecoder.java' startBytecode='320'><Message>At UrlDecoder.java:[line 184]</Message></SourceLine><SourceLine endBytecode='3' classname='org.apache.wicket.util.file.Files' start='366' end='366' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='3'><Message>At Files.java:[line 366]</Message></SourceLine><SourceLine endBytecode='22' classname='org.apache.wicket.util.file.Files' start='367' end='367' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='22'><Message>At Files.java:[line 367]</Message></SourceLine><SourceLine endBytecode='3' classname='org.apache.wicket.util.file.Files' start='383' end='383' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='3'><Message>At Files.java:[line 383]</Message></SourceLine><SourceLine endBytecode='51' classname='org.apache.wicket.util.file.Files' start='393' end='393' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='51'><Message>At Files.java:[line 393]</Message></SourceLine><SourceLine endBytecode='76' classname='org.apache.wicket.util.file.Files' start='401' end='401' sourcepath='org/apache/wicket/util/file/Files.java' sourcefile='Files.java' startBytecode='76'><Message>At Files.java:[line 401]</Message></SourceLine><SourceLine endBytecode='1' classname='org.apache.wicket.util.io.Connections' start='50' end='50' sourcepath='org/apache/wicket/util/io/Connections.java' sourcefile='Connections.java' startBytecode='1'><Message>At Connections.java:[line 50]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f0099689757463360e2842c605bccc86' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.Folder' primary='true'><SourceLine classname='org.apache.wicket.util.file.Folder' start='89' end='334' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java'><Message>At Folder.java:[lines 89-334]</Message></SourceLine><Message>In class org.apache.wicket.util.file.Folder</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.Folder' signature='(Ljava/io/File;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='64' classname='org.apache.wicket.util.file.Folder' start='100' end='101' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.file.Folder(File)</Message></Method><SourceLine endBytecode='5' classname='org.apache.wicket.util.file.Folder' start='100' end='100' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='5' primary='true'><Message>At Folder.java:[line 100]</Message></SourceLine><String role='Sink method' value='org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/File.getPath()Ljava/lang/String;'><Message>Unknown source java/io/File.getPath()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a1ad81eb87c37ea5f5d71d5fcfff8126' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.Folder' primary='true'><SourceLine classname='org.apache.wicket.util.file.Folder' start='89' end='334' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java'><Message>At Folder.java:[lines 89-334]</Message></SourceLine><Message>In class org.apache.wicket.util.file.Folder</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.Folder' signature='(Ljava/lang/String;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='61' classname='org.apache.wicket.util.file.Folder' start='111' end='112' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.file.Folder(String)</Message></Method><SourceLine endBytecode='2' classname='org.apache.wicket.util.file.Folder' start='111' end='111' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='2' primary='true'><Message>At Folder.java:[line 111]</Message></SourceLine><String role='Sink method' value='org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V parameter 0'><Message>Unknown source org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V parameter 0</Message></String><SourceLine endBytecode='5' classname='org.apache.wicket.util.file.Folder' start='100' end='100' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='5'><Message>At Folder.java:[line 100]</Message></SourceLine><SourceLine endBytecode='6' classname='org.apache.wicket.util.file.Path' start='43' end='43' sourcepath='org/apache/wicket/util/file/Path.java' sourcefile='Path.java' startBytecode='6'><Message>At Path.java:[line 43]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='da3ab901672ef4cfbbe3a8e1f990f5e6' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.Folder' primary='true'><SourceLine classname='org.apache.wicket.util.file.Folder' start='89' end='334' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java'><Message>At Folder.java:[lines 89-334]</Message></SourceLine><Message>In class org.apache.wicket.util.file.Folder</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.Folder' signature='(Ljava/lang/String;Ljava/lang/String;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='72' classname='org.apache.wicket.util.file.Folder' start='124' end='125' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.file.Folder(String, String)</Message></Method><SourceLine endBytecode='3' classname='org.apache.wicket.util.file.Folder' start='124' end='124' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='3' primary='true'><Message>At Folder.java:[line 124]</Message></SourceLine><String role='Sink method' value='org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V'><Message>Sink method org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V parameter 0'><Message>Unknown source org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='59642e9c0a20d45bac7ec7bbc63cfb01' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/net/URI;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.Folder' primary='true'><SourceLine classname='org.apache.wicket.util.file.Folder' start='89' end='334' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java'><Message>At Folder.java:[lines 89-334]</Message></SourceLine><Message>In class org.apache.wicket.util.file.Folder</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.Folder' signature='(Ljava/net/URI;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='61' classname='org.apache.wicket.util.file.Folder' start='135' end='136' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.file.Folder(URI)</Message></Method><SourceLine endBytecode='2' classname='org.apache.wicket.util.file.Folder' start='135' end='135' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='2' primary='true'><Message>At Folder.java:[line 135]</Message></SourceLine><String role='Sink method' value='org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/net/URI;)V'><Message>Sink method org/apache/wicket/util/file/File.&lt;init&gt;(Ljava/net/URI;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/net/URI;)V parameter 0'><Message>Unknown source org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/net/URI;)V parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b3c85062b80659b945a1c8e289b6e2b0' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.Folder$3' primary='true'><SourceLine classname='org.apache.wicket.util.file.Folder$3' start='266' end='273' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java'><Message>At Folder.java:[lines 266-273]</Message></SourceLine><Message>In class org.apache.wicket.util.file.Folder$3</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.Folder$3' signature='(Ljava/io/File;)Z' name='accept' primary='true'><SourceLine endBytecode='98' classname='org.apache.wicket.util.file.Folder$3' start='273' end='273' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.file.Folder$3.accept(File)</Message></Method><SourceLine endBytecode='19' classname='org.apache.wicket.util.file.Folder$3' start='273' end='273' sourcepath='org/apache/wicket/util/file/Folder.java' sourcefile='Folder.java' startBytecode='19' primary='true'><Message>At Folder.java:[line 273]</Message></SourceLine><String role='Sink method' value='org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/File.getPath()Ljava/lang/String;'><Message>Unknown source java/io/File.getPath()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='81fcd6b9181be35d65840312675922e8' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.file.Path' primary='true'><SourceLine classname='org.apache.wicket.util.file.Path' start='43' end='97' sourcepath='org/apache/wicket/util/file/Path.java' sourcefile='Path.java'><Message>At Path.java:[lines 43-97]</Message></SourceLine><Message>In class org.apache.wicket.util.file.Path</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.Path' signature='(Ljava/lang/String;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='68' classname='org.apache.wicket.util.file.Path' start='43' end='44' sourcepath='org/apache/wicket/util/file/Path.java' sourcefile='Path.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.file.Path(String)</Message></Method><SourceLine endBytecode='6' classname='org.apache.wicket.util.file.Path' start='43' end='43' sourcepath='org/apache/wicket/util/file/Path.java' sourcefile='Path.java' startBytecode='6' primary='true'><Message>At Path.java:[line 43]</Message></SourceLine><String role='Sink method' value='org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method org/apache/wicket/util/file/Folder.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/Path.&lt;init&gt;(Ljava/lang/String;)V parameter 0'><Message>Unknown source org/apache/wicket/util/file/Path.&lt;init&gt;(Ljava/lang/String;)V parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6b9902278d68ab4aa0dd8e6503ccdd5e' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.file.WebXmlFile' primary='true'><SourceLine classname='org.apache.wicket.util.file.WebXmlFile' start='47' end='319' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java'><Message>At WebXmlFile.java:[lines 47-319]</Message></SourceLine><Message>In class org.apache.wicket.util.file.WebXmlFile</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.WebXmlFile' signature='(ZLjava/lang/String;Ljava/io/InputStream;)Ljava/util/Set;' name='getFilterPath' primary='true'><SourceLine endBytecode='732' classname='org.apache.wicket.util.file.WebXmlFile' start='201' end='243' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.file.WebXmlFile.getFilterPath(boolean, String, InputStream)</Message></Method><SourceLine endBytecode='121' classname='org.apache.wicket.util.file.WebXmlFile' start='217' end='217' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='121' primary='true'><Message>At WebXmlFile.java:[line 217]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/WebXmlFile.getFilterPath(ZLjava/lang/String;Ljava/io/InputStream;)Ljava/util/Set; parameter 1'><Message>Unknown source org/apache/wicket/util/file/WebXmlFile.getFilterPath(ZLjava/lang/String;Ljava/io/InputStream;)Ljava/util/Set; parameter 1</Message></String><SourceLine endBytecode='16' classname='org.apache.wicket.util.file.WebXmlFile' start='67' end='67' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='16'><Message>At WebXmlFile.java:[line 67]</Message></SourceLine><SourceLine endBytecode='20' classname='org.apache.wicket.util.file.WebXmlFile' start='88' end='88' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='20'><Message>At WebXmlFile.java:[line 88]</Message></SourceLine><SourceLine endBytecode='5' classname='org.apache.wicket.util.file.WebXmlFile' start='122' end='122' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='5'><Message>At WebXmlFile.java:[line 122]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e7c4efce12dcb9112ecc418a32fd4a14' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.file.WebXmlFile' primary='true'><SourceLine classname='org.apache.wicket.util.file.WebXmlFile' start='47' end='319' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java'><Message>At WebXmlFile.java:[lines 47-319]</Message></SourceLine><Message>In class org.apache.wicket.util.file.WebXmlFile</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.WebXmlFile' signature='(ZLjava/lang/String;Ljava/io/InputStream;)Ljava/util/Set;' name='getFilterPath' primary='true'><SourceLine endBytecode='732' classname='org.apache.wicket.util.file.WebXmlFile' start='201' end='243' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.file.WebXmlFile.getFilterPath(boolean, String, InputStream)</Message></Method><SourceLine endBytecode='239' classname='org.apache.wicket.util.file.WebXmlFile' start='235' end='235' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='239' primary='true'><Message>At WebXmlFile.java:[line 235]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/w3c/dom/Node.getTextContent()Ljava/lang/String;'><Message>Unknown source org/w3c/dom/Node.getTextContent()Ljava/lang/String;</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/WebXmlFile.getFilterPaths(Ljava/lang/String;Ljava/lang/String;Lorg/w3c/dom/Node;)Ljava/util/Set;'><Message>Unknown source org/apache/wicket/util/file/WebXmlFile.getFilterPaths(Ljava/lang/String;Ljava/lang/String;Lorg/w3c/dom/Node;)Ljava/util/Set;</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/WebXmlFile.getFilterPath(ZLjava/lang/String;Ljava/io/InputStream;)Ljava/util/Set; parameter 1'><Message>Unknown source org/apache/wicket/util/file/WebXmlFile.getFilterPath(ZLjava/lang/String;Ljava/io/InputStream;)Ljava/util/Set; parameter 1</Message></String><String role='Unknown source' value='java/util/Iterator.next()Ljava/lang/Object;'><Message>Unknown source java/util/Iterator.next()Ljava/lang/Object;</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/WebXmlFile.getFilterPaths(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/w3c/dom/NodeList;)Ljava/util/Set;'><Message>Unknown source org/apache/wicket/util/file/WebXmlFile.getFilterPaths(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/w3c/dom/NodeList;)Ljava/util/Set;</Message></String><SourceLine endBytecode='16' classname='org.apache.wicket.util.file.WebXmlFile' start='67' end='67' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='16'><Message>At WebXmlFile.java:[line 67]</Message></SourceLine><SourceLine endBytecode='20' classname='org.apache.wicket.util.file.WebXmlFile' start='88' end='88' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='20'><Message>At WebXmlFile.java:[line 88]</Message></SourceLine><SourceLine endBytecode='5' classname='org.apache.wicket.util.file.WebXmlFile' start='122' end='122' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='5'><Message>At WebXmlFile.java:[line 122]</Message></SourceLine><SourceLine endBytecode='98' classname='org.apache.wicket.util.file.WebXmlFile' start='212' end='212' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='98'><Message>At WebXmlFile.java:[line 212]</Message></SourceLine><SourceLine endBytecode='164' classname='org.apache.wicket.util.file.WebXmlFile' start='226' end='226' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='164'><Message>At WebXmlFile.java:[line 226]</Message></SourceLine><SourceLine endBytecode='175' classname='org.apache.wicket.util.file.WebXmlFile' start='229' end='229' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='175'><Message>At WebXmlFile.java:[line 229]</Message></SourceLine><SourceLine endBytecode='208' classname='org.apache.wicket.util.file.WebXmlFile' start='231' end='231' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='208'><Message>At WebXmlFile.java:[line 231]</Message></SourceLine><SourceLine endBytecode='216' classname='org.apache.wicket.util.file.WebXmlFile' start='232' end='232' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='216'><Message>At WebXmlFile.java:[line 232]</Message></SourceLine><SourceLine endBytecode='236' classname='org.apache.wicket.util.file.WebXmlFile' start='235' end='235' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='236'><Message>At WebXmlFile.java:[line 235]</Message></SourceLine><SourceLine endBytecode='129' classname='org.apache.wicket.util.file.WebXmlFile' start='283' end='283' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='129'><Message>At WebXmlFile.java:[line 283]</Message></SourceLine><SourceLine endBytecode='60' classname='org.apache.wicket.util.file.WebXmlFile' start='312' end='312' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='60'><Message>At WebXmlFile.java:[line 312]</Message></SourceLine><SourceLine endBytecode='85' classname='org.apache.wicket.util.file.WebXmlFile' start='316' end='316' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='85'><Message>At WebXmlFile.java:[line 316]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ee806412bdb6d0dd46d21e6c3787b2b8' cweid='611' rank='12' abbrev='SECXXEDOC' category='SECURITY' priority='2' type='XXE_DOCUMENT' instanceOccurrenceMax='0'><ShortMessage>XML parsing vulnerable to XXE (DocumentBuilder)</ShortMessage><LongMessage>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</LongMessage><Class classname='org.apache.wicket.util.file.WebXmlFile' primary='true'><SourceLine classname='org.apache.wicket.util.file.WebXmlFile' start='47' end='319' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java'><Message>At WebXmlFile.java:[lines 47-319]</Message></SourceLine><Message>In class org.apache.wicket.util.file.WebXmlFile</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.file.WebXmlFile' signature='(ZLjava/lang/String;Ljava/io/InputStream;)Ljava/util/Set;' name='getFilterPath' primary='true'><SourceLine endBytecode='732' classname='org.apache.wicket.util.file.WebXmlFile' start='201' end='243' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.file.WebXmlFile.getFilterPath(boolean, String, InputStream)</Message></Method><SourceLine endBytecode='23' classname='org.apache.wicket.util.file.WebXmlFile' start='206' end='206' sourcepath='org/apache/wicket/util/file/WebXmlFile.java' sourcefile='WebXmlFile.java' startBytecode='23' primary='true'><Message>At WebXmlFile.java:[line 206]</Message></SourceLine><String value='DocumentBuilder.parse(...)'><Message>Value DocumentBuilder.parse(...)</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='10d30df820019d1ffb87174732cc815c' cweid='918' rank='12' abbrev='SECSSSRFUC' category='SECURITY' priority='2' type='URLCONNECTION_SSRF_FD' instanceOccurrenceMax='0'><ShortMessage>URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</ShortMessage><LongMessage>This web server request could be used by an attacker to expose internal services and filesystem.</LongMessage><Class classname='org.apache.wicket.util.io.Connections' primary='true'><SourceLine classname='org.apache.wicket.util.io.Connections' start='37' end='140' sourcepath='org/apache/wicket/util/io/Connections.java' sourcefile='Connections.java'><Message>At Connections.java:[lines 37-140]</Message></SourceLine><Message>In class org.apache.wicket.util.io.Connections</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.io.Connections' signature='(Ljava/net/URL;)Lorg/apache/wicket/util/time/Time;' name='getLastModified' primary='true'><SourceLine endBytecode='363' classname='org.apache.wicket.util.io.Connections' start='50' end='93' sourcepath='org/apache/wicket/util/io/Connections.java' sourcefile='Connections.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.io.Connections.getLastModified(URL)</Message></Method><SourceLine endBytecode='15' classname='org.apache.wicket.util.io.Connections' start='59' end='59' sourcepath='org/apache/wicket/util/io/Connections.java' sourcefile='Connections.java' startBytecode='15' primary='true'><Message>At Connections.java:[line 59]</Message></SourceLine><String role='Sink method' value='java/net/URL.openConnection()Ljava/net/URLConnection;'><Message>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/io/Connections.getLastModified(Ljava/net/URL;)Lorg/apache/wicket/util/time/Time; parameter 0'><Message>Unknown source org/apache/wicket/util/io/Connections.getLastModified(Ljava/net/URL;)Lorg/apache/wicket/util/time/Time; parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d15b1aa20e823dd2cf70c28a498d2dfe' cweid='918' rank='12' abbrev='SECSSSRFUC' category='SECURITY' priority='2' type='URLCONNECTION_SSRF_FD' instanceOccurrenceMax='0'><ShortMessage>URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</ShortMessage><LongMessage>This web server request could be used by an attacker to expose internal services and filesystem.</LongMessage><Class classname='org.apache.wicket.util.io.Connections' primary='true'><SourceLine classname='org.apache.wicket.util.io.Connections' start='37' end='140' sourcepath='org/apache/wicket/util/io/Connections.java' sourcefile='Connections.java'><Message>At Connections.java:[lines 37-140]</Message></SourceLine><Message>In class org.apache.wicket.util.io.Connections</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.io.Connections' signature='(Ljava/net/URL;)Lorg/apache/wicket/util/time/Time;' name='getLastModified' primary='true'><SourceLine endBytecode='363' classname='org.apache.wicket.util.io.Connections' start='50' end='93' sourcepath='org/apache/wicket/util/io/Connections.java' sourcefile='Connections.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.io.Connections.getLastModified(URL)</Message></Method><SourceLine endBytecode='41' classname='org.apache.wicket.util.io.Connections' start='69' end='69' sourcepath='org/apache/wicket/util/io/Connections.java' sourcefile='Connections.java' startBytecode='41' primary='true'><Message>At Connections.java:[line 69]</Message></SourceLine><String role='Sink method' value='java/net/URL.openConnection()Ljava/net/URLConnection;'><Message>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/net/JarURLConnection.getJarFileURL()Ljava/net/URL;'><Message>Unknown source java/net/JarURLConnection.getJarFileURL()Ljava/net/URL;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='22e986ec8c29d72379cb62a7a66e2d19' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.io.IOUtils' primary='true'><SourceLine classname='org.apache.wicket.util.io.IOUtils' start='72' end='947' sourcepath='org/apache/wicket/util/io/IOUtils.java' sourcefile='IOUtils.java'><Message>At IOUtils.java:[lines 72-947]</Message></SourceLine><Message>In class org.apache.wicket.util.io.IOUtils</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.io.IOUtils' signature='(Ljava/io/Closeable;)V' name='closeQuietly' primary='true'><SourceLine endBytecode='128' classname='org.apache.wicket.util.io.IOUtils' start='121' end='127' sourcepath='org/apache/wicket/util/io/IOUtils.java' sourcefile='IOUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.io.IOUtils.closeQuietly(Closeable)</Message></Method><SourceLine endBytecode='34' classname='org.apache.wicket.util.io.IOUtils' start='125' end='125' sourcepath='org/apache/wicket/util/io/IOUtils.java' sourcefile='IOUtils.java' startBytecode='34' primary='true'><Message>At IOUtils.java:[line 125]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='java/io/IOException.getMessage()Ljava/lang/String;'><Message>Unknown source java/io/IOException.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='27' classname='org.apache.wicket.util.io.IOUtils' start='125' end='125' sourcepath='org/apache/wicket/util/io/IOUtils.java' sourcefile='IOUtils.java' startBytecode='27'><Message>At IOUtils.java:[line 125]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ad42c0a5afe0e73d963d472d0cb2ee18' cweid='918' rank='12' abbrev='SECSSSRFUC' category='SECURITY' priority='2' type='URLCONNECTION_SSRF_FD' instanceOccurrenceMax='0'><ShortMessage>URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</ShortMessage><LongMessage>This web server request could be used by an attacker to expose internal services and filesystem.</LongMessage><Class classname='org.apache.wicket.util.io.Streams' primary='true'><SourceLine classname='org.apache.wicket.util.io.Streams' start='54' end='212' sourcepath='org/apache/wicket/util/io/Streams.java' sourcefile='Streams.java'><Message>At Streams.java:[lines 54-212]</Message></SourceLine><Message>In class org.apache.wicket.util.io.Streams</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.io.Streams' signature='(Ljava/net/URL;)Ljava/io/InputStream;' name='readNonCaching' primary='true'><SourceLine endBytecode='101' classname='org.apache.wicket.util.io.Streams' start='149' end='154' sourcepath='org/apache/wicket/util/io/Streams.java' sourcefile='Streams.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.io.Streams.readNonCaching(URL)</Message></Method><SourceLine endBytecode='8' classname='org.apache.wicket.util.io.Streams' start='151' end='151' sourcepath='org/apache/wicket/util/io/Streams.java' sourcefile='Streams.java' startBytecode='8' primary='true'><Message>At Streams.java:[line 151]</Message></SourceLine><String role='Sink method' value='java/net/URL.openConnection()Ljava/net/URLConnection;'><Message>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/io/Streams.readNonCaching(Ljava/net/URL;)Ljava/io/InputStream; parameter 0'><Message>Unknown source org/apache/wicket/util/io/Streams.readNonCaching(Ljava/net/URL;)Ljava/io/InputStream; parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='86135c3bd635065746b0dd75ad9104ce' rank='15' abbrev='SECFSM' category='SECURITY' priority='3' type='FORMAT_STRING_MANIPULATION' instanceOccurrenceMax='0'><ShortMessage>Format String Manipulation</ShortMessage><LongMessage>Format string argument allowing user controlled parameters</LongMessage><Class classname='org.apache.wicket.util.lang.Args' primary='true'><SourceLine classname='org.apache.wicket.util.lang.Args' start='26' end='174' sourcepath='org/apache/wicket/util/lang/Args.java' sourcefile='Args.java'><Message>At Args.java:[lines 26-174]</Message></SourceLine><Message>In class org.apache.wicket.util.lang.Args</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.lang.Args' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format' primary='true'><SourceLine endBytecode='70' classname='org.apache.wicket.util.lang.Args' start='173' end='174' sourcepath='org/apache/wicket/util/lang/Args.java' sourcefile='Args.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.lang.Args.format(String, Object[])</Message></Method><SourceLine endBytecode='11' classname='org.apache.wicket.util.lang.Args' start='174' end='174' sourcepath='org/apache/wicket/util/lang/Args.java' sourcefile='Args.java' startBytecode='11' primary='true'><Message>At Args.java:[line 174]</Message></SourceLine><String role='Sink method' value='java/lang/String.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;'><Message>Sink method java/lang/String.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/lang/Args.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; parameter 1'><Message>Unknown source org/apache/wicket/util/lang/Args.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; parameter 1</Message></String><String role='Method usage' value='detected only with safe arguments'><Message>Method usage detected only with safe arguments</Message></String><SourceLine endBytecode='19' classname='org.apache.wicket.util.lang.Args' start='86' end='86' sourcepath='org/apache/wicket/util/lang/Args.java' sourcefile='Args.java' startBytecode='19'><Message>At Args.java:[line 86]</Message></SourceLine><SourceLine endBytecode='10' classname='org.apache.wicket.util.lang.Args' start='142' end='142' sourcepath='org/apache/wicket/util/lang/Args.java' sourcefile='Args.java' startBytecode='10'><Message>At Args.java:[line 142]</Message></SourceLine><SourceLine endBytecode='11' classname='org.apache.wicket.util.lang.Args' start='159' end='159' sourcepath='org/apache/wicket/util/lang/Args.java' sourcefile='Args.java' startBytecode='11'><Message>At Args.java:[line 159]</Message></SourceLine><SourceLine endBytecode='5' classname='org.apache.wicket.util.lang.Args' start='173' end='173' sourcepath='org/apache/wicket/util/lang/Args.java' sourcefile='Args.java' startBytecode='5'><Message>At Args.java:[line 173]</Message></SourceLine><SourceLine endBytecode='10' classname='org.apache.wicket.util.lang.Checks' start='38' end='38' sourcepath='org/apache/wicket/util/lang/Checks.java' sourcefile='Checks.java' startBytecode='10'><Message>At Checks.java:[line 38]</Message></SourceLine><SourceLine endBytecode='13' classname='org.apache.wicket.util.lang.Checks' start='54' end='54' sourcepath='org/apache/wicket/util/lang/Checks.java' sourcefile='Checks.java' startBytecode='13'><Message>At Checks.java:[line 54]</Message></SourceLine><SourceLine endBytecode='6' classname='org.apache.wicket.util.lang.Checks' start='71' end='71' sourcepath='org/apache/wicket/util/lang/Checks.java' sourcefile='Checks.java' startBytecode='6'><Message>At Checks.java:[line 71]</Message></SourceLine><SourceLine endBytecode='15' classname='org.apache.wicket.util.lang.Checks' start='72' end='72' sourcepath='org/apache/wicket/util/lang/Checks.java' sourcefile='Checks.java' startBytecode='15'><Message>At Checks.java:[line 72]</Message></SourceLine><SourceLine endBytecode='24' classname='org.apache.wicket.util.lang.Checks' start='89' end='89' sourcepath='org/apache/wicket/util/lang/Checks.java' sourcefile='Checks.java' startBytecode='24'><Message>At Checks.java:[line 89]</Message></SourceLine><SourceLine endBytecode='24' classname='org.apache.wicket.util.lang.Checks' start='101' end='101' sourcepath='org/apache/wicket/util/lang/Checks.java' sourcefile='Checks.java' startBytecode='24'><Message>At Checks.java:[line 101]</Message></SourceLine><SourceLine endBytecode='28' classname='org.apache.wicket.util.lang.Checks' start='117' end='117' sourcepath='org/apache/wicket/util/lang/Checks.java' sourcefile='Checks.java' startBytecode='28'><Message>At Checks.java:[line 117]</Message></SourceLine><SourceLine endBytecode='25' classname='org.apache.wicket.util.lang.Checks' start='118' end='118' sourcepath='org/apache/wicket/util/lang/Checks.java' sourcefile='Checks.java' startBytecode='25'><Message>At Checks.java:[line 118]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='44df6c0b47c183d71fb43e521c3b2c57' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='4'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.lang.Bytes' primary='true'><SourceLine classname='org.apache.wicket.util.lang.Bytes' start='93' end='440' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java'><Message>At Bytes.java:[lines 93-440]</Message></SourceLine><Message>In class org.apache.wicket.util.lang.Bytes</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.lang.Bytes' signature='(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/wicket/util/lang/Bytes;' name='valueOf' primary='true'><SourceLine endBytecode='453' classname='org.apache.wicket.util.lang.Bytes' start='300' end='348' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.lang.Bytes.valueOf(String, Locale)</Message></Method><SourceLine endBytecode='42' classname='org.apache.wicket.util.lang.Bytes' start='315' end='315' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java' startBytecode='42' primary='true'><Message>At Bytes.java:[line 315]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='44df6c0b47c183d71fb43e521c3b2c57' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='4'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.lang.Bytes' primary='true'><SourceLine classname='org.apache.wicket.util.lang.Bytes' start='93' end='440' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java'><Message>At Bytes.java:[lines 93-440]</Message></SourceLine><Message>In class org.apache.wicket.util.lang.Bytes</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.lang.Bytes' signature='(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/wicket/util/lang/Bytes;' name='valueOf' primary='true'><SourceLine endBytecode='453' classname='org.apache.wicket.util.lang.Bytes' start='300' end='348' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.lang.Bytes.valueOf(String, Locale)</Message></Method><SourceLine endBytecode='57' classname='org.apache.wicket.util.lang.Bytes' start='319' end='319' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java' startBytecode='57' primary='true'><Message>At Bytes.java:[line 319]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='2' instanceHash='44df6c0b47c183d71fb43e521c3b2c57' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='4'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.lang.Bytes' primary='true'><SourceLine classname='org.apache.wicket.util.lang.Bytes' start='93' end='440' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java'><Message>At Bytes.java:[lines 93-440]</Message></SourceLine><Message>In class org.apache.wicket.util.lang.Bytes</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.lang.Bytes' signature='(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/wicket/util/lang/Bytes;' name='valueOf' primary='true'><SourceLine endBytecode='453' classname='org.apache.wicket.util.lang.Bytes' start='300' end='348' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.lang.Bytes.valueOf(String, Locale)</Message></Method><SourceLine endBytecode='72' classname='org.apache.wicket.util.lang.Bytes' start='323' end='323' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java' startBytecode='72' primary='true'><Message>At Bytes.java:[line 323]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='3' instanceHash='44df6c0b47c183d71fb43e521c3b2c57' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='4'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.lang.Bytes' primary='true'><SourceLine classname='org.apache.wicket.util.lang.Bytes' start='93' end='440' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java'><Message>At Bytes.java:[lines 93-440]</Message></SourceLine><Message>In class org.apache.wicket.util.lang.Bytes</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.lang.Bytes' signature='(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/wicket/util/lang/Bytes;' name='valueOf' primary='true'><SourceLine endBytecode='453' classname='org.apache.wicket.util.lang.Bytes' start='300' end='348' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.lang.Bytes.valueOf(String, Locale)</Message></Method><SourceLine endBytecode='87' classname='org.apache.wicket.util.lang.Bytes' start='327' end='327' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java' startBytecode='87' primary='true'><Message>At Bytes.java:[line 327]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='4' instanceHash='44df6c0b47c183d71fb43e521c3b2c57' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='4'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.lang.Bytes' primary='true'><SourceLine classname='org.apache.wicket.util.lang.Bytes' start='93' end='440' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java'><Message>At Bytes.java:[lines 93-440]</Message></SourceLine><Message>In class org.apache.wicket.util.lang.Bytes</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.lang.Bytes' signature='(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/wicket/util/lang/Bytes;' name='valueOf' primary='true'><SourceLine endBytecode='453' classname='org.apache.wicket.util.lang.Bytes' start='300' end='348' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.lang.Bytes.valueOf(String, Locale)</Message></Method><SourceLine endBytecode='102' classname='org.apache.wicket.util.lang.Bytes' start='331' end='331' sourcepath='org/apache/wicket/util/lang/Bytes.java' sourcefile='Bytes.java' startBytecode='102' primary='true'><Message>At Bytes.java:[line 331]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5d10ba6b588d46a236d96d908e4ed7a8' cweid='502' rank='15' abbrev='SECDESGAD' category='SECURITY' priority='3' type='DESERIALIZATION_GADGET' instanceOccurrenceMax='0'><ShortMessage>This class could be used as deserialization gadget</ShortMessage><LongMessage>This class could make application using serialization vulnerable</LongMessage><Class classname='org.apache.wicket.util.lang.EnumeratedType' primary='true'><SourceLine classname='org.apache.wicket.util.lang.EnumeratedType' start='42' end='99' sourcepath='org/apache/wicket/util/lang/EnumeratedType.java' sourcefile='EnumeratedType.java'><Message>At EnumeratedType.java:[lines 42-99]</Message></SourceLine><Message>In class org.apache.wicket.util.lang.EnumeratedType</Message></Class><SourceLine synthetic='true' classname='org.apache.wicket.util.lang.EnumeratedType' start='42' end='99' sourcepath='org/apache/wicket/util/lang/EnumeratedType.java' sourcefile='EnumeratedType.java'><Message>At EnumeratedType.java:[lines 42-99]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d67a2c98cc2bb163d1f37e8347e0647c' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.lang.Numbers' primary='true'><SourceLine classname='org.apache.wicket.util.lang.Numbers' start='27' end='122' sourcepath='org/apache/wicket/util/lang/Numbers.java' sourcefile='Numbers.java'><Message>At Numbers.java:[lines 27-122]</Message></SourceLine><Message>In class org.apache.wicket.util.lang.Numbers</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.lang.Numbers' signature='(Ljava/lang/Class;)Ljava/lang/Number;' name='getMinValue' primary='true'><SourceLine endBytecode='366' classname='org.apache.wicket.util.lang.Numbers' start='47' end='77' sourcepath='org/apache/wicket/util/lang/Numbers.java' sourcefile='Numbers.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.lang.Numbers.getMinValue(Class)</Message></Method><SourceLine endBytecode='141' classname='org.apache.wicket.util.lang.Numbers' start='73' end='73' sourcepath='org/apache/wicket/util/lang/Numbers.java' sourcefile='Numbers.java' startBytecode='141' primary='true'><Message>At Numbers.java:[line 73]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/lang/Numbers.getMinValue(Ljava/lang/Class;)Ljava/lang/Number; parameter 0'><Message>Unknown source org/apache/wicket/util/lang/Numbers.getMinValue(Ljava/lang/Class;)Ljava/lang/Number; parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='64f9c3a318f4ca4e23c066381c20d568' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.warn(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.lang.Threads' primary='true'><SourceLine classname='org.apache.wicket.util.lang.Threads' start='37' end='115' sourcepath='org/apache/wicket/util/lang/Threads.java' sourcefile='Threads.java'><Message>At Threads.java:[lines 37-115]</Message></SourceLine><Message>In class org.apache.wicket.util.lang.Threads</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.lang.Threads' signature='(Lorg/slf4j/Logger;)V' name='dumpAllThreads' primary='true'><SourceLine endBytecode='344' classname='org.apache.wicket.util.lang.Threads' start='54' end='76' sourcepath='org/apache/wicket/util/lang/Threads.java' sourcefile='Threads.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.lang.Threads.dumpAllThreads(Logger)</Message></Method><SourceLine endBytecode='69' classname='org.apache.wicket.util.lang.Threads' start='69' end='69' sourcepath='org/apache/wicket/util/lang/Threads.java' sourcefile='Threads.java' startBytecode='69' primary='true'><Message>At Threads.java:[line 69]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.warn(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.warn(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/management/RuntimeMXBean.getVmName()Ljava/lang/String;'><Message>Unknown source java/lang/management/RuntimeMXBean.getVmName()Ljava/lang/String;</Message></String><String role='Unknown source' value='java/lang/management/RuntimeMXBean.getVmVersion()Ljava/lang/String;'><Message>Unknown source java/lang/management/RuntimeMXBean.getVmVersion()Ljava/lang/String;</Message></String><SourceLine endBytecode='41' classname='org.apache.wicket.util.lang.Threads' start='65' end='65' sourcepath='org/apache/wicket/util/lang/Threads.java' sourcefile='Threads.java' startBytecode='41'><Message>At Threads.java:[line 65]</Message></SourceLine><SourceLine endBytecode='46' classname='org.apache.wicket.util.lang.Threads' start='66' end='66' sourcepath='org/apache/wicket/util/lang/Threads.java' sourcefile='Threads.java' startBytecode='46'><Message>At Threads.java:[line 66]</Message></SourceLine><SourceLine endBytecode='55' classname='org.apache.wicket.util.lang.Threads' start='67' end='67' sourcepath='org/apache/wicket/util/lang/Threads.java' sourcefile='Threads.java' startBytecode='55'><Message>At Threads.java:[line 67]</Message></SourceLine><SourceLine endBytecode='66' classname='org.apache.wicket.util.lang.Threads' start='69' end='69' sourcepath='org/apache/wicket/util/lang/Threads.java' sourcefile='Threads.java' startBytecode='66'><Message>At Threads.java:[line 69]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='115e1bd57110db510226d9ed5a496c13' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.lang.Threads' primary='true'><SourceLine classname='org.apache.wicket.util.lang.Threads' start='37' end='115' sourcepath='org/apache/wicket/util/lang/Threads.java' sourcefile='Threads.java'><Message>At Threads.java:[lines 37-115]</Message></SourceLine><Message>In class org.apache.wicket.util.lang.Threads</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.lang.Threads' signature='(Lorg/slf4j/Logger;Ljava/lang/Thread;[Ljava/lang/StackTraceElement;)V' name='dumpSingleThread' primary='true'><SourceLine endBytecode='316' classname='org.apache.wicket.util.lang.Threads' start='105' end='115' sourcepath='org/apache/wicket/util/lang/Threads.java' sourcefile='Threads.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.lang.Threads.dumpSingleThread(Logger, Thread, StackTraceElement[])</Message></Method><SourceLine endBytecode='114' classname='org.apache.wicket.util.lang.Threads' start='114' end='114' sourcepath='org/apache/wicket/util/lang/Threads.java' sourcefile='Threads.java' startBytecode='114' primary='true'><Message>At Threads.java:[line 114]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/interpolator/VariableInterpolator.string'><Message>Unknown source org/apache/wicket/util/string/interpolator/VariableInterpolator.string</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/interpolator/MapVariableInterpolator.toString()Ljava/lang/String;'><Message>Unknown source org/apache/wicket/util/string/interpolator/MapVariableInterpolator.toString()Ljava/lang/String;</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/interpolator/MapVariableInterpolator.interpolate(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;'><Message>Unknown source org/apache/wicket/util/string/interpolator/MapVariableInterpolator.interpolate(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/interpolator/VariableInterpolator.getValue(Ljava/lang/String;)Ljava/lang/String;'><Message>Unknown source org/apache/wicket/util/string/interpolator/VariableInterpolator.getValue(Ljava/lang/String;)Ljava/lang/String;</Message></String><SourceLine endBytecode='109' classname='org.apache.wicket.util.lang.Threads' start='114' end='114' sourcepath='org/apache/wicket/util/lang/Threads.java' sourcefile='Threads.java' startBytecode='109'><Message>At Threads.java:[line 114]</Message></SourceLine><SourceLine endBytecode='9' classname='org.apache.wicket.util.string.interpolator.MapVariableInterpolator' start='105' end='105' sourcepath='org/apache/wicket/util/string/interpolator/MapVariableInterpolator.java' sourcefile='MapVariableInterpolator.java' startBytecode='9'><Message>At MapVariableInterpolator.java:[line 105]</Message></SourceLine><SourceLine endBytecode='13' classname='org.apache.wicket.util.string.interpolator.VariableInterpolator' start='112' end='112' sourcepath='org/apache/wicket/util/string/interpolator/VariableInterpolator.java' sourcefile='VariableInterpolator.java' startBytecode='13'><Message>At VariableInterpolator.java:[line 112]</Message></SourceLine><SourceLine endBytecode='64' classname='org.apache.wicket.util.string.interpolator.VariableInterpolator' start='125' end='125' sourcepath='org/apache/wicket/util/string/interpolator/VariableInterpolator.java' sourcefile='VariableInterpolator.java' startBytecode='64'><Message>At VariableInterpolator.java:[line 125]</Message></SourceLine><SourceLine endBytecode='89' classname='org.apache.wicket.util.string.interpolator.VariableInterpolator' start='129' end='129' sourcepath='org/apache/wicket/util/string/interpolator/VariableInterpolator.java' sourcefile='VariableInterpolator.java' startBytecode='89'><Message>At VariableInterpolator.java:[line 129]</Message></SourceLine><SourceLine endBytecode='127' classname='org.apache.wicket.util.string.interpolator.VariableInterpolator' start='146' end='146' sourcepath='org/apache/wicket/util/string/interpolator/VariableInterpolator.java' sourcefile='VariableInterpolator.java' startBytecode='127'><Message>At VariableInterpolator.java:[line 146]</Message></SourceLine><SourceLine endBytecode='217' classname='org.apache.wicket.util.string.interpolator.VariableInterpolator' start='164' end='164' sourcepath='org/apache/wicket/util/string/interpolator/VariableInterpolator.java' sourcefile='VariableInterpolator.java' startBytecode='217'><Message>At VariableInterpolator.java:[line 164]</Message></SourceLine><SourceLine endBytecode='227' classname='org.apache.wicket.util.string.interpolator.VariableInterpolator' start='170' end='170' sourcepath='org/apache/wicket/util/string/interpolator/VariableInterpolator.java' sourcefile='VariableInterpolator.java' startBytecode='227'><Message>At VariableInterpolator.java:[line 170]</Message></SourceLine><SourceLine endBytecode='252' classname='org.apache.wicket.util.string.interpolator.VariableInterpolator' start='185' end='185' sourcepath='org/apache/wicket/util/string/interpolator/VariableInterpolator.java' sourcefile='VariableInterpolator.java' startBytecode='252'><Message>At VariableInterpolator.java:[line 185]</Message></SourceLine><SourceLine endBytecode='264' classname='org.apache.wicket.util.string.interpolator.VariableInterpolator' start='189' end='189' sourcepath='org/apache/wicket/util/string/interpolator/VariableInterpolator.java' sourcefile='VariableInterpolator.java' startBytecode='264'><Message>At VariableInterpolator.java:[line 189]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='49253f04aa8b30a5ec66db17e7766b11' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' primary='true'><SourceLine classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' start='56' end='143' sourcepath='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' sourcefile='ApacheLicenseHeaderTestCase.java'><Message>At ApacheLicenseHeaderTestCase.java:[lines 56-143]</Message></SourceLine><Message>In class org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' signature='(Ljava/io/File;)Z' name='accept' primary='true'><SourceLine endBytecode='249' classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' start='71' end='96' sourcepath='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' sourcefile='ApacheLicenseHeaderTestCase.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter.accept(File)</Message></Method><SourceLine endBytecode='88' classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' start='86' end='86' sourcepath='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' sourcefile='ApacheLicenseHeaderTestCase.java' startBytecode='88' primary='true'><Message>At ApacheLicenseHeaderTestCase.java:[line 86]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter.accept(Ljava/io/File;)Z parameter 0'><Message>Unknown source org/apache/wicket/util/license/ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter.accept(Ljava/io/File;)Z parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='49253f04aa8b30a5ec66db17e7766b11' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' primary='true'><SourceLine classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' start='56' end='143' sourcepath='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' sourcefile='ApacheLicenseHeaderTestCase.java'><Message>At ApacheLicenseHeaderTestCase.java:[lines 56-143]</Message></SourceLine><Message>In class org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' signature='(Ljava/io/File;)Z' name='accept' primary='true'><SourceLine endBytecode='249' classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' start='71' end='96' sourcepath='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' sourcefile='ApacheLicenseHeaderTestCase.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter.accept(File)</Message></Method><SourceLine endBytecode='105' classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' start='92' end='92' sourcepath='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' sourcefile='ApacheLicenseHeaderTestCase.java' startBytecode='105' primary='true'><Message>At ApacheLicenseHeaderTestCase.java:[line 92]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter.accept(Ljava/io/File;)Z parameter 0'><Message>Unknown source org/apache/wicket/util/license/ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter.accept(Ljava/io/File;)Z parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ac483bf7c246f90bdd175262a64efbc6' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' primary='true'><SourceLine classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' start='56' end='143' sourcepath='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' sourcefile='ApacheLicenseHeaderTestCase.java'><Message>At ApacheLicenseHeaderTestCase.java:[lines 56-143]</Message></SourceLine><Message>In class org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' signature='(Ljava/io/File;)Z' name='ignoreFile' primary='true'><SourceLine endBytecode='424' classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' start='101' end='143' sourcepath='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' sourcefile='ApacheLicenseHeaderTestCase.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter.ignoreFile(File)</Message></Method><SourceLine endBytecode='122' classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' start='115' end='115' sourcepath='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' sourcefile='ApacheLicenseHeaderTestCase.java' startBytecode='122' primary='true'><Message>At ApacheLicenseHeaderTestCase.java:[line 115]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/Strings.replaceAll(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence; parameter 2'><Message>Unknown source org/apache/wicket/util/string/Strings.replaceAll(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence; parameter 2</Message></String><String role='Unknown source' value='java/lang/CharSequence.toString()Ljava/lang/String;'><Message>Unknown source java/lang/CharSequence.toString()Ljava/lang/String;</Message></String><String role='Unknown source' value='java/util/Iterator.next()Ljava/lang/Object;'><Message>Unknown source java/util/Iterator.next()Ljava/lang/Object;</Message></String><String role='Unknown source' value='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter.ignoreFiles'><Message>Unknown source org/apache/wicket/util/license/ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter.ignoreFiles</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/Strings.replaceAll(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;'><Message>Unknown source org/apache/wicket/util/string/Strings.replaceAll(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;</Message></String><SourceLine endBytecode='80' classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' start='110' end='110' sourcepath='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' sourcefile='ApacheLicenseHeaderTestCase.java' startBytecode='80'><Message>At ApacheLicenseHeaderTestCase.java:[line 110]</Message></SourceLine><SourceLine endBytecode='99' classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' start='113' end='113' sourcepath='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' sourcefile='ApacheLicenseHeaderTestCase.java' startBytecode='99'><Message>At ApacheLicenseHeaderTestCase.java:[line 113]</Message></SourceLine><SourceLine endBytecode='102' classname='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter' start='114' end='114' sourcepath='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' sourcefile='ApacheLicenseHeaderTestCase.java' startBytecode='102'><Message>At ApacheLicenseHeaderTestCase.java:[line 114]</Message></SourceLine><SourceLine endBytecode='116' classname='org.apache.wicket.util.string.Strings' start='810' end='810' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='116'><Message>At Strings.java:[line 810]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='48d88806f296d93119975721311f0466' cweid='209' rank='15' abbrev='ERRMSG' category='SECURITY' priority='3' type='INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE' instanceOccurrenceMax='0'><ShortMessage>Information Exposure Through An Error Message</ShortMessage><LongMessage>Possible information exposure through an error message</LongMessage><Class classname='org.apache.wicket.util.license.JavaLicenseHeaderHandler' primary='true'><SourceLine classname='org.apache.wicket.util.license.JavaLicenseHeaderHandler' start='30' end='116' sourcepath='org/apache/wicket/util/license/JavaLicenseHeaderHandler.java' sourcefile='JavaLicenseHeaderHandler.java'><Message>At JavaLicenseHeaderHandler.java:[lines 30-116]</Message></SourceLine><Message>In class org.apache.wicket.util.license.JavaLicenseHeaderHandler</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.license.JavaLicenseHeaderHandler' signature='(Ljava/io/File;)Z' name='addLicenseHeader' primary='true'><SourceLine endBytecode='348' classname='org.apache.wicket.util.license.JavaLicenseHeaderHandler' start='46' end='76' sourcepath='org/apache/wicket/util/license/JavaLicenseHeaderHandler.java' sourcefile='JavaLicenseHeaderHandler.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.license.JavaLicenseHeaderHandler.addLicenseHeader(File)</Message></Method><SourceLine endBytecode='126' classname='org.apache.wicket.util.license.JavaLicenseHeaderHandler' start='72' end='72' sourcepath='org/apache/wicket/util/license/JavaLicenseHeaderHandler.java' sourcefile='JavaLicenseHeaderHandler.java' startBytecode='126' primary='true'><Message>At JavaLicenseHeaderHandler.java:[line 72]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='659e8c98d1a9c57d4c7c96b1f596140b' cweid='209' rank='15' abbrev='ERRMSG' category='SECURITY' priority='3' type='INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE' instanceOccurrenceMax='0'><ShortMessage>Information Exposure Through An Error Message</ShortMessage><LongMessage>Possible information exposure through an error message</LongMessage><Class classname='org.apache.wicket.util.license.XmlLicenseHeaderHandler' primary='true'><SourceLine classname='org.apache.wicket.util.license.XmlLicenseHeaderHandler' start='32' end='131' sourcepath='org/apache/wicket/util/license/XmlLicenseHeaderHandler.java' sourcefile='XmlLicenseHeaderHandler.java'><Message>At XmlLicenseHeaderHandler.java:[lines 32-131]</Message></SourceLine><Message>In class org.apache.wicket.util.license.XmlLicenseHeaderHandler</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.license.XmlLicenseHeaderHandler' signature='(Ljava/io/File;)Z' name='checkLicenseHeader' primary='true'><SourceLine endBytecode='411' classname='org.apache.wicket.util.license.XmlLicenseHeaderHandler' start='54' end='88' sourcepath='org/apache/wicket/util/license/XmlLicenseHeaderHandler.java' sourcefile='XmlLicenseHeaderHandler.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.license.XmlLicenseHeaderHandler.checkLicenseHeader(File)</Message></Method><SourceLine endBytecode='144' classname='org.apache.wicket.util.license.XmlLicenseHeaderHandler' start='84' end='84' sourcepath='org/apache/wicket/util/license/XmlLicenseHeaderHandler.java' sourcefile='XmlLicenseHeaderHandler.java' startBytecode='144' primary='true'><Message>At XmlLicenseHeaderHandler.java:[line 84]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='49a638232568f7293b4ca6cda44bbd0c' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.listener.ListenerCollection' primary='true'><SourceLine classname='org.apache.wicket.util.listener.ListenerCollection' start='40' end='199' sourcepath='org/apache/wicket/util/listener/ListenerCollection.java' sourcefile='ListenerCollection.java'><Message>At ListenerCollection.java:[lines 40-199]</Message></SourceLine><Message>In class org.apache.wicket.util.listener.ListenerCollection</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.listener.ListenerCollection' signature='(Lorg/apache/wicket/util/listener/ListenerCollection$INotifier;)V' name='notifyIgnoringExceptions' primary='true'><SourceLine endBytecode='254' classname='org.apache.wicket.util.listener.ListenerCollection' start='92' end='103' sourcepath='org/apache/wicket/util/listener/ListenerCollection.java' sourcefile='ListenerCollection.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.listener.ListenerCollection.notifyIgnoringExceptions(ListenerCollection$INotifier)</Message></Method><SourceLine endBytecode='62' classname='org.apache.wicket.util.listener.ListenerCollection' start='100' end='100' sourcepath='org/apache/wicket/util/listener/ListenerCollection.java' sourcefile='ListenerCollection.java' startBytecode='62' primary='true'><Message>At ListenerCollection.java:[line 100]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='java/util/Iterator.next()Ljava/lang/Object;'><Message>Unknown source java/util/Iterator.next()Ljava/lang/Object;</Message></String><String role='Unknown source' value='org/apache/wicket/util/listener/ListenerCollection.listeners'><Message>Unknown source org/apache/wicket/util/listener/ListenerCollection.listeners</Message></String><SourceLine endBytecode='1' classname='org.apache.wicket.util.listener.ListenerCollection' start='92' end='92' sourcepath='org/apache/wicket/util/listener/ListenerCollection.java' sourcefile='ListenerCollection.java' startBytecode='1'><Message>At ListenerCollection.java:[line 92]</Message></SourceLine><SourceLine endBytecode='57' classname='org.apache.wicket.util.listener.ListenerCollection' start='100' end='100' sourcepath='org/apache/wicket/util/listener/ListenerCollection.java' sourcefile='ListenerCollection.java' startBytecode='57'><Message>At ListenerCollection.java:[line 100]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a99c840fb105d0bc6997ea0f32fc26f4' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.listener.ListenerCollection$1' primary='true'><SourceLine classname='org.apache.wicket.util.listener.ListenerCollection$1' start='114' end='127' sourcepath='org/apache/wicket/util/listener/ListenerCollection.java' sourcefile='ListenerCollection.java'><Message>At ListenerCollection.java:[lines 114-127]</Message></SourceLine><Message>In class org.apache.wicket.util.listener.ListenerCollection$1</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.listener.ListenerCollection$1' signature='(Ljava/lang/Object;)V' name='notify' primary='true'><SourceLine endBytecode='169' classname='org.apache.wicket.util.listener.ListenerCollection$1' start='120' end='127' sourcepath='org/apache/wicket/util/listener/ListenerCollection.java' sourcefile='ListenerCollection.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.listener.ListenerCollection$1.notify(Object)</Message></Method><SourceLine endBytecode='37' classname='org.apache.wicket.util.listener.ListenerCollection$1' start='124' end='124' sourcepath='org/apache/wicket/util/listener/ListenerCollection.java' sourcefile='ListenerCollection.java' startBytecode='37' primary='true'><Message>At ListenerCollection.java:[line 124]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/listener/ListenerCollection$1.notify(Ljava/lang/Object;)V parameter 0'><Message>Unknown source org/apache/wicket/util/listener/ListenerCollection$1.notify(Ljava/lang/Object;)V parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String><SourceLine endBytecode='33' classname='org.apache.wicket.util.listener.ListenerCollection$1' start='124' end='124' sourcepath='org/apache/wicket/util/listener/ListenerCollection.java' sourcefile='ListenerCollection.java' startBytecode='33'><Message>At ListenerCollection.java:[line 124]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d8b6a3ed695e849341e345d4361acc09' cweid='611' rank='12' abbrev='SECXXEDOC' category='SECURITY' priority='2' type='XXE_DOCUMENT' instanceOccurrenceMax='0'><ShortMessage>XML parsing vulnerable to XXE (DocumentBuilder)</ShortMessage><LongMessage>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</LongMessage><Class classname='org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase' primary='true'><SourceLine classname='org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase' start='41' end='137' sourcepath='org/apache/wicket/util/markup/xhtml/WellFormedXmlTestCase.java' sourcefile='WellFormedXmlTestCase.java'><Message>At WellFormedXmlTestCase.java:[lines 41-137]</Message></SourceLine><Message>In class org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase' signature='(Ljava/io/File;)V' name='processFile' primary='true'><SourceLine endBytecode='305' classname='org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase' start='79' end='101' sourcepath='org/apache/wicket/util/markup/xhtml/WellFormedXmlTestCase.java' sourcefile='WellFormedXmlTestCase.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase.processFile(File)</Message></Method><SourceLine endBytecode='39' classname='org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase' start='91' end='91' sourcepath='org/apache/wicket/util/markup/xhtml/WellFormedXmlTestCase.java' sourcefile='WellFormedXmlTestCase.java' startBytecode='39' primary='true'><Message>At WellFormedXmlTestCase.java:[line 91]</Message></SourceLine><String value='DocumentBuilder.parse(...)'><Message>Value DocumentBuilder.parse(...)</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='82ff7b23bafe5c2cfc090634d1e18d3b' cweid='400' rank='12' abbrev='SECRD' category='SECURITY' priority='2' type='REDOS' instanceOccurrenceMax='0'><ShortMessage>Regex DOS (ReDOS)</ShortMessage><LongMessage>The regular expression "_([a-z]{2})(_([A-Z]{2})(_([^_\\.]+))?)?(\\.min)?$" is vulnerable to a denial of service attack (ReDOS)</LongMessage><String value='_([a-z]{2})(_([A-Z]{2})(_([^_\\.]+))?)?(\\.min)?$'><Message>Value _([a-z]{2})(_([A-Z]{2})(_([^_\\.]+))?)?(\\.min)?$</Message></String><Class classname='org.apache.wicket.util.resource.ResourceUtils' primary='true'><SourceLine classname='org.apache.wicket.util.resource.ResourceUtils' start='32' end='148' sourcepath='org/apache/wicket/util/resource/ResourceUtils.java' sourcefile='ResourceUtils.java'><Message>At ResourceUtils.java:[lines 32-148]</Message></SourceLine><Message>In class org.apache.wicket.util.resource.ResourceUtils</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.resource.ResourceUtils' signature='()V' name='&lt;clinit&gt;' primary='true'><SourceLine endBytecode='88' classname='org.apache.wicket.util.resource.ResourceUtils' start='39' end='45' sourcepath='org/apache/wicket/util/resource/ResourceUtils.java' sourcefile='ResourceUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.resource.ResourceUtils.&lt;static initializer for ResourceUtils&gt;()</Message></Method><SourceLine endBytecode='2' classname='org.apache.wicket.util.resource.ResourceUtils' start='40' end='40' sourcepath='org/apache/wicket/util/resource/ResourceUtils.java' sourcefile='ResourceUtils.java' startBytecode='2' primary='true'><Message>At ResourceUtils.java:[line 40]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4888ca644a190f95145e0b4d4def54bf' cweid='94' rank='12' abbrev='SECXSLT' category='SECURITY' priority='2' type='MALICIOUS_XSLT' instanceOccurrenceMax='0'><ShortMessage>A malicious XSLT could be provided</ShortMessage><LongMessage>A malicious XSLT could be provided to trigger remote code execution</LongMessage><Class classname='org.apache.wicket.util.resource.XSLTResourceStream' primary='true'><SourceLine classname='org.apache.wicket.util.resource.XSLTResourceStream' start='58' end='151' sourcepath='org/apache/wicket/util/resource/XSLTResourceStream.java' sourcefile='XSLTResourceStream.java'><Message>At XSLTResourceStream.java:[lines 58-151]</Message></SourceLine><Message>In class org.apache.wicket.util.resource.XSLTResourceStream</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.resource.XSLTResourceStream' signature='(Lorg/apache/wicket/util/resource/IResourceStream;Lorg/apache/wicket/util/resource/IResourceStream;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='546' classname='org.apache.wicket.util.resource.XSLTResourceStream' start='70' end='104' sourcepath='org/apache/wicket/util/resource/XSLTResourceStream.java' sourcefile='XSLTResourceStream.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.resource.XSLTResourceStream(IResourceStream, IResourceStream)</Message></Method><SourceLine endBytecode='66' classname='org.apache.wicket.util.resource.XSLTResourceStream' start='83' end='83' sourcepath='org/apache/wicket/util/resource/XSLTResourceStream.java' sourcefile='XSLTResourceStream.java' startBytecode='66' primary='true'><Message>At XSLTResourceStream.java:[line 83]</Message></SourceLine><String role='Sink method' value='javax/xml/transform/TransformerFactory.newTransformer(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Transformer;'><Message>Sink method javax/xml/transform/TransformerFactory.newTransformer(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Transformer;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/resource/IResourceStream.getInputStream()Ljava/io/InputStream;'><Message>Unknown source org/apache/wicket/util/resource/IResourceStream.getInputStream()Ljava/io/InputStream;</Message></String><String role='Unknown source' value='javax/xml/transform/stream/StreamSource.&lt;init&gt;(Ljava/io/InputStream;)V'><Message>Unknown source javax/xml/transform/stream/StreamSource.&lt;init&gt;(Ljava/io/InputStream;)V</Message></String><SourceLine endBytecode='28' classname='org.apache.wicket.util.resource.XSLTResourceStream' start='76' end='76' sourcepath='org/apache/wicket/util/resource/XSLTResourceStream.java' sourcefile='XSLTResourceStream.java' startBytecode='28'><Message>At XSLTResourceStream.java:[line 76]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9b6b21b9dcbdd28c0f2da18cd44fdbe9' cweid='611' rank='12' abbrev='SECXXETFDTD' category='SECURITY' priority='2' type='XXE_DTD_TRANSFORM_FACTORY' instanceOccurrenceMax='0'><ShortMessage>XML parsing vulnerable to XXE (TransformerFactory)</ShortMessage><LongMessage>The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks</LongMessage><Class classname='org.apache.wicket.util.resource.XSLTResourceStream' primary='true'><SourceLine classname='org.apache.wicket.util.resource.XSLTResourceStream' start='58' end='151' sourcepath='org/apache/wicket/util/resource/XSLTResourceStream.java' sourcefile='XSLTResourceStream.java'><Message>At XSLTResourceStream.java:[lines 58-151]</Message></SourceLine><Message>In class org.apache.wicket.util.resource.XSLTResourceStream</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.resource.XSLTResourceStream' signature='(Lorg/apache/wicket/util/resource/IResourceStream;Lorg/apache/wicket/util/resource/IResourceStream;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='546' classname='org.apache.wicket.util.resource.XSLTResourceStream' start='70' end='104' sourcepath='org/apache/wicket/util/resource/XSLTResourceStream.java' sourcefile='XSLTResourceStream.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.resource.XSLTResourceStream(IResourceStream, IResourceStream)</Message></Method><SourceLine endBytecode='57' classname='org.apache.wicket.util.resource.XSLTResourceStream' start='81' end='81' sourcepath='org/apache/wicket/util/resource/XSLTResourceStream.java' sourcefile='XSLTResourceStream.java' startBytecode='57' primary='true'><Message>At XSLTResourceStream.java:[line 81]</Message></SourceLine><String value='TransformerFactory.newInstance(...)'><Message>Value TransformerFactory.newInstance(...)</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='eedb4feac9b6c8922f6234a069096ffe' cweid='611' rank='12' abbrev='SECXXETFXSLT' category='SECURITY' priority='2' type='XXE_XSLT_TRANSFORM_FACTORY' instanceOccurrenceMax='0'><ShortMessage>XSLT parsing vulnerable to XXE (TransformerFactory)</ShortMessage><LongMessage>The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks</LongMessage><Class classname='org.apache.wicket.util.resource.XSLTResourceStream' primary='true'><SourceLine classname='org.apache.wicket.util.resource.XSLTResourceStream' start='58' end='151' sourcepath='org/apache/wicket/util/resource/XSLTResourceStream.java' sourcefile='XSLTResourceStream.java'><Message>At XSLTResourceStream.java:[lines 58-151]</Message></SourceLine><Message>In class org.apache.wicket.util.resource.XSLTResourceStream</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.resource.XSLTResourceStream' signature='(Lorg/apache/wicket/util/resource/IResourceStream;Lorg/apache/wicket/util/resource/IResourceStream;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='546' classname='org.apache.wicket.util.resource.XSLTResourceStream' start='70' end='104' sourcepath='org/apache/wicket/util/resource/XSLTResourceStream.java' sourcefile='XSLTResourceStream.java' startBytecode='0'></SourceLine><Message>In method new org.apache.wicket.util.resource.XSLTResourceStream(IResourceStream, IResourceStream)</Message></Method><SourceLine endBytecode='57' classname='org.apache.wicket.util.resource.XSLTResourceStream' start='81' end='81' sourcepath='org/apache/wicket/util/resource/XSLTResourceStream.java' sourcefile='XSLTResourceStream.java' startBytecode='57' primary='true'><Message>At XSLTResourceStream.java:[line 81]</Message></SourceLine><String value='TransformerFactory.newInstance(...)'><Message>Value TransformerFactory.newInstance(...)</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d5ee04ebd3f3ab8469b2148356380836' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.resource.ZipResourceStream' primary='true'><SourceLine classname='org.apache.wicket.util.resource.ZipResourceStream' start='58' end='219' sourcepath='org/apache/wicket/util/resource/ZipResourceStream.java' sourcefile='ZipResourceStream.java'><Message>At ZipResourceStream.java:[lines 58-219]</Message></SourceLine><Message>In class org.apache.wicket.util.resource.ZipResourceStream</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.resource.ZipResourceStream' signature='(Lorg/apache/wicket/util/file/File;Ljava/util/zip/ZipOutputStream;Ljava/lang/String;Z)V' name='zipDir' primary='true'><SourceLine endBytecode='678' classname='org.apache.wicket.util.resource.ZipResourceStream' start='126' end='176' sourcepath='org/apache/wicket/util/resource/ZipResourceStream.java' sourcefile='ZipResourceStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.resource.ZipResourceStream.zipDir(File, ZipOutputStream, String, boolean)</Message></Method><SourceLine endBytecode='91' classname='org.apache.wicket.util.resource.ZipResourceStream' start='141' end='141' sourcepath='org/apache/wicket/util/resource/ZipResourceStream.java' sourcefile='ZipResourceStream.java' startBytecode='91' primary='true'><Message>At ZipResourceStream.java:[line 141]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/file/File.list()[Ljava/lang/String;'><Message>Unknown source org/apache/wicket/util/file/File.list()[Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5ed54fa1d4f565710ce6b64833623181' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.string.StringValue' primary='true'><SourceLine classname='org.apache.wicket.util.string.StringValue' start='54' end='987' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java'><Message>At StringValue.java:[lines 54-987]</Message></SourceLine><Message>In class org.apache.wicket.util.string.StringValue</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.string.StringValue' signature='(Z)Z' name='toBoolean' primary='true'><SourceLine endBytecode='168' classname='org.apache.wicket.util.string.StringValue' start='403' end='419' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.StringValue.toBoolean(boolean)</Message></Method><SourceLine endBytecode='51' classname='org.apache.wicket.util.string.StringValue' start='413' end='413' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='51' primary='true'><Message>At StringValue.java:[line 413]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValue.text'><Message>Unknown source org/apache/wicket/util/string/StringValue.text</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValueConversionException.getMessage()Ljava/lang/String;'><Message>Unknown source org/apache/wicket/util/string/StringValueConversionException.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='47' classname='org.apache.wicket.util.string.StringValue' start='413' end='413' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='47'><Message>At StringValue.java:[line 413]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e2e9bbfeadaa02660900e1941d014dad' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.string.StringValue' primary='true'><SourceLine classname='org.apache.wicket.util.string.StringValue' start='54' end='987' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java'><Message>At StringValue.java:[lines 54-987]</Message></SourceLine><Message>In class org.apache.wicket.util.string.StringValue</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.string.StringValue' signature='(C)C' name='toChar' primary='true'><SourceLine endBytecode='168' classname='org.apache.wicket.util.string.StringValue' start='454' end='470' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.StringValue.toChar(char)</Message></Method><SourceLine endBytecode='51' classname='org.apache.wicket.util.string.StringValue' start='464' end='464' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='51' primary='true'><Message>At StringValue.java:[line 464]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValue.text'><Message>Unknown source org/apache/wicket/util/string/StringValue.text</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValueConversionException.getMessage()Ljava/lang/String;'><Message>Unknown source org/apache/wicket/util/string/StringValueConversionException.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='47' classname='org.apache.wicket.util.string.StringValue' start='464' end='464' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='47'><Message>At StringValue.java:[line 464]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='98d43ca407dfdaf61a7e1cc453e5ac86' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.string.StringValue' primary='true'><SourceLine classname='org.apache.wicket.util.string.StringValue' start='54' end='987' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java'><Message>At StringValue.java:[lines 54-987]</Message></SourceLine><Message>In class org.apache.wicket.util.string.StringValue</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.string.StringValue' signature='(D)D' name='toDouble' primary='true'><SourceLine endBytecode='168' classname='org.apache.wicket.util.string.StringValue' start='512' end='528' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.StringValue.toDouble(double)</Message></Method><SourceLine endBytecode='51' classname='org.apache.wicket.util.string.StringValue' start='522' end='522' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='51' primary='true'><Message>At StringValue.java:[line 522]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValue.text'><Message>Unknown source org/apache/wicket/util/string/StringValue.text</Message></String><String role='Unknown source' value='java/lang/Exception.getMessage()Ljava/lang/String;'><Message>Unknown source java/lang/Exception.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='36' classname='org.apache.wicket.util.string.StringValue' start='522' end='522' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='36'><Message>At StringValue.java:[line 522]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='bb750ffa23f9d3ba77323d88d35c5dd0' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.string.StringValue' primary='true'><SourceLine classname='org.apache.wicket.util.string.StringValue' start='54' end='987' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java'><Message>At StringValue.java:[lines 54-987]</Message></SourceLine><Message>In class org.apache.wicket.util.string.StringValue</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.string.StringValue' signature='(Lorg/apache/wicket/util/time/Duration;)Lorg/apache/wicket/util/time/Duration;' name='toDuration' primary='true'><SourceLine endBytecode='168' classname='org.apache.wicket.util.string.StringValue' start='565' end='581' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.StringValue.toDuration(Duration)</Message></Method><SourceLine endBytecode='51' classname='org.apache.wicket.util.string.StringValue' start='575' end='575' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='51' primary='true'><Message>At StringValue.java:[line 575]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValue.text'><Message>Unknown source org/apache/wicket/util/string/StringValue.text</Message></String><String role='Unknown source' value='java/lang/Exception.getMessage()Ljava/lang/String;'><Message>Unknown source java/lang/Exception.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='47' classname='org.apache.wicket.util.string.StringValue' start='575' end='575' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='47'><Message>At StringValue.java:[line 575]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='210b8099349d17c15f8fec29ccf6af3d' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.string.StringValue' primary='true'><SourceLine classname='org.apache.wicket.util.string.StringValue' start='54' end='987' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java'><Message>At StringValue.java:[lines 54-987]</Message></SourceLine><Message>In class org.apache.wicket.util.string.StringValue</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.string.StringValue' signature='(Ljava/lang/Class;Ljava/lang/Enum;)Ljava/lang/Enum;' name='toEnum' primary='true'><SourceLine endBytecode='211' classname='org.apache.wicket.util.string.StringValue' start='911' end='926' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.StringValue.toEnum(Class, Enum)</Message></Method><SourceLine endBytecode='56' classname='org.apache.wicket.util.string.StringValue' start='921' end='921' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='56' primary='true'><Message>At StringValue.java:[line 921]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValue.text'><Message>Unknown source org/apache/wicket/util/string/StringValue.text</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValueConversionException.getMessage()Ljava/lang/String;'><Message>Unknown source org/apache/wicket/util/string/StringValueConversionException.getMessage()Ljava/lang/String;</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValue.toEnum(Ljava/lang/Class;Ljava/lang/Enum;)Ljava/lang/Enum; parameter 1'><Message>Unknown source org/apache/wicket/util/string/StringValue.toEnum(Ljava/lang/Class;Ljava/lang/Enum;)Ljava/lang/Enum; parameter 1</Message></String><SourceLine endBytecode='13' classname='org.apache.wicket.util.string.StringValue' start='897' end='897' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='13'><Message>At StringValue.java:[line 897]</Message></SourceLine><SourceLine endBytecode='37' classname='org.apache.wicket.util.string.StringValue' start='921' end='921' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='37'><Message>At StringValue.java:[line 921]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e7317da23b1155b5f10371161f858648' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.string.StringValue' primary='true'><SourceLine classname='org.apache.wicket.util.string.StringValue' start='54' end='987' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java'><Message>At StringValue.java:[lines 54-987]</Message></SourceLine><Message>In class org.apache.wicket.util.string.StringValue</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.string.StringValue' signature='(I)I' name='toInt' primary='true'><SourceLine endBytecode='168' classname='org.apache.wicket.util.string.StringValue' start='612' end='628' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.StringValue.toInt(int)</Message></Method><SourceLine endBytecode='51' classname='org.apache.wicket.util.string.StringValue' start='622' end='622' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='51' primary='true'><Message>At StringValue.java:[line 622]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValue.text'><Message>Unknown source org/apache/wicket/util/string/StringValue.text</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValueConversionException.getMessage()Ljava/lang/String;'><Message>Unknown source org/apache/wicket/util/string/StringValueConversionException.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='36' classname='org.apache.wicket.util.string.StringValue' start='622' end='622' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='36'><Message>At StringValue.java:[line 622]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5ef33c86ff571d0d274bb8fa24008462' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.string.StringValue' primary='true'><SourceLine classname='org.apache.wicket.util.string.StringValue' start='54' end='987' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java'><Message>At StringValue.java:[lines 54-987]</Message></SourceLine><Message>In class org.apache.wicket.util.string.StringValue</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.string.StringValue' signature='(J)J' name='toLong' primary='true'><SourceLine endBytecode='168' classname='org.apache.wicket.util.string.StringValue' start='679' end='695' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.StringValue.toLong(long)</Message></Method><SourceLine endBytecode='51' classname='org.apache.wicket.util.string.StringValue' start='689' end='689' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='51' primary='true'><Message>At StringValue.java:[line 689]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValue.text'><Message>Unknown source org/apache/wicket/util/string/StringValue.text</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValueConversionException.getMessage()Ljava/lang/String;'><Message>Unknown source org/apache/wicket/util/string/StringValueConversionException.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='47' classname='org.apache.wicket.util.string.StringValue' start='689' end='689' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='47'><Message>At StringValue.java:[line 689]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ddca1097ecedd83d870307619be6fb89' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.string.StringValue' primary='true'><SourceLine classname='org.apache.wicket.util.string.StringValue' start='54' end='987' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java'><Message>At StringValue.java:[lines 54-987]</Message></SourceLine><Message>In class org.apache.wicket.util.string.StringValue</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.string.StringValue' signature='(Lorg/apache/wicket/util/time/Time;)Lorg/apache/wicket/util/time/Time;' name='toTime' primary='true'><SourceLine endBytecode='168' classname='org.apache.wicket.util.string.StringValue' start='853' end='869' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.StringValue.toTime(Time)</Message></Method><SourceLine endBytecode='51' classname='org.apache.wicket.util.string.StringValue' start='863' end='863' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='51' primary='true'><Message>At StringValue.java:[line 863]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValue.text'><Message>Unknown source org/apache/wicket/util/string/StringValue.text</Message></String><String role='Unknown source' value='org/apache/wicket/util/string/StringValueConversionException.getMessage()Ljava/lang/String;'><Message>Unknown source org/apache/wicket/util/string/StringValueConversionException.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='36' classname='org.apache.wicket.util.string.StringValue' start='863' end='863' sourcepath='org/apache/wicket/util/string/StringValue.java' sourcefile='StringValue.java' startBytecode='36'><Message>At StringValue.java:[line 863]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e9808804b3c58595f35b0bb76c91eb66' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='5'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.string.Strings' primary='true'><SourceLine classname='org.apache.wicket.util.string.Strings' start='63' end='1595' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java'><Message>At Strings.java:[lines 63-1595]</Message></SourceLine><Message>In class org.apache.wicket.util.string.Strings</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.string.Strings' signature='(Ljava/lang/String;)Z' name='isTrue' primary='true'><SourceLine endBytecode='258' classname='org.apache.wicket.util.string.Strings' start='614' end='646' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.Strings.isTrue(String)</Message></Method><SourceLine endBytecode='7' classname='org.apache.wicket.util.string.Strings' start='616' end='616' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='7' primary='true'><Message>At Strings.java:[line 616]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='e9808804b3c58595f35b0bb76c91eb66' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='5'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.string.Strings' primary='true'><SourceLine classname='org.apache.wicket.util.string.Strings' start='63' end='1595' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java'><Message>At Strings.java:[lines 63-1595]</Message></SourceLine><Message>In class org.apache.wicket.util.string.Strings</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.string.Strings' signature='(Ljava/lang/String;)Z' name='isTrue' primary='true'><SourceLine endBytecode='258' classname='org.apache.wicket.util.string.Strings' start='614' end='646' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.Strings.isTrue(String)</Message></Method><SourceLine endBytecode='18' classname='org.apache.wicket.util.string.Strings' start='621' end='621' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='18' primary='true'><Message>At Strings.java:[line 621]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='2' instanceHash='e9808804b3c58595f35b0bb76c91eb66' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='5'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.string.Strings' primary='true'><SourceLine classname='org.apache.wicket.util.string.Strings' start='63' end='1595' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java'><Message>At Strings.java:[lines 63-1595]</Message></SourceLine><Message>In class org.apache.wicket.util.string.Strings</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.string.Strings' signature='(Ljava/lang/String;)Z' name='isTrue' primary='true'><SourceLine endBytecode='258' classname='org.apache.wicket.util.string.Strings' start='614' end='646' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.Strings.isTrue(String)</Message></Method><SourceLine endBytecode='29' classname='org.apache.wicket.util.string.Strings' start='626' end='626' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='29' primary='true'><Message>At Strings.java:[line 626]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='3' instanceHash='e9808804b3c58595f35b0bb76c91eb66' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='5'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.string.Strings' primary='true'><SourceLine classname='org.apache.wicket.util.string.Strings' start='63' end='1595' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java'><Message>At Strings.java:[lines 63-1595]</Message></SourceLine><Message>In class org.apache.wicket.util.string.Strings</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.string.Strings' signature='(Ljava/lang/String;)Z' name='isTrue' primary='true'><SourceLine endBytecode='258' classname='org.apache.wicket.util.string.Strings' start='614' end='646' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.Strings.isTrue(String)</Message></Method><SourceLine endBytecode='56' classname='org.apache.wicket.util.string.Strings' start='627' end='627' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='56' primary='true'><Message>At Strings.java:[line 627]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='4' instanceHash='e9808804b3c58595f35b0bb76c91eb66' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='5'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.string.Strings' primary='true'><SourceLine classname='org.apache.wicket.util.string.Strings' start='63' end='1595' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java'><Message>At Strings.java:[lines 63-1595]</Message></SourceLine><Message>In class org.apache.wicket.util.string.Strings</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.string.Strings' signature='(Ljava/lang/String;)Z' name='isTrue' primary='true'><SourceLine endBytecode='258' classname='org.apache.wicket.util.string.Strings' start='614' end='646' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.Strings.isTrue(String)</Message></Method><SourceLine endBytecode='67' classname='org.apache.wicket.util.string.Strings' start='632' end='632' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='67' primary='true'><Message>At Strings.java:[line 632]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='5' instanceHash='e9808804b3c58595f35b0bb76c91eb66' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='5'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.string.Strings' primary='true'><SourceLine classname='org.apache.wicket.util.string.Strings' start='63' end='1595' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java'><Message>At Strings.java:[lines 63-1595]</Message></SourceLine><Message>In class org.apache.wicket.util.string.Strings</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.string.Strings' signature='(Ljava/lang/String;)Z' name='isTrue' primary='true'><SourceLine endBytecode='258' classname='org.apache.wicket.util.string.Strings' start='614' end='646' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.Strings.isTrue(String)</Message></Method><SourceLine endBytecode='94' classname='org.apache.wicket.util.string.Strings' start='633' end='633' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='94' primary='true'><Message>At Strings.java:[line 633]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='dbdcd38e694e483598c97fd3a130582a' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='0'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.string.Strings' primary='true'><SourceLine classname='org.apache.wicket.util.string.Strings' start='63' end='1595' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java'><Message>At Strings.java:[lines 63-1595]</Message></SourceLine><Message>In class org.apache.wicket.util.string.Strings</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.string.Strings' signature='(Ljava/lang/String;)Ljava/lang/String;' name='stripJSessionId' primary='true'><SourceLine endBytecode='203' classname='org.apache.wicket.util.string.Strings' start='943' end='969' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.string.Strings.stripJSessionId(String)</Message></Method><SourceLine endBytecode='13' classname='org.apache.wicket.util.string.Strings' start='949' end='949' sourcepath='org/apache/wicket/util/string/Strings.java' sourcefile='Strings.java' startBytecode='13' primary='true'><Message>At Strings.java:[line 949]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c87214b95c8741e7ef2ea560d913d7fa' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.trace(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.thread.Task$1' primary='true'><SourceLine classname='org.apache.wicket.util.thread.Task$1' start='93' end='142' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java'><Message>At Task.java:[lines 93-142]</Message></SourceLine><Message>In class org.apache.wicket.util.thread.Task$1</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.thread.Task$1' signature='()V' name='run' primary='true'><SourceLine endBytecode='457' classname='org.apache.wicket.util.thread.Task$1' start='98' end='142' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.thread.Task$1.run()</Message></Method><SourceLine endBytecode='51' classname='org.apache.wicket.util.thread.Task$1' start='110' end='110' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java' startBytecode='51' primary='true'><Message>At Task.java:[line 110]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.trace(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.trace(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/thread/Task$1.val$code'><Message>Unknown source org/apache/wicket/util/thread/Task$1.val$code</Message></String><SourceLine endBytecode='48' classname='org.apache.wicket.util.thread.Task$1' start='110' end='110' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java' startBytecode='48'><Message>At Task.java:[line 110]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='68dfd7029a7e34b884f56cfbf441836b' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.thread.Task$1' primary='true'><SourceLine classname='org.apache.wicket.util.thread.Task$1' start='93' end='142' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java'><Message>At Task.java:[lines 93-142]</Message></SourceLine><Message>In class org.apache.wicket.util.thread.Task$1</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.thread.Task$1' signature='()V' name='run' primary='true'><SourceLine endBytecode='457' classname='org.apache.wicket.util.thread.Task$1' start='98' end='142' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.thread.Task$1.run()</Message></Method><SourceLine endBytecode='103' classname='org.apache.wicket.util.thread.Task$1' start='120' end='120' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java' startBytecode='103' primary='true'><Message>At Task.java:[line 120]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='org/apache/wicket/util/thread/Task.name'><Message>Unknown source org/apache/wicket/util/thread/Task.name</Message></String><SourceLine endBytecode='99' classname='org.apache.wicket.util.thread.Task$1' start='121' end='121' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java' startBytecode='99'><Message>At Task.java:[line 121]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='c87214b95c8741e7ef2ea560d913d7fa' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.trace(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.thread.Task$1' primary='true'><SourceLine classname='org.apache.wicket.util.thread.Task$1' start='93' end='142' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java'><Message>At Task.java:[lines 93-142]</Message></SourceLine><Message>In class org.apache.wicket.util.thread.Task$1</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.thread.Task$1' signature='()V' name='run' primary='true'><SourceLine endBytecode='457' classname='org.apache.wicket.util.thread.Task$1' start='98' end='142' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.thread.Task$1.run()</Message></Method><SourceLine endBytecode='124' classname='org.apache.wicket.util.thread.Task$1' start='126' end='126' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java' startBytecode='124' primary='true'><Message>At Task.java:[line 126]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.trace(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.trace(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/thread/Task$1.val$code'><Message>Unknown source org/apache/wicket/util/thread/Task$1.val$code</Message></String><SourceLine endBytecode='121' classname='org.apache.wicket.util.thread.Task$1' start='126' end='126' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java' startBytecode='121'><Message>At Task.java:[line 126]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9a4b8b76719e83597530ac49ff1feae' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.thread.Task$1' primary='true'><SourceLine classname='org.apache.wicket.util.thread.Task$1' start='93' end='142' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java'><Message>At Task.java:[lines 93-142]</Message></SourceLine><Message>In class org.apache.wicket.util.thread.Task$1</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.thread.Task$1' signature='()V' name='run' primary='true'><SourceLine endBytecode='457' classname='org.apache.wicket.util.thread.Task$1' start='98' end='142' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.thread.Task$1.run()</Message></Method><SourceLine endBytecode='170' classname='org.apache.wicket.util.thread.Task$1' start='136' end='136' sourcepath='org/apache/wicket/util/thread/Task.java' sourcefile='Task.java' startBytecode='170' primary='true'><Message>At Task.java:[line 136]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5a0a81b54a8c4f8a320881432479f2a3' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='4'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.time.Duration' primary='true'><SourceLine classname='org.apache.wicket.util.time.Duration' start='96' end='551' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java'><Message>At Duration.java:[lines 96-551]</Message></SourceLine><Message>In class org.apache.wicket.util.time.Duration</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.time.Duration' signature='(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/wicket/util/time/Duration;' name='valueOf' primary='true'><SourceLine endBytecode='330' classname='org.apache.wicket.util.time.Duration' start='336' end='370' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.time.Duration.valueOf(String, Locale)</Message></Method><SourceLine endBytecode='39' classname='org.apache.wicket.util.time.Duration' start='343' end='343' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java' startBytecode='39' primary='true'><Message>At Duration.java:[line 343]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='5a0a81b54a8c4f8a320881432479f2a3' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='4'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.time.Duration' primary='true'><SourceLine classname='org.apache.wicket.util.time.Duration' start='96' end='551' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java'><Message>At Duration.java:[lines 96-551]</Message></SourceLine><Message>In class org.apache.wicket.util.time.Duration</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.time.Duration' signature='(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/wicket/util/time/Duration;' name='valueOf' primary='true'><SourceLine endBytecode='330' classname='org.apache.wicket.util.time.Duration' start='336' end='370' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.time.Duration.valueOf(String, Locale)</Message></Method><SourceLine endBytecode='54' classname='org.apache.wicket.util.time.Duration' start='347' end='347' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java' startBytecode='54' primary='true'><Message>At Duration.java:[line 347]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='2' instanceHash='5a0a81b54a8c4f8a320881432479f2a3' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='4'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.time.Duration' primary='true'><SourceLine classname='org.apache.wicket.util.time.Duration' start='96' end='551' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java'><Message>At Duration.java:[lines 96-551]</Message></SourceLine><Message>In class org.apache.wicket.util.time.Duration</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.time.Duration' signature='(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/wicket/util/time/Duration;' name='valueOf' primary='true'><SourceLine endBytecode='330' classname='org.apache.wicket.util.time.Duration' start='336' end='370' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.time.Duration.valueOf(String, Locale)</Message></Method><SourceLine endBytecode='69' classname='org.apache.wicket.util.time.Duration' start='351' end='351' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java' startBytecode='69' primary='true'><Message>At Duration.java:[line 351]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='3' instanceHash='5a0a81b54a8c4f8a320881432479f2a3' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='4'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.time.Duration' primary='true'><SourceLine classname='org.apache.wicket.util.time.Duration' start='96' end='551' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java'><Message>At Duration.java:[lines 96-551]</Message></SourceLine><Message>In class org.apache.wicket.util.time.Duration</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.time.Duration' signature='(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/wicket/util/time/Duration;' name='valueOf' primary='true'><SourceLine endBytecode='330' classname='org.apache.wicket.util.time.Duration' start='336' end='370' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.time.Duration.valueOf(String, Locale)</Message></Method><SourceLine endBytecode='84' classname='org.apache.wicket.util.time.Duration' start='355' end='355' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java' startBytecode='84' primary='true'><Message>At Duration.java:[line 355]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='4' instanceHash='5a0a81b54a8c4f8a320881432479f2a3' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='4'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.time.Duration' primary='true'><SourceLine classname='org.apache.wicket.util.time.Duration' start='96' end='551' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java'><Message>At Duration.java:[lines 96-551]</Message></SourceLine><Message>In class org.apache.wicket.util.time.Duration</Message></Class><Method isStatic='true' classname='org.apache.wicket.util.time.Duration' signature='(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/wicket/util/time/Duration;' name='valueOf' primary='true'><SourceLine endBytecode='330' classname='org.apache.wicket.util.time.Duration' start='336' end='370' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.time.Duration.valueOf(String, Locale)</Message></Method><SourceLine endBytecode='99' classname='org.apache.wicket.util.time.Duration' start='359' end='359' sourcepath='org/apache/wicket/util/time/Duration.java' sourcefile='Duration.java' startBytecode='99' primary='true'><Message>At Duration.java:[line 359]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4cca172ed7a7322d6fe029336d54fe34' cweid='176' rank='15' abbrev='SECUNI' category='SECURITY' priority='3' type='IMPROPER_UNICODE' instanceOccurrenceMax='0'><ShortMessage>Improper handling of Unicode transformations</ShortMessage><LongMessage>Improper handling of Unicode transformations such as case mapping and normalization.</LongMessage><Class classname='org.apache.wicket.util.value.ValueMap' primary='true'><SourceLine classname='org.apache.wicket.util.value.ValueMap' start='60' end='872' sourcepath='org/apache/wicket/util/value/ValueMap.java' sourcefile='ValueMap.java'><Message>At ValueMap.java:[lines 60-872]</Message></SourceLine><Message>In class org.apache.wicket.util.value.ValueMap</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.value.ValueMap' signature='(Ljava/lang/String;)Ljava/lang/String;' name='getKey' primary='true'><SourceLine endBytecode='139' classname='org.apache.wicket.util.value.ValueMap' start='527' end='534' sourcepath='org/apache/wicket/util/value/ValueMap.java' sourcefile='ValueMap.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.value.ValueMap.getKey(String)</Message></Method><SourceLine endBytecode='31' classname='org.apache.wicket.util.value.ValueMap' start='529' end='529' sourcepath='org/apache/wicket/util/value/ValueMap.java' sourcefile='ValueMap.java' startBytecode='31' primary='true'><Message>At ValueMap.java:[line 529]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='cd19f2c44631c63ba568a8c96a0d0b45' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='org.apache.wicket.util.watch.ModificationWatcher' primary='true'><SourceLine classname='org.apache.wicket.util.watch.ModificationWatcher' start='43' end='183' sourcepath='org/apache/wicket/util/watch/ModificationWatcher.java' sourcefile='ModificationWatcher.java'><Message>At ModificationWatcher.java:[lines 43-183]</Message></SourceLine><Message>In class org.apache.wicket.util.watch.ModificationWatcher</Message></Class><Method isStatic='false' classname='org.apache.wicket.util.watch.ModificationWatcher' signature='(Lorg/apache/wicket/util/watch/IModifiable;Lorg/apache/wicket/util/listener/IChangeListener;)Z' name='add' primary='true'><SourceLine endBytecode='286' classname='org.apache.wicket.util.watch.ModificationWatcher' start='88' end='117' sourcepath='org/apache/wicket/util/watch/ModificationWatcher.java' sourcefile='ModificationWatcher.java' startBytecode='0'></SourceLine><Message>In method org.apache.wicket.util.watch.ModificationWatcher.add(IModifiable, IChangeListener)</Message></Method><SourceLine endBytecode='81' classname='org.apache.wicket.util.watch.ModificationWatcher' start='109' end='109' sourcepath='org/apache/wicket/util/watch/ModificationWatcher.java' sourcefile='ModificationWatcher.java' startBytecode='81' primary='true'><Message>At ModificationWatcher.java:[line 109]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/apache/wicket/util/watch/ModificationWatcher.add(Lorg/apache/wicket/util/watch/IModifiable;Lorg/apache/wicket/util/listener/IChangeListener;)Z parameter 1'><Message>Unknown source org/apache/wicket/util/watch/ModificationWatcher.add(Lorg/apache/wicket/util/watch/IModifiable;Lorg/apache/wicket/util/listener/IChangeListener;)Z parameter 1</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugCategory category='SECURITY'><Description>Security</Description></BugCategory><BugPattern cweid='209' abbrev='ERRMSG' category='SECURITY' type='INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE'><ShortDescription>Information Exposure Through An Error Message</ShortDescription><Details>
            
&lt;p&gt;
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/209.html"&gt;CWE-209: Information Exposure Through an Error Message&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/211.html"&gt;CWE-211: Information Exposure Through Externally-Generated Error Message&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;
            
        </Details></BugPattern><BugPattern cweid='330' abbrev='SECPR' category='SECURITY' type='PREDICTABLE_RANDOM'><ShortDescription>Predictable pseudorandom number generator</ShortDescription><Details>
            
&lt;p&gt;The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token&lt;/li&gt;
&lt;li&gt;a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form&lt;/li&gt;
&lt;li&gt;any other secret value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
A quick fix could be to replace the use of &lt;code&gt;java.util.Random&lt;/code&gt; with something stronger, such as &lt;code&gt;java.security.SecureRandom&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Solution:&lt;/b&gt;
&lt;pre&gt;import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html"&gt;Cracking Random Number Generators - Part 1 (https://jazzy.id.au)&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers"&gt;CERT: MSC02-J. Generate strong random numbers&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/330.html"&gt;CWE-330: Use of Insufficiently Random Values&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html"&gt;Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='176' abbrev='SECUNI' category='SECURITY' type='IMPROPER_UNICODE'><ShortDescription>Improper handling of Unicode transformations</ShortDescription><Details>
            
&lt;p&gt;
Unexpected behavior in unicode transformations can sometimes lead to bugs, some of them affecting software security.
A code that applies the uppercase transformation to two strings could mistakenly interpret both strings as being equal.
&lt;/p&gt;

&lt;p&gt;
In the code bellow, the string &lt;code&gt;"ADM\u0131N"&lt;/code&gt; would cause the condition to be true.
When the uppercase transformation is applied, the character `\u0131` will becomme '\u0049' (I).
It can be an issue if the developer only one user to be &lt;code&gt;"ADMIN"&lt;/code&gt;.&lt;br/&gt;
&lt;pre&gt;
if(username.toUpperCase().equals("ADMIN")) {
  //...
}
&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;
Similar characters transformations can occurs with normalization functions.
In the code bellow, the string &lt;code&gt;"BAC\u212AUP"&lt;/code&gt; would cause the condition to be true.
When the normalization transformation is applied, the character `\u212A` will becomme '\u0048' (K).&lt;br/&gt;
&lt;pre&gt;
if(Normalizer.normalize(input, Normalizer.Form.NFC).equals("BACKUP")) {
  //...
}
&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://www.gosecure.net/blog/2020/08/04/unicode-for-security-professionals/"&gt;Unicode for Security Professionals&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://websec.github.io/unicode-security-guide/character-transformations/"&gt;Unicode Security Guide: Character Transformations&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/176.html"&gt;CWE-176: Improper Handling of Unicode Encoding&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://unicode.org/reports/tr36/"&gt;Unicode: Unicode Security Considerations&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;

            
        </Details></BugPattern><BugPattern abbrev='SECFSM' category='SECURITY' type='FORMAT_STRING_MANIPULATION'><ShortDescription>Format String Manipulation</ShortDescription><Details>
            
&lt;p&gt;
Allowing user input to control format parameters could enable an attacker to cause exceptions to be thrown or leak information.&lt;br/&gt;
Attackers may be able to modify the format string argument, such that an exception is thrown. If this exception is left uncaught, it may crash the application. Alternatively, if sensitive information is used within the unused arguments, attackers may change the format string to reveal this information.&lt;br/&gt;
The example code below lets the user specify the decimal points to which it shows the balance. The user can in fact specify anything causing an exception to be thrown which could lead to application failure. Even more critical within this example, if an attacker can specify the user input &lt;code&gt;"2f %3$s %4$.2"&lt;/code&gt;, the format string would be &lt;code&gt;"The customer: %s %s has the balance %4$.2f %3$s %4$.2"&lt;/code&gt;. This would then lead to the sensitive &lt;code&gt;accountNo&lt;/code&gt; to be included within the resulting string.
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;Formatter formatter = new Formatter(Locale.US);
String format = "The customer: %s %s has the balance %4$." + userInput + "f";
formatter.format(format, firstName, lastName, accountNo, balance);&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;
Avoid using user controlled values in the format string argument.
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/134.html"&gt;CWE-134: Use of Externally-Controlled Format String&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;
            
        </Details></BugPattern><BugPattern cweid='117' abbrev='SECCRLFLOG' category='SECURITY' type='CRLF_INJECTION_LOGS'><ShortDescription>Potential CRLF Injection for logs</ShortDescription><Details>
            
&lt;p&gt;
    When data from an untrusted source is put into a logger and not neutralized correctly,
    an attacker could forge log entries or include malicious content.
    Inserted false entries could be used to skew statistics, distract the administrator
    or even to implicate another party in the commission of a malicious act.
    If the log file is processed automatically, the attacker can render the file unusable
    by corrupting the format of the file or injecting unexpected characters.
    An attacker may also inject code or other commands into the log file and take advantage
    of a vulnerability in the log processing utility (e.g. command injection or XSS).
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;Code at risk:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;String val = request.getParameter("user");
String metadata = request.getParameter("metadata");
[...]
if(authenticated) {
    log.info("User " + val + " (" + metadata + ") was authenticated successfully");
}
else {
    log.info("User " + val + " (" + metadata + ") was not authenticated");
}
&lt;/pre&gt;

A malicious user could send the metadata parameter with the value: &lt;code&gt;"Firefox) was authenticated successfully\r\n[INFO] User bbb (Internet Explorer"&lt;/code&gt;.
&lt;/p&gt;

&lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;
&lt;p&gt;
You can manually sanitize each parameter.
&lt;pre&gt;
log.info("User " + val.replaceAll("[\r\n]","") + " (" + userAgent.replaceAll("[\r\n]","") + ") was not authenticated");
&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;
You can also configure your logger service to replace new line for all message events. Here is sample configuration for LogBack &lt;a href="https://logback.qos.ch/manual/layouts.html#replace"&gt;using the &lt;code&gt;replace&lt;/code&gt; function&lt;/a&gt;.
&lt;pre&gt;
&amp;lt;pattern&amp;gt;%-5level - %replace(%msg){'[\r\n]', ''}%n&amp;lt;/pattern&amp;gt;
&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;
Finally, you can use a logger implementation that replace new line by spaces.
The project &lt;a href="https://github.com/javabeanz/owasp-security-logging"&gt;OWASP Security Logging&lt;/a&gt; has an implementation for Logback and Log4j.
&lt;/p&gt;

&lt;br/&gt;
&lt;p&gt;
    &lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
    &lt;a href="https://cwe.mitre.org/data/definitions/117.html"&gt;CWE-117: Improper Output Neutralization for Logs&lt;/a&gt;&lt;br/&gt;
    &lt;a href="https://cwe.mitre.org/data/definitions/93.html"&gt;CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')&lt;/a&gt;&lt;br/&gt;
    &lt;a href="https://logback.qos.ch/manual/layouts.html#replace"&gt;CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')&lt;/a&gt;&lt;br/&gt;
    &lt;a href="https://github.com/javabeanz/owasp-security-logging"&gt;OWASP Security Logging&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;


        </Details></BugPattern><BugPattern cweid='94' abbrev='SECXSLT' category='SECURITY' type='MALICIOUS_XSLT'><ShortDescription>A malicious XSLT could be provided</ShortDescription><Details>
            
&lt;p&gt;
    "XSLT (Extensible Stylesheet Language Transformations) is a language for transforming XML documents into other XML documents".&lt;sup&gt;[1]&lt;/sup&gt;&lt;br/&gt;
    It is possible to attach malicious behavior to those style sheets. Therefore, if an attacker can control the content or the source of the
    style sheet, he might be able to trigger remote code execution.&lt;sup&gt;[2]&lt;/sup&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Code at risk:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;
Source xslt = new StreamSource(new FileInputStream(inputUserFile)); //Dangerous source

Transformer transformer = TransformerFactory.newInstance().newTransformer(xslt);

Source text = new StreamSource(new FileInputStream("/data_2_process.xml"));
transformer.transform(text, new StreamResult(...));
&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;

&lt;p&gt;The solution is to enable the secure processing mode which will block potential reference to Java classes such as &lt;code&gt;java.lang.Runtime&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;
TransformerFactory factory = TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
Source xslt  = new StreamSource(new FileInputStream(inputUserFile));

Transformer transformer = factory.newTransformer(xslt);
&lt;/pre&gt;

&lt;p&gt;
Alternatively, make sure the style sheet is loaded from a safe sources and make sure that vulnerabilities such as
Path traversal &lt;sup&gt;[3][4]&lt;/sup&gt; are not possible.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
[1] &lt;a href="https://en.wikipedia.org/wiki/XSLT"&gt;Wikipedia: XSLT (Extensible Stylesheet Language Transformations)&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://prezi.com/y_fuybfudgnd/offensive-xslt/"&gt;Offensive XSLT&lt;/a&gt; by Nicolas Grégoire&lt;br/&gt;
[2] &lt;a href="https://www.agarri.fr/blog/archives/2012/07/02/from_xslt_code_execution_to_meterpreter_shells/index.html"&gt;From XSLT code execution to Meterpreter shells&lt;/a&gt; by Nicolas Grégoire&lt;br/&gt;
&lt;a href="https://xhe.myxwiki.org/xwiki/bin/view/Main/"&gt;XSLT Hacking Encyclopedia&lt;/a&gt; by Nicolas Grégoire&lt;br/&gt;
&lt;a href="https://www.acunetix.com/blog/articles/the-hidden-dangers-of-xsltprocessor-remote-xsl-injection/"&gt;Acunetix.com : The hidden dangers of XSLTProcessor - Remote XSL injection&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.w3.org/TR/xslt"&gt;w3.org XSL Transformations (XSLT) Version 1.0&lt;/a&gt; : w3c specification&lt;br/&gt;
[3] &lt;a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal"&gt;WASC: Path Traversal&lt;/a&gt;&lt;br/&gt;
[4] &lt;a href="https://www.owasp.org/index.php/Path_Traversal"&gt;OWASP: Path Traversal&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;
            
        </Details></BugPattern><BugPattern cweid='611' abbrev='SECXXEDOC' category='SECURITY' type='XXE_DOCUMENT'><ShortDescription>XML parsing vulnerable to XXE (DocumentBuilder)</ShortDescription><Details>
            
&lt;!--XXE_GENERIC_START--&gt;
&lt;h3&gt;Attack&lt;/h3&gt;
&lt;p&gt;XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Risk 1: Expose local file content (XXE: &lt;u&gt;X&lt;/u&gt;ML E&lt;u&gt;x&lt;/u&gt;ternal &lt;u&gt;E&lt;/u&gt;ntity)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;ISO-8859-1&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE foo [
   &amp;lt;!ENTITY xxe SYSTEM &amp;quot;file:///etc/passwd&amp;quot; &amp;gt; ]&amp;gt;
&amp;lt;foo&amp;gt;&amp;amp;xxe;&amp;lt;/foo&amp;gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;b&gt;Risk 2: Denial of service (XEE: &lt;u&gt;X&lt;/u&gt;ML &lt;u&gt;E&lt;/u&gt;ntity &lt;u&gt;E&lt;/u&gt;xpansion)&lt;/b&gt;
&lt;p&gt;
&lt;pre&gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE lolz [
 &amp;lt;!ENTITY lol &amp;quot;lol&amp;quot;&amp;gt;
 &amp;lt;!ELEMENT lolz (#PCDATA)&amp;gt;
 &amp;lt;!ENTITY lol1 &amp;quot;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;quot;&amp;gt;
 &amp;lt;!ENTITY lol2 &amp;quot;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;quot;&amp;gt;
 &amp;lt;!ENTITY lol3 &amp;quot;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;quot;&amp;gt;
[...]
 &amp;lt;!ENTITY lol9 &amp;quot;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;quot;&amp;gt;
]&amp;gt;
&amp;lt;lolz&amp;gt;&amp;amp;lol9;&amp;lt;/lolz&amp;gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
&lt;/p&gt;
&lt;!--XXE_GENERIC_END--&gt;

&lt;p&gt;&lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;
DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();

Document doc = db.parse(input);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
The following snippets show two available solutions. You can set one feature or both.
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Solution using "Secure processing" mode:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
This setting will protect you against Denial of Service attack and remote file access.
&lt;pre&gt;
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Solution disabling DTD:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
By disabling DTD, almost all XXE attacks will be prevented.
&lt;pre&gt;
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;!--XXE_GENERIC_START--&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/611.html"&gt;CWE-611: Improper Restriction of XML External Entity Reference ('XXE')&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260"&gt;CERT: IDS10-J. Prevent XML external entity attacks&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing"&gt;OWASP.org: XML External Entity (XXE) Processing&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion"&gt;WS-Attacks.org: XML Entity Expansion&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS"&gt;WS-Attacks.org: XML External Entity DOS&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack"&gt;WS-Attacks.org: XML Entity Reference Attack&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://blog.h3xstream.com/2014/06/identifying-xml-external-entity.html"&gt;Identifying XML External Entity vulnerability (XXE)&lt;/a&gt;&lt;br/&gt;
&lt;!--XXE_GENERIC_END--&gt;
&lt;a href="http://xerces.apache.org/xerces2-j/features.html"&gt;Xerces2 complete features list&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='22' abbrev='SECPTI' category='SECURITY' type='PATH_TRAVERSAL_IN'><ShortDescription>Potential Path Traversal (file read)</ShortDescription><Details>
            
&lt;p&gt;A file is opened to read its content. The filename comes from an &lt;b&gt;input&lt;/b&gt; parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.&lt;/p&gt;
&lt;p&gt;This rule identifies &lt;b&gt;potential&lt;/b&gt; path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.&lt;/p&gt;
&lt;br/&gt;

&lt;p&gt;
    &lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;

&lt;p&gt;
    &lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal"&gt;WASC: Path Traversal&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Path_Traversal"&gt;OWASP: Path Traversal&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://capec.mitre.org/data/definitions/126.html"&gt;CAPEC-126: Path Traversal&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/22.html"&gt;CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='400' abbrev='SECRD' category='SECURITY' type='REDOS'><ShortDescription>Regex DOS (ReDOS)</ShortDescription><Details>
            
&lt;p&gt;
    Regular expressions (Regex) are frequently subject to Denial of Service (DOS) attacks (called ReDOS). This is due to the fact that regex engines
    may take a large amount of time when analyzing certain strings, depending on how the regex is defined.
&lt;p&gt;
    For example, for the regex: &lt;code&gt;^(a+)+$&lt;/code&gt;, the input "&lt;code&gt;aaaaaaaaaaaaaaaaX&lt;/code&gt;" will cause the regex engine to analyze 65536
different paths.&lt;sup&gt;[1] Example taken from OWASP references&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;
Therefore, it is possible that a single request may cause a large amount of computation on the server side.
The problem with this regex, and others like it, is that there are two different ways the same input character can be accepted by the
Regex due to the &lt;code&gt;+&lt;/code&gt; (or a &lt;code&gt;*&lt;/code&gt;) inside the parenthesis, and the &lt;code&gt;+&lt;/code&gt; (or a &lt;code&gt;*&lt;/code&gt;) outside the parenthesis. The way this is written, either &lt;code&gt;+&lt;/code&gt; could
consume the character 'a'. To fix this, the regex should be rewritten to eliminate the ambiguity. For example, this could simply be
rewritten as: &lt;code&gt;^a+$&lt;/code&gt;, which is presumably what the author meant anyway (any number of a's). Assuming that's what the original
regex meant, this new regex can be evaluated quickly, and is not subject to ReDOS.
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://sebastiankuebeck.wordpress.com/2011/03/01/detecting-and-preventing-redos-vulnerabilities/"&gt;Sebastian Kubeck's Weblog: Detecting and Preventing ReDoS Vulnerabilities&lt;/a&gt;&lt;br/&gt;
&lt;sup&gt;[1]&lt;/sup&gt; &lt;a href="https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS"&gt;OWASP: Regular expression Denial of Service&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/400.html"&gt;CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='611' abbrev='SECXXETFDTD' category='SECURITY' type='XXE_DTD_TRANSFORM_FACTORY'><ShortDescription>XML parsing vulnerable to XXE (TransformerFactory)</ShortDescription><Details>
            
&lt;!--XXE_GENERIC_START--&gt;
&lt;h3&gt;Attack&lt;/h3&gt;
&lt;p&gt;XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Risk 1: Expose local file content (XXE: &lt;u&gt;X&lt;/u&gt;ML E&lt;u&gt;x&lt;/u&gt;ternal &lt;u&gt;E&lt;/u&gt;ntity)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;ISO-8859-1&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE foo [
   &amp;lt;!ENTITY xxe SYSTEM &amp;quot;file:///etc/passwd&amp;quot; &amp;gt; ]&amp;gt;
&amp;lt;foo&amp;gt;&amp;amp;xxe;&amp;lt;/foo&amp;gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;b&gt;Risk 2: Denial of service (XEE: &lt;u&gt;X&lt;/u&gt;ML &lt;u&gt;E&lt;/u&gt;ntity &lt;u&gt;E&lt;/u&gt;xpansion)&lt;/b&gt;
&lt;p&gt;
&lt;pre&gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE lolz [
 &amp;lt;!ENTITY lol &amp;quot;lol&amp;quot;&amp;gt;
 &amp;lt;!ELEMENT lolz (#PCDATA)&amp;gt;
 &amp;lt;!ENTITY lol1 &amp;quot;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;quot;&amp;gt;
 &amp;lt;!ENTITY lol2 &amp;quot;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;quot;&amp;gt;
 &amp;lt;!ENTITY lol3 &amp;quot;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;quot;&amp;gt;
[...]
 &amp;lt;!ENTITY lol9 &amp;quot;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;quot;&amp;gt;
]&amp;gt;
&amp;lt;lolz&amp;gt;&amp;amp;lol9;&amp;lt;/lolz&amp;gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
&lt;/p&gt;
&lt;!--XXE_GENERIC_END--&gt;

&lt;p&gt;&lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;
Transformer transformer = TransformerFactory.newInstance().newTransformer();
transformer.transform(input, result);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
The following snippets show two available solutions. You can set one feature or both.
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Solution disabling DTD:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
This setting will protect you against remote file access but not denial of service.
&lt;pre&gt;
TransformerFactory factory = TransformerFactory.newInstance();
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;An empty string denies all access to external references for both attributes.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Solution using "Secure processing" mode:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
This setting will protect you against remote file access but not denial of service.
&lt;pre&gt;
TransformerFactory factory = TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;!--XXE_GENERIC_START--&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/611.html"&gt;CWE-611: Improper Restriction of XML External Entity Reference ('XXE')&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260"&gt;CERT: IDS10-J. Prevent XML external entity attacks&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing"&gt;OWASP.org: XML External Entity (XXE) Processing&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion"&gt;WS-Attacks.org: XML Entity Expansion&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS"&gt;WS-Attacks.org: XML External Entity DOS&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack"&gt;WS-Attacks.org: XML Entity Reference Attack&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://blog.h3xstream.com/2014/06/identifying-xml-external-entity.html"&gt;Identifying XML External Entity vulnerability (XXE)&lt;/a&gt;&lt;br/&gt;
&lt;!--XXE_GENERIC_END--&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='918' abbrev='SECSSSRFUC' category='SECURITY' type='URLCONNECTION_SSRF_FD'><ShortDescription>URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</ShortDescription><Details>
            
&lt;p&gt;
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
&lt;/p&gt;
&lt;p&gt;
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
&lt;p&gt;
    &lt;b&gt;Vulnerable Code:&lt;/b&gt;
&lt;pre&gt;
new URL(String url).openConnection()
&lt;/pre&gt;

&lt;pre&gt;
new URL(String url).openStream()
&lt;/pre&gt;

&lt;pre&gt;
new URL(String url).getContent()
&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Solution/Countermeasures:&lt;/b&gt;&lt;br/&gt;
    &lt;ul&gt;
        &lt;li&gt;Don't accept URL destinations from users&lt;/li&gt;
        &lt;li&gt;Accept a destination key, and use it to look up the target destination associate with the key&lt;/li&gt;
        &lt;li&gt;White list URLs (if possible)&lt;/li&gt;
        &lt;li&gt;Validate that the beginning of the URL is part of a white list&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/918.html"&gt;CWE-918: Server-Side Request Forgery (SSRF)&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/"&gt;Understanding Server-Side Request Forgery&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/73.html"&gt;CWE-73: External Control of File Name or Path&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/"&gt;Abusing jar:// downloads&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
            </Details></BugPattern><BugPattern cweid='502' abbrev='SECDESGAD' category='SECURITY' type='DESERIALIZATION_GADGET'><ShortDescription>This class could be used as deserialization gadget</ShortDescription><Details>
            
&lt;p&gt;
Deserialization gadget are class that could be used by an attacker to take advantage of a remote API using Native Serialization.
This class is either adding custom behavior to deserialization with the &lt;code&gt;readObject&lt;/code&gt; method (Serializable) or can be called
 from a serialized object (InvocationHandler).
&lt;/p&gt;
&lt;p&gt;
This detector is intended to be used mostly by researcher. The real issue is using deserialization for remote operation.
Removing gadget is a hardening practice to reduce the risk of being exploited.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/502.html"&gt;CWE-502: Deserialization of Untrusted Data&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"&gt;Deserialization of untrusted data&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8"&gt;Serialization and Deserialization &lt;/a&gt;&lt;br/&gt;
&lt;a href="https://github.com/frohoff/ysoserial"&gt;A tool for generating payloads that exploit unsafe Java object deserialization&lt;/a&gt;&lt;br/&gt;
[1] &lt;a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d"&gt;Example of Denial of Service using the class &lt;code&gt;java.util.HashSet&lt;/code&gt;&lt;/a&gt;&lt;br/&gt;
[2] &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590"&gt;OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)&lt;/a&gt;&lt;br/&gt;
[3] &lt;a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize"&gt;Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='611' abbrev='SECXXETFXSLT' category='SECURITY' type='XXE_XSLT_TRANSFORM_FACTORY'><ShortDescription>XSLT parsing vulnerable to XXE (TransformerFactory)</ShortDescription><Details>
            
&lt;!--XXE_GENERIC_START--&gt;
&lt;h3&gt;Attack&lt;/h3&gt;
&lt;p&gt;XSLT External Entity (XXE) attacks can occur when an XSLT parser supports external entities while processing XSLT received
from an untrusted source.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Risk: Expose local file content (XXE: &lt;u&gt;X&lt;/u&gt;ML E&lt;u&gt;x&lt;/u&gt;ternal &lt;u&gt;E&lt;/u&gt;ntity)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;
&amp;lt;xsl:stylesheet version=&amp;quot;1.0&amp;quot; xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&amp;gt;
   &amp;lt;xsl:template match=&amp;quot;/&amp;quot;&amp;gt;
       &amp;lt;xsl:value-of select=&amp;quot;document(&amp;apos;/etc/passwd&amp;apos;)&amp;quot;&amp;gt;
   &amp;lt;/xsl:value-of&amp;gt;&amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
&lt;/p&gt;
&lt;!--XXE_GENERIC_END--&gt;

&lt;p&gt;&lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;
Transformer transformer = TransformerFactory.newInstance().newTransformer();
transformer.transform(input, result);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
The following snippets show two available solutions. You can set one feature or both.
&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Solution disabling DTD:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
This setting will protect you against remote file access but not denial of service.
&lt;pre&gt;
TransformerFactory factory = TransformerFactory.newInstance();
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;An empty string denies all access to external references for both attributes.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Solution using "Secure processing" mode:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
This setting will protect you against remote file access but not denial of service.
&lt;pre&gt;
TransformerFactory factory = TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;!--XXE_GENERIC_START--&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/611.html"&gt;CWE-611: Improper Restriction of XML External Entity Reference ('XXE')&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260"&gt;CERT: IDS10-J. Prevent XML external entity attacks&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing"&gt;OWASP.org: XML External Entity (XXE) Processing&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion"&gt;WS-Attacks.org: XML Entity Expansion&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS"&gt;WS-Attacks.org: XML External Entity DOS&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack"&gt;WS-Attacks.org: XML Entity Reference Attack&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://blog.h3xstream.com/2014/06/identifying-xml-external-entity.html"&gt;Identifying XML External Entity vulnerability (XXE)&lt;/a&gt;&lt;br/&gt;
&lt;!--XXE_GENERIC_END--&gt;
&lt;/p&gt;

        </Details></BugPattern><BugCode abbrev='SECPR'><Description>Predictable Pseudo Random Generator</Description></BugCode><BugCode abbrev='SECXXEDOC'><Description>XXE Vulnerability using DocumentBuilder</Description></BugCode><BugCode abbrev='SECFSM'><Description>Format String Manipulation</Description></BugCode><BugCode abbrev='SECXXETFXSLT'><Description>XXE Vulnerability using XSLT in TransformerFactory</Description></BugCode><BugCode abbrev='SECCRLFLOG'><Description>CRLF Injection for logs</Description></BugCode><BugCode abbrev='SECXSLT'><Description>A malicious XSLT could be provided</Description></BugCode><BugCode abbrev='SECSSSRFUC'><Description>URLConnection Server-Side Request Forgery</Description></BugCode><BugCode abbrev='SECXXETFDTD'><Description>XXE Vulnerability using TransformerFactory</Description></BugCode><BugCode abbrev='SECUNI'><Description>Improper handling of Unicode transformations</Description></BugCode><BugCode abbrev='SECRD'><Description>Regex DOS</Description></BugCode><BugCode abbrev='ERRMSG'><Description>Information Exposure Through An Error Message</Description></BugCode><BugCode abbrev='SECDESGAD'><Description>Deserialization gadget</Description></BugCode><BugCode abbrev='SECPTI'><Description>Potential Path Traversal (file read)</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='25' total_classes='274' priority_2='29' priority_3='61' total_size='9263' clock_seconds='8.80' referenced_classes='590' vm_version='25.312-b07' total_bugs='90' java_version='1.8.0_312' gc_seconds='0.38' alloc_mbytes='455.50' cpu_seconds='95.18' peak_mbytes='283.96' timestamp='Fri, 15 Apr 2022 09:47:28 -0300'><FileStats path='org/apache/wicket/util/IContextProvider.java' size='4' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/IHierarchical.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/IProvider.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/LazyInitializer.java' size='14' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/LongEncoder.java' size='31' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/NullProvider.java' size='5' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/SlowTests.java' size='1' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/ValueProvider.java' size='10' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/collections/ArrayListStack.java' size='30' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/collections/ClassMetaCache.java' size='29' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/collections/ConcurrentHashSet.java' size='59' bugHash='8cd7ba55ebd87140412cc7a413d99fba' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/collections/IntHashMap.java' size='417' bugHash='b41431fec01f1b543ceba0ce1726c2bf' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/collections/MicroMap.java' size='134' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/collections/MiniMap.java' size='194' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/collections/MostRecentlyUsedMap.java' size='18' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/collections/MultiMap.java' size='38' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/collections/ReadOnlyIterator.java' size='5' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/collections/ReverseListIterator.java' size='15' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/collections/UrlExternalFormComparator.java' size='7' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/ConversionException.java' size='57' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/IConverter.java' size='3' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/MaskConverter.java' size='29' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/AbstractConverter.java' size='22' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/AbstractDateConverter.java' size='24' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/AbstractDecimalConverter.java' size='6' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/AbstractIntegerConverter.java' size='9' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/AbstractJavaTimeConverter.java' size='28' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/AbstractNumberConverter.java' size='44' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/BigDecimalConverter.java' size='9' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/BigIntegerConverter.java' size='12' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/BooleanConverter.java' size='14' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/ByteConverter.java' size='19' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/CalendarConverter.java' size='25' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/CharacterConverter.java' size='17' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/DateConverter.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/DoubleConverter.java' size='19' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/FloatConverter.java' size='19' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/IntegerConverter.java' size='19' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/LocalDateConverter.java' size='14' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/LocalDateTimeConverter.java' size='14' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/LocalTimeConverter.java' size='11' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/LongConverter.java' size='19' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/ShortConverter.java' size='19' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/SqlDateConverter.java' size='9' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/SqlTimeConverter.java' size='13' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/SqlTimestampConverter.java' size='25' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/convert/converter/ZonedDateTimeConverter.java' size='14' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/crypt/AbstractCrypt.java' size='41' bugHash='1128ce79977701fa6dd0dcd777fb27aa' bugCount='3'></FileStats><FileStats path='org/apache/wicket/util/crypt/Base64.java' size='274' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/crypt/CachingSunJceCryptFactory.java' size='4' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/crypt/CharEncoding.java' size='9' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/crypt/ClassCryptFactory.java' size='35' bugHash='f3c47287b93112cc4766d67e40258264' bugCount='3'></FileStats><FileStats path='org/apache/wicket/util/crypt/CryptFactoryCachingDecorator.java' size='12' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/crypt/ICrypt.java' size='4' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/crypt/ICryptFactory.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/crypt/NoCrypt.java' size='10' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/crypt/NoCryptFactory.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/crypt/StringUtils.java' size='41' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/crypt/SunJceCrypt.java' size='33' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/crypt/TrivialCrypt.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/AddDelta.java' size='33' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/ChangeDelta.java' size='44' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/Chunk.java' size='88' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/DeleteDelta.java' size='32' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/Delta.java' size='61' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/Diff.java' size='76' bugHash='68e3d1a9688aa37a12832e9a4e1361ed' bugCount='2'></FileStats><FileStats path='org/apache/wicket/util/diff/DiffAlgorithm.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/DiffException.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/DifferentiationFailedException.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/PatchFailedException.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/Revision.java' size='56' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/RevisionVisitor.java' size='5' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/ToString.java' size='28' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/myers/DiffNode.java' size='6' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/myers/MyersDiff.java' size='67' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/myers/PathNode.java' size='31' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/diff/myers/Snake.java' size='6' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/encoding/UrlDecoder.java' size='56' bugHash='3ec443ce91b80fb02d89cb2311efc9ed' bugCount='2'></FileStats><FileStats path='org/apache/wicket/util/encoding/UrlEncoder.java' size='109' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/file/File.java' size='75' bugHash='78de5bd90fd56d43a44f0bfdba883656' bugCount='7'></FileStats><FileStats path='org/apache/wicket/util/file/FileCleaner.java' size='15' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/file/FileCleanerTrackerAdapter.java' size='18' bugHash='e34d4b3fcbc56ea06c6e7ce32a17debe' bugCount='2'></FileStats><FileStats path='org/apache/wicket/util/file/Files.java' size='114' bugHash='4c410863fcdefb4d1b5af4699ada7571' bugCount='3'></FileStats><FileStats path='org/apache/wicket/util/file/Folder.java' size='102' bugHash='183e9bb801901b5de0c834e15bc6423d' bugCount='5'></FileStats><FileStats path='org/apache/wicket/util/file/FolderDeleteStrategy.java' size='22' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/file/IFileCleaner.java' size='4' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/file/IResourceFinder.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/file/Path.java' size='20' bugHash='9d27af85e63ba5cf00b78950884d2a51' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/file/WebXmlFile.java' size='93' bugHash='ad7a0acfb104dd4eec5e3c2bd440d8bf' bugCount='3'></FileStats><FileStats path='org/apache/wicket/util/io/BOMInputStream.java' size='112' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/io/ByteArrayOutputStream.java' size='90' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/io/ByteCountingOutputStream.java' size='12' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/io/ByteOrderMark.java' size='65' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/io/Connections.java' size='36' bugHash='532c44c3e620ef1b3309b44b99012030' bugCount='2'></FileStats><FileStats path='org/apache/wicket/util/io/DeferredFileOutputStream.java' size='39' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/io/FullyBufferedReader.java' size='81' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/io/HandleArrayListStack.java' size='49' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/io/IClusterable.java' size='1' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/io/IOUtils.java' size='176' bugHash='0fad88ee25896acd01ba39ab2530937e' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/io/ProxyInputStream.java' size='61' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/io/Streams.java' size='45' bugHash='b9bcc6cf9674d30d62f8efb9cb6b7000' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/io/StringBufferWriter.java' size='33' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/io/ThresholdingOutputStream.java' size='45' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/io/XmlReader.java' size='61' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/lang/Args.java' size='35' bugHash='8c3bab6d0ea36fd76f41010a6f5a1be2' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/lang/Bytes.java' size='83' bugHash='ef05cecdbfed4cc25b0cf2141f7e2d22' bugCount='5'></FileStats><FileStats path='org/apache/wicket/util/lang/Checks.java' size='27' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/lang/Classes.java' size='20' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/lang/EnumeratedType.java' size='24' bugHash='4954534582183296629731758e9eac76' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/lang/Exceptions.java' size='44' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/lang/Generics.java' size='18' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/lang/Numbers.java' size='39' bugHash='8d4864ebb268530346942fb2d902045f' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/lang/Objects.java' size='251' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/lang/PackageName.java' size='24' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/lang/Packages.java' size='35' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/lang/Primitives.java' size='5' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/lang/Threads.java' size='47' bugHash='515a1c0080ac0c7ae8b9178cd9964253' bugCount='2'></FileStats><FileStats path='org/apache/wicket/util/license/AbstractLicenseHeaderHandler.java' size='65' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java' size='176' bugHash='961b21a5480a3764f91fd76e500679d5' bugCount='3'></FileStats><FileStats path='org/apache/wicket/util/license/CssLicenseHeaderHandler.java' size='19' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/license/HtmlLicenseHeaderHandler.java' size='6' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/license/ILicenseHeaderHandler.java' size='6' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/license/JavaLicenseHeaderHandler.java' size='39' bugHash='25911b1c5c6d1385f86ea95b928540d1' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/license/JavaScriptLicenseHeaderHandler.java' size='14' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/license/PropertiesLicenseHeaderHandler.java' size='19' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/license/VelocityLicenseHeaderHandler.java' size='19' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/license/XmlLicenseHeaderHandler.java' size='47' bugHash='da41eddaa0aabdd3040430c8a051eae9' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/license/XmlPrologHeaderHandler.java' size='12' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/listener/ChangeListenerSet.java' size='16' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/listener/IChangeListener.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/listener/ListenerCollection.java' size='62' bugHash='e8a078bb0f532b8dc903fdd2eafaafed' bugCount='2'></FileStats><FileStats path='org/apache/wicket/util/markup/xhtml/WellFormedXmlTestCase.java' size='69' bugHash='29e65f53fc4fab786364e1cef9b8ffd9' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/BooleanGroup.java' size='10' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/FloatingPointGroup.java' size='15' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/Group.java' size='18' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/GroupAlreadyBoundException.java' size='5' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/GroupNotBoundException.java' size='5' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/IntegerGroup.java' size='23' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/MetaPattern.java' size='154' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/OptionalMetaPattern.java' size='16' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/parsers/CommaSeparatedVariableParser.java' size='7' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/parsers/IntegerVariableAssignmentParser.java' size='17' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/parsers/ListParser.java' size='20' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/parsers/MetaPatternParser.java' size='30' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/parsers/TagNameParser.java' size='18' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/parsers/VariableAssignmentParser.java' size='20' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/parse/metapattern/parsers/WordParser.java' size='11' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/AbstractResourceStream.java' size='28' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/AbstractResourceStreamWriter.java' size='32' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/AbstractStringResourceStream.java' size='54' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/FileResourceStream.java' size='48' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/FileSystemResourceStream.java' size='58' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/IFixedLocationResourceStream.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/IResourceStream.java' size='11' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/IResourceStreamWriter.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/IStringResourceStream.java' size='3' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/ResourceStreamNotFoundException.java' size='14' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/ResourceStreamWrapper.java' size='35' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/ResourceUtils.java' size='63' bugHash='a2199dbcd47925413be11ea6925af07e' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/resource/StringBufferResourceStream.java' size='23' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/StringResourceStream.java' size='16' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/resource/XSLTResourceStream.java' size='37' bugHash='64ef402a69ad0c1dc13b8049527c3a49' bugCount='3'></FileStats><FileStats path='org/apache/wicket/util/resource/ZipResourceStream.java' size='58' bugHash='ea0d1d17e2b8d5c7c7cbe997e962031f' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/string/AbstractStringList.java' size='39' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/string/AppendingStringBuffer.java' size='405' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/string/Entities.java' size='281' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/string/IStringIterator.java' size='3' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/string/IStringSequence.java' size='4' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/string/PrependingStringBuffer.java' size='56' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/string/StringEscapeUtils.java' size='58' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/string/StringList.java' size='99' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/string/StringValue.java' size='216' bugHash='25673d56f6c6aaf5e81e8265649bd80f' bugCount='8'></FileStats><FileStats path='org/apache/wicket/util/string/StringValueConversionException.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/string/Strings.java' size='504' bugHash='b918b2179d472e358a847c960c623cd3' bugCount='7'></FileStats><FileStats path='org/apache/wicket/util/string/interpolator/MapVariableInterpolator.java' size='17' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/string/interpolator/SystemVariableInterpolator.java' size='4' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/string/interpolator/VariableInterpolator.java' size='45' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/thread/ICode.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/thread/Lock.java' size='3' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/thread/Task.java' size='94' bugHash='f5299d37bfd9b951f4b2b918d8afe84c' bugCount='4'></FileStats><FileStats path='org/apache/wicket/util/time/AbstractTime.java' size='25' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/time/AbstractTimeValue.java' size='7' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/time/Duration.java' size='113' bugHash='a4a0ea5b147a99ec7407013d58e36b9a' bugCount='5'></FileStats><FileStats path='org/apache/wicket/util/time/ITimeFrameSource.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/time/Time.java' size='154' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/time/TimeFrame.java' size='57' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/time/TimeMap.java' size='24' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/time/TimeOfDay.java' size='85' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/value/AttributeMap.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/value/CopyOnWriteValueMap.java' size='113' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/value/IValueMap.java' size='33' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/value/IntValue.java' size='31' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/value/LongValue.java' size='59' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/value/ValueMap.java' size='262' bugHash='a32a6dcb3a600e4f0b4cb576e288506c' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/visit/ClassVisitFilter.java' size='11' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/visit/IVisit.java' size='4' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/visit/IVisitFilter.java' size='13' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/visit/IVisitor.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/visit/Visit.java' size='35' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/visit/Visits.java' size='62' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/watch/IModifiable.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/watch/IModificationWatcher.java' size='6' bugCount='0'></FileStats><FileStats path='org/apache/wicket/util/watch/ModificationWatcher.java' size='66' bugHash='817587e165b8fe41836a6e9c5b2b3bc8' bugCount='1'></FileStats><FileStats path='org/apache/wicket/util/xml/CustomEntityResolver.java' size='63' bugCount='0'></FileStats><PackageStats package='org.apache.wicket.util' total_bugs='0' total_size='69' total_types='8'><ClassStats bugs='0' size='4' interface='true' sourceFile='IContextProvider.java' class='org.apache.wicket.util.IContextProvider'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='IHierarchical.java' class='org.apache.wicket.util.IHierarchical'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='IProvider.java' class='org.apache.wicket.util.IProvider'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='LazyInitializer.java' class='org.apache.wicket.util.LazyInitializer'></ClassStats><ClassStats bugs='0' size='31' interface='false' sourceFile='LongEncoder.java' class='org.apache.wicket.util.LongEncoder'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='NullProvider.java' class='org.apache.wicket.util.NullProvider'></ClassStats><ClassStats bugs='0' size='1' interface='true' sourceFile='SlowTests.java' class='org.apache.wicket.util.SlowTests'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='ValueProvider.java' class='org.apache.wicket.util.ValueProvider'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.collections' total_bugs='2' priority_3='2' total_size='946' total_types='32'><ClassStats bugs='0' size='30' interface='false' sourceFile='ArrayListStack.java' class='org.apache.wicket.util.collections.ArrayListStack'></ClassStats><ClassStats bugs='0' size='29' interface='false' sourceFile='ClassMetaCache.java' class='org.apache.wicket.util.collections.ClassMetaCache'></ClassStats><ClassStats bugs='1' size='59' priority_3='1' interface='false' sourceFile='ConcurrentHashSet.java' class='org.apache.wicket.util.collections.ConcurrentHashSet'></ClassStats><ClassStats bugs='1' size='262' priority_3='1' interface='false' sourceFile='IntHashMap.java' class='org.apache.wicket.util.collections.IntHashMap'></ClassStats><ClassStats bugs='0' size='1' interface='false' sourceFile='IntHashMap.java' class='org.apache.wicket.util.collections.IntHashMap$1'></ClassStats><ClassStats bugs='0' size='34' interface='false' sourceFile='IntHashMap.java' class='org.apache.wicket.util.collections.IntHashMap$Entry'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='IntHashMap.java' class='org.apache.wicket.util.collections.IntHashMap$EntryIterator'></ClassStats><ClassStats bugs='0' size='20' interface='false' sourceFile='IntHashMap.java' class='org.apache.wicket.util.collections.IntHashMap$EntrySet'></ClassStats><ClassStats bugs='0' size='43' interface='false' sourceFile='IntHashMap.java' class='org.apache.wicket.util.collections.IntHashMap$HashIterator'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='IntHashMap.java' class='org.apache.wicket.util.collections.IntHashMap$KeyIterator'></ClassStats><ClassStats bugs='0' size='20' interface='false' sourceFile='IntHashMap.java' class='org.apache.wicket.util.collections.IntHashMap$KeySet'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='IntHashMap.java' class='org.apache.wicket.util.collections.IntHashMap$ValueIterator'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='IntHashMap.java' class='org.apache.wicket.util.collections.IntHashMap$Values'></ClassStats><ClassStats bugs='0' size='64' interface='false' sourceFile='MicroMap.java' class='org.apache.wicket.util.collections.MicroMap'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='MicroMap.java' class='org.apache.wicket.util.collections.MicroMap$1'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='MicroMap.java' class='org.apache.wicket.util.collections.MicroMap$1$1'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='MicroMap.java' class='org.apache.wicket.util.collections.MicroMap$2'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='MicroMap.java' class='org.apache.wicket.util.collections.MicroMap$3'></ClassStats><ClassStats bugs='0' size='17' interface='false' sourceFile='MicroMap.java' class='org.apache.wicket.util.collections.MicroMap$3$1'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='MicroMap.java' class='org.apache.wicket.util.collections.MicroMap$3$1$1'></ClassStats><ClassStats bugs='0' size='114' interface='false' sourceFile='MiniMap.java' class='org.apache.wicket.util.collections.MiniMap'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='MiniMap.java' class='org.apache.wicket.util.collections.MiniMap$1'></ClassStats><ClassStats bugs='0' size='18' interface='false' sourceFile='MiniMap.java' class='org.apache.wicket.util.collections.MiniMap$1$1'></ClassStats><ClassStats bugs='0' size='13' interface='false' sourceFile='MiniMap.java' class='org.apache.wicket.util.collections.MiniMap$2'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='MiniMap.java' class='org.apache.wicket.util.collections.MiniMap$3'></ClassStats><ClassStats bugs='0' size='21' interface='false' sourceFile='MiniMap.java' class='org.apache.wicket.util.collections.MiniMap$3$1'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='MiniMap.java' class='org.apache.wicket.util.collections.MiniMap$3$1$1'></ClassStats><ClassStats bugs='0' size='18' interface='false' sourceFile='MostRecentlyUsedMap.java' class='org.apache.wicket.util.collections.MostRecentlyUsedMap'></ClassStats><ClassStats bugs='0' size='38' interface='false' sourceFile='MultiMap.java' class='org.apache.wicket.util.collections.MultiMap'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='ReadOnlyIterator.java' class='org.apache.wicket.util.collections.ReadOnlyIterator'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='ReverseListIterator.java' class='org.apache.wicket.util.collections.ReverseListIterator'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='UrlExternalFormComparator.java' class='org.apache.wicket.util.collections.UrlExternalFormComparator'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.convert' total_bugs='0' total_size='89' total_types='3'><ClassStats bugs='0' size='57' interface='false' sourceFile='ConversionException.java' class='org.apache.wicket.util.convert.ConversionException'></ClassStats><ClassStats bugs='0' size='3' interface='true' sourceFile='IConverter.java' class='org.apache.wicket.util.convert.IConverter'></ClassStats><ClassStats bugs='0' size='29' interface='false' sourceFile='MaskConverter.java' class='org.apache.wicket.util.convert.MaskConverter'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.convert.converter' total_bugs='0' total_size='432' total_types='25'><ClassStats bugs='0' size='22' interface='false' sourceFile='AbstractConverter.java' class='org.apache.wicket.util.convert.converter.AbstractConverter'></ClassStats><ClassStats bugs='0' size='24' interface='false' sourceFile='AbstractDateConverter.java' class='org.apache.wicket.util.convert.converter.AbstractDateConverter'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='AbstractDecimalConverter.java' class='org.apache.wicket.util.convert.converter.AbstractDecimalConverter'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='AbstractIntegerConverter.java' class='org.apache.wicket.util.convert.converter.AbstractIntegerConverter'></ClassStats><ClassStats bugs='0' size='28' interface='false' sourceFile='AbstractJavaTimeConverter.java' class='org.apache.wicket.util.convert.converter.AbstractJavaTimeConverter'></ClassStats><ClassStats bugs='0' size='44' interface='false' sourceFile='AbstractNumberConverter.java' class='org.apache.wicket.util.convert.converter.AbstractNumberConverter'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='BigDecimalConverter.java' class='org.apache.wicket.util.convert.converter.BigDecimalConverter'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='BigIntegerConverter.java' class='org.apache.wicket.util.convert.converter.BigIntegerConverter'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='BooleanConverter.java' class='org.apache.wicket.util.convert.converter.BooleanConverter'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='ByteConverter.java' class='org.apache.wicket.util.convert.converter.ByteConverter'></ClassStats><ClassStats bugs='0' size='25' interface='false' sourceFile='CalendarConverter.java' class='org.apache.wicket.util.convert.converter.CalendarConverter'></ClassStats><ClassStats bugs='0' size='17' interface='false' sourceFile='CharacterConverter.java' class='org.apache.wicket.util.convert.converter.CharacterConverter'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='DateConverter.java' class='org.apache.wicket.util.convert.converter.DateConverter'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='DoubleConverter.java' class='org.apache.wicket.util.convert.converter.DoubleConverter'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='FloatConverter.java' class='org.apache.wicket.util.convert.converter.FloatConverter'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='IntegerConverter.java' class='org.apache.wicket.util.convert.converter.IntegerConverter'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='LocalDateConverter.java' class='org.apache.wicket.util.convert.converter.LocalDateConverter'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='LocalDateTimeConverter.java' class='org.apache.wicket.util.convert.converter.LocalDateTimeConverter'></ClassStats><ClassStats bugs='0' size='11' interface='false' sourceFile='LocalTimeConverter.java' class='org.apache.wicket.util.convert.converter.LocalTimeConverter'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='LongConverter.java' class='org.apache.wicket.util.convert.converter.LongConverter'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='ShortConverter.java' class='org.apache.wicket.util.convert.converter.ShortConverter'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='SqlDateConverter.java' class='org.apache.wicket.util.convert.converter.SqlDateConverter'></ClassStats><ClassStats bugs='0' size='13' interface='false' sourceFile='SqlTimeConverter.java' class='org.apache.wicket.util.convert.converter.SqlTimeConverter'></ClassStats><ClassStats bugs='0' size='25' interface='false' sourceFile='SqlTimestampConverter.java' class='org.apache.wicket.util.convert.converter.SqlTimestampConverter'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='ZonedDateTimeConverter.java' class='org.apache.wicket.util.convert.converter.ZonedDateTimeConverter'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.crypt' total_bugs='6' priority_3='6' total_size='481' total_types='13'><ClassStats bugs='3' size='41' priority_3='3' interface='false' sourceFile='AbstractCrypt.java' class='org.apache.wicket.util.crypt.AbstractCrypt'></ClassStats><ClassStats bugs='0' size='274' interface='false' sourceFile='Base64.java' class='org.apache.wicket.util.crypt.Base64'></ClassStats><ClassStats bugs='0' size='4' interface='false' sourceFile='CachingSunJceCryptFactory.java' class='org.apache.wicket.util.crypt.CachingSunJceCryptFactory'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='CharEncoding.java' class='org.apache.wicket.util.crypt.CharEncoding'></ClassStats><ClassStats bugs='3' size='35' priority_3='3' interface='false' sourceFile='ClassCryptFactory.java' class='org.apache.wicket.util.crypt.ClassCryptFactory'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='CryptFactoryCachingDecorator.java' class='org.apache.wicket.util.crypt.CryptFactoryCachingDecorator'></ClassStats><ClassStats bugs='0' size='4' interface='true' sourceFile='ICrypt.java' class='org.apache.wicket.util.crypt.ICrypt'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='ICryptFactory.java' class='org.apache.wicket.util.crypt.ICryptFactory'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='NoCrypt.java' class='org.apache.wicket.util.crypt.NoCrypt'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='NoCryptFactory.java' class='org.apache.wicket.util.crypt.NoCryptFactory'></ClassStats><ClassStats bugs='0' size='41' interface='false' sourceFile='StringUtils.java' class='org.apache.wicket.util.crypt.StringUtils'></ClassStats><ClassStats bugs='0' size='33' interface='false' sourceFile='SunJceCrypt.java' class='org.apache.wicket.util.crypt.SunJceCrypt'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='TrivialCrypt.java' class='org.apache.wicket.util.crypt.TrivialCrypt'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.diff' total_bugs='2' priority_2='2' total_size='449' total_types='13'><ClassStats bugs='0' size='33' interface='false' sourceFile='AddDelta.java' class='org.apache.wicket.util.diff.AddDelta'></ClassStats><ClassStats bugs='0' size='44' interface='false' sourceFile='ChangeDelta.java' class='org.apache.wicket.util.diff.ChangeDelta'></ClassStats><ClassStats bugs='0' size='88' interface='false' sourceFile='Chunk.java' class='org.apache.wicket.util.diff.Chunk'></ClassStats><ClassStats bugs='0' size='32' interface='false' sourceFile='DeleteDelta.java' class='org.apache.wicket.util.diff.DeleteDelta'></ClassStats><ClassStats bugs='0' size='61' interface='false' sourceFile='Delta.java' class='org.apache.wicket.util.diff.Delta'></ClassStats><ClassStats bugs='2' size='76' priority_2='2' interface='false' sourceFile='Diff.java' class='org.apache.wicket.util.diff.Diff'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='DiffAlgorithm.java' class='org.apache.wicket.util.diff.DiffAlgorithm'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='DiffException.java' class='org.apache.wicket.util.diff.DiffException'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='DifferentiationFailedException.java' class='org.apache.wicket.util.diff.DifferentiationFailedException'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='PatchFailedException.java' class='org.apache.wicket.util.diff.PatchFailedException'></ClassStats><ClassStats bugs='0' size='56' interface='false' sourceFile='Revision.java' class='org.apache.wicket.util.diff.Revision'></ClassStats><ClassStats bugs='0' size='5' interface='true' sourceFile='RevisionVisitor.java' class='org.apache.wicket.util.diff.RevisionVisitor'></ClassStats><ClassStats bugs='0' size='28' interface='false' sourceFile='ToString.java' class='org.apache.wicket.util.diff.ToString'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.diff.myers' total_bugs='0' total_size='110' total_types='4'><ClassStats bugs='0' size='6' interface='false' sourceFile='DiffNode.java' class='org.apache.wicket.util.diff.myers.DiffNode'></ClassStats><ClassStats bugs='0' size='67' interface='false' sourceFile='MyersDiff.java' class='org.apache.wicket.util.diff.myers.MyersDiff'></ClassStats><ClassStats bugs='0' size='31' interface='false' sourceFile='PathNode.java' class='org.apache.wicket.util.diff.myers.PathNode'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='Snake.java' class='org.apache.wicket.util.diff.myers.Snake'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.encoding' total_bugs='2' priority_3='2' total_size='165' total_types='4'><ClassStats bugs='2' size='56' priority_3='2' interface='false' sourceFile='UrlDecoder.java' class='org.apache.wicket.util.encoding.UrlDecoder'></ClassStats><ClassStats bugs='0' size='92' interface='false' sourceFile='UrlEncoder.java' class='org.apache.wicket.util.encoding.UrlEncoder'></ClassStats><ClassStats bugs='0' size='4' interface='false' sourceFile='UrlEncoder.java' class='org.apache.wicket.util.encoding.UrlEncoder$1'></ClassStats><ClassStats bugs='0' size='13' interface='false' sourceFile='UrlEncoder.java' class='org.apache.wicket.util.encoding.UrlEncoder$Type'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.file' total_bugs='21' priority_2='18' priority_3='3' total_size='465' total_types='16'><ClassStats bugs='7' size='75' priority_2='7' interface='false' sourceFile='File.java' class='org.apache.wicket.util.file.File'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='FileCleaner.java' class='org.apache.wicket.util.file.FileCleaner'></ClassStats><ClassStats bugs='2' size='18' priority_2='2' interface='false' sourceFile='FileCleanerTrackerAdapter.java' class='org.apache.wicket.util.file.FileCleanerTrackerAdapter'></ClassStats><ClassStats bugs='3' size='114' priority_2='2' priority_3='1' interface='false' sourceFile='Files.java' class='org.apache.wicket.util.file.Files'></ClassStats><ClassStats bugs='4' size='69' priority_2='4' interface='false' sourceFile='Folder.java' class='org.apache.wicket.util.file.Folder'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Folder.java' class='org.apache.wicket.util.file.Folder$1'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Folder.java' class='org.apache.wicket.util.file.Folder$2'></ClassStats><ClassStats bugs='1' size='7' priority_2='1' interface='false' sourceFile='Folder.java' class='org.apache.wicket.util.file.Folder$3'></ClassStats><ClassStats bugs='0' size='5' interface='true' sourceFile='Folder.java' class='org.apache.wicket.util.file.Folder$FileFilter'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='Folder.java' class='org.apache.wicket.util.file.Folder$FileFilter$1'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='Folder.java' class='org.apache.wicket.util.file.Folder$FolderFilter'></ClassStats><ClassStats bugs='0' size='22' interface='false' sourceFile='FolderDeleteStrategy.java' class='org.apache.wicket.util.file.FolderDeleteStrategy'></ClassStats><ClassStats bugs='0' size='4' interface='true' sourceFile='IFileCleaner.java' class='org.apache.wicket.util.file.IFileCleaner'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='IResourceFinder.java' class='org.apache.wicket.util.file.IResourceFinder'></ClassStats><ClassStats bugs='1' size='20' priority_2='1' interface='false' sourceFile='Path.java' class='org.apache.wicket.util.file.Path'></ClassStats><ClassStats bugs='3' size='93' priority_2='1' priority_3='2' interface='false' sourceFile='WebXmlFile.java' class='org.apache.wicket.util.file.WebXmlFile'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.io' total_bugs='4' priority_2='3' priority_3='1' total_size='906' total_types='17'><ClassStats bugs='0' size='100' interface='false' sourceFile='BOMInputStream.java' class='org.apache.wicket.util.io.BOMInputStream'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='BOMInputStream.java' class='org.apache.wicket.util.io.BOMInputStream$1'></ClassStats><ClassStats bugs='0' size='90' interface='false' sourceFile='ByteArrayOutputStream.java' class='org.apache.wicket.util.io.ByteArrayOutputStream'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='ByteCountingOutputStream.java' class='org.apache.wicket.util.io.ByteCountingOutputStream'></ClassStats><ClassStats bugs='0' size='65' interface='false' sourceFile='ByteOrderMark.java' class='org.apache.wicket.util.io.ByteOrderMark'></ClassStats><ClassStats bugs='2' size='36' priority_2='2' interface='false' sourceFile='Connections.java' class='org.apache.wicket.util.io.Connections'></ClassStats><ClassStats bugs='0' size='37' interface='false' sourceFile='DeferredFileOutputStream.java' class='org.apache.wicket.util.io.DeferredFileOutputStream'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='DeferredFileOutputStream.java' class='org.apache.wicket.util.io.DeferredFileOutputStream$FileFactory'></ClassStats><ClassStats bugs='0' size='81' interface='false' sourceFile='FullyBufferedReader.java' class='org.apache.wicket.util.io.FullyBufferedReader'></ClassStats><ClassStats bugs='0' size='49' interface='false' sourceFile='HandleArrayListStack.java' class='org.apache.wicket.util.io.HandleArrayListStack'></ClassStats><ClassStats bugs='0' size='1' interface='true' sourceFile='IClusterable.java' class='org.apache.wicket.util.io.IClusterable'></ClassStats><ClassStats bugs='1' size='176' priority_3='1' interface='false' sourceFile='IOUtils.java' class='org.apache.wicket.util.io.IOUtils'></ClassStats><ClassStats bugs='0' size='61' interface='false' sourceFile='ProxyInputStream.java' class='org.apache.wicket.util.io.ProxyInputStream'></ClassStats><ClassStats bugs='1' size='45' priority_2='1' interface='false' sourceFile='Streams.java' class='org.apache.wicket.util.io.Streams'></ClassStats><ClassStats bugs='0' size='33' interface='false' sourceFile='StringBufferWriter.java' class='org.apache.wicket.util.io.StringBufferWriter'></ClassStats><ClassStats bugs='0' size='45' interface='false' sourceFile='ThresholdingOutputStream.java' class='org.apache.wicket.util.io.ThresholdingOutputStream'></ClassStats><ClassStats bugs='0' size='61' interface='false' sourceFile='XmlReader.java' class='org.apache.wicket.util.io.XmlReader'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.lang' total_bugs='10' priority_3='10' total_size='652' total_types='18'><ClassStats bugs='1' size='35' priority_3='1' interface='false' sourceFile='Args.java' class='org.apache.wicket.util.lang.Args'></ClassStats><ClassStats bugs='5' size='83' priority_3='5' interface='false' sourceFile='Bytes.java' class='org.apache.wicket.util.lang.Bytes'></ClassStats><ClassStats bugs='0' size='27' interface='false' sourceFile='Checks.java' class='org.apache.wicket.util.lang.Checks'></ClassStats><ClassStats bugs='0' size='20' interface='false' sourceFile='Classes.java' class='org.apache.wicket.util.lang.Classes'></ClassStats><ClassStats bugs='1' size='24' priority_3='1' interface='false' sourceFile='EnumeratedType.java' class='org.apache.wicket.util.lang.EnumeratedType'></ClassStats><ClassStats bugs='0' size='20' interface='false' sourceFile='Exceptions.java' class='org.apache.wicket.util.lang.Exceptions'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='Exceptions.java' class='org.apache.wicket.util.lang.Exceptions$1'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='Exceptions.java' class='org.apache.wicket.util.lang.Exceptions$IThrowableVisitor'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='Exceptions.java' class='org.apache.wicket.util.lang.Exceptions$Visit'></ClassStats><ClassStats bugs='0' size='18' interface='false' sourceFile='Generics.java' class='org.apache.wicket.util.lang.Generics'></ClassStats><ClassStats bugs='1' size='39' priority_3='1' interface='false' sourceFile='Numbers.java' class='org.apache.wicket.util.lang.Numbers'></ClassStats><ClassStats bugs='0' size='251' interface='false' sourceFile='Objects.java' class='org.apache.wicket.util.lang.Objects'></ClassStats><ClassStats bugs='0' size='24' interface='false' sourceFile='PackageName.java' class='org.apache.wicket.util.lang.PackageName'></ClassStats><ClassStats bugs='0' size='35' interface='false' sourceFile='Packages.java' class='org.apache.wicket.util.lang.Packages'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='Primitives.java' class='org.apache.wicket.util.lang.Primitives'></ClassStats><ClassStats bugs='2' size='39' priority_3='2' interface='false' sourceFile='Threads.java' class='org.apache.wicket.util.lang.Threads'></ClassStats><ClassStats bugs='0' size='1' interface='false' sourceFile='Threads.java' class='org.apache.wicket.util.lang.Threads$1'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Threads.java' class='org.apache.wicket.util.lang.Threads$ThreadDump'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.license' total_bugs='5' priority_2='1' priority_3='4' total_size='422' total_types='15'><ClassStats bugs='0' size='65' interface='false' sourceFile='AbstractLicenseHeaderHandler.java' class='org.apache.wicket.util.license.AbstractLicenseHeaderHandler'></ClassStats><ClassStats bugs='0' size='88' interface='false' sourceFile='ApacheLicenseHeaderTestCase.java' class='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase'></ClassStats><ClassStats bugs='0' size='16' interface='false' sourceFile='ApacheLicenseHeaderTestCase.java' class='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$1'></ClassStats><ClassStats bugs='0' size='23' interface='false' sourceFile='ApacheLicenseHeaderTestCase.java' class='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$DirectoryFileFilter'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='ApacheLicenseHeaderTestCase.java' class='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$FileVisitor'></ClassStats><ClassStats bugs='3' size='47' priority_2='1' priority_3='2' interface='false' sourceFile='ApacheLicenseHeaderTestCase.java' class='org.apache.wicket.util.license.ApacheLicenseHeaderTestCase$SuffixAndIgnoreFileFilter'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='CssLicenseHeaderHandler.java' class='org.apache.wicket.util.license.CssLicenseHeaderHandler'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='HtmlLicenseHeaderHandler.java' class='org.apache.wicket.util.license.HtmlLicenseHeaderHandler'></ClassStats><ClassStats bugs='0' size='6' interface='true' sourceFile='ILicenseHeaderHandler.java' class='org.apache.wicket.util.license.ILicenseHeaderHandler'></ClassStats><ClassStats bugs='1' size='39' priority_3='1' interface='false' sourceFile='JavaLicenseHeaderHandler.java' class='org.apache.wicket.util.license.JavaLicenseHeaderHandler'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='JavaScriptLicenseHeaderHandler.java' class='org.apache.wicket.util.license.JavaScriptLicenseHeaderHandler'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='PropertiesLicenseHeaderHandler.java' class='org.apache.wicket.util.license.PropertiesLicenseHeaderHandler'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='VelocityLicenseHeaderHandler.java' class='org.apache.wicket.util.license.VelocityLicenseHeaderHandler'></ClassStats><ClassStats bugs='1' size='47' priority_3='1' interface='false' sourceFile='XmlLicenseHeaderHandler.java' class='org.apache.wicket.util.license.XmlLicenseHeaderHandler'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='XmlPrologHeaderHandler.java' class='org.apache.wicket.util.license.XmlPrologHeaderHandler'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.listener' total_bugs='2' priority_3='2' total_size='80' total_types='6'><ClassStats bugs='0' size='7' interface='false' sourceFile='ChangeListenerSet.java' class='org.apache.wicket.util.listener.ChangeListenerSet'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='ChangeListenerSet.java' class='org.apache.wicket.util.listener.ChangeListenerSet$1'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='IChangeListener.java' class='org.apache.wicket.util.listener.IChangeListener'></ClassStats><ClassStats bugs='1' size='49' priority_3='1' interface='false' sourceFile='ListenerCollection.java' class='org.apache.wicket.util.listener.ListenerCollection'></ClassStats><ClassStats bugs='1' size='11' priority_3='1' interface='false' sourceFile='ListenerCollection.java' class='org.apache.wicket.util.listener.ListenerCollection$1'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='ListenerCollection.java' class='org.apache.wicket.util.listener.ListenerCollection$INotifier'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.markup.xhtml' total_bugs='1' priority_2='1' total_size='69' total_types='4'><ClassStats bugs='1' size='37' priority_2='1' interface='false' sourceFile='WellFormedXmlTestCase.java' class='org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='WellFormedXmlTestCase.java' class='org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase$1'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='WellFormedXmlTestCase.java' class='org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase$2'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='WellFormedXmlTestCase.java' class='org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase$3'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.parse.metapattern' total_bugs='0' total_size='246' total_types='8'><ClassStats bugs='0' size='10' interface='false' sourceFile='BooleanGroup.java' class='org.apache.wicket.util.parse.metapattern.BooleanGroup'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='FloatingPointGroup.java' class='org.apache.wicket.util.parse.metapattern.FloatingPointGroup'></ClassStats><ClassStats bugs='0' size='18' interface='false' sourceFile='Group.java' class='org.apache.wicket.util.parse.metapattern.Group'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='GroupAlreadyBoundException.java' class='org.apache.wicket.util.parse.metapattern.GroupAlreadyBoundException'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='GroupNotBoundException.java' class='org.apache.wicket.util.parse.metapattern.GroupNotBoundException'></ClassStats><ClassStats bugs='0' size='23' interface='false' sourceFile='IntegerGroup.java' class='org.apache.wicket.util.parse.metapattern.IntegerGroup'></ClassStats><ClassStats bugs='0' size='154' interface='false' sourceFile='MetaPattern.java' class='org.apache.wicket.util.parse.metapattern.MetaPattern'></ClassStats><ClassStats bugs='0' size='16' interface='false' sourceFile='OptionalMetaPattern.java' class='org.apache.wicket.util.parse.metapattern.OptionalMetaPattern'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.parse.metapattern.parsers' total_bugs='0' total_size='123' total_types='7'><ClassStats bugs='0' size='7' interface='false' sourceFile='CommaSeparatedVariableParser.java' class='org.apache.wicket.util.parse.metapattern.parsers.CommaSeparatedVariableParser'></ClassStats><ClassStats bugs='0' size='17' interface='false' sourceFile='IntegerVariableAssignmentParser.java' class='org.apache.wicket.util.parse.metapattern.parsers.IntegerVariableAssignmentParser'></ClassStats><ClassStats bugs='0' size='20' interface='false' sourceFile='ListParser.java' class='org.apache.wicket.util.parse.metapattern.parsers.ListParser'></ClassStats><ClassStats bugs='0' size='30' interface='false' sourceFile='MetaPatternParser.java' class='org.apache.wicket.util.parse.metapattern.parsers.MetaPatternParser'></ClassStats><ClassStats bugs='0' size='18' interface='false' sourceFile='TagNameParser.java' class='org.apache.wicket.util.parse.metapattern.parsers.TagNameParser'></ClassStats><ClassStats bugs='0' size='20' interface='false' sourceFile='VariableAssignmentParser.java' class='org.apache.wicket.util.parse.metapattern.parsers.VariableAssignmentParser'></ClassStats><ClassStats bugs='0' size='11' interface='false' sourceFile='WordParser.java' class='org.apache.wicket.util.parse.metapattern.parsers.WordParser'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.resource' total_bugs='5' priority_2='4' priority_3='1' total_size='484' total_types='17'><ClassStats bugs='0' size='28' interface='false' sourceFile='AbstractResourceStream.java' class='org.apache.wicket.util.resource.AbstractResourceStream'></ClassStats><ClassStats bugs='0' size='32' interface='false' sourceFile='AbstractResourceStreamWriter.java' class='org.apache.wicket.util.resource.AbstractResourceStreamWriter'></ClassStats><ClassStats bugs='0' size='54' interface='false' sourceFile='AbstractStringResourceStream.java' class='org.apache.wicket.util.resource.AbstractStringResourceStream'></ClassStats><ClassStats bugs='0' size='48' interface='false' sourceFile='FileResourceStream.java' class='org.apache.wicket.util.resource.FileResourceStream'></ClassStats><ClassStats bugs='0' size='58' interface='false' sourceFile='FileSystemResourceStream.java' class='org.apache.wicket.util.resource.FileSystemResourceStream'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='IFixedLocationResourceStream.java' class='org.apache.wicket.util.resource.IFixedLocationResourceStream'></ClassStats><ClassStats bugs='0' size='11' interface='true' sourceFile='IResourceStream.java' class='org.apache.wicket.util.resource.IResourceStream'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='IResourceStreamWriter.java' class='org.apache.wicket.util.resource.IResourceStreamWriter'></ClassStats><ClassStats bugs='0' size='3' interface='true' sourceFile='IStringResourceStream.java' class='org.apache.wicket.util.resource.IStringResourceStream'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='ResourceStreamNotFoundException.java' class='org.apache.wicket.util.resource.ResourceStreamNotFoundException'></ClassStats><ClassStats bugs='0' size='35' interface='false' sourceFile='ResourceStreamWrapper.java' class='org.apache.wicket.util.resource.ResourceStreamWrapper'></ClassStats><ClassStats bugs='1' size='55' priority_2='1' interface='false' sourceFile='ResourceUtils.java' class='org.apache.wicket.util.resource.ResourceUtils'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='ResourceUtils.java' class='org.apache.wicket.util.resource.ResourceUtils$PathLocale'></ClassStats><ClassStats bugs='0' size='23' interface='false' sourceFile='StringBufferResourceStream.java' class='org.apache.wicket.util.resource.StringBufferResourceStream'></ClassStats><ClassStats bugs='0' size='16' interface='false' sourceFile='StringResourceStream.java' class='org.apache.wicket.util.resource.StringResourceStream'></ClassStats><ClassStats bugs='3' size='37' priority_2='3' interface='false' sourceFile='XSLTResourceStream.java' class='org.apache.wicket.util.resource.XSLTResourceStream'></ClassStats><ClassStats bugs='1' size='58' priority_3='1' interface='false' sourceFile='ZipResourceStream.java' class='org.apache.wicket.util.resource.ZipResourceStream'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.string' total_bugs='19' priority_3='19' total_size='1673' total_types='22'><ClassStats bugs='0' size='39' interface='false' sourceFile='AbstractStringList.java' class='org.apache.wicket.util.string.AbstractStringList'></ClassStats><ClassStats bugs='0' size='405' interface='false' sourceFile='AppendingStringBuffer.java' class='org.apache.wicket.util.string.AppendingStringBuffer'></ClassStats><ClassStats bugs='0' size='133' interface='false' sourceFile='Entities.java' class='org.apache.wicket.util.string.Entities'></ClassStats><ClassStats bugs='0' size='44' interface='false' sourceFile='Entities.java' class='org.apache.wicket.util.string.Entities$ArrayEntityMap'></ClassStats><ClassStats bugs='0' size='37' interface='false' sourceFile='Entities.java' class='org.apache.wicket.util.string.Entities$BinaryEntityMap'></ClassStats><ClassStats bugs='0' size='4' interface='true' sourceFile='Entities.java' class='org.apache.wicket.util.string.Entities$EntityMap'></ClassStats><ClassStats bugs='0' size='4' interface='false' sourceFile='Entities.java' class='org.apache.wicket.util.string.Entities$HashEntityMap'></ClassStats><ClassStats bugs='0' size='18' interface='false' sourceFile='Entities.java' class='org.apache.wicket.util.string.Entities$LookupEntityMap'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='Entities.java' class='org.apache.wicket.util.string.Entities$MapIntMap'></ClassStats><ClassStats bugs='0' size='18' interface='false' sourceFile='Entities.java' class='org.apache.wicket.util.string.Entities$PrimitiveEntityMap'></ClassStats><ClassStats bugs='0' size='4' interface='false' sourceFile='Entities.java' class='org.apache.wicket.util.string.Entities$TreeEntityMap'></ClassStats><ClassStats bugs='0' size='3' interface='true' sourceFile='IStringIterator.java' class='org.apache.wicket.util.string.IStringIterator'></ClassStats><ClassStats bugs='0' size='4' interface='true' sourceFile='IStringSequence.java' class='org.apache.wicket.util.string.IStringSequence'></ClassStats><ClassStats bugs='0' size='56' interface='false' sourceFile='PrependingStringBuffer.java' class='org.apache.wicket.util.string.PrependingStringBuffer'></ClassStats><ClassStats bugs='0' size='58' interface='false' sourceFile='StringEscapeUtils.java' class='org.apache.wicket.util.string.StringEscapeUtils'></ClassStats><ClassStats bugs='0' size='89' interface='false' sourceFile='StringList.java' class='org.apache.wicket.util.string.StringList'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='StringList.java' class='org.apache.wicket.util.string.StringList$1'></ClassStats><ClassStats bugs='8' size='216' priority_3='8' interface='false' sourceFile='StringValue.java' class='org.apache.wicket.util.string.StringValue'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='StringValueConversionException.java' class='org.apache.wicket.util.string.StringValueConversionException'></ClassStats><ClassStats bugs='11' size='490' priority_3='11' interface='false' sourceFile='Strings.java' class='org.apache.wicket.util.string.Strings'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='Strings.java' class='org.apache.wicket.util.string.Strings$1'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='Strings.java' class='org.apache.wicket.util.string.Strings$2'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.string.interpolator' total_bugs='0' total_size='66' total_types='3'><ClassStats bugs='0' size='17' interface='false' sourceFile='MapVariableInterpolator.java' class='org.apache.wicket.util.string.interpolator.MapVariableInterpolator'></ClassStats><ClassStats bugs='0' size='4' interface='false' sourceFile='SystemVariableInterpolator.java' class='org.apache.wicket.util.string.interpolator.SystemVariableInterpolator'></ClassStats><ClassStats bugs='0' size='45' interface='false' sourceFile='VariableInterpolator.java' class='org.apache.wicket.util.string.interpolator.VariableInterpolator'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.thread' total_bugs='4' priority_3='4' total_size='99' total_types='4'><ClassStats bugs='0' size='2' interface='true' sourceFile='ICode.java' class='org.apache.wicket.util.thread.ICode'></ClassStats><ClassStats bugs='0' size='3' interface='false' sourceFile='Lock.java' class='org.apache.wicket.util.thread.Lock'></ClassStats><ClassStats bugs='0' size='67' interface='false' sourceFile='Task.java' class='org.apache.wicket.util.thread.Task'></ClassStats><ClassStats bugs='4' size='27' priority_3='4' interface='false' sourceFile='Task.java' class='org.apache.wicket.util.thread.Task$1'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.time' total_bugs='5' priority_3='5' total_size='467' total_types='10'><ClassStats bugs='0' size='25' interface='false' sourceFile='AbstractTime.java' class='org.apache.wicket.util.time.AbstractTime'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='AbstractTimeValue.java' class='org.apache.wicket.util.time.AbstractTimeValue'></ClassStats><ClassStats bugs='5' size='113' priority_3='5' interface='false' sourceFile='Duration.java' class='org.apache.wicket.util.time.Duration'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='ITimeFrameSource.java' class='org.apache.wicket.util.time.ITimeFrameSource'></ClassStats><ClassStats bugs='0' size='154' interface='false' sourceFile='Time.java' class='org.apache.wicket.util.time.Time'></ClassStats><ClassStats bugs='0' size='49' interface='false' sourceFile='TimeFrame.java' class='org.apache.wicket.util.time.TimeFrame'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='TimeFrame.java' class='org.apache.wicket.util.time.TimeFrame$1'></ClassStats><ClassStats bugs='0' size='24' interface='false' sourceFile='TimeMap.java' class='org.apache.wicket.util.time.TimeMap'></ClassStats><ClassStats bugs='0' size='80' interface='false' sourceFile='TimeOfDay.java' class='org.apache.wicket.util.time.TimeOfDay'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='TimeOfDay.java' class='org.apache.wicket.util.time.TimeOfDay$Meridian'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.value' total_bugs='1' priority_3='1' total_size='506' total_types='6'><ClassStats bugs='0' size='8' interface='false' sourceFile='AttributeMap.java' class='org.apache.wicket.util.value.AttributeMap'></ClassStats><ClassStats bugs='0' size='113' interface='false' sourceFile='CopyOnWriteValueMap.java' class='org.apache.wicket.util.value.CopyOnWriteValueMap'></ClassStats><ClassStats bugs='0' size='33' interface='true' sourceFile='IValueMap.java' class='org.apache.wicket.util.value.IValueMap'></ClassStats><ClassStats bugs='0' size='31' interface='false' sourceFile='IntValue.java' class='org.apache.wicket.util.value.IntValue'></ClassStats><ClassStats bugs='0' size='59' interface='false' sourceFile='LongValue.java' class='org.apache.wicket.util.value.LongValue'></ClassStats><ClassStats bugs='1' size='262' priority_3='1' interface='false' sourceFile='ValueMap.java' class='org.apache.wicket.util.value.ValueMap'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.visit' total_bugs='0' total_size='127' total_types='9'><ClassStats bugs='0' size='11' interface='false' sourceFile='ClassVisitFilter.java' class='org.apache.wicket.util.visit.ClassVisitFilter'></ClassStats><ClassStats bugs='0' size='4' interface='true' sourceFile='IVisit.java' class='org.apache.wicket.util.visit.IVisit'></ClassStats><ClassStats bugs='0' size='6' interface='true' sourceFile='IVisitFilter.java' class='org.apache.wicket.util.visit.IVisitFilter'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='IVisitFilter.java' class='org.apache.wicket.util.visit.IVisitFilter$1'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='IVisitor.java' class='org.apache.wicket.util.visit.IVisitor'></ClassStats><ClassStats bugs='0' size='24' interface='false' sourceFile='Visit.java' class='org.apache.wicket.util.visit.Visit'></ClassStats><ClassStats bugs='0' size='11' interface='false' sourceFile='Visit.java' class='org.apache.wicket.util.visit.Visit$Action'></ClassStats><ClassStats bugs='0' size='54' interface='false' sourceFile='Visits.java' class='org.apache.wicket.util.visit.Visits'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='Visits.java' class='org.apache.wicket.util.visit.Visits$SingletonIterable'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.watch' total_bugs='1' priority_3='1' total_size='74' total_types='5'><ClassStats bugs='0' size='2' interface='true' sourceFile='IModifiable.java' class='org.apache.wicket.util.watch.IModifiable'></ClassStats><ClassStats bugs='0' size='6' interface='true' sourceFile='IModificationWatcher.java' class='org.apache.wicket.util.watch.IModificationWatcher'></ClassStats><ClassStats bugs='1' size='52' priority_3='1' interface='false' sourceFile='ModificationWatcher.java' class='org.apache.wicket.util.watch.ModificationWatcher'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='ModificationWatcher.java' class='org.apache.wicket.util.watch.ModificationWatcher$1'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='ModificationWatcher.java' class='org.apache.wicket.util.watch.ModificationWatcher$Entry'></ClassStats></PackageStats><PackageStats package='org.apache.wicket.util.xml' total_bugs='0' total_size='63' total_types='5'><ClassStats bugs='0' size='20' interface='false' sourceFile='CustomEntityResolver.java' class='org.apache.wicket.util.xml.CustomEntityResolver'></ClassStats><ClassStats bugs='0' size='1' interface='false' sourceFile='CustomEntityResolver.java' class='org.apache.wicket.util.xml.CustomEntityResolver$1'></ClassStats><ClassStats bugs='0' size='27' interface='false' sourceFile='CustomEntityResolver.java' class='org.apache.wicket.util.xml.CustomEntityResolver$EntityKey'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='CustomEntityResolver.java' class='org.apache.wicket.util.xml.CustomEntityResolver$EntityLocator'></ClassStats><ClassStats bugs='0' size='13' interface='false' sourceFile='CustomEntityResolver.java' class='org.apache.wicket.util.xml.CustomEntityResolver$ServletApiEntityLocator'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='236' totalMilliseconds='391' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='19892' standardDeviationMicrosecondsPerInvocation='740' invocations='1653'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='171' totalMilliseconds='307' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' maxMicrosecondsPerInvocation='144440' standardDeviationMicrosecondsPerInvocation='3425' invocations='1792'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='115' totalMilliseconds='207' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='7126' standardDeviationMicrosecondsPerInvocation='310' invocations='1800'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='113' totalMilliseconds='204' name='com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngine' maxMicrosecondsPerInvocation='6649' standardDeviationMicrosecondsPerInvocation='300' invocations='1800'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='329' totalMilliseconds='194' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='10330' standardDeviationMicrosecondsPerInvocation='874' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='108' totalMilliseconds='191' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' maxMicrosecondsPerInvocation='16267' standardDeviationMicrosecondsPerInvocation='427' invocations='1764'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='304' totalMilliseconds='179' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='15214' standardDeviationMicrosecondsPerInvocation='822' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='304' totalMilliseconds='179' name='com.mebigfatguy.fbcontrib.collect.CollectStatistics' maxMicrosecondsPerInvocation='13223' standardDeviationMicrosecondsPerInvocation='930' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='97' totalMilliseconds='179' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='9954' standardDeviationMicrosecondsPerInvocation='357' invocations='1842'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='66' totalMilliseconds='178' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='14710' standardDeviationMicrosecondsPerInvocation='313' invocations='2695'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='92' totalMilliseconds='169' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='6569' standardDeviationMicrosecondsPerInvocation='234' invocations='1838'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='100' totalMilliseconds='168' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='38320' standardDeviationMicrosecondsPerInvocation='936' invocations='1672'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='75' totalMilliseconds='145' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='7653' standardDeviationMicrosecondsPerInvocation='241' invocations='1919'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='75' totalMilliseconds='117' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' maxMicrosecondsPerInvocation='6958' standardDeviationMicrosecondsPerInvocation='224' invocations='1556'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='147' totalMilliseconds='87' name='com.mebigfatguy.fbcontrib.collect.CollectNullableMethodStatus' maxMicrosecondsPerInvocation='5711' standardDeviationMicrosecondsPerInvocation='418' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='42' totalMilliseconds='80' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='33018' standardDeviationMicrosecondsPerInvocation='754' invocations='1919'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='77' totalMilliseconds='69' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='9510' standardDeviationMicrosecondsPerInvocation='342' invocations='896'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='117' totalMilliseconds='69' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='3107' standardDeviationMicrosecondsPerInvocation='291' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='251' totalMilliseconds='68' name='edu.umd.cs.findbugs.detect.DumbMethods' maxMicrosecondsPerInvocation='5761' standardDeviationMicrosecondsPerInvocation='514' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='224' totalMilliseconds='61' name='edu.umd.cs.findbugs.detect.UnreadFields' maxMicrosecondsPerInvocation='11920' standardDeviationMicrosecondsPerInvocation='742' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='0' totalMilliseconds='57' name='edu.umd.cs.findbugs.DetectorToDetector2Adapter' maxMicrosecondsPerInvocation='694' standardDeviationMicrosecondsPerInvocation='2' invocations='106986'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='30' totalMilliseconds='54' name='edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory' maxMicrosecondsPerInvocation='1699' standardDeviationMicrosecondsPerInvocation='75' invocations='1800'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='79' totalMilliseconds='46' name='edu.umd.cs.findbugs.detect.CalledMethods' maxMicrosecondsPerInvocation='1976' standardDeviationMicrosecondsPerInvocation='197' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1' totalMilliseconds='45' name='edu.umd.cs.findbugs.ba.npe.TypeQualifierNullnessAnnotationDatabase' maxMicrosecondsPerInvocation='974' standardDeviationMicrosecondsPerInvocation='14' invocations='25136'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='163' totalMilliseconds='44' name='edu.umd.cs.findbugs.detect.LoadOfKnownNullValue' maxMicrosecondsPerInvocation='2432' standardDeviationMicrosecondsPerInvocation='240' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='27' totalMilliseconds='44' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='1663' standardDeviationMicrosecondsPerInvocation='72' invocations='1601'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='159' totalMilliseconds='43' name='edu.umd.cs.findbugs.detect.FindInconsistentSync2' maxMicrosecondsPerInvocation='3905' standardDeviationMicrosecondsPerInvocation='322' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='74' totalMilliseconds='43' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='3405' standardDeviationMicrosecondsPerInvocation='253' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='64' totalMilliseconds='37' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='1606' standardDeviationMicrosecondsPerInvocation='117' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='63' totalMilliseconds='37' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='5178' standardDeviationMicrosecondsPerInvocation='241' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='131' totalMilliseconds='36' name='edu.umd.cs.findbugs.detect.FindUselessObjects' maxMicrosecondsPerInvocation='3224' standardDeviationMicrosecondsPerInvocation='281' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='130' totalMilliseconds='35' name='edu.umd.cs.findbugs.detect.FindOpenStream' maxMicrosecondsPerInvocation='5277' standardDeviationMicrosecondsPerInvocation='495' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='17' totalMilliseconds='34' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory' maxMicrosecondsPerInvocation='1673' standardDeviationMicrosecondsPerInvocation='65' invocations='1919'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='57' totalMilliseconds='33' name='edu.umd.cs.findbugs.detect.ReflectiveClasses' maxMicrosecondsPerInvocation='1709' standardDeviationMicrosecondsPerInvocation='167' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='119' totalMilliseconds='32' name='com.h3xstream.findsecbugs.password.ConstantPasswordDetector' maxMicrosecondsPerInvocation='2279' standardDeviationMicrosecondsPerInvocation='261' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='55' totalMilliseconds='32' name='edu.umd.cs.findbugs.detect.BuildStringPassthruGraph' maxMicrosecondsPerInvocation='1568' standardDeviationMicrosecondsPerInvocation='144' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='117' totalMilliseconds='32' name='edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation' maxMicrosecondsPerInvocation='7623' standardDeviationMicrosecondsPerInvocation='474' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='113' totalMilliseconds='31' name='com.h3xstream.findsecbugs.scala.SslDisablerDetector' maxMicrosecondsPerInvocation='9577' standardDeviationMicrosecondsPerInvocation='810' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='111' totalMilliseconds='30' name='edu.umd.cs.findbugs.detect.FindRefComparison' maxMicrosecondsPerInvocation='1190' standardDeviationMicrosecondsPerInvocation='161' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='110' totalMilliseconds='30' name='com.mebigfatguy.fbcontrib.detect.DeletingWhileIterating' maxMicrosecondsPerInvocation='3838' standardDeviationMicrosecondsPerInvocation='278' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='109' totalMilliseconds='30' name='com.mebigfatguy.fbcontrib.detect.PossiblyRedundantMethodCalls' maxMicrosecondsPerInvocation='1380' standardDeviationMicrosecondsPerInvocation='191' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='107' totalMilliseconds='29' name='edu.umd.cs.findbugs.detect.FindDeadLocalStores' maxMicrosecondsPerInvocation='2803' standardDeviationMicrosecondsPerInvocation='278' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='104' totalMilliseconds='28' name='com.mebigfatguy.fbcontrib.detect.SuspiciousJDKVersionUse' maxMicrosecondsPerInvocation='1070' standardDeviationMicrosecondsPerInvocation='176' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='104' totalMilliseconds='28' name='edu.umd.cs.findbugs.detect.FindInstanceLockOnSharedStaticData' maxMicrosecondsPerInvocation='8377' standardDeviationMicrosecondsPerInvocation='523' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='103' totalMilliseconds='28' name='edu.umd.cs.findbugs.detect.MethodReturnCheck' maxMicrosecondsPerInvocation='1442' standardDeviationMicrosecondsPerInvocation='178' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='101' totalMilliseconds='27' name='com.mebigfatguy.fbcontrib.detect.SillynessPotPourri' maxMicrosecondsPerInvocation='2180' standardDeviationMicrosecondsPerInvocation='184' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='100' totalMilliseconds='27' name='edu.umd.cs.findbugs.detect.FindNullDeref' maxMicrosecondsPerInvocation='1636' standardDeviationMicrosecondsPerInvocation='171' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='15' totalMilliseconds='27' name='edu.umd.cs.findbugs.classfile.engine.bcel.LiveLocalStoreDataflowFactory' maxMicrosecondsPerInvocation='802' standardDeviationMicrosecondsPerInvocation='42' invocations='1731'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='46' totalMilliseconds='27' name='com.mebigfatguy.fbcontrib.collect.CollectMethodsReturningImmutableCollections' maxMicrosecondsPerInvocation='3354' standardDeviationMicrosecondsPerInvocation='160' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='15' totalMilliseconds='27' name='edu.umd.cs.findbugs.detect.FindNullDeref$CheckCallSitesAndReturnInstructions' maxMicrosecondsPerInvocation='1429' standardDeviationMicrosecondsPerInvocation='46' invocations='1764'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='96' totalMilliseconds='26' name='edu.umd.cs.findbugs.detect.FindPuzzlers' maxMicrosecondsPerInvocation='1185' standardDeviationMicrosecondsPerInvocation='172' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='88' totalMilliseconds='26' name='edu.umd.cs.findbugs.ba.obl.ObligationAnalysis' maxMicrosecondsPerInvocation='2102' standardDeviationMicrosecondsPerInvocation='177' invocations='300'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='94' totalMilliseconds='25' name='com.h3xstream.findsecbugs.PredictableRandomDetector' maxMicrosecondsPerInvocation='8112' standardDeviationMicrosecondsPerInvocation='497' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='94' totalMilliseconds='25' name='com.mebigfatguy.fbcontrib.detect.LoggerOddities' maxMicrosecondsPerInvocation='3116' standardDeviationMicrosecondsPerInvocation='223' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='92' totalMilliseconds='25' name='com.h3xstream.findsecbugs.WeakFilenameUtilsMethodDetector' maxMicrosecondsPerInvocation='8488' standardDeviationMicrosecondsPerInvocation='515' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='91' totalMilliseconds='25' name='edu.umd.cs.findbugs.detect.SerializableIdiom' maxMicrosecondsPerInvocation='1777' standardDeviationMicrosecondsPerInvocation='136' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='89' totalMilliseconds='24' name='com.h3xstream.findsecbugs.file.PathTraversalDetector' maxMicrosecondsPerInvocation='1939' standardDeviationMicrosecondsPerInvocation='152' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='89' totalMilliseconds='24' name='com.mebigfatguy.fbcontrib.detect.SyncCollectionIterators' maxMicrosecondsPerInvocation='9360' standardDeviationMicrosecondsPerInvocation='579' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='88' totalMilliseconds='24' name='com.mebigfatguy.fbcontrib.detect.OverlyConcreteParameter' maxMicrosecondsPerInvocation='1010' standardDeviationMicrosecondsPerInvocation='102' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='85' totalMilliseconds='23' name='com.mebigfatguy.fbcontrib.detect.UseAddAll' maxMicrosecondsPerInvocation='1506' standardDeviationMicrosecondsPerInvocation='170' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='85' totalMilliseconds='23' name='com.mebigfatguy.fbcontrib.detect.LocalSynchronizedCollection' maxMicrosecondsPerInvocation='2224' standardDeviationMicrosecondsPerInvocation='166' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='84' totalMilliseconds='23' name='edu.umd.cs.findbugs.detect.FindReturnRef' maxMicrosecondsPerInvocation='1403' standardDeviationMicrosecondsPerInvocation='168' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='39' totalMilliseconds='23' name='edu.umd.cs.findbugs.detect.ExplicitSerialization' maxMicrosecondsPerInvocation='6493' standardDeviationMicrosecondsPerInvocation='313' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='83' totalMilliseconds='22' name='com.mebigfatguy.fbcontrib.detect.ArrayIndexOutOfBounds' maxMicrosecondsPerInvocation='6860' standardDeviationMicrosecondsPerInvocation='430' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='82' totalMilliseconds='22' name='com.h3xstream.findsecbugs.serial.ObjectDeserializationDetector' maxMicrosecondsPerInvocation='10061' standardDeviationMicrosecondsPerInvocation='607' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='81' totalMilliseconds='22' name='edu.umd.cs.findbugs.detect.RuntimeExceptionCapture' maxMicrosecondsPerInvocation='876' standardDeviationMicrosecondsPerInvocation='134' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='36' totalMilliseconds='21' name='edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis' maxMicrosecondsPerInvocation='2304' standardDeviationMicrosecondsPerInvocation='119' invocations='590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='79' totalMilliseconds='21' name='edu.umd.cs.findbugs.detect.SwitchFallthrough' maxMicrosecondsPerInvocation='1930' standardDeviationMicrosecondsPerInvocation='177' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='77' totalMilliseconds='21' name='edu.umd.cs.findbugs.detect.FindHEmismatch' maxMicrosecondsPerInvocation='585' standardDeviationMicrosecondsPerInvocation='87' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='77' totalMilliseconds='21' name='com.mebigfatguy.fbcontrib.detect.PresizeCollections' maxMicrosecondsPerInvocation='1045' standardDeviationMicrosecondsPerInvocation='128' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='77' totalMilliseconds='21' name='edu.umd.cs.findbugs.detect.DefaultEncodingDetector' maxMicrosecondsPerInvocation='1855' standardDeviationMicrosecondsPerInvocation='218' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='76' totalMilliseconds='21' name='com.mebigfatguy.fbcontrib.detect.SloppyClassReflection' maxMicrosecondsPerInvocation='3335' standardDeviationMicrosecondsPerInvocation='223' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='76' totalMilliseconds='20' name='com.mebigfatguy.fbcontrib.detect.InefficientStringBuffering' maxMicrosecondsPerInvocation='2220' standardDeviationMicrosecondsPerInvocation='184' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='76' totalMilliseconds='20' name='com.h3xstream.findsecbugs.xml.XmlDecoderDetector' maxMicrosecondsPerInvocation='8205' standardDeviationMicrosecondsPerInvocation='510' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='75' totalMilliseconds='20' name='com.mebigfatguy.fbcontrib.detect.HangingExecutors' maxMicrosecondsPerInvocation='885' standardDeviationMicrosecondsPerInvocation='110' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='75' totalMilliseconds='20' name='com.mebigfatguy.fbcontrib.detect.ClassEnvy' maxMicrosecondsPerInvocation='957' standardDeviationMicrosecondsPerInvocation='110' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='74' totalMilliseconds='20' name='com.mebigfatguy.fbcontrib.detect.WriteOnlyCollection' maxMicrosecondsPerInvocation='829' standardDeviationMicrosecondsPerInvocation='105' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='73' totalMilliseconds='20' name='edu.umd.cs.findbugs.detect.FindSelfComparison' maxMicrosecondsPerInvocation='1913' standardDeviationMicrosecondsPerInvocation='173' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='73' totalMilliseconds='20' name='edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue' maxMicrosecondsPerInvocation='943' standardDeviationMicrosecondsPerInvocation='114' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='72' totalMilliseconds='19' name='com.mebigfatguy.fbcontrib.detect.DubiousMapCollection' maxMicrosecondsPerInvocation='678' standardDeviationMicrosecondsPerInvocation='92' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='71' totalMilliseconds='19' name='com.h3xstream.findsecbugs.cookie.UrlRewritingDetector' maxMicrosecondsPerInvocation='7783' standardDeviationMicrosecondsPerInvocation='484' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='69' totalMilliseconds='19' name='edu.umd.cs.findbugs.detect.InfiniteLoop' maxMicrosecondsPerInvocation='901' standardDeviationMicrosecondsPerInvocation='116' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='68' totalMilliseconds='18' name='com.mebigfatguy.fbcontrib.detect.Section508Compliance' maxMicrosecondsPerInvocation='2036' standardDeviationMicrosecondsPerInvocation='147' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='66' totalMilliseconds='18' name='com.mebigfatguy.fbcontrib.detect.SuspiciousNullGuard' maxMicrosecondsPerInvocation='1111' standardDeviationMicrosecondsPerInvocation='130' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='65' totalMilliseconds='17' name='edu.umd.cs.findbugs.detect.Naming' maxMicrosecondsPerInvocation='889' standardDeviationMicrosecondsPerInvocation='68' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='65' totalMilliseconds='17' name='com.h3xstream.findsecbugs.injection.script.OgnlInjectionDetector' maxMicrosecondsPerInvocation='6810' standardDeviationMicrosecondsPerInvocation='410' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='65' totalMilliseconds='17' name='com.h3xstream.findsecbugs.crypto.cipher.DesUsageDetector' maxMicrosecondsPerInvocation='9140' standardDeviationMicrosecondsPerInvocation='551' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='65' totalMilliseconds='17' name='com.mebigfatguy.fbcontrib.detect.CommonsStringBuilderToString' maxMicrosecondsPerInvocation='5170' standardDeviationMicrosecondsPerInvocation='317' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='64' totalMilliseconds='17' name='com.mebigfatguy.fbcontrib.detect.JDBCVendorReliance' maxMicrosecondsPerInvocation='1977' standardDeviationMicrosecondsPerInvocation='143' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='64' totalMilliseconds='17' name='com.mebigfatguy.fbcontrib.detect.UnrelatedCollectionContents' maxMicrosecondsPerInvocation='2096' standardDeviationMicrosecondsPerInvocation='157' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='63' totalMilliseconds='17' name='edu.umd.cs.findbugs.detect.RepeatedConditionals' maxMicrosecondsPerInvocation='829' standardDeviationMicrosecondsPerInvocation='106' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='63' totalMilliseconds='17' name='edu.umd.cs.findbugs.detect.FindUnrelatedTypesInGenericContainer' maxMicrosecondsPerInvocation='849' standardDeviationMicrosecondsPerInvocation='102' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='63' totalMilliseconds='17' name='com.mebigfatguy.fbcontrib.detect.InvalidConstantArgument' maxMicrosecondsPerInvocation='734' standardDeviationMicrosecondsPerInvocation='90' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='62' totalMilliseconds='17' name='com.mebigfatguy.fbcontrib.detect.OrphanedDOMNode' maxMicrosecondsPerInvocation='1930' standardDeviationMicrosecondsPerInvocation='137' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='61' totalMilliseconds='16' name='com.mebigfatguy.fbcontrib.detect.BuryingLogic' maxMicrosecondsPerInvocation='913' standardDeviationMicrosecondsPerInvocation='112' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='61' totalMilliseconds='16' name='com.mebigfatguy.fbcontrib.detect.PossibleConstantAllocationInLoop' maxMicrosecondsPerInvocation='1228' standardDeviationMicrosecondsPerInvocation='109' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='60' totalMilliseconds='16' name='com.mebigfatguy.fbcontrib.detect.UseToArray' maxMicrosecondsPerInvocation='929' standardDeviationMicrosecondsPerInvocation='100' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='60' totalMilliseconds='16' name='com.mebigfatguy.fbcontrib.detect.UseEnumCollections' maxMicrosecondsPerInvocation='2009' standardDeviationMicrosecondsPerInvocation='142' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='60' totalMilliseconds='16' name='com.mebigfatguy.fbcontrib.detect.ConstantListIndex' maxMicrosecondsPerInvocation='1941' standardDeviationMicrosecondsPerInvocation='170' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='59' totalMilliseconds='16' name='com.h3xstream.findsecbugs.scala.XssMvcApiDetector' maxMicrosecondsPerInvocation='8788' standardDeviationMicrosecondsPerInvocation='530' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='59' totalMilliseconds='16' name='com.mebigfatguy.fbcontrib.detect.UseSplit' maxMicrosecondsPerInvocation='771' standardDeviationMicrosecondsPerInvocation='101' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='59' totalMilliseconds='16' name='com.mebigfatguy.fbcontrib.detect.NeedlessAutoboxing' maxMicrosecondsPerInvocation='2016' standardDeviationMicrosecondsPerInvocation='155' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='59' totalMilliseconds='16' name='com.mebigfatguy.fbcontrib.detect.HttpClientProblems' maxMicrosecondsPerInvocation='731' standardDeviationMicrosecondsPerInvocation='94' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='59' totalMilliseconds='16' name='com.mebigfatguy.fbcontrib.detect.OverlyPermissiveMethod' maxMicrosecondsPerInvocation='740' standardDeviationMicrosecondsPerInvocation='88' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='58' totalMilliseconds='15' name='com.mebigfatguy.fbcontrib.detect.CustomBuiltXML' maxMicrosecondsPerInvocation='1931' standardDeviationMicrosecondsPerInvocation='137' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='57' totalMilliseconds='15' name='edu.umd.cs.findbugs.detect.IncompatMask' maxMicrosecondsPerInvocation='680' standardDeviationMicrosecondsPerInvocation='91' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='57' totalMilliseconds='15' name='com.mebigfatguy.fbcontrib.detect.StringifiedTypes' maxMicrosecondsPerInvocation='1163' standardDeviationMicrosecondsPerInvocation='105' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='57' totalMilliseconds='15' name='com.mebigfatguy.fbcontrib.detect.IOIssues' maxMicrosecondsPerInvocation='568' standardDeviationMicrosecondsPerInvocation='87' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='57' totalMilliseconds='15' name='com.mebigfatguy.fbcontrib.detect.NonProductiveMethodCall' maxMicrosecondsPerInvocation='1154' standardDeviationMicrosecondsPerInvocation='101' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='56' totalMilliseconds='15' name='com.mebigfatguy.fbcontrib.detect.ModifyingUnmodifiableCollection' maxMicrosecondsPerInvocation='734' standardDeviationMicrosecondsPerInvocation='88' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='56' totalMilliseconds='15' name='edu.umd.cs.findbugs.detect.FindUnsatisfiedObligation' maxMicrosecondsPerInvocation='2091' standardDeviationMicrosecondsPerInvocation='142' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='55' totalMilliseconds='15' name='com.h3xstream.findsecbugs.injection.trust.TrustBoundaryViolationAttributeDetector' maxMicrosecondsPerInvocation='5174' standardDeviationMicrosecondsPerInvocation='317' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='55' totalMilliseconds='15' name='edu.umd.cs.findbugs.detect.FindOverridableMethodCall' maxMicrosecondsPerInvocation='960' standardDeviationMicrosecondsPerInvocation='107' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='55' totalMilliseconds='15' name='com.mebigfatguy.fbcontrib.detect.UnnecessaryStoreBeforeReturn' maxMicrosecondsPerInvocation='1864' standardDeviationMicrosecondsPerInvocation='152' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='54' totalMilliseconds='15' name='com.mebigfatguy.fbcontrib.detect.ContainsBasedConditional' maxMicrosecondsPerInvocation='1263' standardDeviationMicrosecondsPerInvocation='117' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='54' totalMilliseconds='14' name='edu.umd.cs.findbugs.detect.CrossSiteScripting' maxMicrosecondsPerInvocation='664' standardDeviationMicrosecondsPerInvocation='88' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='54' totalMilliseconds='14' name='com.mebigfatguy.fbcontrib.detect.SuboptimalExpressionOrder' maxMicrosecondsPerInvocation='691' standardDeviationMicrosecondsPerInvocation='87' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='54' totalMilliseconds='14' name='com.mebigfatguy.fbcontrib.detect.SuspiciousClusteredSessionSupport' maxMicrosecondsPerInvocation='599' standardDeviationMicrosecondsPerInvocation='83' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='53' totalMilliseconds='14' name='com.mebigfatguy.fbcontrib.detect.InappropriateToStringUse' maxMicrosecondsPerInvocation='905' standardDeviationMicrosecondsPerInvocation='93' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='53' totalMilliseconds='14' name='com.mebigfatguy.fbcontrib.detect.ReflectionOnObjectMethods' maxMicrosecondsPerInvocation='658' standardDeviationMicrosecondsPerInvocation='84' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='53' totalMilliseconds='14' name='com.mebigfatguy.fbcontrib.detect.FieldCouldBeLocal' maxMicrosecondsPerInvocation='2241' standardDeviationMicrosecondsPerInvocation='156' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='53' totalMilliseconds='14' name='com.h3xstream.findsecbugs.jsp.JspIncludeDetector' maxMicrosecondsPerInvocation='2144' standardDeviationMicrosecondsPerInvocation='145' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='52' totalMilliseconds='14' name='com.h3xstream.findsecbugs.ImproperHandlingUnicodeDetector' maxMicrosecondsPerInvocation='2823' standardDeviationMicrosecondsPerInvocation='182' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='52' totalMilliseconds='14' name='com.mebigfatguy.fbcontrib.detect.OptionalIssues' maxMicrosecondsPerInvocation='550' standardDeviationMicrosecondsPerInvocation='83' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='52' totalMilliseconds='14' name='com.mebigfatguy.fbcontrib.detect.MapUsageIssues' maxMicrosecondsPerInvocation='1201' standardDeviationMicrosecondsPerInvocation='109' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='52' totalMilliseconds='14' name='com.mebigfatguy.fbcontrib.detect.SpuriousThreadStates' maxMicrosecondsPerInvocation='1933' standardDeviationMicrosecondsPerInvocation='139' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='51' totalMilliseconds='14' name='com.mebigfatguy.fbcontrib.detect.ArrayBasedCollections' maxMicrosecondsPerInvocation='1836' standardDeviationMicrosecondsPerInvocation='126' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='51' totalMilliseconds='14' name='edu.umd.cs.findbugs.detect.FindDoubleCheck' maxMicrosecondsPerInvocation='786' standardDeviationMicrosecondsPerInvocation='89' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='51' totalMilliseconds='14' name='com.mebigfatguy.fbcontrib.detect.DubiousListCollection' maxMicrosecondsPerInvocation='2081' standardDeviationMicrosecondsPerInvocation='150' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='51' totalMilliseconds='13' name='edu.umd.cs.findbugs.detect.InfiniteRecursiveLoop' maxMicrosecondsPerInvocation='528' standardDeviationMicrosecondsPerInvocation='76' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='50' totalMilliseconds='13' name='com.mebigfatguy.fbcontrib.detect.SetUsageIssues' maxMicrosecondsPerInvocation='2329' standardDeviationMicrosecondsPerInvocation='151' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='50' totalMilliseconds='13' name='edu.umd.cs.findbugs.detect.BadSyntaxForRegularExpression' maxMicrosecondsPerInvocation='587' standardDeviationMicrosecondsPerInvocation='86' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='50' totalMilliseconds='13' name='com.h3xstream.findsecbugs.scala.PlayUnvalidatedRedirectDetector' maxMicrosecondsPerInvocation='2087' standardDeviationMicrosecondsPerInvocation='141' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='50' totalMilliseconds='13' name='edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs' maxMicrosecondsPerInvocation='683' standardDeviationMicrosecondsPerInvocation='82' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='50' totalMilliseconds='13' name='edu.umd.cs.findbugs.classfile.engine.bcel.ConstantPoolGenFactory' maxMicrosecondsPerInvocation='2787' standardDeviationMicrosecondsPerInvocation='171' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='50' totalMilliseconds='13' name='edu.umd.cs.findbugs.detect.ReflectionIncreaseAccessibility' maxMicrosecondsPerInvocation='631' standardDeviationMicrosecondsPerInvocation='79' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='49' totalMilliseconds='13' name='com.h3xstream.findsecbugs.injection.crlf.CrlfLogInjectionDetector' maxMicrosecondsPerInvocation='904' standardDeviationMicrosecondsPerInvocation='104' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='49' totalMilliseconds='13' name='edu.umd.cs.findbugs.detect.FormatStringChecker' maxMicrosecondsPerInvocation='769' standardDeviationMicrosecondsPerInvocation='89' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='49' totalMilliseconds='13' name='com.mebigfatguy.fbcontrib.detect.SuspiciousWaitOnConcurrentObject' maxMicrosecondsPerInvocation='1995' standardDeviationMicrosecondsPerInvocation='134' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='96' totalMilliseconds='13' name='edu.umd.cs.findbugs.detect.StreamResourceTracker' maxMicrosecondsPerInvocation='1336' standardDeviationMicrosecondsPerInvocation='180' invocations='140'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='49' totalMilliseconds='13' name='com.h3xstream.findsecbugs.android.ExternalFileAccessDetector' maxMicrosecondsPerInvocation='2100' standardDeviationMicrosecondsPerInvocation='141' invocations='274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='49' totalMilliseconds='13' name='com.h3xstream.findsecbugs.ldap.LdapEntryPoisoningDetector' maxMicrosecondsPerInvocation='2021' standardDeviationMicrosecondsPerInvocation='137' invocations='274'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>