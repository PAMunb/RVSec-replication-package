{
  "sarifVersion" : "2.0.0",
  "runs" : [ {
    "files" : {
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_04.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_14.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_06.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_02.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_06.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_16.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_16.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_02.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_05.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_01.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_07.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_01.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_13.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_10.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_15.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_04.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_01.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_03.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_06.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_07.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_12.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_03.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_15.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_17.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_14.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_17.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_09.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_01.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_03.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_03.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_07.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_09.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_13.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_03.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_12.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_13.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_16.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_16.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_10.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_04.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_04.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_16.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_07.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_13.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_16.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_13.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_10.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_03.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_06.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_10.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_09.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_08.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_08.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_14.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_14.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_06.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_10.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_05.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_01.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_01.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_07.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_12.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_15.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_13.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_12.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_04.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_11.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_07.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_06.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_11.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_15.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_10.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_09.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_14.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_09.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_09.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_11.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_17.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_05.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_11.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_17.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_15.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_05.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_08.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_17.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_02.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_08.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_04.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_02.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_08.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_12.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_15.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_12.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_08.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_05.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_05.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_17.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_11.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_02.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_14.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_02.java" : {
        "mimeType" : "text/java"
      },
      "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_11.java" : {
        "mimeType" : "text/java"
      }
    },
    "resources" : {
      "rules" : {
        "RequiredPredicateError-11" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-10" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-13" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-12" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-15" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-14" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-17" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-16" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-19" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-18" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-20" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-22" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-21" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-24" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-23" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-110" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-114" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-113" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-112" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-111" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-99" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-118" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-117" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-97" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-116" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-98" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-115" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-119" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-103" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-102" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-101" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-100" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-88" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-107" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-89" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-106" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-86" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-105" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-87" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-104" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-109" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-108" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-91" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-92" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-90" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-95" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-96" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-93" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-94" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-9" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-8" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-7" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-6" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-5" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-4" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-3" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-2" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-1" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-154" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-153" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-152" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-151" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-158" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-157" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-156" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-155" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-55" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-56" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-53" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-138" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-54" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-159" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-139" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-59" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-136" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-137" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-57" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-134" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-58" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-135" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-95" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-132" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-94" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-133" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-97" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-130" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-96" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-131" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "TypestateError-10" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "ConstraintError-62" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-99" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "TypestateError-11" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "ConstraintError-63" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-98" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "TypestateError-12" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "ConstraintError-60" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "TypestateError-13" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "ConstraintError-61" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "TypestateError-14" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "RequiredPredicateError-91" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-150" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-90" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-93" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-92" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-143" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-142" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-141" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-140" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-147" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-146" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-145" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-144" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-44" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "TypestateError-15" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "ConstraintError-45" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "TypestateError-16" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "ConstraintError-42" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-149" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-149" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-43" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-148" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-48" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-147" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-49" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-148" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-46" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-145" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-47" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-146" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-143" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-144" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-141" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-142" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-51" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-52" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-140" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-50" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-132" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "TypestateError-4" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "RequiredPredicateError-131" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "TypestateError-5" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "RequiredPredicateError-130" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "TypestateError-6" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "TypestateError-7" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "RequiredPredicateError-136" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "TypestateError-8" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "RequiredPredicateError-135" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "TypestateError-9" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "RequiredPredicateError-134" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-133" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-77" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-78" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-69" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-139" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-75" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-138" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-76" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-137" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "TypestateError-1" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "ConstraintError-79" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "TypestateError-2" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "TypestateError-3" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "ConstraintError-80" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-73" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-81" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-72" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-75" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-152" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-74" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-84" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-77" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-150" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-85" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-76" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-151" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-82" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-79" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-83" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-78" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-71" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-70" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-121" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-120" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-125" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-124" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-123" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-122" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-66" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-129" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-67" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-128" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-64" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-127" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-65" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-126" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-68" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-69" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-84" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-70" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-83" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-86" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-85" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-73" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-88" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-74" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-87" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-71" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "TypestateError" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "ConstraintError-72" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-89" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-80" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-82" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-81" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-19" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-17" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-18" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-11" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-48" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-12" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-47" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-10" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-49" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-15" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-16" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-13" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-1" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-14" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-2" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-51" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-3" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-50" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-4" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-53" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-5" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-52" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-6" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-55" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-7" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-54" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-8" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-57" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-9" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-56" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-187" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-186" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-185" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-184" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-109" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-59" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-107" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-58" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-108" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-105" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-106" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-103" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-104" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-101" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-102" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-62" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-61" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-100" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-64" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-63" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-66" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-65" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-68" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-67" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-183" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-182" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-60" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-181" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-180" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-176" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-175" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-39" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-174" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-173" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-179" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-178" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-177" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-33" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-26" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-118" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-34" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-25" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-119" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-31" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-28" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-116" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-32" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-27" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-117" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-37" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-114" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-38" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-29" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-115" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-35" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-112" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-36" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-113" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-110" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-111" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-31" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-30" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-40" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-33" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-41" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-32" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-35" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-34" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-172" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-171" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-170" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-165" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-164" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-28" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-163" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-29" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-162" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-169" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-168" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-167" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-166" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-22" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-37" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-129" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-23" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-36" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-20" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-39" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-127" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-21" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-38" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-128" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-26" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-125" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-27" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-126" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-24" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-123" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-25" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-124" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-40" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-121" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-122" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-42" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-41" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-120" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-44" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-30" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-43" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-46" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-45" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-161" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-160" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        }
      }
    },
    "results" : [ {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_12.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_12::bad"
      } ],
      "ruleId" : "ConstraintError",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_02.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_02::bad"
      } ],
      "ruleId" : "ConstraintError-1",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_17.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_17::bad"
      } ],
      "ruleId" : "ConstraintError-2",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_15.java"
          },
          "region" : {
            "startLine" : 31
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_15::bad"
      } ],
      "ruleId" : "ConstraintError-3",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_09.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_09::bad"
      } ],
      "ruleId" : "ConstraintError-4",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_10.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_10::bad"
      } ],
      "ruleId" : "ConstraintError-5",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_08.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_08::bad"
      } ],
      "ruleId" : "ConstraintError-6",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_14.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_14::bad"
      } ],
      "ruleId" : "ConstraintError-7",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_11.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_11::bad"
      } ],
      "ruleId" : "ConstraintError-8",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_04.java"
          },
          "region" : {
            "startLine" : 37
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_04::bad"
      } ],
      "ruleId" : "ConstraintError-9",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_13.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_13::bad"
      } ],
      "ruleId" : "ConstraintError-10",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_06.java"
          },
          "region" : {
            "startLine" : 36
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_06::bad"
      } ],
      "ruleId" : "ConstraintError-11",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_16.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_16::bad"
      } ],
      "ruleId" : "ConstraintError-12",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_08.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_08::bad"
      } ],
      "ruleId" : "ConstraintError-13",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_14.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_14::bad"
      } ],
      "ruleId" : "ConstraintError-14",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_01.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_01::bad"
      } ],
      "ruleId" : "ConstraintError-15",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_11.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_11::bad"
      } ],
      "ruleId" : "ConstraintError-16",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_13.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_13::bad"
      } ],
      "ruleId" : "ConstraintError-17",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_16.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_16::bad"
      } ],
      "ruleId" : "ConstraintError-18",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_03.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_03::bad"
      } ],
      "ruleId" : "ConstraintError-19",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_07.java"
          },
          "region" : {
            "startLine" : 36
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_07::bad"
      } ],
      "ruleId" : "ConstraintError-20",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_12.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_12::bad"
      } ],
      "ruleId" : "ConstraintError-21",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_17.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_17::bad"
      } ],
      "ruleId" : "ConstraintError-22",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_15.java"
          },
          "region" : {
            "startLine" : 31
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_15::bad"
      } ],
      "ruleId" : "ConstraintError-23",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_09.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_09::bad"
      } ],
      "ruleId" : "ConstraintError-24",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_05.java"
          },
          "region" : {
            "startLine" : 37
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_05::bad"
      } ],
      "ruleId" : "ConstraintError-25",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_10.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_10::bad"
      } ],
      "ruleId" : "ConstraintError-26",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_09.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_09::bad"
      } ],
      "ruleId" : "ConstraintError-27",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_05.java"
          },
          "region" : {
            "startLine" : 37
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_05::bad"
      } ],
      "ruleId" : "ConstraintError-28",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_10.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_10::bad"
      } ],
      "ruleId" : "ConstraintError-29",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_07.java"
          },
          "region" : {
            "startLine" : 36
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_07::bad"
      } ],
      "ruleId" : "ConstraintError-30",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_12.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_12::bad"
      } ],
      "ruleId" : "ConstraintError-31",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_02.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_02::bad"
      } ],
      "ruleId" : "ConstraintError-32",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_06.java"
          },
          "region" : {
            "startLine" : 36
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_06::bad"
      } ],
      "ruleId" : "ConstraintError-33",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_16.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_16::bad"
      } ],
      "ruleId" : "ConstraintError-34",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_03.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_03::bad"
      } ],
      "ruleId" : "ConstraintError-35",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_14.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_14::bad"
      } ],
      "ruleId" : "ConstraintError-36",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_01.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_01::bad"
      } ],
      "ruleId" : "ConstraintError-37",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_04.java"
          },
          "region" : {
            "startLine" : 37
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_04::bad"
      } ],
      "ruleId" : "ConstraintError-38",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_13.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_13::bad"
      } ],
      "ruleId" : "ConstraintError-39",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_06.java"
          },
          "region" : {
            "startLine" : 36
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_06::bad"
      } ],
      "ruleId" : "ConstraintError-40",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_03.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_03::bad"
      } ],
      "ruleId" : "ConstraintError-41",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_01.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_01::bad"
      } ],
      "ruleId" : "ConstraintError-42",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_08.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_08::bad"
      } ],
      "ruleId" : "ConstraintError-43",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_11.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_11::bad"
      } ],
      "ruleId" : "ConstraintError-44",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_04.java"
          },
          "region" : {
            "startLine" : 37
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_04::bad"
      } ],
      "ruleId" : "ConstraintError-45",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_15.java"
          },
          "region" : {
            "startLine" : 31
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_15::bad"
      } ],
      "ruleId" : "ConstraintError-46",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_05.java"
          },
          "region" : {
            "startLine" : 37
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_05::bad"
      } ],
      "ruleId" : "ConstraintError-47",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD2_07.java"
          },
          "region" : {
            "startLine" : 36
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD2_07::bad"
      } ],
      "ruleId" : "ConstraintError-48",
      "message" : {
        "text" : "First parameter (with value \"MD2\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__MD5_02.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__MD5_02::bad"
      } ],
      "ruleId" : "ConstraintError-49",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE328_Reversible_One_Way_Hash/CWE328_Reversible_One_Way_Hash__SHA1_17.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE328_Reversible_One_Way_Hash::CWE328_Reversible_One_Way_Hash__SHA1_17::bad"
      } ],
      "ruleId" : "ConstraintError-50",
      "message" : {
        "text" : "First parameter (with value \"SHA1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_02.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_02::bad"
      } ],
      "ruleId" : "RequiredPredicateError",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_02.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_02::bad"
      } ],
      "ruleId" : "ConstraintError-51",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_02.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_02::bad"
      } ],
      "ruleId" : "RequiredPredicateError-1",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_02.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_02::bad"
      } ],
      "ruleId" : "ConstraintError-52",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_02.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_02::bad"
      } ],
      "ruleId" : "ConstraintError-53",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_02.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_02::good1"
      } ],
      "ruleId" : "RequiredPredicateError-2",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_02.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_02::good1"
      } ],
      "ruleId" : "RequiredPredicateError-3",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_02.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_02::good2"
      } ],
      "ruleId" : "RequiredPredicateError-4",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_02.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_02::good2"
      } ],
      "ruleId" : "RequiredPredicateError-5",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_06.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_06::bad"
      } ],
      "ruleId" : "RequiredPredicateError-6",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_06.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_06::bad"
      } ],
      "ruleId" : "ConstraintError-54",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_06.java"
          },
          "region" : {
            "startLine" : 45
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_06::bad"
      } ],
      "ruleId" : "ConstraintError-55",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_06.java"
          },
          "region" : {
            "startLine" : 46
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_06::bad"
      } ],
      "ruleId" : "RequiredPredicateError-7",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_06.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_06::bad"
      } ],
      "ruleId" : "ConstraintError-56",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_06.java"
          },
          "region" : {
            "startLine" : 98
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_06::good2"
      } ],
      "ruleId" : "RequiredPredicateError-8",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_06.java"
          },
          "region" : {
            "startLine" : 96
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_06::good2"
      } ],
      "ruleId" : "RequiredPredicateError-9",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_06.java"
          },
          "region" : {
            "startLine" : 73
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_06::good1"
      } ],
      "ruleId" : "RequiredPredicateError-10",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_06.java"
          },
          "region" : {
            "startLine" : 76
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_06::good1"
      } ],
      "ruleId" : "RequiredPredicateError-11",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_04.java"
          },
          "region" : {
            "startLine" : 45
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_04::bad"
      } ],
      "ruleId" : "RequiredPredicateError-12",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_04.java"
          },
          "region" : {
            "startLine" : 46
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_04::bad"
      } ],
      "ruleId" : "ConstraintError-57",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_04.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_04::bad"
      } ],
      "ruleId" : "ConstraintError-58",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_04.java"
          },
          "region" : {
            "startLine" : 47
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_04::bad"
      } ],
      "ruleId" : "RequiredPredicateError-13",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_04.java"
          },
          "region" : {
            "startLine" : 45
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_04::bad"
      } ],
      "ruleId" : "ConstraintError-59",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_04.java"
          },
          "region" : {
            "startLine" : 99
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_04::good2"
      } ],
      "ruleId" : "RequiredPredicateError-14",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_04.java"
          },
          "region" : {
            "startLine" : 97
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_04::good2"
      } ],
      "ruleId" : "RequiredPredicateError-15",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_04.java"
          },
          "region" : {
            "startLine" : 74
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_04::good1"
      } ],
      "ruleId" : "RequiredPredicateError-16",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_04.java"
          },
          "region" : {
            "startLine" : 77
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_04::good1"
      } ],
      "ruleId" : "RequiredPredicateError-17",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_04.java"
          },
          "region" : {
            "startLine" : 45
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_04::bad"
      } ],
      "ruleId" : "RequiredPredicateError-18",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_04.java"
          },
          "region" : {
            "startLine" : 46
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_04::bad"
      } ],
      "ruleId" : "ConstraintError-60",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_04.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_04::bad"
      } ],
      "ruleId" : "ConstraintError-61",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_04.java"
          },
          "region" : {
            "startLine" : 47
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_04::bad"
      } ],
      "ruleId" : "RequiredPredicateError-19",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_04.java"
          },
          "region" : {
            "startLine" : 45
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_04::bad"
      } ],
      "ruleId" : "ConstraintError-62",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_04.java"
          },
          "region" : {
            "startLine" : 77
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_04::good1"
      } ],
      "ruleId" : "RequiredPredicateError-20",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_04.java"
          },
          "region" : {
            "startLine" : 74
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_04::good1"
      } ],
      "ruleId" : "RequiredPredicateError-21",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_04.java"
          },
          "region" : {
            "startLine" : 97
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_04::good2"
      } ],
      "ruleId" : "RequiredPredicateError-22",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_04.java"
          },
          "region" : {
            "startLine" : 99
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_04::good2"
      } ],
      "ruleId" : "RequiredPredicateError-23",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_06.java"
          },
          "region" : {
            "startLine" : 45
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_06::bad"
      } ],
      "ruleId" : "ConstraintError-63",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_06.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_06::bad"
      } ],
      "ruleId" : "RequiredPredicateError-24",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_06.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_06::bad"
      } ],
      "ruleId" : "ConstraintError-64",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_06.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_06::bad"
      } ],
      "ruleId" : "ConstraintError-65",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_06.java"
          },
          "region" : {
            "startLine" : 46
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_06::bad"
      } ],
      "ruleId" : "RequiredPredicateError-25",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_06.java"
          },
          "region" : {
            "startLine" : 76
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_06::good1"
      } ],
      "ruleId" : "RequiredPredicateError-26",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_06.java"
          },
          "region" : {
            "startLine" : 73
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_06::good1"
      } ],
      "ruleId" : "RequiredPredicateError-27",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_06.java"
          },
          "region" : {
            "startLine" : 96
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_06::good2"
      } ],
      "ruleId" : "RequiredPredicateError-28",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_06.java"
          },
          "region" : {
            "startLine" : 98
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_06::good2"
      } ],
      "ruleId" : "RequiredPredicateError-29",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_02.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_02::bad"
      } ],
      "ruleId" : "RequiredPredicateError-30",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_02.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_02::bad"
      } ],
      "ruleId" : "ConstraintError-66",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_02.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_02::bad"
      } ],
      "ruleId" : "RequiredPredicateError-31",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_02.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_02::bad"
      } ],
      "ruleId" : "ConstraintError-67",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_02.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_02::bad"
      } ],
      "ruleId" : "ConstraintError-68",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_02.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_02::good2"
      } ],
      "ruleId" : "RequiredPredicateError-32",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_02.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_02::good2"
      } ],
      "ruleId" : "RequiredPredicateError-33",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_02.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_02::good1"
      } ],
      "ruleId" : "RequiredPredicateError-34",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_02.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_02::good1"
      } ],
      "ruleId" : "RequiredPredicateError-35",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_01.java"
          },
          "region" : {
            "startLine" : 41
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_01::bad"
      } ],
      "ruleId" : "RequiredPredicateError-36",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_01.java"
          },
          "region" : {
            "startLine" : 41
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_01::bad"
      } ],
      "ruleId" : "ConstraintError-69",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_01.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_01::bad"
      } ],
      "ruleId" : "RequiredPredicateError-37",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_01.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_01::bad"
      } ],
      "ruleId" : "ConstraintError-70",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_01.java"
          },
          "region" : {
            "startLine" : 43
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_01::bad"
      } ],
      "ruleId" : "ConstraintError-71",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_01.java"
          },
          "region" : {
            "startLine" : 73
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_01::good1"
      } ],
      "ruleId" : "RequiredPredicateError-38",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_01.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_01::good1"
      } ],
      "ruleId" : "RequiredPredicateError-39",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_05.java"
          },
          "region" : {
            "startLine" : 45
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_05::bad"
      } ],
      "ruleId" : "RequiredPredicateError-40",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_05.java"
          },
          "region" : {
            "startLine" : 47
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_05::bad"
      } ],
      "ruleId" : "RequiredPredicateError-41",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_05.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_05::bad"
      } ],
      "ruleId" : "ConstraintError-72",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_05.java"
          },
          "region" : {
            "startLine" : 46
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_05::bad"
      } ],
      "ruleId" : "ConstraintError-73",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_05.java"
          },
          "region" : {
            "startLine" : 45
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_05::bad"
      } ],
      "ruleId" : "ConstraintError-74",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_05.java"
          },
          "region" : {
            "startLine" : 74
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_05::good1"
      } ],
      "ruleId" : "RequiredPredicateError-42",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_05.java"
          },
          "region" : {
            "startLine" : 77
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_05::good1"
      } ],
      "ruleId" : "RequiredPredicateError-43",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_05.java"
          },
          "region" : {
            "startLine" : 99
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_05::good2"
      } ],
      "ruleId" : "RequiredPredicateError-44",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_05.java"
          },
          "region" : {
            "startLine" : 97
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_05::good2"
      } ],
      "ruleId" : "RequiredPredicateError-45",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_07.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_07::bad"
      } ],
      "ruleId" : "RequiredPredicateError-46",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_07.java"
          },
          "region" : {
            "startLine" : 45
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_07::bad"
      } ],
      "ruleId" : "ConstraintError-75",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_07.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_07::bad"
      } ],
      "ruleId" : "ConstraintError-76",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_07.java"
          },
          "region" : {
            "startLine" : 46
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_07::bad"
      } ],
      "ruleId" : "RequiredPredicateError-47",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_07.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_07::bad"
      } ],
      "ruleId" : "ConstraintError-77",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_07.java"
          },
          "region" : {
            "startLine" : 98
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_07::good2"
      } ],
      "ruleId" : "RequiredPredicateError-48",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_07.java"
          },
          "region" : {
            "startLine" : 96
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_07::good2"
      } ],
      "ruleId" : "RequiredPredicateError-49",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_07.java"
          },
          "region" : {
            "startLine" : 73
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_07::good1"
      } ],
      "ruleId" : "RequiredPredicateError-50",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_07.java"
          },
          "region" : {
            "startLine" : 76
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_07::good1"
      } ],
      "ruleId" : "RequiredPredicateError-51",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_03.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_03::bad"
      } ],
      "ruleId" : "RequiredPredicateError-52",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_03.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_03::bad"
      } ],
      "ruleId" : "ConstraintError-78",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_03.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_03::bad"
      } ],
      "ruleId" : "RequiredPredicateError-53",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_03.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_03::bad"
      } ],
      "ruleId" : "ConstraintError-79",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_03.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_03::bad"
      } ],
      "ruleId" : "ConstraintError-80",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_03.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_03::good2"
      } ],
      "ruleId" : "RequiredPredicateError-54",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_03.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_03::good2"
      } ],
      "ruleId" : "RequiredPredicateError-55",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_03.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_03::good1"
      } ],
      "ruleId" : "RequiredPredicateError-56",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_03.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_03::good1"
      } ],
      "ruleId" : "RequiredPredicateError-57",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_03.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_03::bad"
      } ],
      "ruleId" : "ConstraintError-81",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_03.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_03::bad"
      } ],
      "ruleId" : "RequiredPredicateError-58",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_03.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_03::bad"
      } ],
      "ruleId" : "RequiredPredicateError-59",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_03.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_03::bad"
      } ],
      "ruleId" : "ConstraintError-82",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_03.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_03::bad"
      } ],
      "ruleId" : "ConstraintError-83",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_03.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_03::good2"
      } ],
      "ruleId" : "RequiredPredicateError-60",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_03.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_03::good2"
      } ],
      "ruleId" : "RequiredPredicateError-61",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_03.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_03::good1"
      } ],
      "ruleId" : "RequiredPredicateError-62",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_03.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_03::good1"
      } ],
      "ruleId" : "RequiredPredicateError-63",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_07.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_07::bad"
      } ],
      "ruleId" : "RequiredPredicateError-64",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_07.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_07::bad"
      } ],
      "ruleId" : "ConstraintError-84",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_07.java"
          },
          "region" : {
            "startLine" : 45
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_07::bad"
      } ],
      "ruleId" : "ConstraintError-85",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_07.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_07::bad"
      } ],
      "ruleId" : "ConstraintError-86",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_07.java"
          },
          "region" : {
            "startLine" : 46
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_07::bad"
      } ],
      "ruleId" : "RequiredPredicateError-65",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_07.java"
          },
          "region" : {
            "startLine" : 76
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_07::good1"
      } ],
      "ruleId" : "RequiredPredicateError-66",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_07.java"
          },
          "region" : {
            "startLine" : 73
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_07::good1"
      } ],
      "ruleId" : "RequiredPredicateError-67",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_07.java"
          },
          "region" : {
            "startLine" : 96
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_07::good2"
      } ],
      "ruleId" : "RequiredPredicateError-68",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_07.java"
          },
          "region" : {
            "startLine" : 98
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_07::good2"
      } ],
      "ruleId" : "RequiredPredicateError-69",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_05.java"
          },
          "region" : {
            "startLine" : 45
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_05::bad"
      } ],
      "ruleId" : "RequiredPredicateError-70",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_05.java"
          },
          "region" : {
            "startLine" : 46
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_05::bad"
      } ],
      "ruleId" : "ConstraintError-87",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_05.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_05::bad"
      } ],
      "ruleId" : "ConstraintError-88",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_05.java"
          },
          "region" : {
            "startLine" : 45
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_05::bad"
      } ],
      "ruleId" : "ConstraintError-89",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_05.java"
          },
          "region" : {
            "startLine" : 47
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_05::bad"
      } ],
      "ruleId" : "RequiredPredicateError-71",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_05.java"
          },
          "region" : {
            "startLine" : 97
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_05::good2"
      } ],
      "ruleId" : "RequiredPredicateError-72",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_05.java"
          },
          "region" : {
            "startLine" : 99
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_05::good2"
      } ],
      "ruleId" : "RequiredPredicateError-73",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_05.java"
          },
          "region" : {
            "startLine" : 77
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_05::good1"
      } ],
      "ruleId" : "RequiredPredicateError-74",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_05.java"
          },
          "region" : {
            "startLine" : 74
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_05::good1"
      } ],
      "ruleId" : "RequiredPredicateError-75",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_01.java"
          },
          "region" : {
            "startLine" : 41
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_01::bad"
      } ],
      "ruleId" : "RequiredPredicateError-76",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_01.java"
          },
          "region" : {
            "startLine" : 41
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_01::bad"
      } ],
      "ruleId" : "ConstraintError-90",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_01.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_01::bad"
      } ],
      "ruleId" : "RequiredPredicateError-77",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_01.java"
          },
          "region" : {
            "startLine" : 43
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_01::bad"
      } ],
      "ruleId" : "ConstraintError-91",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_01.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_01::bad"
      } ],
      "ruleId" : "ConstraintError-92",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_01.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_01::good1"
      } ],
      "ruleId" : "RequiredPredicateError-78",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_01.java"
          },
          "region" : {
            "startLine" : 73
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_01::good1"
      } ],
      "ruleId" : "RequiredPredicateError-79",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_14.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_14::bad"
      } ],
      "ruleId" : "ConstraintError-93",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_14.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_14::bad"
      } ],
      "ruleId" : "ConstraintError-94",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_14.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_14::bad"
      } ],
      "ruleId" : "ConstraintError-95",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_14.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_14::bad"
      } ],
      "ruleId" : "RequiredPredicateError-80",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_14.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_14::bad"
      } ],
      "ruleId" : "RequiredPredicateError-81",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_14.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_14::good2"
      } ],
      "ruleId" : "RequiredPredicateError-82",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_14.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_14::good2"
      } ],
      "ruleId" : "RequiredPredicateError-83",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_14.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_14::good1"
      } ],
      "ruleId" : "RequiredPredicateError-84",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_14.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_14::good1"
      } ],
      "ruleId" : "RequiredPredicateError-85",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_10.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_10::bad"
      } ],
      "ruleId" : "ConstraintError-96",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_10.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_10::bad"
      } ],
      "ruleId" : "ConstraintError-97",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_10.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_10::bad"
      } ],
      "ruleId" : "RequiredPredicateError-86",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_10.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_10::bad"
      } ],
      "ruleId" : "ConstraintError-98",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_10.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_10::bad"
      } ],
      "ruleId" : "RequiredPredicateError-87",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_10.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_10::good1"
      } ],
      "ruleId" : "RequiredPredicateError-88",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_10.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_10::good1"
      } ],
      "ruleId" : "RequiredPredicateError-89",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_10.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_10::good2"
      } ],
      "ruleId" : "RequiredPredicateError-90",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_10.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_10::good2"
      } ],
      "ruleId" : "RequiredPredicateError-91",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_09.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_09::bad"
      } ],
      "ruleId" : "ConstraintError-99",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_09.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_09::bad"
      } ],
      "ruleId" : "ConstraintError-100",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_09.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_09::bad"
      } ],
      "ruleId" : "ConstraintError-101",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_09.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_09::bad"
      } ],
      "ruleId" : "RequiredPredicateError-92",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_09.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_09::bad"
      } ],
      "ruleId" : "RequiredPredicateError-93",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_09.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_09::good2"
      } ],
      "ruleId" : "RequiredPredicateError-94",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_09.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_09::good2"
      } ],
      "ruleId" : "RequiredPredicateError-95",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_09.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_09::good1"
      } ],
      "ruleId" : "RequiredPredicateError-96",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_09.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_09::good1"
      } ],
      "ruleId" : "RequiredPredicateError-97",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_12.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_12::bad"
      } ],
      "ruleId" : "ConstraintError-102",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_12.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_12::bad"
      } ],
      "ruleId" : "ConstraintError-103",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_12.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_12::bad"
      } ],
      "ruleId" : "ConstraintError-104",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_12.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_12::bad"
      } ],
      "ruleId" : "RequiredPredicateError-98",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_12.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_12::bad"
      } ],
      "ruleId" : "RequiredPredicateError-99",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_12.java"
          },
          "region" : {
            "startLine" : 104
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_12::good1"
      } ],
      "ruleId" : "RequiredPredicateError-100",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_12.java"
          },
          "region" : {
            "startLine" : 101
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_12::good1"
      } ],
      "ruleId" : "RequiredPredicateError-101",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_16.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_16::bad"
      } ],
      "ruleId" : "ConstraintError-105",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_16.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_16::bad"
      } ],
      "ruleId" : "ConstraintError-106",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_16.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_16::bad"
      } ],
      "ruleId" : "ConstraintError-107",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_16.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_16::bad"
      } ],
      "ruleId" : "RequiredPredicateError-102",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_16.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_16::bad"
      } ],
      "ruleId" : "RequiredPredicateError-103",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_16.java"
          },
          "region" : {
            "startLine" : 58
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_16::good1"
      } ],
      "ruleId" : "RequiredPredicateError-104",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_16.java"
          },
          "region" : {
            "startLine" : 60
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_16::good1"
      } ],
      "ruleId" : "RequiredPredicateError-105",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_16.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_16::bad"
      } ],
      "ruleId" : "ConstraintError-108",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_16.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_16::bad"
      } ],
      "ruleId" : "RequiredPredicateError-106",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_16.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_16::bad"
      } ],
      "ruleId" : "ConstraintError-109",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_16.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_16::bad"
      } ],
      "ruleId" : "ConstraintError-110",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_16.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_16::bad"
      } ],
      "ruleId" : "RequiredPredicateError-107",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_16.java"
          },
          "region" : {
            "startLine" : 60
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_16::good1"
      } ],
      "ruleId" : "RequiredPredicateError-108",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_16.java"
          },
          "region" : {
            "startLine" : 58
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_16::good1"
      } ],
      "ruleId" : "RequiredPredicateError-109",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_12.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_12::bad"
      } ],
      "ruleId" : "ConstraintError-111",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_12.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_12::bad"
      } ],
      "ruleId" : "ConstraintError-112",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_12.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_12::bad"
      } ],
      "ruleId" : "ConstraintError-113",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_12.java"
          },
          "region" : {
            "startLine" : 61
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_12::bad"
      } ],
      "ruleId" : "RequiredPredicateError-110",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_12.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_12::bad"
      } ],
      "ruleId" : "RequiredPredicateError-111",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_12.java"
          },
          "region" : {
            "startLine" : 81
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_12::good1"
      } ],
      "ruleId" : "RequiredPredicateError-112",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_12.java"
          },
          "region" : {
            "startLine" : 104
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_12::good1"
      } ],
      "ruleId" : "RequiredPredicateError-113",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_09.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_09::bad"
      } ],
      "ruleId" : "RequiredPredicateError-114",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_09.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_09::bad"
      } ],
      "ruleId" : "ConstraintError-114",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_09.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_09::bad"
      } ],
      "ruleId" : "ConstraintError-115",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_09.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_09::bad"
      } ],
      "ruleId" : "ConstraintError-116",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_09.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_09::bad"
      } ],
      "ruleId" : "RequiredPredicateError-115",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_09.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_09::good1"
      } ],
      "ruleId" : "RequiredPredicateError-116",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_09.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_09::good1"
      } ],
      "ruleId" : "RequiredPredicateError-117",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_09.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_09::good2"
      } ],
      "ruleId" : "RequiredPredicateError-118",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_09.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_09::good2"
      } ],
      "ruleId" : "RequiredPredicateError-119",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_10.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_10::bad"
      } ],
      "ruleId" : "RequiredPredicateError-120",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_10.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_10::bad"
      } ],
      "ruleId" : "ConstraintError-117",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_10.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_10::bad"
      } ],
      "ruleId" : "ConstraintError-118",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_10.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_10::bad"
      } ],
      "ruleId" : "RequiredPredicateError-121",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_10.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_10::bad"
      } ],
      "ruleId" : "ConstraintError-119",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_10.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_10::good1"
      } ],
      "ruleId" : "RequiredPredicateError-122",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_10.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_10::good1"
      } ],
      "ruleId" : "RequiredPredicateError-123",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_10.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_10::good2"
      } ],
      "ruleId" : "RequiredPredicateError-124",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_10.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_10::good2"
      } ],
      "ruleId" : "RequiredPredicateError-125",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_14.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_14::bad"
      } ],
      "ruleId" : "ConstraintError-120",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_14.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_14::bad"
      } ],
      "ruleId" : "ConstraintError-121",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_14.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_14::bad"
      } ],
      "ruleId" : "RequiredPredicateError-126",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_14.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_14::bad"
      } ],
      "ruleId" : "ConstraintError-122",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_14.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_14::bad"
      } ],
      "ruleId" : "RequiredPredicateError-127",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_14.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_14::good2"
      } ],
      "ruleId" : "RequiredPredicateError-128",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_14.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_14::good2"
      } ],
      "ruleId" : "RequiredPredicateError-129",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_14.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_14::good1"
      } ],
      "ruleId" : "RequiredPredicateError-130",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_14.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_14::good1"
      } ],
      "ruleId" : "RequiredPredicateError-131",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_17.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_17::bad"
      } ],
      "ruleId" : "ConstraintError-123",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_17.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_17::bad"
      } ],
      "ruleId" : "RequiredPredicateError-132",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_17.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_17::bad"
      } ],
      "ruleId" : "ConstraintError-124",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_17.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_17::bad"
      } ],
      "ruleId" : "ConstraintError-125",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_17.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_17::bad"
      } ],
      "ruleId" : "RequiredPredicateError-133",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_17.java"
          },
          "region" : {
            "startLine" : 57
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_17::good1"
      } ],
      "ruleId" : "RequiredPredicateError-134",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_17.java"
          },
          "region" : {
            "startLine" : 59
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_17::good1"
      } ],
      "ruleId" : "RequiredPredicateError-135",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_13.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_13::bad"
      } ],
      "ruleId" : "ConstraintError-126",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_13.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_13::bad"
      } ],
      "ruleId" : "ConstraintError-127",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_13.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_13::bad"
      } ],
      "ruleId" : "ConstraintError-128",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_13.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_13::bad"
      } ],
      "ruleId" : "RequiredPredicateError-136",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_13.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_13::bad"
      } ],
      "ruleId" : "RequiredPredicateError-137",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_13.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_13::good1"
      } ],
      "ruleId" : "RequiredPredicateError-138",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_13.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_13::good1"
      } ],
      "ruleId" : "RequiredPredicateError-139",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_13.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_13::good2"
      } ],
      "ruleId" : "RequiredPredicateError-140",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_13.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_13::good2"
      } ],
      "ruleId" : "RequiredPredicateError-141",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_11.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_11::bad"
      } ],
      "ruleId" : "ConstraintError-129",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_11.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_11::bad"
      } ],
      "ruleId" : "ConstraintError-130",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_11.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_11::bad"
      } ],
      "ruleId" : "RequiredPredicateError-142",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_11.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_11::bad"
      } ],
      "ruleId" : "ConstraintError-131",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_11.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_11::bad"
      } ],
      "ruleId" : "RequiredPredicateError-143",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_11.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_11::good2"
      } ],
      "ruleId" : "RequiredPredicateError-144",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_11.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_11::good2"
      } ],
      "ruleId" : "RequiredPredicateError-145",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_11.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_11::good1"
      } ],
      "ruleId" : "RequiredPredicateError-146",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_11.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_11::good1"
      } ],
      "ruleId" : "RequiredPredicateError-147",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_15.java"
          },
          "region" : {
            "startLine" : 33
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_15::bad"
      } ],
      "ruleId" : "ConstraintError-132",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_15.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_15::bad"
      } ],
      "ruleId" : "ConstraintError-133",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_15.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_15::bad"
      } ],
      "ruleId" : "ConstraintError-134",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_15.java"
          },
          "region" : {
            "startLine" : 41
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_15::bad"
      } ],
      "ruleId" : "RequiredPredicateError-148",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_15.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_15::bad"
      } ],
      "ruleId" : "RequiredPredicateError-149",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_15.java"
          },
          "region" : {
            "startLine" : 68
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_15::good1"
      } ],
      "ruleId" : "RequiredPredicateError-150",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_15.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_15::good1"
      } ],
      "ruleId" : "RequiredPredicateError-151",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_15.java"
          },
          "region" : {
            "startLine" : 91
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_15::good2"
      } ],
      "ruleId" : "RequiredPredicateError-152",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_15.java"
          },
          "region" : {
            "startLine" : 89
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_15::good2"
      } ],
      "ruleId" : "RequiredPredicateError-153",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_08.java"
          },
          "region" : {
            "startLine" : 46
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_08::bad"
      } ],
      "ruleId" : "ConstraintError-135",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_08.java"
          },
          "region" : {
            "startLine" : 52
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_08::bad"
      } ],
      "ruleId" : "ConstraintError-136",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_08.java"
          },
          "region" : {
            "startLine" : 53
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_08::bad"
      } ],
      "ruleId" : "ConstraintError-137",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_08.java"
          },
          "region" : {
            "startLine" : 54
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_08::bad"
      } ],
      "ruleId" : "RequiredPredicateError-154",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_08.java"
          },
          "region" : {
            "startLine" : 52
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_08::bad"
      } ],
      "ruleId" : "RequiredPredicateError-155",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_08.java"
          },
          "region" : {
            "startLine" : 104
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_08::good2"
      } ],
      "ruleId" : "RequiredPredicateError-156",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_08.java"
          },
          "region" : {
            "startLine" : 106
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_08::good2"
      } ],
      "ruleId" : "RequiredPredicateError-157",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_08.java"
          },
          "region" : {
            "startLine" : 84
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_08::good1"
      } ],
      "ruleId" : "RequiredPredicateError-158",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_08.java"
          },
          "region" : {
            "startLine" : 81
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_08::good1"
      } ],
      "ruleId" : "RequiredPredicateError-159",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_08.java"
          },
          "region" : {
            "startLine" : 52
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_08::bad"
      } ],
      "ruleId" : "RequiredPredicateError-160",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_08.java"
          },
          "region" : {
            "startLine" : 46
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_08::bad"
      } ],
      "ruleId" : "ConstraintError-138",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_08.java"
          },
          "region" : {
            "startLine" : 53
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_08::bad"
      } ],
      "ruleId" : "ConstraintError-139",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_08.java"
          },
          "region" : {
            "startLine" : 52
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_08::bad"
      } ],
      "ruleId" : "ConstraintError-140",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_08.java"
          },
          "region" : {
            "startLine" : 54
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_08::bad"
      } ],
      "ruleId" : "RequiredPredicateError-161",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_08.java"
          },
          "region" : {
            "startLine" : 81
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_08::good1"
      } ],
      "ruleId" : "RequiredPredicateError-162",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_08.java"
          },
          "region" : {
            "startLine" : 84
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_08::good1"
      } ],
      "ruleId" : "RequiredPredicateError-163",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_08.java"
          },
          "region" : {
            "startLine" : 106
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_08::good2"
      } ],
      "ruleId" : "RequiredPredicateError-164",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_08.java"
          },
          "region" : {
            "startLine" : 104
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_08::good2"
      } ],
      "ruleId" : "RequiredPredicateError-165",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_15.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_15::bad"
      } ],
      "ruleId" : "ConstraintError-141",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_15.java"
          },
          "region" : {
            "startLine" : 41
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_15::bad"
      } ],
      "ruleId" : "RequiredPredicateError-166",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_15.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_15::bad"
      } ],
      "ruleId" : "ConstraintError-142",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_15.java"
          },
          "region" : {
            "startLine" : 33
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_15::bad"
      } ],
      "ruleId" : "ConstraintError-143",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_15.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_15::bad"
      } ],
      "ruleId" : "RequiredPredicateError-167",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_15.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_15::good1"
      } ],
      "ruleId" : "RequiredPredicateError-168",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_15.java"
          },
          "region" : {
            "startLine" : 68
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_15::good1"
      } ],
      "ruleId" : "RequiredPredicateError-169",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_15.java"
          },
          "region" : {
            "startLine" : 89
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_15::good2"
      } ],
      "ruleId" : "RequiredPredicateError-170",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_15.java"
          },
          "region" : {
            "startLine" : 91
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_15::good2"
      } ],
      "ruleId" : "RequiredPredicateError-171",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_11.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_11::bad"
      } ],
      "ruleId" : "RequiredPredicateError-172",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_11.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_11::bad"
      } ],
      "ruleId" : "ConstraintError-144",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_11.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_11::bad"
      } ],
      "ruleId" : "ConstraintError-145",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_11.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_11::bad"
      } ],
      "ruleId" : "ConstraintError-146",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_11.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_11::bad"
      } ],
      "ruleId" : "RequiredPredicateError-173",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_11.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_11::good2"
      } ],
      "ruleId" : "RequiredPredicateError-174",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_11.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_11::good2"
      } ],
      "ruleId" : "RequiredPredicateError-175",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_11.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_11::good1"
      } ],
      "ruleId" : "RequiredPredicateError-176",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_11.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_11::good1"
      } ],
      "ruleId" : "RequiredPredicateError-177",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_13.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_13::bad"
      } ],
      "ruleId" : "ConstraintError-147",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_13.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_13::bad"
      } ],
      "ruleId" : "ConstraintError-148",
      "message" : {
        "text" : "First parameter (with value \"DES\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_13.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_13::bad"
      } ],
      "ruleId" : "ConstraintError-149",
      "message" : {
        "text" : "Second parameter (with value \"DES\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_13.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_13::bad"
      } ],
      "ruleId" : "RequiredPredicateError-178",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_13.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_13::bad"
      } ],
      "ruleId" : "RequiredPredicateError-179",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_13.java"
          },
          "region" : {
            "startLine" : 92
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_13::good2"
      } ],
      "ruleId" : "RequiredPredicateError-180",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_13.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_13::good2"
      } ],
      "ruleId" : "RequiredPredicateError-181",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_13.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_13::good1"
      } ],
      "ruleId" : "RequiredPredicateError-182",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__DES_13.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__DES_13::good1"
      } ],
      "ruleId" : "RequiredPredicateError-183",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_17.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_17::bad"
      } ],
      "ruleId" : "ConstraintError-150",
      "message" : {
        "text" : "Second parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_17.java"
          },
          "region" : {
            "startLine" : 40
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_17::bad"
      } ],
      "ruleId" : "RequiredPredicateError-184",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_17.java"
          },
          "region" : {
            "startLine" : 32
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_17::bad"
      } ],
      "ruleId" : "ConstraintError-151",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyGenerator."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_17.java"
          },
          "region" : {
            "startLine" : 39
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_17::bad"
      } ],
      "ruleId" : "ConstraintError-152",
      "message" : {
        "text" : "First parameter (with value \"DESede\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_17.java"
          },
          "region" : {
            "startLine" : 38
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_17::bad"
      } ],
      "ruleId" : "RequiredPredicateError-185",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_17.java"
          },
          "region" : {
            "startLine" : 59
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_17::good1"
      } ],
      "ruleId" : "RequiredPredicateError-186",
      "message" : {
        "text" : "Second parameter was not properly generated as generatedKey.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE327_Use_Broken_Crypto/CWE327_Use_Broken_Crypto__3DES_17.java"
          },
          "region" : {
            "startLine" : 57
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE327_Use_Broken_Crypto::CWE327_Use_Broken_Crypto__3DES_17::good1"
      } ],
      "ruleId" : "RequiredPredicateError-187",
      "message" : {
        "text" : "First parameter was not properly generated as preparedKeyMaterial.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_17.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_17::bad"
      } ],
      "ruleId" : "TypestateError",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_15.java"
          },
          "region" : {
            "startLine" : 31
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_15::bad"
      } ],
      "ruleId" : "TypestateError-1",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_08.java"
          },
          "region" : {
            "startLine" : 44
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_08::bad"
      } ],
      "ruleId" : "TypestateError-2",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_11.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_11::bad"
      } ],
      "ruleId" : "TypestateError-3",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_13.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_13::bad"
      } ],
      "ruleId" : "TypestateError-4",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_14.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_14::bad"
      } ],
      "ruleId" : "TypestateError-5",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_16.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_16::bad"
      } ],
      "ruleId" : "TypestateError-6",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_12.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_12::bad"
      } ],
      "ruleId" : "TypestateError-7",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_09.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_09::bad"
      } ],
      "ruleId" : "TypestateError-8",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_10.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_10::bad"
      } ],
      "ruleId" : "TypestateError-9",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_05.java"
          },
          "region" : {
            "startLine" : 37
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_05::bad"
      } ],
      "ruleId" : "TypestateError-10",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_07.java"
          },
          "region" : {
            "startLine" : 36
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_07::bad"
      } ],
      "ruleId" : "TypestateError-11",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_03.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_03::bad"
      } ],
      "ruleId" : "TypestateError-12",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_01.java"
          },
          "region" : {
            "startLine" : 31
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_01::bad"
      } ],
      "ruleId" : "TypestateError-13",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_06.java"
          },
          "region" : {
            "startLine" : 36
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_06::bad"
      } ],
      "ruleId" : "TypestateError-14",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_04.java"
          },
          "region" : {
            "startLine" : 37
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_04::bad"
      } ],
      "ruleId" : "TypestateError-15",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "testcases/CWE325_Missing_Required_Cryptographic_Step/CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_02.java"
          },
          "region" : {
            "startLine" : 30
          }
        },
        "fullyQualifiedLogicalName" : "testcases::CWE325_Missing_Required_Cryptographic_Step::CWE325_Missing_Required_Cryptographic_Step__MessageDigest_update_02::bad"
      } ],
      "ruleId" : "TypestateError-16",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    } ],
    "tool" : {
      "name" : "CryptoAnalysis",
      "semanticVersion" : "2.8.0-SNAPSHOT",
      "language" : "en-US",
      "version" : "2.8.0-SNAPSHOT"
    }
  } ]
}